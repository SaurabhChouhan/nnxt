{"version":3,"sources":["webpack:///./client/containers/pages/HomeContainer.js","webpack:///./client/components/forms/PermissionForm.js","webpack:///./client/components/forms/CreateReleaseForm.js","webpack:///./client/reducers/technologyReducer.js","webpack:///./client/containers/pages/LeaveDetailPageContainer.js","webpack:///./client/containers/forms/ReportingCommentFormContainer.js","webpack:///./client/components/dialogs/EstimationSuggestFeatureDialog.js","webpack:///./client/components/forms/EstimationSuggestTaskForm.js","webpack:///./client/containers/lists/AdminRoleListContainer.js","webpack:///./client/containers/forms/AdminRoleFormContainer.js","webpack:///./client/containers/sections/DashboardSectionContainer.js","webpack:///./client/components/forms/EstimationFilterForm.js","webpack:///./client/actions/releaseAction.js","webpack:///./client/actions/userAction.js","webpack:///./client/actions/estimationAction.js","webpack:///./client/containers/lists/RoleListContainer.js","webpack:///./client/containers/pages/RepositorySearchContainer.js","webpack:///./client/components/pages/ReportingTaskDetailPage.js","webpack:///./client/containers/forms/AttendanceSettingFormContainer.js","webpack:///./client/components/lists/PermissionList.js","webpack:///./client/containers/forms/EstimationTaskFormContainer.js","webpack:///./client/reducers/warningReducer.js","webpack:///./client/components/forms/ReportingCommentForm.js","webpack:///./client/containers/forms/LeaveSettingFormContainer.js","webpack:///./client/components/dialogs/ModuleFormDialog.js","webpack:///./client/components/forms/validation.js","webpack:///./client/containers/forms/EstimationSuggestFeatureFormContainer.js","webpack:///./client/clientconstants.js","webpack:///./client/components/sections/Tabs.js","webpack:///./client/components/dialogs/ProjectFormDialog.js","webpack:///./client/containers/pages/ReleaseDevelopersSchedulesContainer.js","webpack:///./client/components/sections/ReleaseDashboardSection.js","webpack:///./client/components/forms/ReportTaskDescriptionForm.js","webpack:///./client/components/dialogs/ReleaseTaskPlanningFormDialog.js","webpack:///./client/components/pages/Home.js","webpack:///./client/components/forms/EstimationAddToReleaseForm.js","webpack:///./client/containers/forms/ReleaseDeveloperFilterFormContainer.js","webpack:///./client/containers/forms/EstimationSuggestTaskFormContainer.js","webpack:///./client/components/sections/EstimationFeatures.js","webpack:///./client/components/forms/UserProfileForm.js","webpack:///./client/components/dialogs/RepositoryFeatureDetailDialog.js","webpack:///./client/components/lists/EstimationList.js","webpack:///./client/components/sections/Sidebar.js","webpack:///./client/actions/index.js","webpack:///./client/containers/forms/EstimationProjectAwardFormContainer.js","webpack:///./client/containers/forms/LoginFormContainer.js","webpack:///./client/components/componentConsts.js","webpack:///./client/components/forms/ReleaseTaskPlanningForm.js","webpack:///./client/containers/pages/TaskReportDetailPageContainer.js","webpack:///./client/components/pages/RepositoryFeatureDetailPage.js","webpack:///./client/components/forms/ReleaseDeveloperFilterForm.js","webpack:///./client/components/dialogs/LeaveRequestFormDialog.js","webpack:///./client/reducers/moduleReducer.js","webpack:///./client/reducers/developmentTypeReducer.js","webpack:///./client/containers/pages/ReportingDateNavBarContainer.js","webpack:///./client/components/pages/EstimationDetail.js","webpack:///./client/containers/lists/ClientListContainer.js","webpack:///./client/components/pages/SuperAdminHome.js","webpack:///./client/components/pages/AdminHome.js","webpack:///./client/containers/sections/ReleaseDashboardSectionContainer.js","webpack:///./client/components/lists/LeaveList.js","webpack:///./client/components/dialogs/EstimationFeatureDialog.js","webpack:///./client/reducers/roleReducer.js","webpack:///./client/components/dialogs/ReleaseMoveTaskPlanFormDialog.js","webpack:///./client/components/dialogs/CreateReleaseDialog.js","webpack:///./client/components/dialogs/TaskShiftDialog.js","webpack:///./server/utils.js","webpack:///./client/containers/pages/AppHomeContainer.js","webpack:///./client/actions/projectAction.js","webpack:///./client/reducers/dashboardReducer.js","webpack:///./client/reducers/clientReducer.js","webpack:///./client/reducers/releaseReducer.js","webpack:///./client/containers/forms/CreateReleaseFormContainer.js","webpack:///./client/components/pages/CalendarTaskPage.js","webpack:///./client/reducers/reportingReducer.js","webpack:///./client/containers/lists/AdminUserListContainer.js","webpack:///./client/containers/index.js","webpack:///./client/actions/reportingAction.js","webpack:///./client/components/forms/ReleaseDeveloperScheduleForm.js","webpack:///./client/components/lists/TaskReportList.js","webpack:///./client/actions/calendarAction.js","webpack:///./client/components/pages/ReleaseTaskPlanningPage.js","webpack:///./client/containers/pages/ReportingTaskPageContainer.js","webpack:///./client/reducers/index.js","webpack:///./client/components/forms/TechnologyForm.js","webpack:///./client/reducers/estimationReducer.js","webpack:///./client/containers/forms/UserFormContainer.js","webpack:///./client/containers/forms/TechnologyFormContainer.js","webpack:///./client/containers/forms/ModuleFormContainer.js","webpack:///./client/components/dialogs/ReportTaskDescriptionFormDialog.js","webpack:///./client/containers/forms/ReleaseTaskPlanningFormContainer.js","webpack:///./client/components/forms/ReportingDateNavBar.js","webpack:///./client/components/forms/ProjectForm.js","webpack:///./client/components/dialogs/ReleasePlanAddToReleaseDialog.js","webpack:///./client/components/lists/ModuleList.js","webpack:///./client/components/forms/ModuleForm.js","webpack:///./client/components/forms/fields.js","webpack:///./client/actions/dashboardAction.js","webpack:///./client/components/lists/WarningList.js","webpack:///./client/components/tabs/Tab.js","webpack:///./client/containers/forms/LeaveApprovalReasonFormContainer.js","webpack:///./client/reducers/attendanceSettingReducer.js","webpack:///./client/reducers/leaveReducer.js","webpack:///./client/components/dialogs/EstimationFilterDialog.js","webpack:///./client/actions/leaveAction.js","webpack:///./client/containers/pages/RepositoryFeatureDetailPageContainer.js","webpack:///./client/components/lists/ProjectList.js","webpack:///./client/containers/forms/ReleaseMoveTaskPlanFormContainer.js","webpack:///./client/components/forms/ReleaseTaskPlanningShiftForm.js","webpack:///./client/components/forms/LeaveApprovalReasonForm.js","webpack:///./client/components/dialogs/EstimationAddToReleaseDialog.js","webpack:///./client/containers/forms/ReleaseTaskPlanningShiftFormContainer.js","webpack:///./client/components/dialogs/UpdateReleaseDatesFormDialog.js","webpack:///./client/components/forms/UserForm.js","webpack:///./client/actions/actionConsts.js","webpack:///./client/containers/sections/ReleasePlanSectionContainer.js","webpack:///./client/containers/forms/ClientFormContainer.js","webpack:///./client/containers/forms/ReleaseDeveloperScheduleFormContainer.js","webpack:///./client/containers/forms/LeaveRequestFormContainer.js","webpack:///./client/components/pages/AppHome.js","webpack:///./client/components/sections/DashboardSection.js","webpack:///./client/components/dialogs/EstimationSuggestTaskDialog.js","webpack:///./client/components/dialogs/RepositoryTaskDetailDialog.js","webpack:///./client/actions/permissionAction.js","webpack:///./client/containers/lists/PermissionListContainer.js","webpack:///./client/components/sections/SidebarSection.js","webpack:///./client/components/lists/AdminUserList.js","webpack:///./client/components/forms/EstimationProjectAwardForm.js","webpack:///./client/containers/sections/SidebarSectionContainer.js","webpack:///./client/containers/pages/AdminHomeContainer.js","webpack:///./client/containers/pages/SuperAdminHomeContainer.js","webpack:///./client/actions/technologyAction.js","webpack:///./client/components/forms/ReleaseMoveTaskPlanForm.js","webpack:///./client/reducers/holidayReducer.js","webpack:///./client/components/forms/LeaveRequestForm.js","webpack:///./server/serverconstants.js","webpack:///./client/containers/pages/CalendarTaskPageContainer.js","webpack:///./client/containers/sections/EstimationFeaturesContainer.js","webpack:///./client/actions/repositoryAction.js","webpack:///./client/components/sections/ContentMain.js","webpack:///./client/containers/forms/EstimationAddToReleaseFormContainer.js","webpack:///./client/components/sections/EstimationTasks.js","webpack:///./client/containers/pages/EstimationDetailContainer.js","webpack:///./client/containers/forms/RoleFormContainer.js","webpack:///./client/components/lists/AdminRoleList.js","webpack:///./client/components/dialogs/MoveTaskInFeatureFormDialog.js","webpack:///./client/actions/roleAction.js","webpack:///./client/containers/lists/HolidayListContainer.js","webpack:///./client/components/index.js","webpack:///./client/containers/lists/TaskPlanListContainer.js","webpack:///./client/components/sections/SidebarSideSection.js","webpack:///./client/actions/warningAction.js","webpack:///./client/components/lists/UserList.js","webpack:///./client/containers/lists/ReleaseListContainer.js","webpack:///./client/containers/sections/EstimationTasksContainer.js","webpack:///./client/containers/pages/CalendarTaskDetailPageContainer.js","webpack:///./server/errorcodes.js","webpack:///./client/components/forms/MoveTaskInFeatureForm.js","webpack:///./client/containers/forms/ReleasePlanAddToReleaseFormContainer.js","webpack:///./client/actions/holidayAction.js","webpack:///./client/containers/pages/ReleaseTaskPlanningPageContainer.js","webpack:///./client/containers/pages/ReportingTaskDetailPageContainer.js","webpack:///./client/components/lists/ReleaseList.js","webpack:///./client/components/sections/ReleasePlanSection.js","webpack:///./client/components/forms/ClientForm.js","webpack:///./client/components/pages/TaskReportDetailPage.js","webpack:///./client/components/dialogs/ClientFormDialog.js","webpack:///./client/components/dialogs/EstimationInitiateDialog.js","webpack:///./client/components/forms/EstimationFeatureForm.js","webpack:///./client/containers/lists/ProjectListContainer.js","webpack:///./client/components/pages/RepositorySearch.js","webpack:///./client/components/lists/TechnologyList.js","webpack:///./client/containers/forms/ReportTaskDescriptionFormContainer.js","webpack:///./client/components/forms/EstimationInitiateForm.js","webpack:///./client/components/pages/CalendarTaskDetailPage.js","webpack:///./client/components/forms/LoginForm.js","webpack:///./client/containers/forms/AdminUserFormContainer.js","webpack:///./client/components/dialogs/TechnologyFormDialog.js","webpack:///./client/components/sections/TabSection.js","webpack:///./client/components/forms/UpdateReleaseDatesForm.js","webpack:///./client/containers/lists/TaskReportListContainer.js","webpack:///./client/containers/lists/ReleasePlanListContainer.js","webpack:///./client/clientMsg.js","webpack:///./client/components/sections/ContentSection.js","webpack:///./client/components/dialogs/EstimationProjectAwardDialog.js","webpack:///./client/containers/pages/RepositoryTaskDetailPageContainer.js","webpack:///./client/reducers/repositoryReducer.js","webpack:///./client/containers/forms/EstimationFilterFormContainer.js","webpack:///./client/components/sections/Header.js","webpack:///./client/actions/moduleAction.js","webpack:///./client/client.js","webpack:///./client/components/forms/EmployeeSettingForm.js","webpack:///./client/components/dialogs/LeaveRejectDialog.js","webpack:///./client/containers/lists/WarningListContainer.js","webpack:///./client/containers/lists/UserListContainer.js","webpack:///./client/containers/forms/ProjectFormContainer.js","webpack:///./client/containers/lists/EstimationListContainer.js","webpack:///./client/components/sections/EstimationFeature.js","webpack:///./client/components/lists/ReleasePlanList.js","webpack:///./client/components/forms/EstimationSuggestFeatureForm.js","webpack:///./client/containers/forms/MoveTaskInFeatureFormContainer.js","webpack:///./client/components/pages/LeaveDetailPage.js","webpack:///./client/components/forms/EstimationTaskForm.js","webpack:///./client/reducers/employeeReducer.js","webpack:///./client/components/dialogs/EstimationTaskDialog.js","webpack:///./client/containers/lists/TechnologyListContainer.js","webpack:///./client/reducers/appReducer.js","webpack:///./client/clientLogger.js","webpack:///./client/actions/appAction.js","webpack:///./client/components/lists/ClientList.js","webpack:///./client/components/forms/ReleasePlanAddToReleaseForm.js","webpack:///./client/reducers/permissionReducer.js","webpack:///./client/components/dialogs/LeaveApproveDialog.js","webpack:///./client/actions/developmentTypeAction.js","webpack:///./client/components/lists/HolidayList.js","webpack:///./client/actions/AttendanceSettingAction.js","webpack:///./client/components/pages/ReportingTaskPage.js","webpack:///./client/components/forms/LeaveSettingForm.js","webpack:///./client/components/forms/AdminUserForm.js","webpack:///./client/components/dialogs/ConfirmationDialog.js","webpack:///./client/components/forms/RoleForm.js","webpack:///./client/components/forms/HolidayForm.js","webpack:///./client/containers/lists/ModuleListContainer.js","webpack:///./client/containers/forms/UpdateReleaseDatesFormContainer.js","webpack:///./client/containers/forms/PermissionFormContainer.js","webpack:///./client/containers/forms/UserProfileFormContainer.js","webpack:///./client/containers/forms/HolidayFormContainer.js","webpack:///./client/containers/AppRouterContainer.js","webpack:///./client/components/sections/EstimationTask.js","webpack:///./client/containers/forms/EstimationInitiateFormContainer.js","webpack:///./client/components/lists/TaskPlanList.js","webpack:///./client/containers/forms/EstimationFeatureFormContainer.js","webpack:///./client/reducers/projectReducer.js","webpack:///./client/components/lists/RoleList.js","webpack:///./client/containers/forms/EmployeeSettingFormContainer.js","webpack:///./client/containers/lists/LeaveListContainer.js","webpack:///./client/reducers/calendarReducer.js","webpack:///./client/actions/employeeAction.js","webpack:///./client/components/pages/RepositoryTaskDetailPage.js","webpack:///./client/reducers/userReducer.js","webpack:///./client/actions/clientAction.js","webpack:///./client/components/forms/AdminRoleForm.js","webpack:///./client/components/pages/ReleaseDevelopersSchedules.js","webpack:///./client/containers/sections/TabSectionContainer.js","webpack:///./client/components/AppRouter.js","webpack:///./client/components/sections/index.js","webpack:///./client/components/forms/AttendanceSettingForm.js"],"names":["mapStateToProps","state","loggedInUser","user","loggedIn","HomeContainer","PermissionForm","handleSubmit","props","showPermissionList","form","logger","locale","CreateReleaseForm","pristine","submitting","reset","change","team","managers","leaders","devStartDate","devReleaseDate","clientReleaseDate","manager","leader","project","module","projects","modules","developmentTypes","technologies","max","isEmpty","toDate","undefined","maxRelease","projectModules","_id","filter","m","toString","moduleProjects","selectedModule","find","p","updatedManagerList","updatedLeaderList","l","now","Date","selector","AC","initialState","all","selected","technologyReducer","action","type","ADD_TECHNOLOGIES","Object","assign","ADD_TECHNOLOGY","technology","DELETE_TECHNOLOGY","item","TechnologyID","A","COC","SC","mapDispatchToProps","dispatch","ownProps","leaveGoBack","event","getAllLeavesFromServer","ALL","showComponentHideOthers","LEAVE_LIST","leave","LeaveDetailPageContainer","onSubmit","commentValues","addCommentToServer","then","json","success","releaseID","data","release","releasePlanID","error","initialValues","report","reportTaskDetail","releasePlan","ReportingCommentFormContainer","EstimationSuggestTaskDialog","show","close","EstimationSuggestTaskForm","debug","ESTIMATION_TASK_FORM_RENDER","loggedInUserRole","isFromRepo","estimation","readOnly","ROLE_NEGOTIATOR","ROLE_ESTIMATOR","name","estimatedHours","description","editPermissionsOfRole","role","ADMIN_ROLE_FORM","adminEditingRole","roles","AdminRoleListContainer","editRoleOnServer","ADMIN_ROLE_LIST","showRoleList","permissionOptions","AdminRoleFormContainer","setReleaseID","getReleaseForDashboard","allReleases","dashboard","selectedReleaseID","plannedVsUnplannedWork","overallProgress","completedPendingProgress","plannedVsReported","hoursData","estimatedProgress","DashboardSectionContainer","EstimationFilterForm","estimator","firstName","lastName","negotiator","newChangedFilter","status","selectAllFilter","clearFilter","marginTop","addReleases","releases","ADD_RELEASES","addRelease","ADD_RELEASE","addAvailableReleases","ADD_AVAILABLE_RELEASES","addReleasePlans","releasePlans","ADD_RELEASE_PLANS","addReleaseTaskPlannings","taskPlans","ADD_RELEASE_TASK_PLANNINGS","addReleaseTaskPlanningToState","taskPlan","ADD_RELEASE_TASK_PLANNING_TO_STATE","updateTaskPlanning","UPDATE_TASK_PLANNING","updateTaskPlans","UPDATE_TASK_PLANS","releaseSelected","RELEASE_SELECTED","releaseTabSelected","tab","RELEASE_TAB_SELECTED","releasePlanSelected","RELEASE_PLAN_SELECTED","updateReleasePlan","UPDATE_RELEASE_PLAN","removeTaskPlanning","planID","DELETE_TASK_PLAN","addDeveloperFilteredData","developerPlans","ADD_DEVELOPER_FILTERED","updateDeveloperFilteredData","developerPlanned","UPDATE_DEVELOPER_FILTERED","setDevelopersSchedule","schedules","SET_DEVELOPERS_SCHEDULE","expandDescription","flag","EXPAND_DESCRIPTION","setEmployeeSettings","empSetting","SET_EMPLOYEE_SETTINGS","setFromDate","date","SET_FROM_DATE","addTaskPlannings","taskPlannings","ADD_TASK_PLANNINGS","updateReleaseDates","releaseDates","UPDATE_RELEASE_DATES","getAllReleasesFromServer","getState","fetch","method","credentials","headers","response","getAllAvailableReleasesFromServer","getAllReleasesToAddEstimationFromServer","estimationID","getReleaseFromServer","getAllTaskPlannedFromServer","getReleasePlansFromServer","empFlag","getReleasePlanDetailsFromServer","getUpdatedReleasePlanFromServer","addTaskPlanningOnServer","taskPlanning","body","JSON","stringify","length","moveTaskPlanOnServer","deleteTaskPlanningFromServer","taskPlanningID","reopenTaskPlanOnServer","getEmployeePlanDetailsForRelease","employeeId","startDate","endDate","shiftTasksToFutureOnServer","shift","selectedReleasePlan","shiftTasksToPastOnServer","getDeveloperSchedulesFromServer","employeeID","from","getReleaseDevelopersFromServer","addDevelopersToState","getAllTaskPlansOfThisReleaseFromServer","changeReleaseDateOfIteration","iterationData","releasePlanPlannedAddToReleaseOnServer","formInput","releasePlanUnplannedAddToReleaseOnServer","createReleaseOnServer","addLoginUser","ADD_LOGIN_USER","loginFailed","LOGIN_FAILED","addAllUsers","users","ADD_USERS","addUsersWithRoleCategory","ADD_USERS_WITH_ROLE_CATEGORY","addUsersWithRoleDeveloper","developers","ADD_USERS_WITH_ROLE_DEVELOPER","ADD_DEVELOPERS_TO_STATE","addUser","ADD_USER","editUser","EDIT_USER","deleteUser","userID","DELETE_USER","updateUserProfileState","UPDATE_USER_PROFILE_STATE","addUserOnServer","getAllUsersFromServer","getUsersWithRoleCategoryFromServer","getUsersWithRoleDeveloperFromServer","getAllDeveloperFromServer","editUserOnServer","deleteUserOnServer","userId","loginUserOnServer","message","showUserInfo","updateUserSettingsOnServer","addEstimations","estimations","ADD_ESTIMATIONS","addEstimation","ADD_ESTIMATION","editEstimation","EDIT_ESTIMATION","taskEditRequest","task","REQUEST_FOR_TASK_EDIT_PERMISSION","deleteEstimationTask","DELETE_ESTIMATION_TASK","selectEstimation","SELECT_ESTIMATION","updateSelectedEstimation","UPDATE_SELECTED_ESTIMATION","addEstimationTask","ADD_ESTIMATION_TASK","updateEstimationTask","UPDATE_ESTIMATION_TASK","addEstimationFeature","feature","ADD_ESTIMATION_FEATURE","updateEstimationFeature","UPDATE_ESTIMATION_FEATURE","estimationTaskDelete","taskID","ESTIMATION_TASK_DELETE","moveTaskInFeature","MOVE_TASK_IN_FEATURE","moveTaskOutOfFeature","featureID","MOVE_TASK_OUTOF_FEATURE","deleteEstimationFeature","DELETE_ESTIMATION_FEATURE","expandFeature","EXPAND_FEATURE","expandTask","EXPAND_TASK","expandTaskAndFeature","EXPAND_TASK_AND_FEATURE","addFilteredEstimation","ADD_FILTERED_ESTIMATIONS","selectAllFilterFromEstimation","SELECT_ALL_FILTER_FROM_ESTIMATION","clearFilterFromEstimation","CLEAR_FILTER_FROM_ESTIMATION","deleteEstimation","DELETE_ESTIMATION","getAllEstimationsFromServer","projectID","initiateEstimationOnServer","updateEstimationOnServer","deleteEstimationOnServer","requestEstimationOnServer","requestReviewOnServer","getEstimationFromServer","checkHasErrorInEstimationOnServer","requestChangeOnServer","requestForTaskEditPermissionOnServer","getFeatureFromServer","requestForFeatureEditPermissionOnServer","deleteEstimationTaskOnServer","getOnlyEstimationFromServer","requestForTaskDeletePermissionOnServer","canNotApproveFeatureOnServer","canNotApproveEstimationOnServer","addTaskToEstimationOnServer","isEstimationCanApprove","isFeatureCanApprove","addTaskFromRepositoryToEstimationOnServer","copyTaskFromRepositoryToEstimationOnServer","addFeatureFromRepositoryToEstimationOnServer","copyFeatureFromRepositoryToEstimationOnServer","updateTaskToEstimationOnServer","addFeatureToEstimationOnServer","updateFeatureToEstimationOnServer","moveTaskIntoFeatureOnServer","moveTaskOutOfFeatureOnServer","grantEditPermissionOfTaskOnServer","grantEditPermissionOfFeatureOnServer","featureId","deleteFeatureByEstimatorOnServer","requestForFeatureDeletePermissionOnServer","approveTaskByNegotiatorOnServer","canApproveFeatureOnServer","canApproveEstimationOnServer","responseJson","approveFeatureByNegotiatorOnServer","approveEstimationOnServer","FeatureID","grant","reOpenFeatureOnServer","reOpenTaskOnServer","TaskID","isFeatureApproved","reopenEstimationOnServer","addCreateReleaseOnServer","addToReleaseOnServer","billedHours","parseInt","showRoleForm","ROLE_FORM","editRole","deleteRole","roleID","deleteRoleOnServer","permissions","permission","RoleListContainer","showFeatureDetailPage","selectFeatureFromRepository","showComponent","REPOSITORY_FEATURE_DETAIL_DIALOG","showTaskDetailPage","selectTaskFromRepository","REPOSITORY_TASK_DETAIL_DIALOG","getAllRepositoryData","getRepositoryFromServer","fetchRepositoryBasedOnDiffCriteria","tags","searchText","map","f","i","push","text","repository","RepositorySearchContainer","ReportingTaskDetailPage","commentListPageOptions","sizePerPageList","value","sizePerPage","taskListPageOptions","row","tz","INDIAN_TIMEZONE","format","utc","planning","plannedHours","reportedHours","STATUS_UNREPORTED","marginLeft","history","ReportingGoBack","fontSize","assignedTasksRowClass","bind","formatPlanDate","formatPlannedHours","formatReportedHours","formatReportStatus","comments","formatCommentDate","estimationDescription","Component","values","ATTENDENCE_SETTING_FORM_RENDER","addAttendanceSettingOnServer","AttendanceSettingFormContainer","PermissionList","cell","enumObject","rowIndex","editPermission","dialog","title","actions","DefaultAction","hide","bsSize","onHide","el","isSuperAdmin","showPermissionForm","height","options","editCellButton","deleteCellButton","console","log","Number","ESTIMATION_TASK_FORM_SUBMIT","hideComponent","ESTIMATION_TASK_DIALOG","features","Array","isArray","STATUS_APPROVED","repo","addedFromThisEstimation","EstimationTaskFormContainer","warningReducer","ADD_WARNINGS","warnings","ReportingCommentForm","TYPE_REPORT_COMMENT","TYPE_INFORMATION","TYPE_CLARIFICATION","TYPE_WAITING","TYPE_BLOCKING","marginBottom","casualLeaves","paidLeaves","maternityLeaves","paternityLeaves","specialLeaves","LeaveSettingFormContainer","ModuleFormDialog","required","number","isNaN","email","test","url","minLength","min","maxLength","hasLength","len","passwordLength","phoneNumber","EC","ESTIMATION_SUGGEST_FEATURE_FORM_SUBMIT","ESTIMATION_SUGGEST_FEATURE_FORM_DIALOG","code","ACCESS_DENIED","SubmissionError","EstimationSuggestFeatureFormContainer","ROLE_ADMIN","ROLE_SUPER_ADMIN","ROLE_APP_USER","DEBUG_LEVEL","INFO_LEVEL","WARNING_LEVEL","ERROR_LEVEL","EDIT_PROFILE","MANAGE_PERMISSIONS","MANAGE_ROLES","CREATE_USER","LIST_USERS","EDIT_ROLE_PERMISSIONS","TYPE_DEVELOPMENT","TYPE_TESTING","TYPE_REVIEW","TYPE_MANAGEMENT","TYPE_COMPANY","U","Tabs","TABS_LIFE_CYCLE","changeTab","tabData","includes","render","displayName","activeTab","e","TABS_CHANGE_TAB","store","context","getAllRolesFromServer","getAllPermissionsFromServer","getEmployeeSettingFromServer","getLeaveSettingFromServer","getAllHolidayYearsFromServer","currentYear","getCurrentYear","getAllHolidaysOfYearFromServer","setState","TABS_RENDER","showLoader","idx","match","contextTypes","object","ProjectFormDialog","getEmployeeSettings","showTaskShiftDialog","day","month","year","employee","workCalendar","employeeSetting","ReleaseDevelopersSchedulesContainer","addPercentage","getHoursAngles","maxHours","Math","estimatedStartAngle","plannedStartAngle","reportedStartAngle","estimatedEndAngle","plannedEndAngle","reportedEndAngle","getProgressAngles","actualProgress","plannedProgress","reportedProgress","maxProgress","actualProgressStartAngle","plannedProgressStartAngle","reportedProgressStartAngle","actualProgressEndAngle","plannedProgressEndAngle","reportedProgressEndAngle","renderPieCenter","cx","cy","renderPercentagePieCenter","renderPercentage","DashboardSection","monthMoment","getDashboardData","dashboardWidth","window","innerWidth","barMargin","top","right","left","bottom","barWidth","progress","actual","planned","reported","baseHour","plannedColor","reportedColor","actualColor","completedColor","pendingColor","unfinishedColor","planningsWidth","dailyPlannings","resetDailyPlanningMonth","releaseStartMonth","releaseEndMonth","devEndDate","beforeOrSameAsStartMonth","afterOrSameAsLastMonth","marginRight","base","extra","unplannedReport","mgmtData","position","newMonthMoment","subtract","getReleaseDailyPlannings","paddingRight","paddingLeft","add","ReportTaskDescriptionForm","CLIENT_FORM_RENDER","taskName","ReleaseTaskPlanningFormDialog","AdminHome","EstimationAddToReleaseForm","allAvailableReleases","getEmployeePlanDetails","NONE","teamOfRelease","selectedRelease","ReleaseDeveloperFilterFormContainer","ESTIMATION_SUGGEST_TASK_FORM_DIALOG","EstimationSuggestTaskFormContainer","EstimationFeatures","childProps","changedByNegotiator","changedByEstimator","permissionRequested","addedFromRepository","addedByNegotiator","addedByEstimator","hasError","expandedFeatureID","changeSuggested","changedInThisIteration","addedInThisIteration","changedKeyInformation","removalRequested","changeRequested","tasks","findIndex","t","owner","OWNER_NEGOTIATOR","OWNER_ESTIMATOR","passwordMatch","password","UserProfileForm","changeCredentials","RepositoryFeatureDetailDialog","EstimationList","onRowClick","filterEstimationByProject","estimationSelected","getAllEstimations","STATUS_ESTIMATION_REQUESTED","STATUS_INITIATED","STATUS_PENDING","STATUS_REVIEW_REQUESTED","STATUS_CHANGE_REQUESTED","STATUS_REOPENED","STATUS_PROJECT_AWARDED","STATUS_REJECTED","client","join","target","get","option","filterEstimationStatus","roleNames","showEstimationInitiateForm","formatStatus","columnClassStatusFormat","formatProject","formatClient","formatTechnologies","formatProjectDescription","columnClassUserFormat","formatEstimator","formatNegotiator","Sidebar","fullName","ESTIMATION_PROJECT_AWARD_FORM_SUBMIT","ESTIMATION_PROJECT_AWARD_FORM_DIALOG","userWithRoleCategory","dev","EstimationProjectAwardFormContainer","errorMsg","loginError","LoginFormContainer","PERMISSION_TAB","ROLE_TAB","USER_TAB","ADMIN_USER_TAB","USER_PROFILE_TAB","ADMIN_PERMISSION_TAB","EMPLOYEE_SETTING_TAB","LEAVE_SETTING_TAB","HOLIDAY_TAB","PERMISSION_FORM","USER_FORM","ADMIN_USER_FORM","USER_PROFILE_FORM","CLIENT_FORM","PROJECT_FORM","TECHNOLOGY_FORM","LEAVE_REQUEST_FORM","ATTENDANCE_SETTING_FORM","MERGE_TASK_PLANNING_FORM","EMPLOYEE_SETTING_FORM","LEAVE_SETTING_FORM","HOLIDAY_FORM","PERMISSION_LIST","ROLE_LIST","USER_LIST","ADMIN_USER_LIST","ESTIMATION_LIST","PROJECT_LIST","MODULE_LIST","TECHNOLOGIES_LIST","CLIENT_LIST","RELEASE_LIST","RELEASE_PLAN_LIST","RELEASE_TASK_PLANNING_PAGE","HOLIDAY_LIST","ESTIMATION_INITIATE_DIALOG","TECHNOLOGY_FORM_DIALOG","PROJECT_FORM_DIALOG","MODULE_FORM_DIALOG","CLIENT_FORM_DIALOG","LEAVE_REQUEST_FORM_DIALOG","ESTIMATION_FEATURE_DIALOG","MOVE_TASK_TO_FEATURE_FORM_DIALOG","ESTIMATION_ADD_TO_RELEASE_FORM_DIALOG","RELEASE_PLAN_ADD_TO_RELEASE_FORM_DIALOG","ESTIMATION_FILTER_DIALOG","LEAVE_APPROVE_DIALOG","LEAVE_REJECT_DIALOG","RELEASE_TASK_PLANNING_FORM_DIALOG","MOVE_TASK_PLAN_DIALOG","UPDATE_RELEASE_DATES_DIALOG","TASK_SHIFT_DIALOG","DASHBOARD_SECTION","REPORT_TASK_DESCRIPTION_DIALOG","CREATE_RELEASE_FORM_DIALOG","ESTIMATION_DETAIL_PAGE","REPORTING_TASK_PAGE","REPORTING_TASK_DETAIL_PAGE","CALENDAR_TASK_DETAIL_PAGE","CALENDAR_TASK_PAGE","LEAVE_DETAIL_PAGE","TASK_REPORT_DETAIL_PAGE","ReleaseTaskPlanningForm","allTeam","releaseTeam","projectUsersOnly","initial","devStartDateMoment","hour","minute","second","milliseconds","devEndDateMoment","employees","rolesInThisRelease","indexOf","ROLE_MANAGER","ROLE_LEADER","newValue","oldValue","ReportGoBack","TaskReportDetailPageContainer","RepositoryFeatureDetailPage","showHistory","showHistoryDetail","estimationId","addFeature","copyFeature","hasHistory","ReleaseDeveloperFilterForm","nowMomentInIndia","isSameOrBefore","momentInUTC","LeaveRequestFormDialog","moduleReducer","ADD_MODULES","ADD_MODULE","EDIT_MODULE","DELETE_MODULE","moduleID","developmentTypeReducer","ADD_DEVELOPMENT_TYPES","ADD_DEVELOPMENT_TYPE","developmentType","DELETE_DEVELOPMENT_TYPE","developmentTypeID","onReleaseSelected","planDate","iterationType","taskStatus","getReportingTasksForDate","setReportDate","reportDate","reportedStatus","dateStringOfReport","ReportingDateNavBarContainer","EstimationDetail","showEstimationRequestDialog","showEstimationApproveDialog","showEstimationDeleteDialog","showEstimationReviewDialog","showEstimationChangeDialog","showEstimationReopenDialog","estimationApprove","sendEstimationRequest","sendReviewRequest","sendChangeRequest","reopenEstimation","estimationGoBack","ESTIMATION_DETAIL_RENDER","userRoleInThisEstimation","editView","canApprove","editEstimationInitiateForm","onConfirmEstimationRequest","onClose","onConfirmEstimationApprove","onConfirmChangeRequest","onConfirmReviewRequest","DIALOG_ESTIMATION_REQUEST_REVIEW","onConfirmReopen","onConfirmDelete","hasErrorInEstimation","estimationFilterForm","replace","showAddTaskForm","showAddFeatureForm","suggestedHours","float","refreshEstimation","showProjectAwardForm","showAddToReleaseForm","showClientCreationForm","showClientEditForm","deleteClient","clientID","deleteClientOnServer","clients","ClientListContainer","SuperAdminHome","mapDispatchToprops","getReleaseDayPlannings","ReleaseDashboardSectionContainer","LeaveList","showLeaveDeleteRequestDialog","rowIdx","LEAVE_STATUS_APPROVED","LEAVE_STATUS_CANCELLED","leaveType","showLeaveDetails","canDelete","canCancel","cancelLeave","approveLeave","revokeLeave","leaves","userHasOnlyRole","ROLE_TOP_MANAGEMENT","showRaiseLeaveForm","changeLeaveStatus","ALL_LEAVE_STATUS_ARRAY","rowClassNameFormat","viewButton","userHasRole","formatLeaveRaisedUser","formatCreatedDate","formatLeaveType","formatLeaveApproverUser","viewDeleteButton","viewCancelButton","viewApproveButton","onConfirmDeleteRequest","EstimationFeatureDialog","roleReducer","ADD_ROLES","ADD_ROLE","EDIT_ROLE","DELETE_ROLE","ADMIN_EDITING_ROLE","enabled","ReleaseMoveTaskPlanFormDialog","CreateReleaseDialog","TaskShiftDialog","AppHomeContainer","addProjects","ADD_PROJECTS","addProject","ADD_PROJECT","deleteProject","DELETE_PROJECT","editProject","EDIT_PROJECT","getAllProjectsFromServer","getAllProjectsUserReleasesFromServer","getAllProjectsUserEstimationsFromServer","addProjectOnServer","deleteProjectOnServer","editProjectOnServer","dashboardReducer","CALCULATE_RELEASE_STATS","plannedIterations","iterations","ITERATION_TYPE_PLANNED","ITERATION_TYPE_ESTIMATED","unPlannedIteration","ITERATION_TYPE_UNPLANNED","s","sumPlannedHours","sumEstimatedHours","sumReportedHours","sumEstimatedHoursCompletedTasks","sumPlannedHoursReportedTasks","sumProgressEstimatedHours","sumPlannedHoursEstimatedTasks","forEach","estimatedHoursCompletedTasks","plannedHoursReportedTasks","plannedHoursEstimatedTasks","parseFloat","toFixed","ran","random","total","remaining","progressCompletedTasks","progressPendingTasks","completed","pending","estimatedProgressReporting","estimatedProgressPlanning","remainingReported","remainingPlanned","unplanned","plannedAfter","plannedAfterAvg","plannedBefore","plannedBeforeAvg","reportedAfter","reportedAfterAvg","plannedHoursLastMinuteLeave","plannedHoursOnLeave","ADD_DAILY_PLANNINGS","SET_RELEASE_ID","ADD_USER_RELEASES","clientReducer","ADD_CLIENTS","ADD_CLIENT","DELETE_CLIENT","UPDATE_CLIENT","nowString","DATE_FORMAT","expanded","fromSchedule","selectedTab","RELEASE_DASHBOARD_TAB","taskPlansOfReleasePlanDeveloper","releaseReducer","r","sumExpectedBilledHours","expectedBilledHours","plannedStats","addedRelease","plannedItrs","sums","sm","nonProjectTeam","tp","plan","dp","CreateReleaseFormContainer","momentLocalizer","CalendarTaskPage","onSelectEvent","taskSelected","start","end","isSelected","bg","style","backgroundColor","borderRadius","opacity","color","border","display","week","selectedView","selectedDate","Event","events","eventStyleGetter","view","changeViewAndDate","availableReleases","getNowStringInIndia","reportedTasks","releasesReports","reportingReducer","ADD_RELEASES_AND_TASKS_OF_SELECTED_DATE","TASK_REPORTED","REPORT_TASK_SELECTED","detail","UPDATE_SELECTED_TASK_PLAN","UPDATE_SELECTED_RELEASE_PLAN","SET_REPORT_DATE","SET_STATUS","SET_ITERATION_TYPE","SET_REPORTS_OF_RELEASE","reports","showAdminUserEditForm","deleteAdminUser","showAdminUserForm","AdminUsers","AdminUserListContainer","default","addUserReleases","addReleasesAndTasksOfSelectedDate","setReportedStatus","setIterationType","releaseSelectedForReporting","RELEASE_SELECTED_FOR_REPORTING","setReportTaskPlanDetail","updateSelectedTaskPlan","updateSelectedReleasePlan","setReportsOfRelease","taskReported","getUserReleasesFromServer","getDataForReportTaskDetailPageFromServer","taskPlanID","getTaskReportsReleasePlanPage","reportTaskToServer","comment","getReleasePlanByIdFromServer","ReleaseDeveloperScheduleForm","getDeveloperSchedules","clone","margin","textAlign","TaskReportList","getAllTaskReports","dateString","DATE_DISPLAY_FORMAT","taskPlanSelected","formatTaskName","formatDeveloperName","formatPlanningDate","formatReportedStatus","changeNavigationView","CHANGE_CALENDAR_NAVIGATION","showUsersTask","SHOW_USERS_TASKS","setCalendarTaskDetails","SET_CALENDAR_TASK_DETAILS","getAllTaskPlansFromServer","getTaskAndProjectDetailsForCalendarFromServer","ReleaseTaskPlanningPage","showTaskDeleteConfirmationDialog","showTaskReopenConfirmationDialog","reportedOnDate","nowMomentString","nowMoment","planningMoment","planningDateString","STATUS_COMPLETED","canMove","openMoveTaskPlanForm","workCalendarEmployeeID","developer","deleteTaskPlanningRow","reopenTask","flags","flagImageArray","WARNING_UNPLANNED","WARNING_TOO_MANY_HOURS","WARNING_EMPLOYEE_ON_LEAVE","WARNING_RELEASE_DATE_MISSED_1","WARNING_RELEASE_DATE_MISSED_2","WARNING_RELEASE_DATE_MISSED_3","WARNING_RELEASE_DATE_MISSED_4","WARNING_PLANNED_BEYOND_RELEASE_DATE","WARNING_LESS_PLANNED_HOURS","WARNING_MORE_PLANNED_HOURS","WARNING_MORE_REPORTED_HOURS_1","WARNING_MORE_REPORTED_HOURS_2","WARNING_MORE_REPORTED_HOURS_3","WARNING_MORE_REPORTED_HOURS_4","WARNING_HAS_UNREPORTED_DAYS","WARNING_UNREPORTED","WARNING_PENDING_ON_END_DATE","WARNING_COMPLETED_BEFORE_END_DATE","WARNING_EMPLOYEE_ASK_FOR_LEAVE","ReleaseTaskGoBack","refreshSelectedTaskPlan","showTaskPlanningCreationForm","formatDeveloper","formatFlags","formatReport","reopenCellButton","closeReopenTaskDialog","actionCellButton","defaultProps","reportTask","reportData","reportedDate","reportDescription","dateOfReport","ReportingTaskPageContainer","reducers","app","attendanceSetting","calendar","warning","holiday","TechnologyForm","TECHNOLOGY_FORM_RENDER","expandedTaskID","estimationReducer","addTaskFeature","featureTask","isDeleted","ALREADY_EXISTS","errors","EMAIL_ALREADY_USED","PASSWORD_NOT_MATCHED","showUserList","UserFormContainer","TECHNOLOGY_FORM_CONNECT","addTechnologyOnServer","TechnologyFormContainer","addModuleOnServer","editModuleOnServer","ModuleFormContainer","ReportTaskDescriptionFormDialog","getEmployeeWorkCalendarFromServer","allDevelopers","iteration","ReleaseTaskPlanningFormContainer","ReportingDateNavBar","prevDate","nextDate","ProjectForm","ReleasePlanAddToReleaseDialog","CM","ModuleList","showModuleDeletionDialog","addRow","deleteModule","showModuleEditForm","OkConfirmationForDeletingModule","DELETE_MODULE_BODY","showModuleCreationForm","viewEditButton","ModuleForm","renderText","input","label","disbled","placeholder","meta","touched","renderCheckBox","className","onChange","renderSelect","noneOptionText","noneOptionValue","showNoneOption","displayField","optionalDisplayField","disabled","valueField","hoverEnabledMsg","hoverDisabledMsg","renderTextArea","rows","renderError","renderLoginField","renderMultiSelect","textField","onBlur","renderField","renderDateTimePickerString","timeZone","dropUp","info","showTime","showCalendar","currentDate","val","parse","v","preventDefault","width","renderDateTimePicker","renderDateTimeStringShow","formate","calculateReleaseStats","addReleaseDailyPlannings","WarningList","getAllWarnings","fetchWarningOnFlags","ALL_WARNING_NAME_ARRAY","formatFlag","formatReleases","formatReleasePlans","Tab","isActive","handleClick","saveIsApproved","isApproved","leaveID","reason","approveLeaveRequestFromServer","rejectLeaveRequestFromServer","LeaveApprovalReasonFormContainer","attendanceSettingReducer","ADD_UPDATE_ATTENDANCE_SETTING","leaveTypes","leaveReducer","ADD_LEAVE_TYPES","ADD_LEAVES","LEAVE_SELECTED","ADD_LEAVE","UPDATE_LEAVE","REVOKE_LEAVE","EstimationFilterDialog","addLeaves","leaveSelected","addLeave","updateLeave","addLeaveTypes","addLeaveSettingOnServer","leaveSetting","updateLeaveSettingOnServer","getAllLeaveTypesFromServer","addLeaveRequestOnServer","deleteLeaveFromServer","EstimationId","RepositoryFeatureDetailPageContainer","ProjectList","showProjectDeletionDialog","showPorjectEditForm","OkConfirmationForDeletingProject","DELETE_PROJECT_BODY","showProjectCreationForm","newTaskPlanning","ReleaseMoveTaskPlanFormContainer","ReleaseTaskPlanningShiftForm","daysToShift","days","shiftTasksToPast","shiftTasksToFuture","LeaveApprovalReasonForm","EstimationAddToReleaseDialog","releaseId","ReleaseTaskPlanningShiftFormContainer","ReleasePlanningUpdateFormDialog","UserForm","USER_FORM_RENDER","selectedRoles","SHOW_COMPONENT_HIDE_OTHER","SHOW_COMPONENT","HIDE_COMPONENT","ADD_SSR_FLAG","CLEAR_SSR_FLAG","SHOW_LOADER","HIDE_LOADER","ADD_PERMISSIONS","ADD_PERMISSION","EDIT_PERMISSION","DELETE_PERMISSION","ADD_ADMIN_USER","UPDATE_ADMIN_USER","DELETE_ADMIN_USER","SELECT_REPOSITORY","SELECT_TASK_FROM_REPOSITORY","SELECT_FEATURE_FROM_REPOSITORY","NO_PROJECT_SELECTED","ADD_TASK_COMMENT","ADD_HOLIDAY","ADD_HOLIDAYS","ADD_ALL_YEARS","DELETE_HOLIDAY","UPDATE_HOLIDAY","ADD_WORK_CALENDAR","SET_PLANNING_MONTH","ReleaseProjectGoBack","tabSelected","openUpdateReleaseDatesForm","ReleasePlanSectionContainer","CLIENT_FORM_CONNECT","ClientFormContainer","addWorkCalendar","ReleaseDeveloperScheduleFormContainerContainer","LeaveRequestFormCOntainer","AppHome","RADIAN","PI","renderCustomizedLabel","innerHeight","onReleaseSelect","RepositoryTaskDetailDialog","addAllPermissions","addPermission","deletePermission","PermissionID","addPermissionOnServer","PERMISSION_THUNK","editPermissionOnServer","deletePermissionOnServer","PermissionId","PERMISSION_LIST_CONNECT","getAllPermissions","PermissionListContainer","SidebarSection","ROLE_DEVELOPER","ROLE_NON_PROJECT_DEVELOPER","getAllClientsFromServer","getAllModulesFromServer","getAllTechnologiesFromServer","getAttendanceSettingFromServer","AdminUserList","onClickUserEditSelected","onClickCaseTypeDeleteSelected","formatRole","EstimationProjectAwardForm","SidebarSectionContainer","AdminHomeContainer","SuperAdminHomeContainer","addTechnologies","addTechnology","deleteTechnology","deleteTechnologyOnServer","ReleaseMoveTaskPlanForm","today","todayMoment","isSameOrAfter","DATE_AND_DAY_SHOW_FORMAT","allYears","holidayReducer","holidays","years","y","calendarYear","holidayDateMoment","holidayDateString","isSame","LeaveRequestForm","startDateMoment","momentInTimeZone","endDateMoment","startDateMomentDate","isValid","endDateMomentDate","LEAVE_TYPE_DAY_WITH_NAME_ARRAY","CalendarTaskPageContainer","EstimationFeaturesContainer","selectRepository","ContentMain","CONTENT_MAIN_LIFECYCLE","routes","CONTENT_MAIN_RENDER","route","EstimationAddToReleaseFormContainer","EstimationTasks","INVALID_OPERATION","onTaskDelete","getAllDevelopmentTypesFromServer","STILL_PENDING_TASKS_AND_FEATURE_ERROR","EstimationDetailContainer","formValues","addRoleOnServer","syncErrors","permissionsAdded","selectedPermission","p1","permissionFormValues","roleSyncErrors","RoleFormContainer","AdminRoleList","configurable","formatPermission","MoveTaskInFeatureFormDialog","addAllRoles","addRole","editHoliday","deleteHoliday","deleteHolidayOnServer","Holidays","showHolidayForm","getHolidaysOfYear","sort","a","b","HolidayListContainer","getAllTaskPlans","TaskPlanListContainer","SidebarSideSection","addWarnings","getAllWarningsOfThisReleaseFromServer","warningType","UserList","showUserForm","changeReleaseStatus","showCreateReleaseDialog","ReleaseListContainer","EstimationTasksContainer","calenderGoBack","calendarTaskDetail","CalendarTaskDetailPageContainer","MoveTaskInFeatureForm","iteration_type","estimatedBilledHours","ITERATION_TYPE_LIST_WITH_NAME","ReleasePlanAddToReleaseFormContainer","addAllYears","addAllHolidays","addHoliday","updateHoliday","addHolidayOnServer","updateHolidayOnServer","yearChange","planTask","planTaskFilter","taskPlanFilter","addTaskPlanningFiltersOnServer","ReleaseTaskPlanningPageContainer","ReportingTaskDetailPageContainer","ReleaseList","releaseName","column","STATUS_PLAN_REQUESTED","STATUS_DEV_IN_PROGRESS","STATUS_DEV_COMPLETED","STATUS_RELEASED","STATUS_ISSUE_FIXING","formatProjectName","formatManager","formatLeader","formatEstimatedHours","formatProgress","formatStartDate","formatEndDate","formatReleaseDate","ReleasePlanSection","teamMember","index","RELEASE_PLAN_TAB","RELEASE_WARNINGS_TAB","RELEASE_TASK_PLANS_TAB","RELEASE_REPORT_TAB","ClientForm","TaskReportDetailPage","whiteSpace","ClientFormDialog","EstimationInitiateDialog","EstimationFeatureForm","ESTIMATION_FEATURE_FORM_RENDER","ProjectListContainer","RepositorySearch","selectedValue","suggestions","id","handleDelete","handleAddition","handleDrag","handleSelectChange","splice","tag","toLowerCase","currPos","newPos","key","tagInput","tagInputField","remove","activeSuggestion","isFeature","TechnologyList","showTechnologyDeletionDialog","OkConfirmationForDeletingTechnology","DELETE_TECHNOLOGY_BODY","showTechnologyAdditionForm","ReportTaskDescriptionFormContainer","EstimationInitiateForm","ESTIMATION_INITIATE_FORM_RENDER","estimators","CalendarTaskDetailPage","LoginForm","showAdminUserList","technologyFormDialog","TabSection","Children","children","child","visibleComponents","UpdateReleaseDatesForm","updatedDevStartDate","updatedDevEndDate","updatedClientReleaseDate","startMoment","endMoment","clientMoment","TaskReportListContainer","changeReleaseFlag","showAddToReleasePlanForm","getAllReleasePlans","ReleasePlanListContainer","DELETE_TASK","DELETE_FEATURE","DELETE_TASK_BODY","DELETE_FEATURE_BODY","DELETE_CLIENT_BODY","ContentSection","EstimationProjectAwardDialog","addTask","taskId","copyTask","RepositoryTaskDetailPageContainer","repositoryReducer","EstimationFilterFormContainer","Header","addModules","addModule","editModule","deleteModuleOnServer","__PRELOADED_STATE__","App","onload","document","getElementById","EmployeeSettingForm","LeaveRejectDialog","WarningListContainer","UserListContainer","ProjectInitiateFormContainer","ESTIMATION_LIST_CONNECT","EstimationListContainer","EstimationFeature","showFeatureDeletionDialog","showTaskDeletionRequestedDialog","featureDeletion","deleteFeature","estimationStatus","buttons","ESTIMATION_TASK_BUTTONS","ESTIMATION_FEATURE_RENDER","approveFeature","showFeatureSuggestionForm","changeGranted","toggleGrantEdit","reOpenFeature","showEditFeatureForm","ESTIMATION_FEATURE_BUTTONS","toggleDeleteRequest","toggleEditRequest","onConfirmTaskDeleteRequest","onConfirmFeatureDelete","requestedInThisIteration","fromRepoWithFeature","PureComponent","propTypes","isRequired","string","bool","INVALID_USER","TASK_APPROVAL_ERROR","FEATURE_APPROVAL_ERROR","ReleasePlanList","onFlagChange","onStatusChange","finalStatus","EstimationSuggestFeatureForm","MOVE_TASK_IN_FEATURE_ERROR","MoveTaskInFeatureFormContainer","LeaveDetailPage","approval","created","startDateString","endDateString","numberOfLeaveDays","dayType","approver","CC","EstimationTaskForm","employeeReducer","EstimationTaskDialog","Technologies","TechnologyListContainer","ssrFlag","appReducer","newState","PERMISSION_FORM_RENDER","PERMISSION_FORM_LIFECYCLE","PERMISSION_FORM_CONNECT","PERMISSION_LIST_RENDER","PERMISSION_LIST_LIFECYCLE","USER_PROFILE_FORM_CONNECT","ESTIMATION_INITIATE_FORM_SUBMIT","ESTIMATION_FEATURE_FORM_SUBMIT","ESTIMATION_PROJECT_AWARD_FORM_RENDER","TECHNOLOGY_FORM_LIFECYCLE","PROJECT_FORM_RENDER","PROJECT_FORM_CONNECT","ESTIMATION_TASK_RENDER","ESTIMATION_TASK_LIFECYCLE","ESTIMATION_FEATURE_DETAIL_RENDER","ATTENDENCE_SETTING_FORM_CONNECT","traceCodes","logLevel","PROD_ENV","params","warn","addSSRFlag","clearSSRFlag","hideLoader","ClientList","showClientDeletionDialog","OkConfirmationForDeletingClient","ReleasePlanAddToReleaseForm","permissionReducer","LeaveApproveDialog","addDevelopmentTypes","addDevelopmentType","deleteDevelopmentType","HolidayList","addAttendanceSetting","initialize","ReportingTaskPage","onReportedStatusChange","showDescriptionDialog","rowDataChanged","padding","cellName","cellValue","cellEditProp","mode","blurToSave","beforeSaveCell","onBeforeSaveCell","afterSaveCell","onAfterSaveCell","onIterationTypeChange","REPORT_UNREPORTED","REPORT_PENDING","REPORT_COMPLETED","viewDetailButton","formatTask","viewCompleteButton","viewPendingButton","viewReportButton","LeaveSettingForm","AdminUserForm","ConfirmationRequestReviewDialog","onConfirm","defaultConfirmationDialog","ConfirmationDialog","dialogName","NewConfirmationDialog","PermissionRow","removePermission","submit","changeFuncParent","selectedIdx","RoleForm","touch","array","untouch","HolidayForm","showHolidayList","HOLIDAY_TYPE_LIST_WITH_NAME","releaseData","UpdateReleaseDatesFormContainer","PermissionFormContainer","phone","address","dob","designation","employeeCode","dateJoined","UserProfileFormContainer","MONTHS_WITH_MONTH_NUMBER","HOLIDAY_TYPE_LIST","HolidayFormContainer","isAuthenticated","isAdmin","AppRouterContainer","EstimationTask","showTaskDeletionDialog","taskDeletion","deleteTask","isFeatureTask","approveTask","openTaskSuggestionForm","reOpenTask","editTask","moveToFeature","onConfirmTaskDelete","isMovedOutOfFeature","isMovedToFeature","EstimationInitiateFormContainer","TaskPlanList","formatPlannedDate","EstimationFeatureFormContainer","projectReducer","RoleList","formatPermissions","minPlannedHours","maxPlannedHours","free","relativelyFree","busy","superBusy","someWhatBusy","EmployeeSettingFormContainer","LeaveListContainer","calendarPageReducer","selectedTaskPlan","defaultView","defaultDate","groupedTasks","groupBy","tasksSameDaySameEmployee","ts","startOf","addEmployeeSettingOnServer","updateEmployeeSettingOnServer","RepositoryTaskDetailPage","authenticationFailed","userReducer","isAppUser","addClient","addClients","editClient","addClientOnServer","editClientOnServer","AdminRoleForm","ReleaseDevelopersSchedules","that","fromString","fromMoment","UTC_TIMEZONE","millisecond","toMoment","weekArray","schedule","heading","dayIdx","hours","calendarDateClicked","TabSectionContainer","AppRouter","AttendanceSettingForm"],"mappings":"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;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;AAGA;AACA;AACA;AAAA;AAAA;;;AAGA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA,C;;;;;;;;;;;;;;;;ACrNA;;AACA;;;;AACA;;;;AAEA,IAAMx5B,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD;AAAA,WAAY;AAChCC,sBAAcD,MAAME,IAAN,CAAWC;AADO,KAAZ;AAAA,CAAxB;;AAIA,IAAMq5B,mBAAm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","file":"js.e8e35effd0f610476a96.js","sourcesContent":["import {connect} from 'react-redux'\r\nimport Home from '../../components/pages/Home'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loggedInUser: state.user.loggedIn\r\n})\r\n\r\nconst HomeContainer = withRouter(connect(\r\n    mapStateToProps\r\n)(Home))\r\n\r\nexport default HomeContainer\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/HomeContainer.js","import React, {Component} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {renderText} from './fields'\r\nimport {required} from \"./validation\"\r\n\r\nclass PermissionForm extends Component {\r\n    render() {\r\n        const {handleSubmit} = this.props\r\n        return [\r\n            <div key=\"PermissionFormBackButton\">\r\n                <button type=\"button\"\r\n                        onClick={() => this.props.showPermissionList()}>\r\n                    <i className=\"glyphicon glyphicon-arrow-left\"></i>\r\n                </button>\r\n            </div>,\r\n            <form key=\"PermissionForm\" onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <Field name=\"name\" placeholder={\"Name of permission\"} component={renderText}\r\n                               label={\"Permission\"} validate={[required]}/>\r\n                        <button type=\"submit\" className=\"btn btn-submit\">Submit</button>\r\n                    </div>\r\n                </div>\r\n            </form>]\r\n\r\n    }\r\n}\r\n\r\nPermissionForm = reduxForm({\r\n    form: 'permission'\r\n})(PermissionForm)\r\n\r\nexport default PermissionForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/PermissionForm.js","import {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport React from 'react'\r\nimport {renderDateTimePickerString, renderMultiSelect, renderSelect, renderText} from './fields'\r\nimport * as logger from '../../clientLogger'\r\nimport {number, required} from \"./validation\"\r\nimport moment from 'moment'\r\nimport momentLocalizer from 'react-widgets-moment'\r\nimport {connect} from 'react-redux'\r\nimport _ from 'lodash'\r\n\r\nmoment.locale('en')\r\nmomentLocalizer()\r\n\r\nlet CreateReleaseForm = (props) => {\r\n    const {pristine, submitting, reset, change} = props\r\n    const {team, managers, leaders, devStartDate, devReleaseDate, clientReleaseDate, manager, leader, project, module, projects, modules, developmentTypes, technologies} = props\r\n    let max = !_.isEmpty(devReleaseDate) ? moment(devReleaseDate).toDate() : !_.isEmpty(clientReleaseDate) ? moment(clientReleaseDate).toDate() : undefined\r\n    let maxRelease = !_.isEmpty(clientReleaseDate) ? moment(clientReleaseDate).toDate() : undefined\r\n    let projectModules = project && project._id ? modules.filter(m => m.project._id.toString() === project._id.toString()) : modules\r\n    let moduleProjects = []\r\n\r\n    if (module && module._id && (!project || !project._id)) {\r\n        let selectedModule = modules.find(m => m._id.toString() === module._id.toString())\r\n        moduleProjects = projects.filter(p => p._id.toString() === selectedModule.project._id.toString())\r\n    } else {\r\n        moduleProjects = projects\r\n    }\r\n\r\n    /*\r\n        While creating/adding release to an estimation, an user which is chosen as a Manager cannot be chosen as Leader and vice versa.\r\n        A manager/leader can be chose as Developer if they have that role as well.\r\n    */\r\n\r\n    let updatedManagerList = leader && leader._id ? managers.filter(m => m._id.toString() !== leader._id.toString()) : managers\r\n    let updatedLeaderList = manager && manager._id ? leaders.filter(l => l._id.toString() !== manager._id.toString()) : leaders\r\n    let now = new Date()\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-6\">\r\n                    <Field name=\"releaseVersionName\" component={renderText} validate={[required]}\r\n                           label={\"Name (Release Version):\"}/>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <Field name=\"developmentType._id\" component={renderSelect} label={\"Development Type:\"}\r\n                           options={developmentTypes}\r\n                           displayField={\"name\"} validate={[required]}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-6\">\r\n                    <Field name=\"project._id\"\r\n                           component={renderSelect}\r\n                           label={\"Project:\"}\r\n                           options={moduleProjects}\r\n                           validate={[required]}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <Field name=\"module._id\"\r\n                           component={renderSelect}\r\n                           label={\"Module:\"}\r\n                           options={projectModules}\r\n                           displayField={\"firstName\"}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-12\">\r\n                    <Field name=\"technologies\" component={renderMultiSelect} label=\"technologies:\"\r\n                           data={technologies}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-4\">\r\n                    <Field name=\"devStartDate\" component={renderDateTimePickerString}\r\n                           min={now}\r\n                           max={max}\r\n                           showTime={false}\r\n                           label={\"Expected Start Date For Developer:\"} validate={[required]}/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <Field name=\"devReleaseDate\" component={renderDateTimePickerString}\r\n                           min={moment(devStartDate).toDate()}\r\n                           max={maxRelease}\r\n                           showTime={false}\r\n                           label={\"Expected Developer Release Date:\"} validate={[required]}/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <Field name=\"clientReleaseDate\" component={renderDateTimePickerString}\r\n                           min={moment(devReleaseDate).toDate()}\r\n                           showTime={false}\r\n                           label={\"Expected Client Release Date:\"}\r\n                           validate={required}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-6\">\r\n                    <Field name=\"manager._id\"\r\n                           component={renderSelect}\r\n                           label={\"Manager Of Release:\"}\r\n                           options={updatedManagerList}\r\n                           validate={required}\r\n                           valueField=\"_id\"\r\n                           displayField=\"Name\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <Field name=\"leader._id\"\r\n                           component={renderSelect}\r\n                           label={\"Leader Of Release:\"}\r\n                           options={updatedLeaderList}\r\n                           validate={required}\r\n                           valueField=\"_id\"\r\n                           displayField=\"Name\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-12\">\r\n                    <Field name=\"team\"\r\n                           component={renderMultiSelect}\r\n                           label={\"Planned Employees For Release:\"}\r\n                           data={team}\r\n                           validate={required}\r\n                           textField=\"name\"\r\n                           valueField=\"_id\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div className=\"row initiatEstimation\">\r\n            <div className=\"col-md-6 text-center\">\r\n                <button type=\"submit\" disabled={pristine || submitting} className=\"btn customBtn\">Submit</button>\r\n            </div>\r\n            <div className=\"col-md-6 text-center\">\r\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset} className=\"btn customBtn\">\r\n                    Reset\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nCreateReleaseForm = reduxForm({\r\n    form: 'create-release'\r\n})(CreateReleaseForm)\r\n\r\nconst selector = formValueSelector('create-release')\r\n\r\nCreateReleaseForm = connect(\r\n    state => {\r\n        const {devStartDate, devReleaseDate, clientReleaseDate} = selector(state, 'devStartDate', 'devReleaseDate', 'clientReleaseDate')\r\n        const manager = selector(state, 'manager')\r\n        const leader = selector(state, 'leader')\r\n        const _id = selector(state, '_id')\r\n        const project = selector(state, 'project')\r\n        const module = selector(state, 'module')\r\n        return {\r\n            _id,\r\n            project,\r\n            module,\r\n            devStartDate,\r\n            devReleaseDate,\r\n            clientReleaseDate,\r\n            manager,\r\n            leader\r\n        }\r\n    }\r\n)(CreateReleaseForm)\r\n\r\n\r\nexport default CreateReleaseForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/CreateReleaseForm.js","import * as AC from '../actions/actionConsts'\r\n\r\nlet initialState = {\r\n    all: [],\r\n    selected: {}\r\n}\r\n\r\nlet technologyReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AC.ADD_TECHNOLOGIES:\r\n            return Object.assign({}, state, {all: action.technologies})\r\n        case AC.ADD_TECHNOLOGY:\r\n            return Object.assign({}, state, {all: [...state.all, action.technology]})\r\n        case AC.DELETE_TECHNOLOGY:\r\n            return Object.assign({}, state, {all: state.all.filter(item => item._id !== action.TechnologyID)})\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default technologyReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/technologyReducer.js","import {connect} from 'react-redux'\r\nimport {LeaveDetailPage} from '../../components'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    leaveGoBack: (event) => {\r\n        dispatch(A.getAllLeavesFromServer(SC.ALL))\r\n        dispatch(A.showComponentHideOthers(COC.LEAVE_LIST))\r\n    }\r\n})\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    leave: state.leave.selected\r\n})\r\n\r\nconst LeaveDetailPageContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LeaveDetailPage)\r\n\r\nexport default LeaveDetailPageContainer\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/LeaveDetailPageContainer.js","import {connect} from 'react-redux'\r\nimport {ReportingCommentForm} from \"../../components\"\r\nimport * as A from '../../actions'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport {initialize} from 'redux-form'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (commentValues) => {\r\n        return dispatch(A.addCommentToServer(commentValues)).then((json) => {\r\n            if (json.success) {\r\n                dispatch(initialize(\"reporting-comment\", {\r\n                    releaseID: json.data.release._id,\r\n                    releasePlanID: json.data._id\r\n                }))\r\n                NotificationManager.success('Comment Added')\r\n            } else {\r\n                NotificationManager.error('Comment Add Failed')\r\n            }\r\n            return json\r\n        })\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    initialValues: {\r\n        \"releaseID\": state.report.reportTaskDetail.release._id,\r\n        \"releasePlanID\": state.report.reportTaskDetail.releasePlan._id\r\n    }\r\n})\r\n\r\nconst ReportingCommentFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReportingCommentForm)\r\n\r\nexport default ReportingCommentFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/ReportingCommentFormContainer.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {EstimationSuggestFeatureFormContainer} from \"../../containers\"\r\n\r\nconst EstimationSuggestTaskDialog = (props) => {\r\n    return <Modal className=\"estimationModal suggestDialog\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Suggest Feature Detail For Estimation</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <EstimationSuggestFeatureFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default EstimationSuggestTaskDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/EstimationSuggestFeatureDialog.js","import {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport React from 'react'\r\nimport {number, required} from './validation'\r\nimport {renderText, renderTextArea} from './fields'\r\nimport * as logger from '../../clientLogger'\r\nimport {connect} from \"react-redux\";\r\nimport * as SC from \"../../../server/serverconstants\"\r\n\r\nlet EstimationSuggestTaskForm = (props) => {\r\n    logger.debug(logger.ESTIMATION_TASK_FORM_RENDER, props)\r\n    const {pristine, submitting, reset, change} = props\r\n    const {loggedInUserRole, isFromRepo, estimation, readOnly} = props\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div className=\"col-md-12\">\r\n            <div className=\"col-md-5\">\r\n                <div className=\"col-md-1\">\r\n                    {estimation.loggedInUserRole === SC.ROLE_NEGOTIATOR ?\r\n                        <img key=\"estimator\" className=\"suggestionUser div-hover\" src=\"/images/estimator.png\"\r\n                             title=\"Estimator End\"/> :\r\n                        estimation.loggedInUserRole === SC.ROLE_ESTIMATOR ?\r\n                            <img key=\"negotiator\" className=\"suggestionUser div-hover\" src=\"/images/negotiator.png\"\r\n                                 title=\"Negotiator End\"/> : null\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-11\">\r\n                    {estimation.loggedInUserRole === SC.ROLE_NEGOTIATOR ?\r\n                        <h4 className=\"estimatorClr\">Estimator</h4> :\r\n                        estimation.loggedInUserRole === SC.ROLE_ESTIMATOR ?\r\n                            <h4 className=\"negotiatorClr\">Negotiator</h4> : null\r\n                    }\r\n                    <div className=\"row\">\r\n\r\n                        <Field name=\"estimation._id\" component=\"input\" type=\"hidden\"/>\r\n                        <Field name=\"_id\" component=\"input\" type=\"hidden\"/>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <Field name=\"readOnly.name\"\r\n                                   readOnly={true}\r\n                                   component={renderText}\r\n                                   label={\"Task Name:\"}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Field name=\"readOnly.estimatedHours\"\r\n                                   component={renderText}\r\n                                   readOnly={true}\r\n                                   label={\"Task Estimated Hours:\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <Field name=\"readOnly.description\"\r\n                                   readOnly={true}\r\n                                   component={renderTextArea}\r\n                                   rows=\"10\"\r\n                                   label=\"Task Description:\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-2 \">\r\n\r\n                {isFromRepo &&\r\n                <img key=\"repo_flag\" src=\"/images/repo_flag.png\" className=\"suggestionRepo\" title=\"From Repository\"/>\r\n                }\r\n                <button type=\"button\" className=\"suggestCopy btn-link\"\r\n                        title=\"Copy Task Details\"\r\n                        onClick={() => {\r\n                            change(\"name\", readOnly.name)\r\n                            change(\"estimatedHours\", readOnly.estimatedHours)\r\n                            change(\"description\", readOnly.description)\r\n                        }}><i className=\"glyphicon glyphicon-arrow-right\"></i></button>\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n                <div className=\"col-md-1\">\r\n                    {estimation.loggedInUserRole === SC.ROLE_ESTIMATOR ?\r\n                        <img key=\"estimator\" className=\"suggestionUser div-hover\" src=\"/images/estimator.png\"\r\n                             title=\"Estimator End\"/> :\r\n                        estimation.loggedInUserRole === SC.ROLE_NEGOTIATOR ?\r\n                            <img key=\"negotiator\" className=\"suggestionUser div-hover\" src=\"/images/negotiator.png\"\r\n                                 title=\"Negotiator End\"/> : null\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-11\">\r\n                    {estimation.loggedInUserRole === SC.ROLE_NEGOTIATOR ?\r\n                        <h4 className=\"negotiatorClr\">{estimation.loggedInUserRole}</h4> :\r\n                        estimation.loggedInUserRole === SC.ROLE_ESTIMATOR ?\r\n                            <h4 className=\"estimatorClr\">{estimation.loggedInUserRole}</h4> : null\r\n                    }\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <Field\r\n                                name=\"name\"\r\n                                readOnly={isFromRepo}\r\n                                component={renderText}\r\n                                label={\"Task Name:\"}\r\n                                validate={required}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Field\r\n                                name=\"estimatedHours\"\r\n                                component={renderText}\r\n                                label={\"Task Estimated Hours:\"}\r\n                                validate={[required, number]}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <Field\r\n                                name=\"description\"\r\n                                readOnly={isFromRepo}\r\n                                component={renderTextArea}\r\n                                label=\"Task Description:\"\r\n                                rows=\"10\"\r\n                                validate={required}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row initiatEstimation\">\r\n                <div className=\"col-md-6 text-center\">\r\n                    <button type=\"submit\" disabled={pristine || submitting} className=\"btn customBtn\">Save</button>\r\n                </div>\r\n                <div className=\"col-md-6 text-center\">\r\n                    <button type=\"button\" disabled={pristine || submitting} className=\"btn customBtn\" onClick={reset}>\r\n                        Reset\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nEstimationSuggestTaskForm = reduxForm({\r\n    form: 'estimation-suggest-task'\r\n})(EstimationSuggestTaskForm)\r\n\r\nconst selector = formValueSelector('estimation-suggest-task')\r\n\r\nEstimationSuggestTaskForm = connect(\r\n    state => {\r\n        const {loggedInUserRole, isFromRepo} = selector(state, 'loggedInUserRole', 'isFromRepo')\r\n        const readOnly = {\r\n            name: selector(state, 'readOnly.name'),\r\n            estimatedHours: selector(state, 'readOnly.estimatedHours'),\r\n            description: selector(state, 'readOnly.description')\r\n        }\r\n        return {\r\n            loggedInUserRole,\r\n            readOnly,\r\n            isFromRepo\r\n        }\r\n    }\r\n)(EstimationSuggestTaskForm)\r\n\r\n\r\nexport default EstimationSuggestTaskForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/EstimationSuggestTaskForm.js","import {connect} from 'react-redux'\r\nimport {AdminRoleList} from \"../../components\"\r\nimport * as COC from \"../../components/componentConsts\";\r\nimport * as A from \"../../actions\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    editPermissionsOfRole: (role) => {\r\n        dispatch(A.showComponentHideOthers(COC.ADMIN_ROLE_FORM))\r\n        dispatch(A.adminEditingRole(role))\r\n    },\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        roles: state.role.all\r\n    }\r\n}\r\n\r\nconst AdminRoleListContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AdminRoleList)\r\n\r\nexport default AdminRoleListContainer\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/AdminRoleListContainer.js","import {connect} from 'react-redux'\r\nimport {AdminRoleForm} from \"../../components\"\r\nimport * as COC from \"../../components/componentConsts\";\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as A from \"../../actions\"\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (role) => {\r\n        return dispatch(A.editRoleOnServer(role)).then((json) => {\r\n            if (json.success) {\r\n                dispatch(A.showComponentHideOthers(COC.ADMIN_ROLE_LIST))\r\n                NotificationManager.success('Role And Permission Updated')\r\n            } else {\r\n                NotificationManager.error('Role And Permission Update Failed')\r\n            }\r\n        })\r\n    },\r\n    showRoleList: () => dispatch(A.showComponentHideOthers(COC.ADMIN_ROLE_LIST))\r\n\r\n\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    initialValues: state.role.selected,\r\n    permissionOptions: state.role.permissionOptions\r\n})\r\n\r\nconst AdminRoleFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AdminRoleForm)\r\n\r\nexport default AdminRoleFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/AdminRoleFormContainer.js","import {connect} from 'react-redux'\r\nimport {DashboardSection} from \"../../components\"\r\nimport * as A from \"../../actions\";\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n        setReleaseID: (releaseID) => {\r\n            dispatch(A.setReleaseID(releaseID))\r\n            dispatch(A.getReleaseForDashboard(releaseID))\r\n        }\r\n    }\r\n)\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    allReleases: state.dashboard.allReleases,\r\n    selectedReleaseID: state.dashboard.selectedReleaseID,\r\n    plannedVsUnplannedWork: state.dashboard.plannedVsUnplannedWork,\r\n    overallProgress: state.dashboard.overallProgress,\r\n    completedPendingProgress: state.dashboard.completedPendingProgress,\r\n    plannedVsReported: state.dashboard.plannedVsReported,\r\n    hoursData: state.dashboard.hoursData,\r\n    estimatedProgress: state.dashboard.estimatedProgress\r\n})\r\n\r\n\r\nconst DashboardSectionContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DashboardSection)\r\n\r\nexport default DashboardSectionContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/sections/DashboardSectionContainer.js","import {renderCheckBox} from \"./fields\"\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport React from 'react'\r\nimport * as SC from \"../../../server/serverconstants\";\r\n\r\n\r\nlet EstimationFilterForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting} = props;\r\n    const {estimation} = props;\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className=\"col-md-12\">\r\n            {estimation.loggedInUserRole == SC.ROLE_NEGOTIATOR &&\r\n            <div className=\"col-md-12 filterTextWithFlag\">\r\n                <div>\r\n                    <Field name=\"changedByNegotiator\" component={renderCheckBox} label={\"Suggested By You\"}/>\r\n                    <img key=\"negotiator_edit_flag\" src=\"/images/negotiator_edit_flag.png\"\r\n                         className=\"filterFlag\"\r\n                         title=\"Suggested by Negotiator\"/>\r\n                </div>\r\n                <div>\r\n                    <Field name=\"addedByNegotiator\" component={renderCheckBox}\r\n                           label={\"Added By You\"}\r\n                    />\r\n                    <img key=\"negotiator_new_flag\" src=\"/images/negotiator_new_flag.png\"\r\n                         className=\"filterFlag\"\r\n                         title=\"Added by Negotiator\"/>\r\n\r\n                </div>\r\n                <div>\r\n                    <Field name=\"changedByEstimator\" component={renderCheckBox}\r\n                           label={\"Changed By : \" + estimation.estimator.firstName + \" \" + estimation.estimator.lastName}\r\n                    />\r\n                    <img key=\"estimator_edit_flag\" src=\"/images/estimator_edit_flag.png\"\r\n                         className=\"filterFlag\"\r\n                         title=\"Changed by Estimator\"/>\r\n                </div>\r\n                <div>\r\n                    <Field name=\"addedByEstimator\" component={renderCheckBox}\r\n                           label={\"Added By: \" + estimation.estimator.firstName + \" \" + estimation.estimator.lastName}\r\n                    />\r\n                    <img key=\"estimator_new_flag\" src=\"/images/estimator_new_flag.png\"\r\n                         className=\"filterFlag\" title=\"Added by Estimator\"/>\r\n\r\n                </div>\r\n                <div>\r\n                    <Field name=\"permissionRequested\" component={renderCheckBox}\r\n                           label={\"Requested Permissions\"}\r\n                    />\r\n                    <img key=\"estimator_requested_permission_flag\" src=\"/images/request_flag.png\"\r\n                         className=\"filterFlag\"\r\n                         title=\"Requested by Estimator\"/>\r\n                </div>\r\n\r\n                <div>\r\n                    <Field name=\"addedFromRepository\" component={renderCheckBox}\r\n                           label={\"Added From Repository\"}\r\n                    />\r\n                    <img key=\"repo_flag\" src=\"/images/repo_flag.png\" className=\"filterFlag\"\r\n                         title=\"From Repository\"/>\r\n                </div>\r\n                <div>\r\n                    <Field name=\"hasError\" component={renderCheckBox}\r\n                           label={\"Error in Task/Feature\"}\r\n                    />\r\n                    <img key=\"exclamation\" src=\"/images/exclamation.png\"\r\n                         className=\"filterFlag\"\r\n                         title=\"hasError\"/>\r\n                </div>\r\n            </div>\r\n            }\r\n            {estimation.loggedInUserRole == SC.ROLE_ESTIMATOR &&\r\n            <div className=\"col-md-12 filterTextWithFlag\">\r\n\r\n                <div>\r\n                    <Field name=\"changedByEstimator\" component={renderCheckBox} label={\"Changed By You\"}/>\r\n                    <img key=\"estimator_edit_flag\" src=\"/images/estimator_edit_flag.png\"\r\n                         className=\"filterFlag\"\r\n                         title=\"Changed by Estimator\"/>\r\n                </div>\r\n                <div>\r\n                    <Field name=\"addedByEstimator\" component={renderCheckBox}\r\n                           label={\"Added By You\"}\r\n                    />\r\n                    <img key=\"estimator_new_flag\" src=\"/images/estimator_new_flag.png\"\r\n                         className=\"filterFlag\" title=\"Added by Estimator\"/>\r\n                </div>\r\n                <div>\r\n                    <Field name=\"permissionRequested\" component={renderCheckBox}\r\n                           label={\"Requested Permissions\"}\r\n                    />\r\n                    <img key=\"estimator_requested_permission_flag\" src=\"/images/request_flag.png\"\r\n                         className=\"filterFlag\"\r\n                         title=\"Requested by Estimator\"/>\r\n                </div>\r\n                <div>\r\n                    <Field name=\"changedByNegotiator\" component={renderCheckBox}\r\n                           label={\"Suggested By : \" + estimation.negotiator.firstName + \" \" + estimation.negotiator.lastName}\r\n                    />\r\n                    <img key=\"negotiator_edit_flag\" src=\"/images/negotiator_edit_flag.png\"\r\n                         className=\"filterFlag\"\r\n                         title=\"Suggested by Negotiator\"/>\r\n                </div>\r\n                <div>\r\n                    <Field name=\"addedByNegotiator\" component={renderCheckBox}\r\n                           label={\"Added By: \" + estimation.negotiator.firstName + \" \" + estimation.negotiator.lastName}\r\n                    />\r\n                    <img key=\"negotiator_new_flag\" src=\"/images/negotiator_new_flag.png\"\r\n                         className=\"filterFlag\"\r\n                         title=\"Added by Negotiator\"/>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                    <Field name=\"addedFromRepository\" component={renderCheckBox}\r\n                           label={\"Added From Repository\"}\r\n                    />\r\n                    <img key=\"repo_flag\" src=\"/images/repo_flag.png\" className=\"filterFlag\"\r\n                         title=\"From Repository\"/>\r\n                </div>\r\n                <div>\r\n                    <Field name=\"hasError\" component={renderCheckBox}\r\n                           label={\"Error in Task/Feature\"}\r\n                    />\r\n                    <img key=\"exclamation\" src=\"/images/exclamation.png\"\r\n                         className=\"filterFlag\"\r\n                         title=\"hasError\"/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            }\r\n\r\n            <div className={\"col-md-12 text-center\"}>\r\n\r\n                <button type=\"button\" className=\"btn secondaryBtn\"\r\n                        title={estimation.loggedInUserRole == SC.ROLE_ESTIMATOR ? 'Changed by ' + estimation.negotiator.firstName : 'Changed by ' + estimation.estimator.firstName}\r\n                        onClick={() => props.newChangedFilter(props.estimation.status)}><i\r\n                    className={\"fa fa-pencil\"}></i></button>\r\n                <button type=\"button\" className=\"btn secondaryBtn\" title={\"Select All Filters\"}\r\n                        onClick={() => props.selectAllFilter()}><i className={\"fa fa-list\"}></i></button>\r\n                <button type=\"button\" className=\"btn secondaryBtn\" title={\"Clear All Filters\"}\r\n                        onClick={() => props.clearFilter()}><i className={\"fa fa-cut\"}></i></button>\r\n            </div>\r\n\r\n            <div className={\"col-md-12 text-center\"} style={{marginTop: \"15px\"}}>\r\n\r\n                <button type=\"submit\" disabled={pristine || submitting} className=\"btn customBtn  FilterBtn \">\r\n                    Apply Filter\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    </form>\r\n}\r\n\r\nEstimationFilterForm = reduxForm({\r\n    form: 'Estimation-filter'\r\n})(EstimationFilterForm)\r\n\r\nexport default EstimationFilterForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/EstimationFilterForm.js","import * as AC from './actionConsts'\r\nimport * as A from '../actions'\r\nimport {updateSelectedEstimation} from \"./estimationAction\";\r\n\r\nexport const addReleases = (releases) => ({\r\n    type: AC.ADD_RELEASES,\r\n    releases: releases\r\n})\r\n\r\nexport const addRelease = (release) => ({\r\n    type: AC.ADD_RELEASE,\r\n    release: release\r\n})\r\n\r\n\r\nexport const addAvailableReleases = (releases) => ({\r\n    type: AC.ADD_AVAILABLE_RELEASES,\r\n    releases: releases\r\n})\r\n\r\nexport const addReleasePlans = (releasePlans) => ({\r\n    type: AC.ADD_RELEASE_PLANS,\r\n    releasePlans: releasePlans\r\n})\r\n\r\nexport const addReleaseTaskPlannings = (taskPlans) => ({\r\n    type: AC.ADD_RELEASE_TASK_PLANNINGS,\r\n    taskPlans: taskPlans\r\n})\r\n\r\nexport const addReleaseTaskPlanningToState = (taskPlan) => ({\r\n    type: AC.ADD_RELEASE_TASK_PLANNING_TO_STATE,\r\n    taskPlan: taskPlan\r\n})\r\n\r\nexport const updateTaskPlanning = (taskPlan) => ({\r\n    type: AC.UPDATE_TASK_PLANNING,\r\n    taskPlan: taskPlan\r\n})\r\n\r\nexport const updateTaskPlans = (taskPlans) => ({\r\n    type: AC.UPDATE_TASK_PLANS,\r\n    taskPlans: taskPlans\r\n})\r\n\r\nexport const releaseSelected = (release) => ({\r\n    type: AC.RELEASE_SELECTED,\r\n    release: release\r\n})\r\n\r\nexport const releaseTabSelected = (tab) => ({\r\n    type: AC.RELEASE_TAB_SELECTED,\r\n    tab: tab\r\n})\r\n\r\nexport const releasePlanSelected = (releasePlan) => ({\r\n    type: AC.RELEASE_PLAN_SELECTED,\r\n    releasePlan: releasePlan\r\n})\r\n\r\n\r\nexport const updateReleasePlan = (releasePlan) => ({\r\n    type: AC.UPDATE_RELEASE_PLAN,\r\n    releasePlan: releasePlan\r\n})\r\n\r\nexport const removeTaskPlanning = (planID) => ({\r\n    type: AC.DELETE_TASK_PLAN,\r\n    planID: planID\r\n})\r\n\r\nexport const addDeveloperFilteredData = (developerPlans) => ({\r\n    type: AC.ADD_DEVELOPER_FILTERED,\r\n    developerPlans: developerPlans\r\n})\r\n\r\nexport const updateDeveloperFilteredData = (developerPlanned) => ({\r\n    type: AC.UPDATE_DEVELOPER_FILTERED,\r\n    developerPlanned: developerPlanned\r\n})\r\n\r\nexport const setDevelopersSchedule = (schedules) => ({\r\n    type: AC.SET_DEVELOPERS_SCHEDULE,\r\n    schedules: schedules\r\n})\r\n\r\nexport const expandDescription = (flag) => ({\r\n    type: AC.EXPAND_DESCRIPTION,\r\n    flag: flag\r\n})\r\n\r\nexport const setEmployeeSettings = (empSetting) => ({\r\n    type: AC.SET_EMPLOYEE_SETTINGS,\r\n    empSetting: empSetting\r\n})\r\n\r\nexport const setFromDate = (date) => ({\r\n    type: AC.SET_FROM_DATE,\r\n    date: date\r\n})\r\nexport const addTaskPlannings = (taskPlannings) => ({\r\n    type: AC.ADD_TASK_PLANNINGS,\r\n    taskPlannings: taskPlannings\r\n})\r\nexport const updateReleaseDates = (releaseDates) => ({\r\n    type: AC.UPDATE_RELEASE_DATES,\r\n    releaseDates: releaseDates\r\n})\r\n\r\nexport const getAllReleasesFromServer = (status) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/releases/status/' + status, {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addReleases(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const getAllAvailableReleasesFromServer = () => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/releases/', {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addAvailableReleases(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\nexport const getAllReleasesToAddEstimationFromServer = (estimationID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/releases/estimation/' + estimationID, {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addAvailableReleases(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const getReleaseFromServer = (releaseID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/releases/release/' + releaseID, {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(releaseSelected(json.data))\r\n                }\r\n                return json\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const getAllTaskPlannedFromServer = (releasePlanID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/task-plans/release-plan/' + releasePlanID, {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addReleaseTaskPlannings(json.data))\r\n                    dispatch(addDeveloperFilteredData([]))\r\n                    dispatch(setDevelopersSchedule([]))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\nexport const getReleasePlansFromServer = (releaseID, status, empFlag) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/releases/' + releaseID + '/status/' + status + '/flag/' + empFlag + '/release-plans', {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addReleasePlans(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const getReleasePlanDetailsFromServer = (releasePlanID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/releases/' + releasePlanID + '/release-plan', {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(releasePlanSelected(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const getUpdatedReleasePlanFromServer = (releasePlanID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/releases/' + releasePlanID + '/release-plan', {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateReleasePlan(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const addTaskPlanningOnServer = (taskPlanning) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/task-plans', {\r\n                method: 'post',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(taskPlanning)\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addReleaseTaskPlanningToState(json.data.taskPlan))\r\n                    if (json.data && json.data.taskPlan.releasePlan && json.data.taskPlan.releasePlan._id) {\r\n                        dispatch(getUpdatedReleasePlanFromServer(json.data.taskPlan.releasePlan._id))\r\n                    }\r\n                    if (json.data && json.data.taskPlans && json.data.taskPlans.length > 0) {\r\n                        dispatch(updateTaskPlans(json.data && json.data.taskPlans))\r\n                        dispatch(getAllTaskPlannedFromServer(json.data.taskPlan.releasePlan._id))\r\n                    }\r\n\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const moveTaskPlanOnServer = (taskPlanning) => {\r\n    return (dispatch) => {\r\n        return fetch('/api/task-plans/' + taskPlanning._id + '/move', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(taskPlanning)\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateTaskPlanning(json.data.taskPlan))\r\n                    dispatch(updateDeveloperFilteredData(json.data.taskPlan))\r\n                    dispatch(getAllTaskPlannedFromServer(json.data.taskPlan.releasePlan._id))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteTaskPlanningFromServer = (taskPlanningID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/task-plans/' + taskPlanningID, {\r\n                method: 'delete',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    if (json.data && json.data.taskPlan && json.data.taskPlan._id) {\r\n                        dispatch(removeTaskPlanning(json.data.taskPlan._id))\r\n                    }\r\n                    if (json.data && json.data.taskPlan && json.data.taskPlan.releasePlan && json.data.taskPlan.releasePlan._id) {\r\n                        dispatch(getUpdatedReleasePlanFromServer(json.data.taskPlan.releasePlan._id))\r\n                    }\r\n                    if (json.data && json.data.taskPlans && json.data.taskPlans.length > 0) {\r\n                        dispatch(updateTaskPlans(json.data && json.data.taskPlans))\r\n                        dispatch(getAllTaskPlannedFromServer(json.data.taskPlan.releasePlan._id))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\nexport const reopenTaskPlanOnServer = (taskPlanningID) => {\r\n    return (dispatch) => {\r\n        return fetch('/api/task-plans/' + taskPlanningID + '/reopen', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(getAllTaskPlannedFromServer(json.data.taskPlan.releasePlan._id))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\nexport const getEmployeePlanDetailsForRelease = (employeeId, startDate, endDate, releaseID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/task-plans/employee/' + employeeId + '/fromDate/' + startDate + '/toDate/' + endDate + '/release/' + releaseID, {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addDeveloperFilteredData(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const shiftTasksToFutureOnServer = (shift) => {\r\n    return (dispatch, getState) => {\r\n        let state = getState()\r\n        return fetch('/api/releases/shift-future/', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(shift)\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(getAllTaskPlannedFromServer(state.release.selectedReleasePlan._id))\r\n                    dispatch(addDeveloperFilteredData([]))\r\n                    dispatch(setDevelopersSchedule([]))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const shiftTasksToPastOnServer = (shift) => {\r\n    return (dispatch, getState) => {\r\n        let state = getState()\r\n        return fetch('/api/releases/shift-past/', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(shift)\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(getAllTaskPlannedFromServer(state.release.selectedReleasePlan._id))\r\n                    dispatch(addDeveloperFilteredData([]))\r\n                    dispatch(setDevelopersSchedule([]))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const getDeveloperSchedulesFromServer = (employeeID, from) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/employees/' + employeeID + '/from/' + from + '/employee-schedule', {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(setFromDate(from))\r\n                    dispatch(setDevelopersSchedule(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const getReleaseDevelopersFromServer = (releasePlanID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/releases/release-plan/' + releasePlanID + '/role/developers', {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(A.addDevelopersToState(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\nexport const getAllTaskPlansOfThisReleaseFromServer = (releaseID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/task-plans/release/' + releaseID, {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n\r\n                    dispatch(addTaskPlannings(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const changeReleaseDateOfIteration = (iterationData) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/releases/release-date', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(iterationData)\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateReleaseDates(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\nexport const releasePlanPlannedAddToReleaseOnServer = (formInput) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/releases/add-planned-task ',\r\n            {\r\n                method: \"post\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(updateReleasePlan(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const releasePlanUnplannedAddToReleaseOnServer = (formInput) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/releases/add-unplanned-task ',\r\n            {\r\n                method: \"post\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(updateReleasePlan(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const createReleaseOnServer = (formInput) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/releases', {\r\n                method: 'post',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addRelease(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/actions/releaseAction.js","import {initialize} from 'redux-form'\r\nimport * as AC from \"./actionConsts\"\r\n\r\n\r\nexport const addLoginUser = (user) => ({\r\n    type: AC.ADD_LOGIN_USER,\r\n    user: user\r\n})\r\n\r\nexport const loginFailed = (error) => ({\r\n    type: AC.LOGIN_FAILED,\r\n    error: error\r\n})\r\n\r\nexport const addAllUsers = (users) => ({\r\n    type: AC.ADD_USERS,\r\n    users: users\r\n})\r\n\r\nexport const addUsersWithRoleCategory = (users) => ({\r\n    type: AC.ADD_USERS_WITH_ROLE_CATEGORY,\r\n    users: users\r\n})\r\n\r\nexport const addUsersWithRoleDeveloper = (developers) => ({\r\n    type: AC.ADD_USERS_WITH_ROLE_DEVELOPER,\r\n    developers: developers\r\n})\r\n\r\nexport const addDevelopersToState = (developers) => ({\r\n    type: AC.ADD_DEVELOPERS_TO_STATE,\r\n    developers: developers\r\n})\r\n\r\nexport const addUser = (user) => ({\r\n    type: AC.ADD_USER,\r\n    user: user\r\n})\r\n\r\nexport const editUser = (user) => ({\r\n    type: AC.EDIT_USER,\r\n    user: user\r\n})\r\n\r\nexport const deleteUser = (userID) => ({\r\n    type: AC.DELETE_USER,\r\n    userID: userID\r\n})\r\n\r\nexport const updateUserProfileState = (user) => ({\r\n    type: AC.UPDATE_USER_PROFILE_STATE,\r\n    user: user\r\n})\r\n\r\nexport const addUserOnServer = (formInput) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/users',\r\n            {\r\n                method: \"post\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(addUser(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const getAllUsersFromServer = () => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/users',\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(addAllUsers(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const getUsersWithRoleCategoryFromServer = () => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/users/role-category',\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(addUsersWithRoleCategory(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const getUsersWithRoleDeveloperFromServer = () => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/users/role-developer',\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(addUsersWithRoleDeveloper(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const getAllDeveloperFromServer = () => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/users/role-developer',\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(addDevelopersToState(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\n//update user\r\nexport const editUserOnServer = (user) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/users',\r\n            {\r\n                method: \"put\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(user)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(editUser(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\n//delete user\r\n\r\nexport const deleteUserOnServer = (userId) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/users/' + userId,\r\n            {\r\n                method: \"delete\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(deleteUser(userId))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const loginUserOnServer = (formInput) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/login',\r\n            {\r\n                method: \"post\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(addLoginUser(json.data))\r\n                } else {\r\n                    dispatch(loginFailed(json.message))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const showUserInfo = () => {\r\n    return function (dispatch, getState) {\r\n        dispatch(initialize('user-profile', getState().user.loggedIn))\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserSettingsOnServer = (user) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/users',\r\n            {\r\n                method: \"put\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(user)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(updateUserProfileState(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/actions/userAction.js","import * as AC from './actionConsts'\r\n\r\n\r\nexport const addEstimations = (estimations) => ({\r\n    type: AC.ADD_ESTIMATIONS,\r\n    estimations: estimations\r\n})\r\n\r\nexport const addEstimation = (estimation) => ({\r\n    type: AC.ADD_ESTIMATION,\r\n    estimation: estimation\r\n})\r\n\r\nexport const editEstimation = (estimation) => ({\r\n    type: AC.EDIT_ESTIMATION,\r\n    estimation: estimation\r\n})\r\n\r\nexport const taskEditRequest = (task) => ({\r\n    type: AC.REQUEST_FOR_TASK_EDIT_PERMISSION,\r\n    task: task\r\n})\r\n\r\nexport const deleteEstimationTask = (task) => ({\r\n    type: AC.DELETE_ESTIMATION_TASK,\r\n    task: task\r\n})\r\n\r\nexport const selectEstimation = (estimation) => ({\r\n    type: AC.SELECT_ESTIMATION,\r\n    estimation: estimation\r\n})\r\n\r\nexport const updateSelectedEstimation = (estimation) => ({\r\n    type: AC.UPDATE_SELECTED_ESTIMATION,\r\n    estimation: estimation\r\n})\r\n\r\nexport const addEstimationTask = (task) => ({\r\n    type: AC.ADD_ESTIMATION_TASK,\r\n    task: task\r\n})\r\n\r\nexport const updateEstimationTask = (task) => ({\r\n    type: AC.UPDATE_ESTIMATION_TASK,\r\n    task: task\r\n})\r\n\r\nexport const addEstimationFeature = (feature) => ({\r\n    type: AC.ADD_ESTIMATION_FEATURE,\r\n    feature: feature\r\n})\r\n\r\nexport const updateEstimationFeature = (feature) => ({\r\n    type: AC.UPDATE_ESTIMATION_FEATURE,\r\n    feature: feature\r\n})\r\n\r\nexport const estimationTaskDelete = (taskID) => ({\r\n    type: AC.ESTIMATION_TASK_DELETE,\r\n    taskID: taskID\r\n})\r\n\r\nexport const moveTaskInFeature = (task) => ({\r\n    type: AC.MOVE_TASK_IN_FEATURE,\r\n    task: task\r\n})\r\n\r\nexport const moveTaskOutOfFeature = (task, featureID) => ({\r\n    type: AC.MOVE_TASK_OUTOF_FEATURE,\r\n    task: task,\r\n    featureID: featureID\r\n})\r\n\r\nexport const deleteEstimationFeature = (feature) => ({\r\n    type: AC.DELETE_ESTIMATION_FEATURE,\r\n    feature: feature\r\n})\r\n\r\nexport const expandFeature = (featureID) => ({\r\n    type: AC.EXPAND_FEATURE,\r\n    featureID: featureID\r\n})\r\n\r\nexport const expandTask = (taskID) => ({\r\n    type: AC.EXPAND_TASK,\r\n    taskID: taskID\r\n})\r\n\r\nexport const expandTaskAndFeature = (featureID, taskID) => ({\r\n    type: AC.EXPAND_TASK_AND_FEATURE,\r\n    taskID: taskID,\r\n    featureID: featureID\r\n})\r\n\r\nexport const addFilteredEstimation = (filter) => ({\r\n    type: AC.ADD_FILTERED_ESTIMATIONS,\r\n    filter: filter\r\n})\r\n\r\nexport const selectAllFilterFromEstimation = () => ({\r\n    type: AC.SELECT_ALL_FILTER_FROM_ESTIMATION\r\n})\r\n\r\nexport const clearFilterFromEstimation = () => ({\r\n    type: AC.CLEAR_FILTER_FROM_ESTIMATION\r\n})\r\n\r\nexport const deleteEstimation = (estimationID) => ({\r\n    type: AC.DELETE_ESTIMATION,\r\n    estimationID: estimationID\r\n})\r\n\r\n\r\nexport const getAllEstimationsFromServer = (projectID, status) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/project/' + projectID + '/status/' + status, {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addEstimations(json.data))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const initiateEstimationOnServer = (estimation) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/initiate', {\r\n                method: 'post',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(estimation)\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addEstimation(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const updateEstimationOnServer = (estimation) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/update', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(estimation)\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(editEstimation(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteEstimationOnServer = (estimationID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/' + estimationID + \"/delete\", {\r\n                method: 'delete',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(deleteEstimation(estimationID))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const requestEstimationOnServer = (estimationID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/' + estimationID + \"/request\", {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({})\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(editEstimation(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const requestReviewOnServer = (estimationID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/' + estimationID + \"/review-request\", {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({})\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(getEstimationFromServer(estimationID))\r\n\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const checkHasErrorInEstimationOnServer = (estimationID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/' + estimationID + \"/hasError\", {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({})\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(editEstimation(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const requestChangeOnServer = (estimationID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/' + estimationID + \"/change-request\", {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({})\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    //dispatch(editEstimation(json.data))\r\n                    // During change request,  flags of tasks/feature may also change so select this estimation again to get latest data\r\n                    dispatch(getEstimationFromServer(estimationID))\r\n\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const requestForTaskEditPermissionOnServer = (taskID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/tasks/' + taskID + '/request-edit', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    // As json.data would contain complete updated task just fire update redux action\r\n                    dispatch(updateEstimationTask(json.data))\r\n                    if (json.data && json.data.feature && json.data.feature._id) {\r\n                        dispatch(getFeatureFromServer(json.data.feature._id))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const requestForFeatureEditPermissionOnServer = (featureID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/features/' + featureID + '/request-edit', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    // As json.data would contain complete updated feature just fire update redux action\r\n                    dispatch(updateEstimationFeature(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteEstimationTaskOnServer = (estimationID, taskID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/' + estimationID + '/tasks/' + taskID, {\r\n                method: 'delete',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(deleteEstimationTask(json.data))\r\n                    if (json.data && json.data.estimation && json.data.estimation._id) {\r\n                        dispatch(getOnlyEstimationFromServer(json.data.estimation._id))\r\n                    }\r\n                    if (json.data && json.data.feature && json.data.feature._id) {\r\n                        dispatch(getFeatureFromServer(json.data.feature._id))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const requestForTaskDeletePermissionOnServer = (taskID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/tasks/' + taskID + '/request-removal', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateEstimationTask(json.data))\r\n                    if (json.data && json.data.feature && json.data.feature._id) {\r\n                        dispatch(canNotApproveFeatureOnServer(json.data.feature._id, false))\r\n                    }\r\n                    if (json.data && json.data.estimation && json.data.estimation._id) {\r\n                        dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, false))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const addTaskToEstimationOnServer = (task) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/tasks', {\r\n                method: 'post',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(task)\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addEstimationTask(json.data))\r\n                    if (json.data && json.data.isEstimationCanApprove && json.data.estimation && json.data.estimation._id) {\r\n                        dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, false))\r\n                    } else if (json.data && json.data.estimation && json.data.estimation._id) {\r\n                        dispatch(getOnlyEstimationFromServer(json.data.estimation._id))\r\n                    }\r\n\r\n                    if (json.data && json.data.isFeatureCanApprove && json.data.feature && json.data.feature._id) {\r\n                        dispatch(canNotApproveFeatureOnServer(json.data.feature._id, false))\r\n                    } else if (json.data && json.data.feature && json.data.feature._id) {\r\n                        dispatch(getFeatureFromServer(json.data.feature._id))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const addTaskFromRepositoryToEstimationOnServer = (estimationID, taskID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/tasks/estimation/' + estimationID + '/repository-task/' + taskID, {\r\n                method: 'post',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addEstimationTask(json.data))\r\n                    if (json.data && json.data.estimation && json.data.estimation._id && json.data.isEstimationCanApprove) {\r\n                        dispatch(canNotApproveEstimationOnServer(json.data.estimation._id))\r\n                    } else if (json.data && json.data.estimation && json.data.estimation._id) {\r\n                        dispatch(getOnlyEstimationFromServer(json.data.estimation._id))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const copyTaskFromRepositoryToEstimationOnServer = (estimationID, taskID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/tasks/estimation/' + estimationID + '/repository-task-copy/' + taskID, {\r\n                method: 'post',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addEstimationTask(json.data))\r\n                    if (json.data && json.data.estimation && json.data.estimation._id && json.data.isEstimationCanApprove) {\r\n                        dispatch(canNotApproveEstimationOnServer(json.data.estimation._id))\r\n                    } else if (json.data && json.data.estimation && json.data.estimation._id) {\r\n                        dispatch(getOnlyEstimationFromServer(json.data.estimation._id))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const addFeatureFromRepositoryToEstimationOnServer = (estimationID, featureID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/features/estimation/' + estimationID + '/repository-feature/' + featureID, {\r\n                method: 'post',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addEstimationFeature(json.data))\r\n                    if (json.data && json.data.estimation && json.data.estimation._id && json.data.isEstimationCanApprove) {\r\n                        dispatch(canNotApproveEstimationOnServer(json.data.estimation._id))\r\n                    } else if (json.data && json.data.estimation && json.data.estimation._id) {\r\n                        dispatch(getOnlyEstimationFromServer(json.data.estimation._id))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const copyFeatureFromRepositoryToEstimationOnServer = (estimationID, featureID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/features/estimation/' + estimationID + '/repository-feature-copy/' + featureID, {\r\n                method: 'post',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addEstimationFeature(json.data))\r\n                    if (json.data && json.data.estimation && json.data.estimation._id && json.data.isEstimationCanApprove) {\r\n                        dispatch(canNotApproveEstimationOnServer(json.data.estimation._id))\r\n                    } else if (json.data && json.data.estimation && json.data.estimation._id) {\r\n                        dispatch(getOnlyEstimationFromServer(json.data.estimation._id))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const updateTaskToEstimationOnServer = (task) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/tasks', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(task)\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateEstimationTask(json.data))\r\n                    if (json.data && json.data.isEstimationCanApprove && json.data.estimation && json.data.estimation._id) {\r\n                        dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, false))\r\n                    } else if (json.data && json.data.estimation && json.data.estimation._id) {\r\n                        dispatch(getOnlyEstimationFromServer(json.data.estimation._id))\r\n                    }\r\n                    if (json.data && json.data.isFeatureCanApprove && json.data.feature && json.data.feature._id) {\r\n                        dispatch(canNotApproveFeatureOnServer(json.data.feature._id, false))\r\n                    } else if (json.data && json.data.feature && json.data.feature._id) {\r\n                        dispatch(getFeatureFromServer(json.data.feature._id))\r\n\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const addFeatureToEstimationOnServer = (feature) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/features', {\r\n                method: 'post',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(feature)\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addEstimationFeature(json.data))\r\n                    if (json.data && json.data.isEstimationCanApprove && json.data.estimation && json.data.estimation._id) {\r\n                        dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, false))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const updateFeatureToEstimationOnServer = (feature) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/features', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(feature)\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateEstimationFeature(json.data))\r\n                    if (json.data && json.data.isEstimationCanApprove && json.data.estimation && json.data.estimation._id) {\r\n                        dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, false))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const getEstimationFromServer = (estimationID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/' + estimationID, {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(selectEstimation(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const getOnlyEstimationFromServer = (estimationID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/' + estimationID + '/only', {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateSelectedEstimation(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const getFeatureFromServer = (featureID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/feature/' + featureID, {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateEstimationFeature(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const moveTaskIntoFeatureOnServer = (taskID, featureID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/tasks/' + taskID + '/features/' + featureID, {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(moveTaskInFeature(json.data))\r\n                    if (json.data && json.data.feature && json.data.feature._id) {\r\n                        dispatch(getFeatureFromServer(json.data.feature._id))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const moveTaskOutOfFeatureOnServer = (task) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/tasks/' + task._id + '/move-out-of-feature', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    if (task && task.feature && task.feature._id) {\r\n                        dispatch(getFeatureFromServer(task.feature._id))\r\n                        dispatch(moveTaskOutOfFeature(json.data, task.feature._id))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const grantEditPermissionOfTaskOnServer = (taskID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/tasks/' + taskID + '/grant-edit', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateEstimationTask(json.data))\r\n                    if (json.data && json.data.feature && json.data.feature._id) {\r\n                        dispatch(canNotApproveFeatureOnServer(json.data.feature._id, true))\r\n                    }\r\n                    if (json.data && json.data.estimation && json.data.isEstimationCanApprove && json.data.estimation._id) {\r\n                        dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, true))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const grantEditPermissionOfFeatureOnServer = (featureId) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/features/' + featureId + '/grant-edit', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateEstimationFeature(json.data))\r\n                    if (json.data && json.data.isEstimationCanApprove && json.data.estimation && json.data.estimation._id) {\r\n                        dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, true))\r\n                    }\r\n                }\r\n\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteFeatureByEstimatorOnServer = (estimationID, featureID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/' + estimationID + '/feature/' + featureID, {\r\n                method: 'delete',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(deleteEstimationFeature(json.data))\r\n                    if (json.data && json.data.estimation && json.data.estimation._id) {\r\n                        dispatch(getOnlyEstimationFromServer(json.data.estimation._id))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\nexport const requestForFeatureDeletePermissionOnServer = (featureID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/features/' + featureID + '/request-removal', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateEstimationFeature(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const approveTaskByNegotiatorOnServer = (taskID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/tasks/' + taskID + '/approve', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    if (json.data && json.data.feature && json.data.feature._id) {\r\n                        dispatch(canApproveFeatureOnServer(json.data.feature._id)).then(json => {\r\n                            if (json.success) {\r\n                            }\r\n                            else {\r\n                                dispatch(getFeatureFromServer(json.data.feature._id))\r\n                            }\r\n                            return json\r\n                        })\r\n                    }\r\n                    if (json.data && json.data.estimation && json.data.estimation._id) {\r\n                        dispatch(canApproveEstimationOnServer(json.data.estimation._id)).then(responseJson => {\r\n                            if (responseJson.success) {\r\n                            }\r\n                            else {\r\n                                dispatch(getOnlyEstimationFromServer(json.data.estimation._id))\r\n                            }\r\n                            return responseJson\r\n                        })\r\n                    }\r\n                    dispatch(updateEstimationTask(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const approveFeatureByNegotiatorOnServer = (featureID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/features/' + featureID + '/approve', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateEstimationFeature(json.data))\r\n                    if (json.data && json.data.estimation && json.data.estimation._id) {\r\n                        dispatch(canApproveEstimationOnServer(json.data.estimation._id))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const approveEstimationOnServer = (estimationID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/' + estimationID + \"/approve\", {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({})\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    //dispatch(editEstimation(json.data))\r\n                    // During Approve,  flags of tasks/feature may also change so select this estimation again to get latest data\r\n                    dispatch(getOnlyEstimationFromServer(estimationID))\r\n\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const canApproveFeatureOnServer = (FeatureID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/feature/' + FeatureID + '/can-approve', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateEstimationFeature(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const canApproveEstimationOnServer = (estimationID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/' + estimationID + \"/can-approve\", {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({})\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(editEstimation(json.data))\r\n                    // During Approve,  flags of tasks/feature may also change so select this estimation again to get latest data\r\n                    //dispatch(getOnlyEstimationFromServer(estimationID))\r\n\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const canNotApproveFeatureOnServer = (FeatureID, grant) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/feature/' + FeatureID + '/can-not-approve/' + grant + '/is-granted', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateEstimationFeature(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const canNotApproveEstimationOnServer = (estimationID, grant) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/' + estimationID + '/can-not-approve/' + grant + '/is-granted', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({})\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(editEstimation(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const reOpenFeatureOnServer = (FeatureID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/feature/' + FeatureID + '/reOpen', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateEstimationFeature(json.data))\r\n                    if (json.data && json.data.estimation && json.data.isEstimationCanApprove && json.data.estimation._id) {\r\n                        dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, true))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const reOpenTaskOnServer = (TaskID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/task/' + TaskID + '/reOpen', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateEstimationTask(json.data))\r\n                    if (json.data && json.data.feature && json.data.isFeatureApproved && json.data.feature._id) {\r\n                        dispatch(getFeatureFromServer(json.data.feature._id))\r\n\r\n                    } else if (json.data && json.data.feature && json.data.isFeatureCanApprove && json.data.feature._id) {\r\n                        dispatch(canNotApproveFeatureOnServer(json.data.feature._id, true))\r\n\r\n                    }\r\n                    if (json.data && json.data.estimation && json.data.isEstimationCanApprove && json.data.estimation._id) {\r\n                        dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, true))\r\n                    }\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\nexport const reopenEstimationOnServer = (estimationID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/' + estimationID + \"/reopen\", {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({})\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(editEstimation(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const addCreateReleaseOnServer = (formInput) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/create-release', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateSelectedEstimation(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\nexport const addToReleaseOnServer = (formInput) => {\r\n    formInput.billedHours = parseInt(formInput.billedHours)\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/estimations/add-to-release', {\r\n                method: 'put',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateSelectedEstimation(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/actions/estimationAction.js","import {connect} from 'react-redux'\r\nimport {RoleList} from \"../../components\"\r\nimport * as A from \"../../actions\"\r\nimport * as COC from \"../../components/componentConsts\";\r\nimport {initialize} from 'redux-form'\r\nimport {deleteRole} from \"../../actions/roleAction\";\r\nimport {NotificationManager} from \"react-notifications\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    showRoleForm: () => dispatch(A.showComponentHideOthers(COC.ROLE_FORM)),\r\n    editRole: (role) => {\r\n        dispatch(initialize(\"role\", role))\r\n        dispatch(A.showComponentHideOthers(COC.ROLE_FORM))\r\n    },\r\n    deleteRole:(roleID) => {\r\n        dispatch(A.deleteRoleOnServer(roleID)).then(json => {\r\n            if (json.success) {\r\n                dispatch(deleteRole(json.data))\r\n                NotificationManager.success('Role Deleted Successfully')\r\n            } else {\r\n                NotificationManager.error('Role Not Deleted!')\r\n            }\r\n            return json\r\n        })\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loggedInUser: state.user.loggedIn,\r\n        roles: state.role.all,\r\n        permissions:state.permission.all\r\n    }\r\n}\r\n\r\nconst RoleListContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(RoleList)\r\n\r\nexport default RoleListContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/RoleListContainer.js","import {connect} from 'react-redux'\r\nimport {RepositorySearch} from '../../components'\r\nimport * as COC from '../../components/componentConsts'\r\nimport * as A from '../../actions'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    showFeatureDetailPage: (feature) => {\r\n        dispatch(A.selectFeatureFromRepository(feature))\r\n        dispatch(A.showComponent(COC.REPOSITORY_FEATURE_DETAIL_DIALOG))\r\n    },\r\n\r\n    showTaskDetailPage: (task) => {\r\n        dispatch(A.selectTaskFromRepository(task))\r\n        dispatch(A.showComponent(COC.REPOSITORY_TASK_DETAIL_DIALOG))\r\n    },\r\n    getAllRepositoryData: (technologies) => dispatch(A.getRepositoryFromServer(technologies, SC.ALL)),\r\n    fetchRepositoryBasedOnDiffCriteria: (tags, type, searchText) => {\r\n        let technologies = [];\r\n        tags.map((f, i) => {\r\n            technologies.push(f.text)\r\n        })\r\n        dispatch(A.getRepositoryFromServer(technologies, type, searchText))\r\n    },\r\n\r\n})\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    repository: state.repository.all,\r\n    estimation: state.estimation.selected\r\n})\r\n\r\nconst RepositorySearchContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(RepositorySearch)\r\n\r\nexport default RepositorySearchContainer\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/RepositorySearchContainer.js","import React from 'react'\r\nimport {Timeline, TimelineEvent} from 'react-event-timeline'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {ReportingCommentFormContainer} from '../../containers'\r\nimport moment from 'moment'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport momentTZ from \"moment-timezone\";\r\n\r\nclass ReportingTaskDetailPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.commentListPageOptions = {\r\n            sizePerPageList: [{\r\n                text: '4', value: 4\r\n            }],\r\n            sizePerPage: 4,  // which size per page you want to locate as default\r\n        }\r\n\r\n        this.taskListPageOptions = {\r\n            sizePerPageList: [{\r\n                text: '4', value: 4\r\n            }],\r\n            sizePerPage: 4,  // which size per page you want to locate as default\r\n        }\r\n    }\r\n\r\n    assignedTasksRowClass(row) {\r\n        return row._id.toString() == this.props.taskPlan._id.toString() ? 'td-row-completed' : 'td-row-unreported'\r\n    }\r\n\r\n    formatCommentDate(date) {\r\n        return momentTZ(date).tz(SC.INDIAN_TIMEZONE).format('DD MMM,YY (hh:mm a)')\r\n    }\r\n\r\n\r\n    formatPlanDate(date) {\r\n        return momentTZ(date).utc().format('DD MMM,YY')\r\n    }\r\n\r\n    formatPlannedHours(planning) {\r\n        if (planning && planning.plannedHours)\r\n            return planning.plannedHours\r\n        return ''\r\n    }\r\n\r\n    formatReportedHours(report) {\r\n        if (report && report.reportedHours)\r\n            return report.reportedHours\r\n        return ''\r\n    }\r\n\r\n    formatReportStatus(report) {\r\n\r\n        if (report && report.status)\r\n            return report.status\r\n        return SC.STATUS_UNREPORTED\r\n    }\r\n\r\n    render() {\r\n        const {taskPlan, release, releasePlan, taskPlans} = this.props\r\n\r\n        return (\r\n            <Timeline>\r\n                <span>\r\n                    <button className=\"btn-link calArrow\" style={{marginLeft: '-3%'}}\r\n                            onClick={() => {\r\n                                this.props.history.push('/app-home/reporting')\r\n                                this.props.ReportingGoBack()\r\n                            }}>\r\n                        <i className=\"glyphicon glyphicon-arrow-left\"></i></button>\r\n                </span>\r\n\r\n                <TimelineEvent title={'Task Name :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    {taskPlan && taskPlan.task && taskPlan.task.name ? taskPlan.task.name : ''}\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent title={'Work Assigned to You for this Task:'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    <div className=\"DeveloperTasksTable\">\r\n                        <BootstrapTable\r\n                            data={taskPlans}\r\n                            striped={true}\r\n                            hover={true}\r\n                            options={this.taskListPageOptions}\r\n                            pagination\r\n                            trClassName={this.assignedTasksRowClass.bind(this)}\r\n                            height={\"202px\"}>\r\n                            <TableHeaderColumn columnTitle isKey dataField='_id' hidden={true}>\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn width={\"15%\"} columnTitle dataField='planningDate'\r\n                                               dataFormat={this.formatPlanDate.bind(this)}>Planned Date\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn width={\"45%\"} columnTitle dataField='description'>Tasks\r\n                                Description\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn width={\"15%\"} columnTitle dataField='planning'\r\n                                               dataFormat={this.formatPlannedHours.bind(this)}>Planned Hours\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn width={\"15%\"} columnTitle dataField='report'\r\n                                               dataFormat={this.formatReportedHours.bind(this)}>Reported Hours\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn width={\"15%\"} columnTitle dataField='report'\r\n                                               dataFormat={this.formatReportStatus.bind(this)}>Reported Status\r\n                            </TableHeaderColumn>\r\n                        </BootstrapTable>\r\n\r\n\r\n                    </div>\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent title={'Comments :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    <ReportingCommentFormContainer/>\r\n                    {\r\n                        <div className=\"ReportingCommentTable\">\r\n                            <BootstrapTable\r\n                                data={releasePlan.comments && releasePlan.comments.length ? releasePlan.comments : []}\r\n                                striped={true}\r\n                                hover={true}\r\n                                options={this.commentListPageOptions}\r\n                                pagination\r\n                                height={\"300px\"}>\r\n                                <TableHeaderColumn columnTitle isKey dataField='_id' hidden={true}>\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn width=\"12%\" columnTitle dataField=\"date\"\r\n                                                   dataFormat={this.formatCommentDate.bind(this)}>\r\n                                    Date/Time\r\n                                </TableHeaderColumn>\r\n\r\n                                <TableHeaderColumn width=\"40%\" columnTitle dataField='comment'\r\n                                >Comment\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn width=\"10%\" columnTitle dataField=\"commentType\"\r\n                                                   dataSort={true}>\r\n                                    Comment Type</TableHeaderColumn>\r\n                                <TableHeaderColumn width=\"10%\" columnTitle dataField=\"name\">\r\n                                    Commented By</TableHeaderColumn>\r\n                            </BootstrapTable>\r\n                        </div>\r\n\r\n                    }\r\n\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent title={'Task Day Report Details :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    <p className=\"description\">  {taskPlan && taskPlan.report && taskPlan.report.description ? taskPlan.report.description : ''}</p>\r\n                </TimelineEvent>\r\n\r\n\r\n                <TimelineEvent title={'Task Day Requirement :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    <p className=\"description\">  {taskPlan && taskPlan.description ? taskPlan.description : ''}</p>\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent title={'Task Requirement:'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    <p className=\"description\">  {releasePlan && releasePlan.task && releasePlan.task.description ? releasePlan.task.description : ''}</p>\r\n                </TimelineEvent>\r\n\r\n\r\n                <TimelineEvent style={{fontSize: '20px'}}\r\n                               title={'Project Name :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}>\r\n\r\n                    {release && release.project && release.project.name ? release.project.name : ''}\r\n                </TimelineEvent>\r\n\r\n\r\n                < TimelineEvent style={{fontSize: '20px'}}\r\n                                title={'Project Description :'}\r\n                                icon={<i\r\n                                    className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}>\r\n                    <p className=\"description\">{releasePlan && releasePlan.estimationDescription ? releasePlan.estimationDescription : ''}</p>\r\n                </TimelineEvent>\r\n\r\n            </Timeline>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ReportingTaskDetailPage)\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/pages/ReportingTaskDetailPage.js","import {connect} from 'react-redux'\r\nimport {AttendenceSettingForm} from \"../../components\"\r\nimport * as logger from '../../clientLogger'\r\nimport {initialize} from \"redux-form\"\r\nimport {NotificationManager} from \"react-notifications\"\r\nimport * as A from \"../../actions\"\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n\r\n        logger.debug(logger.ATTENDENCE_SETTING_FORM_RENDER, \"onSubmit:values:\", values)\r\n        return dispatch(A.addAttendanceSettingOnServer(values)).then(json => {\r\n            if (json.success) {\r\n                dispatch(initialize(\"attendance-setting\", json.data))\r\n                NotificationManager.success('Attendance Setting added Successfully')\r\n            } else {\r\n                NotificationManager.error('Attendance Setting  Not Added!')\r\n\r\n            }\r\n        })\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({})\r\n\r\nconst AttendanceSettingFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AttendenceSettingForm)\r\n\r\nexport default AttendanceSettingFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/AttendanceSettingFormContainer.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport Dialog from 'react-bootstrap-dialog'\r\n\r\nclass PermissionList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    editCellButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\"glyphicon glyphicon-pencil pull-left btn btn-custom\" type=\"button\"\r\n                        onClick={() => this.props.editPermission(row, rowIndex)}>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    deleteCellButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\"glyphicon glyphicon-trash pull-left btn btn-custom\" type=\"button\"\r\n                        onClick={() => {\r\n                            this.dialog.show({\r\n                                title: \"Delete User\",\r\n                                body: \"\",\r\n                                actions: [\r\n                                    Dialog.DefaultAction('Delete', () => {\r\n                                        this.props.deleteUser(row._id)\r\n                                    }, 'btn-custom'),\r\n                                    Dialog.DefaultAction('Close', () => {\r\n                                        this.dialog.hide()\r\n                                    }, 'btn-custom')\r\n                                ],\r\n                                bsSize: 'small',\r\n                                onHide: (dialog) => {\r\n                                    this.dialog.hide()\r\n                                }\r\n                            })\r\n                        }}>\r\n            </button>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <Dialog ref={(el) => {\r\n                        this.dialog = el\r\n                    }}/>\r\n\r\n                    {(this.props.loggedInUser.isSuperAdmin) ?\r\n                        <button className=\"btn btn-default btn-submit addBtn\"\r\n                                onClick={() => this.props.showPermissionForm()}>\r\n                            Add\r\n                            Permission</button> : <div style={{height: '10px'}}></div>}\r\n\r\n                    <BootstrapTable options={this.options} data={this.props.permissions}\r\n                                    striped={true}\r\n                                    hoveNr={true}>\r\n                        <TableHeaderColumn isKey dataField='_id' hidden={true}>ID</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='name'>Name</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"20%\" dataField='button' dataFormat={this.editCellButton.bind(this)}><i\r\n                            className=\"fa fa-pencil\"></i></TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"20%\" dataField='button'\r\n                                           dataFormat={this.deleteCellButton.bind(this)}><i className=\"fa fa-trash\"></i>\r\n                        </TableHeaderColumn>\r\n\r\n                    </BootstrapTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PermissionList\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/PermissionList.js","import {connect} from 'react-redux'\r\nimport {EstimationTaskForm} from \"../../components\"\r\nimport * as logger from '../../clientLogger'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        console.log(\"EstimationTaskFormContainer->onSubmit() \", values)\r\n        if (values._id) {\r\n            values.estimatedHours = Number(values.estimatedHours)\r\n            logger.debug(logger.ESTIMATION_TASK_FORM_SUBMIT, \"values:\", values)\r\n            dispatch(A.updateTaskToEstimationOnServer(values)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success(\"Task Updated\")\r\n                    // hide dialog\r\n                    dispatch(A.hideComponent(COC.ESTIMATION_TASK_DIALOG))\r\n                } else {\r\n                    NotificationManager.error(json.message)\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            values.estimatedHours = Number(values.estimatedHours)\r\n            logger.debug(logger.ESTIMATION_TASK_FORM_SUBMIT, \"values:\", values)\r\n            dispatch(A.addTaskToEstimationOnServer(values)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success(\"Task Added\")\r\n                    // hide dialog\r\n                    dispatch(A.hideComponent(COC.ESTIMATION_TASK_DIALOG))\r\n                } else {\r\n                    NotificationManager.error(json.message)\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let features = []\r\n    if (state.estimation && state.estimation.features && Array.isArray(state.estimation.features) && state.estimation.features.length) {\r\n        features = state.estimation.features.filter(f => f.status != SC.STATUS_APPROVED && (f.repo && f.repo.addedFromThisEstimation == true) || f.repo == undefined)\r\n    }\r\n    return {\r\n        estimation: state.estimation.selected,\r\n        features\r\n    }\r\n\r\n}\r\n\r\nconst EstimationTaskFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EstimationTaskForm)\r\n\r\nexport default EstimationTaskFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/EstimationTaskFormContainer.js","import * as AC from \"../actions/actionConsts\"\r\n\r\n\r\nlet initialState = {\r\n    all: [],\r\n}\r\n\r\nconst warningReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case AC.ADD_WARNINGS:\r\n            // add all warnings from server\r\n            return Object.assign({}, state, {\r\n                all: action.warnings\r\n            })\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default warningReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/warningReducer.js","import React, {Component} from 'react'\r\nimport {renderSelect, renderTextArea} from \"./fields\"\r\nimport {required} from \"./validation\"\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nclass ReportingCommentForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {handleSubmit, pristine, submitting} = this.props;\r\n        let options = [\r\n            {name: SC.TYPE_REPORT_COMMENT},\r\n            {name: SC.TYPE_INFORMATION},\r\n            {name: SC.TYPE_CLARIFICATION},\r\n            {name: SC.TYPE_WAITING},\r\n            {name: SC.TYPE_BLOCKING}]\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"col-md-12 pad reportingCommentForm\" style={{marginBottom: '10px'}}>\r\n\r\n                    <Field name=\"releasePlanID\" component=\"input\" className=\"form-control\" type=\"hidden\"></Field>\r\n                    <Field name=\"releaseID\" component=\"input\" className=\"form-control\" type=\"hidden\"></Field>\r\n                    <div className=\"col-md-7 commentInputPadding\">\r\n                        <Field name=\"comment\" label=\"Comment :\" component={renderTextArea} type=\"text\"\r\n                               placeholder=\"Enter comments or issues here\" validate={[required]}/>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                        <Field name=\"commentType\" label=\"Type :\" component={renderSelect} options={options}\r\n                               type=\"text\" displayField='name' valueField='name' validate={[required]}/>\r\n                    </div>\r\n                    <div className=\"col-md-2 reportingCommentBtn\">\r\n                        <button type=\"submit\" disabled={pristine || submitting} className=\"btn customBtn\">Comment\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nReportingCommentForm = reduxForm({\r\n    form: 'reporting-comment'\r\n})(ReportingCommentForm)\r\nexport default ReportingCommentForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/ReportingCommentForm.js","import {connect} from 'react-redux'\r\nimport {LeaveSettingForm} from \"../../components\"\r\nimport {addLeaveSettingOnServer, updateLeaveSettingOnServer} from \"../../actions\"\r\nimport {NotificationManager} from \"react-notifications\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        if (!values._id) {\r\n            // converted data into number format\r\n            values.casualLeaves = Number(values.casualLeaves)\r\n            values.paidLeaves = Number(values.paidLeaves)\r\n            values.maternityLeaves = Number(values.maternityLeaves)\r\n            values.paternityLeaves = Number(values.paternityLeaves)\r\n            values.specialLeaves = Number(values.specialLeaves)\r\n\r\n            // Leave Setting is created\r\n            return dispatch(addLeaveSettingOnServer(values)).then(response => {\r\n                if (response.success) {\r\n                    NotificationManager.success('Leave Setting Added Successfully')\r\n                } else {\r\n                    NotificationManager.error('Leave Setting Added Failed')\r\n                }\r\n            })\r\n        } else {\r\n\r\n            // converted data into number format\r\n            values.casualLeaves = Number(values.casualLeaves)\r\n            values.paidLeaves = Number(values.paidLeaves)\r\n            values.maternityLeaves = Number(values.maternityLeaves)\r\n            values.paternityLeaves = Number(values.paternityLeaves)\r\n            values.specialLeaves = Number(values.specialLeaves)\r\n\r\n            // Leave Setting is edited\r\n            return dispatch(updateLeaveSettingOnServer(values)).then(response => {\r\n                if (response.success) {\r\n                    NotificationManager.success('Leave Setting Updated Successfully')\r\n                } else {\r\n                    NotificationManager.error('Leave Setting Updated Failed')\r\n                }\r\n                return response\r\n            })\r\n        }\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({})\r\n\r\nconst LeaveSettingFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LeaveSettingForm)\r\n\r\nexport default LeaveSettingFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/LeaveSettingFormContainer.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {ModuleFormContainer} from \"../../containers\"\r\n\r\nconst ModuleFormDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Add Module</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <ModuleFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default ModuleFormDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/ModuleFormDialog.js","/*\r\nValidation Rules\r\n */\r\nexport const required = value => {\r\n    return (value ? undefined : 'This field is required')\r\n}\r\nexport const number = value => value && isNaN(Number(value)) ? 'Must be a number' : undefined\r\n\r\nexport const email = value =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\r\n        'Invalid email address' : undefined\r\n\r\nexport const url = value =>\r\n    value && !/^[A-Z0-9_-]{1,200}$/i.test(value) ?\r\n        'Invalid url address' : undefined\r\n\r\nconst minLength = min => value =>\r\n    value && value.length < min ? `Must be at least ${min} characters long` : undefined\r\n\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n\r\nconst hasLength = len => value =>\r\n    value && (value.length < len || value.length > len) ? `Must be exactly ${len} characters long` : undefined\r\n\r\nexport const passwordLength = minLength(6)\r\n\r\nexport const phoneNumber = value => hasLength(10)(value) ? hasLength(10)(value) : number(value)\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/validation.js","import {connect} from 'react-redux'\r\nimport {EstimationSuggestFeatureForm} from \"../../components\"\r\nimport * as logger from '../../clientLogger'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as SC from \"../../../server/serverconstants\"\r\nimport * as EC from \"../../../server/errorcodes\"\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        if (values._id) {\r\n            values.estimatedHours = Number(values.estimatedHours)\r\n            logger.debug(logger.ESTIMATION_SUGGEST_FEATURE_FORM_SUBMIT, \"values:\", values)\r\n            dispatch(A.updateFeatureToEstimationOnServer(values)).then(json => {\r\n                if (json.success) {\r\n                    if (values.loggedInUserRole == SC.ROLE_NEGOTIATOR)\r\n                        NotificationManager.success(\"Added feature suggestion\")\r\n                    else if (values.loggedInUserRole == SC.ROLE_ESTIMATOR)\r\n                        NotificationManager.success(\"Updated feature\")\r\n                    // hide dialog\r\n                    dispatch(A.hideComponent(COC.ESTIMATION_SUGGEST_FEATURE_FORM_DIALOG))\r\n                } else {\r\n                    if (values.loggedInUserRole == SC.ROLE_NEGOTIATOR)\r\n                        NotificationManager.error(\"Suggestions not saved\")\r\n                    else if (values.loggedInUserRole == SC.ROLE_ESTIMATOR)\r\n                        NotificationManager.error(\"Feature updates failed\")\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            values.estimatedHours = Number(values.estimatedHours)\r\n            logger.debug(logger.ESTIMATION_SUGGEST_FEATURE_FORM_SUBMIT, \"values:\", values)\r\n            dispatch(A.addFeatureToEstimationOnServer(values)).then(json => {\r\n                if (json.success) {\r\n                    if (values.loggedInUserRole == SC.ROLE_NEGOTIATOR)\r\n                        NotificationManager.success(\"Feature Suggested\")\r\n                    else if (values.loggedInUserRole == SC.ROLE_ESTIMATOR)\r\n                        NotificationManager.success(\"Feature Added\")\r\n                    // hide dialog\r\n                    dispatch(A.hideComponent(COC.ESTIMATION_SUGGEST_FEATURE_FORM_DIALOG))\r\n                } else {\r\n                    if (values.loggedInUserRole == SC.ROLE_NEGOTIATOR) {\r\n                        if (json.code == EC.ACCESS_DENIED) {\r\n                            throw new SubmissionError({name: \"You dont have permission \"})\r\n                            NotificationManager.error(\"Feature Suggestion Failed You dont have permission from Estimator\")\r\n                        }\r\n                        NotificationManager.error(\"Update Feature Suggestion Failed\")\r\n                    }\r\n\r\n                    else if (values.loggedInUserRole == SC.ROLE_ESTIMATOR) {\r\n                        if (json.code == EC.ACCESS_DENIED) {\r\n                            NotificationManager.error(\"Feature Suggestion Failed You dont have permission from Negotiator\")\r\n                        }\r\n                        NotificationManager.error(\"Feature Addition Failed\")\r\n                    }\r\n\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    estimation: state.estimation.selected\r\n})\r\n\r\nconst EstimationSuggestFeatureFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EstimationSuggestFeatureForm)\r\n\r\nexport default EstimationSuggestFeatureFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/EstimationSuggestFeatureFormContainer.js","export const ROLE_ADMIN = 'admin'\r\nexport const ROLE_SUPER_ADMIN = 'super_admin'\r\nexport const ROLE_APP_USER = 'app_user'\r\n\r\nexport const DEBUG_LEVEL = 'debug'\r\nexport const INFO_LEVEL = 'info'\r\nexport const WARNING_LEVEL = 'warning'\r\nexport const ERROR_LEVEL = 'error'\r\n\r\n\r\nexport const EDIT_PROFILE = 'Edit Profile'\r\nexport const MANAGE_PERMISSIONS = 'Manage Permissions'\r\nexport const MANAGE_ROLES = 'Manage Roles'\r\nexport const CREATE_USER = 'Create User'\r\nexport const EDIT_USER = 'Edit User'\r\nexport const DELETE_USER = 'Delete User'\r\nexport const LIST_USERS = 'List Users'\r\nexport const EDIT_ROLE_PERMISSIONS = 'Edit Role Permissions'\r\n\r\n\r\nexport const TYPE_DEVELOPMENT = 'development'\r\nexport const TYPE_TESTING = 'testing'\r\nexport const TYPE_REVIEW = 'review'\r\nexport const TYPE_MANAGEMENT = 'management'\r\nexport const TYPE_COMPANY = 'company'\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/clientconstants.js","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Tab from '../tabs/Tab'\r\nimport {Loader} from 'react-loaders'\r\nimport {Route} from 'react-router-dom'\r\nimport * as U from \"../../../server/utils\";\r\n\r\nimport {\r\n    ADMIN_PERMISSION_TAB,\r\n    ADMIN_ROLE_FORM,\r\n    ADMIN_ROLE_LIST,\r\n    PERMISSION_FORM,\r\n    PERMISSION_LIST,\r\n    PERMISSION_TAB,\r\n    ROLE_FORM,\r\n    ROLE_LIST,\r\n    ROLE_TAB,\r\n    USER_FORM,\r\n    USER_LIST,\r\n    USER_PROFILE_FORM,\r\n    USER_PROFILE_TAB,\r\n    USER_TAB,\r\n    EMPLOYEE_SETTING_TAB,\r\n    EMPLOYEE_SETTING_FORM,\r\n    LEAVE_SETTING_TAB,\r\n    HOLIDAY_TAB,\r\n    LEAVE_SETTING_FORM,\r\n    HOLIDAY_FORM,\r\n    HOLIDAY_LIST\r\n} from \"../componentConsts\"\r\n\r\nimport {\r\n    EDIT_PROFILE,\r\n    EDIT_ROLE_PERMISSIONS,\r\n    LIST_USERS,\r\n    MANAGE_PERMISSIONS,\r\n    MANAGE_ROLES,\r\n    CREATE_USER\r\n} from \"../../clientconstants\"\r\nimport {\r\n    AdminRoleFormContainer,\r\n    AdminRoleListContainer,\r\n    PermissionFormContainer,\r\n    PermissionListContainer,\r\n    RoleFormContainer,\r\n    RoleListContainer,\r\n    TabSectionContainer,\r\n    UserFormContainer,\r\n    UserListContainer,\r\n    UserProfileFormContainer,\r\n    EmployeeSettingFormContainer,\r\n    LeaveSettingFormContainer,\r\n    HolidayFormContainer,\r\n    HolidayListContainer\r\n\r\n} from \"../../containers\"\r\nimport * as A from \"../../actions\";\r\nimport * as logger from '../../clientLogger'\r\n\r\n\r\nclass Tabs extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        logger.debug(logger.TABS_LIFE_CYCLE, 'constructor()')\r\n        this.changeTab = this.changeTab.bind(this)\r\n        this.tabData = []\r\n\r\n        let permissions = this.props.loggedInUser.permissions\r\n\r\n\r\n        if (permissions.includes(EDIT_PROFILE)) {\r\n            this.tabData.push({\r\n                name: USER_PROFILE_TAB, url: \"/profile\",\r\n                render: (props) => {\r\n                    return <TabSectionContainer>\r\n                        <UserProfileFormContainer name={USER_PROFILE_FORM}/>\r\n                    </TabSectionContainer>\r\n                }\r\n            })\r\n        }\r\n\r\n        if (permissions.includes(MANAGE_PERMISSIONS)) {\r\n            this.tabData.push({\r\n                name: PERMISSION_TAB, url: \"/permission\",\r\n                render: (props) => {\r\n                    return <TabSectionContainer>\r\n                        <PermissionFormContainer name={PERMISSION_FORM}/>\r\n                        <PermissionListContainer name={PERMISSION_LIST}/>\r\n                    </TabSectionContainer>\r\n                }\r\n            })\r\n        }\r\n        if (permissions.includes(MANAGE_ROLES)) {\r\n            this.tabData.push({\r\n                name: ROLE_TAB, url: \"/role\",\r\n                render: (props) => {\r\n                    return <TabSectionContainer>\r\n                        <RoleFormContainer name={ROLE_FORM}/>\r\n                        <RoleListContainer name={ROLE_LIST}/>\r\n                    </TabSectionContainer>\r\n                }\r\n            })\r\n        }\r\n\r\n        /*\r\n        if (permissions.includes(LIST_USERS)) {\r\n            this.tabData.push({\r\n                name: ADMIN_USER_TAB, displayName: \"Users\", url: \"/admin-user\",\r\n                render: (props) => {\r\n                    return <TabSectionContainer>\r\n                        <AdminUserFormContainer name={ADMIN_USER_FORM}/>\r\n                        <AdminUserListContainer name={ADMIN_USER_LIST}/>\r\n                    </TabSectionContainer>\r\n                }\r\n            })\r\n        }\r\n        */\r\n\r\n        if (permissions.includes(LIST_USERS)) {\r\n            this.tabData.push({\r\n                name: USER_TAB, url: \"/users\",\r\n                render: (props) => {\r\n                    return <TabSectionContainer>\r\n                        <UserFormContainer name={USER_FORM}/>\r\n                        <UserListContainer name={USER_LIST}/>\r\n                    </TabSectionContainer>\r\n                }\r\n            })\r\n        }\r\n\r\n        if (permissions.includes(EDIT_ROLE_PERMISSIONS)) {\r\n            this.tabData.push({\r\n                name: ADMIN_PERMISSION_TAB,\r\n                url: \"/admin-permission\",\r\n                displayName: \"Permissions\",\r\n                render: (props) => {\r\n                    return <TabSectionContainer>\r\n                        <AdminRoleFormContainer name={ADMIN_ROLE_FORM}/>\r\n                        <AdminRoleListContainer name={ADMIN_ROLE_LIST}/>\r\n                    </TabSectionContainer>\r\n                }\r\n            })\r\n        }\r\n        if (permissions.includes(CREATE_USER)) {\r\n            this.tabData.push({\r\n                name: EMPLOYEE_SETTING_TAB,\r\n                url: \"/employee-setting\",\r\n                render: (props) => {\r\n                    return <TabSectionContainer>\r\n                        <EmployeeSettingFormContainer name={EMPLOYEE_SETTING_FORM}/>\r\n                    </TabSectionContainer>\r\n                }\r\n            })\r\n        }\r\n        if (permissions.includes(CREATE_USER)) {\r\n            this.tabData.push({\r\n                name: LEAVE_SETTING_TAB,\r\n                url: \"/leave-setting\",\r\n                render: (props) => {\r\n                    return <TabSectionContainer>\r\n                        <LeaveSettingFormContainer name={LEAVE_SETTING_FORM}/>\r\n                    </TabSectionContainer>\r\n                }\r\n            })\r\n        }\r\n        if (permissions.includes(LIST_USERS)) {\r\n            this.tabData.push({\r\n                name: HOLIDAY_TAB,\r\n                url: \"/holiday\",\r\n                render: (props) => {\r\n                    return <TabSectionContainer>\r\n                        <HolidayFormContainer name={HOLIDAY_FORM}/>\r\n                        <HolidayListContainer name={HOLIDAY_LIST}/>\r\n                    </TabSectionContainer>\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n        if (this.tabData.length > 0) {\r\n            this.state = {\r\n                activeTab: this.tabData[0]\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        logger.debug(logger.TABS_LIFE_CYCLE, 'componentDidMount()')\r\n        if (this.tabData && this.tabData.length > 0) {\r\n            this.changeTab(null, this.tabData[0])\r\n        }\r\n    }\r\n\r\n    changeTab(e, tab) {\r\n        logger.debug(logger.TABS_CHANGE_TAB, 'Tab [' + tab.name + '] clicked...')\r\n        const {store} = this.context;\r\n        switch (tab.name) {\r\n            case USER_PROFILE_TAB:\r\n                store.dispatch(A.showUserInfo())\r\n                store.dispatch(A.showComponentHideOthers(USER_PROFILE_FORM))\r\n                break;\r\n\r\n            case PERMISSION_TAB:\r\n                store.dispatch(A.getAllRolesFromServer())\r\n                store.dispatch(A.getAllPermissionsFromServer())\r\n                store.dispatch(A.showComponentHideOthers(PERMISSION_LIST))\r\n                break;\r\n\r\n            case ROLE_TAB:\r\n                store.dispatch(A.getAllRolesFromServer())\r\n                store.dispatch(A.showComponentHideOthers(ROLE_LIST))\r\n                break;\r\n\r\n            case USER_TAB:\r\n                store.dispatch(A.getAllRolesFromServer())\r\n                store.dispatch(A.getAllUsersFromServer())\r\n                store.dispatch(A.showComponentHideOthers(USER_LIST))\r\n                break;\r\n\r\n            case ADMIN_PERMISSION_TAB:\r\n                store.dispatch(A.getAllRolesFromServer())\r\n                store.dispatch(A.showComponentHideOthers(ADMIN_ROLE_LIST))\r\n                break\r\n\r\n            case EMPLOYEE_SETTING_TAB:\r\n                store.dispatch(A.getEmployeeSettingFromServer())\r\n                store.dispatch(A.showComponentHideOthers(EMPLOYEE_SETTING_FORM))\r\n                break;\r\n\r\n            case LEAVE_SETTING_TAB:\r\n                store.dispatch(A.getLeaveSettingFromServer())\r\n                store.dispatch(A.showComponentHideOthers(LEAVE_SETTING_FORM))\r\n                break;\r\n\r\n            case HOLIDAY_TAB:\r\n                store.dispatch(A.getAllHolidayYearsFromServer())\r\n                let currentYear = U.getCurrentYear()\r\n                store.dispatch(A.getAllHolidaysOfYearFromServer(currentYear))\r\n                store.dispatch(A.showComponentHideOthers(HOLIDAY_LIST))\r\n                break;\r\n        }\r\n        this.setState({\r\n            activeTab: tab\r\n        });\r\n    }\r\n\r\n    render() {\r\n        logger.debug(logger.TABS_RENDER, this.props)\r\n        return <div>\r\n            <Loader type=\"square-spin\" active={this.props.showLoader}/>\r\n            <ul className=\"nav nav-tabs\">\r\n                {this.tabData && this.tabData.length && this.tabData.map(function (tab, idx) {\r\n                    return (\r\n                        <Tab key={idx} data={tab} match={this.props.match} isActive={this.state.activeTab === tab}\r\n                             handleClick={(e) => this.changeTab(e, tab)} {...this.props}/>\r\n                    );\r\n                }.bind(this))}\r\n            </ul>\r\n            {this.tabData.length > 0 &&\r\n            <Route key={\"admin_idx_route\"} exact path={this.props.match.url} render={this.tabData[0].render}/>}\r\n            {\r\n                this.tabData && this.tabData.length && this.tabData.map(function (tab, idx) {\r\n                    return (\r\n                        <Route key={\"route\" + idx} path={this.props.match.url + tab.url} render={tab.render}/>\r\n                    );\r\n                }.bind(this))\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nTabs.contextTypes = {\r\n    store: PropTypes.object\r\n}\r\n\r\n\r\nexport default Tabs\n\n\n// WEBPACK FOOTER //\n// ./client/components/sections/Tabs.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {ProjectFormContainer} from \"../../containers\"\r\n\r\nconst ProjectFormDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Add Project</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <ProjectFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default ProjectFormDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/ProjectFormDialog.js","import {connect} from 'react-redux'\r\nimport {ReleaseDevelopersSchedules} from '../../components'\r\nimport * as A from '../../actions'\r\nimport {initialize} from 'redux-form'\r\nimport {TASK_SHIFT_DIALOG} from \"../../components/componentConsts\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    getEmployeeSettings: () => dispatch(A.getEmployeeSettingFromServer()),\r\n    dispatch,\r\n    showTaskShiftDialog:(day, month, year, employee) => {\r\n\r\n        dispatch(initialize('task-plan-shift', {\r\n            day,\r\n            month,\r\n            year,\r\n            employee\r\n        }))\r\n\r\n        dispatch(A.showComponent(TASK_SHIFT_DIALOG))\r\n\r\n    }\r\n})\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    schedules: state.release.schedules,\r\n    workCalendar: state.employee.workCalendar,\r\n    from: state.release.from,\r\n    employeeSetting: state.release.employeeSetting\r\n})\r\n\r\nconst ReleaseDevelopersSchedulesContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReleaseDevelopersSchedules)\r\n\r\nexport default ReleaseDevelopersSchedulesContainer\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/ReleaseDevelopersSchedulesContainer.js","import React, {Component} from 'react'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {\r\n    BarChart,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Bar,\r\n    LabelList,\r\n    PieChart,\r\n    Pie,\r\n    CartesianGrid,\r\n    ReferenceLine,\r\n    Label\r\n} from 'recharts'\r\nimport {NotificationManager} from \"react-notifications\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst addPercentage = (value) => {\r\n    if (value == 0)\r\n        return ''\r\n    return value + '%'\r\n}\r\n\r\nconst getHoursAngles = (estimatedHours, plannedHours, reportedHours) => {\r\n    let maxHours = Math.max(estimatedHours, plannedHours, reportedHours)\r\n    let estimatedStartAngle = 180, plannedStartAngle = 180, reportedStartAngle = 180\r\n    let estimatedEndAngle = 0, plannedEndAngle = 0, reportedEndAngle = 0;\r\n\r\n    if (maxHours == estimatedHours) {\r\n        // estimated hours are maximum\r\n        estimatedEndAngle = -180\r\n        plannedEndAngle = 180 - (plannedHours / maxHours) * 360\r\n        reportedEndAngle = 180 - (reportedHours * 360) / maxHours\r\n    } else if (maxHours == plannedHours) {\r\n        plannedEndAngle = -180\r\n        estimatedEndAngle = 180 - (estimatedHours * 360) / maxHours\r\n        reportedEndAngle = 180 - (reportedHours * 360) / maxHours\r\n    } else {\r\n        reportedEndAngle = -180\r\n        estimatedEndAngle = 180 - (estimatedHours * 360) / maxHours\r\n        plannedEndAngle = 180 - (plannedHours * 360) / maxHours\r\n    }\r\n\r\n    return {\r\n        estimatedStartAngle,\r\n        estimatedEndAngle,\r\n        plannedStartAngle,\r\n        plannedEndAngle,\r\n        reportedStartAngle,\r\n        reportedEndAngle\r\n    }\r\n}\r\n\r\nconst getProgressAngles = (actualProgress, plannedProgress, reportedProgress) => {\r\n\r\n    let maxProgress = Math.max(actualProgress, plannedProgress, reportedProgress)\r\n    if (maxProgress < 100)\r\n        maxProgress = 100\r\n\r\n    let actualProgressStartAngle = 180, plannedProgressStartAngle = 180, reportedProgressStartAngle = 180\r\n    let actualProgressEndAngle = 0, plannedProgressEndAngle = 0, reportedProgressEndAngle = 0;\r\n\r\n    if (maxProgress == actualProgress) {\r\n        // estimated hours are maximum\r\n        actualProgressEndAngle = -180\r\n        plannedProgressEndAngle = 180 - (plannedProgress / maxProgress) * 360\r\n        reportedProgressEndAngle = 180 - (plannedProgress * 360) / maxProgress\r\n    } else if (maxProgress == plannedProgress) {\r\n        plannedProgressEndAngle = -180\r\n        actualProgressEndAngle = 180 - (actualProgress * 360) / maxProgress\r\n        reportedProgressEndAngle = 180 - (reportedProgress * 360) / maxProgress\r\n    } else if (maxProgress == reportedProgress) {\r\n        reportedProgressEndAngle = -180\r\n        actualProgressEndAngle = 180 - (actualProgress * 360) / maxProgress\r\n        plannedProgressEndAngle = 180 - (plannedProgress * 360) / maxProgress\r\n    } else {\r\n        actualProgressEndAngle = 180 - (actualProgress * 360) / maxProgress\r\n        reportedProgressEndAngle = 180 - (reportedProgress * 360) / maxProgress\r\n        plannedProgressEndAngle = 180 - (plannedProgress * 360) / maxProgress\r\n    }\r\n\r\n    return {\r\n        actualProgressStartAngle,\r\n        actualProgressEndAngle,\r\n        plannedProgressStartAngle,\r\n        plannedProgressEndAngle,\r\n        reportedProgressStartAngle,\r\n        reportedProgressEndAngle\r\n    }\r\n}\r\n\r\nconst renderPieCenter = ({cx, cy, value}) => {\r\n    return (\r\n        <text x={cx} y={cy} fill=\"#4172c1\" fontSize={\"20\"} fontWeight={\"bold\"} textAnchor={'middle'}\r\n              dominantBaseline=\"middle\">\r\n            {`${value}`}\r\n        </text>\r\n    );\r\n};\r\n\r\nconst renderPercentagePieCenter = ({cx, cy, value}) => {\r\n    return (\r\n        <text x={cx} y={cy} fill=\"#4172c1\" fontSize={\"20\"} fontWeight={\"bold\"} textAnchor={'middle'}\r\n              dominantBaseline=\"middle\">\r\n            {`${value}%`}\r\n        </text>\r\n    );\r\n};\r\n\r\nconst renderPercentage = ({cx, cy, value}) => {\r\n    return value + '%'\r\n};\r\n\r\n\r\nclass DashboardSection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            monthMoment: moment()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"ReleaseDashboardSection:componentDidMount()\")\r\n        this.props.getDashboardData(this.props.release)\r\n    }\r\n\r\n    onReleaseSelect(releaseID) {\r\n        this.props.setReleaseID(releaseID)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let dashboardWidth = window.innerWidth * 0.8 // as content section has 80% width\r\n        let barMargin = {top: 20, right: 40, left: 40, bottom: 20}\r\n        let barWidth = (dashboardWidth - 90) / 2\r\n        const {estimatedStartAngle, estimatedEndAngle, plannedStartAngle, plannedEndAngle, reportedStartAngle, reportedEndAngle} = getHoursAngles(this.props.hoursData.estimatedHours, this.props.hoursData.plannedHours, this.props.hoursData.reportedHours)\r\n        const {actualProgressStartAngle, actualProgressEndAngle, plannedProgressStartAngle, plannedProgressEndAngle, reportedProgressStartAngle, reportedProgressEndAngle} = getProgressAngles(this.props.progress.actual, this.props.progress.planned, this.props.progress.reported)\r\n        let baseHour = this.props.plannedVsReported.baseHour\r\n        let plannedColor = '#ffa75b', reportedColor = '#e52d8c', actualColor = '#4172c1', completedColor = '#6CE190',\r\n            pendingColor = '#f5f968', unfinishedColor = '#E25858'\r\n\r\n\r\n        let planningsWidth = dashboardWidth - 150\r\n        if (this.props.dailyPlannings && this.props.dailyPlannings.length)\r\n            planningsWidth = 50 * this.props.dailyPlannings.length\r\n\r\n        if (this.props.resetDailyPlanningMonth) {\r\n            this.state.monthMoment = moment()\r\n        }\r\n\r\n        let releaseStartMonth = moment(this.props.release.devStartDate)\r\n        let releaseEndMonth = moment(this.props.release.devEndDate)\r\n\r\n        let beforeOrSameAsStartMonth = false\r\n        let afterOrSameAsLastMonth = false\r\n        if ((this.state.monthMoment.month() <= releaseStartMonth.month() && this.state.monthMoment.year() <= releaseStartMonth.year()) || this.state.monthMoment.year() < releaseStartMonth.year())\r\n            beforeOrSameAsStartMonth = true\r\n        if ((this.state.monthMoment.month() >= releaseEndMonth.month() && this.state.monthMoment.year() == releaseEndMonth.year()) || this.state.monthMoment.year() > releaseEndMonth.year())\r\n            afterOrSameAsLastMonth = true\r\n\r\n        return <div>\r\n            <div className={\"col-md-6\"} style={{marginRight: \"0px\"}}>\r\n                <div className={\"chartSection\"}>\r\n                    <BarChart data={[this.props.overallProgress]}\r\n                              height={80} width={barWidth} layout={\"vertical\"} margin={barMargin}>\r\n                        <XAxis type=\"number\" hide={true}/>\r\n                        <YAxis type=\"category\" dataKey={\"name\"} hide={true}/>\r\n                        <Tooltip/>\r\n                        <Legend/>\r\n                        <Bar barSize={10} dataKey=\"progress\" stackId=\"a\" fill={completedColor}\r\n                             name={\"Overall Progress\"}>\r\n                            <LabelList dataKey=\"progress\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                        <Bar barSize={10} dataKey=\"remaining\" stackId=\"a\" fill={unfinishedColor} name={\"Unfinished\"}>\r\n                            <LabelList dataKey=\"remaining\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                    </BarChart>\r\n                </div>\r\n\r\n                <div className={\"chartSection\"}>\r\n                    <BarChart data={[this.props.completedPendingProgress]}\r\n                              height={80} width={barWidth} margin={barMargin}\r\n                              layout={\"vertical\"}>\r\n                        <XAxis type=\"number\" hide={true}/>\r\n                        <YAxis type=\"category\" dataKey={\"name\"} hide={true}/>\r\n                        <Tooltip/>\r\n                        <Legend/>\r\n                        <Bar barSize={10} dataKey=\"completed\" stackId=\"a\" fill={completedColor}\r\n                             name={\"Progress (Completed Tasks)\"}>\r\n                            <LabelList dataKey=\"completed\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                        <Bar barSize={10} dataKey=\"pending\" stackId=\"a\" fill={pendingColor}\r\n                             name={\"Progress (Pending Tasks)\"}>\r\n                            <LabelList dataKey=\"pending\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                        <Bar barSize={10} dataKey=\"remaining\" stackId=\"a\" fill={unfinishedColor} name={\"Unfinished\"}>\r\n                            <LabelList dataKey=\"remaining\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                    </BarChart>\r\n                </div>\r\n\r\n                <div className={\"chartSection\"}>\r\n                    <PieChart width={barWidth} height={240} margin={{top: 40, right: 0, left: 0, bottom: 20}}>\r\n                        <Pie isAnimationActive={false}\r\n                             dataKey={\"value\"}\r\n                             data={[{name: 'Actual Progress', value: this.props.progress.actual}]}\r\n                             cx={barWidth / 2}\r\n                             cy={80} outerRadius={60} innerRadius={52} startAngle={actualProgressStartAngle}\r\n                             endAngle={actualProgressEndAngle} fill={actualColor}\r\n                             label={renderPercentagePieCenter}\r\n                             labelLine={false}/>\r\n                        <Pie isAnimationActive={false}\r\n                             dataKey={\"value\"}\r\n                             data={[{name: 'Planned Progress', value: this.props.progress.planned}]}\r\n                             cx={barWidth / 2}\r\n                             cy={80} outerRadius={70} innerRadius={62} startAngle={plannedProgressStartAngle}\r\n                             endAngle={plannedProgressEndAngle} fill={plannedColor}\r\n                             label={renderPercentage}/>\r\n                        <Pie isAnimationActive={false}\r\n                             dataKey={\"value\"}\r\n                             data={[{name: 'Reported Progress', value: this.props.progress.reported}]}\r\n                             cx={barWidth / 2}\r\n                             cy={80} outerRadius={80} innerRadius={72} startAngle={reportedProgressStartAngle}\r\n                             endAngle={reportedProgressEndAngle} fill={reportedColor}\r\n                             label={renderPercentage}/>/>\r\n                        <Legend/>\r\n                        <Tooltip/>\r\n                    </PieChart>\r\n                </div>\r\n            </div>\r\n            <div className={\"col-md-6\"}>\r\n                <div className={\"chartSection\"}>\r\n                    <BarChart data={[this.props.plannedVsUnplannedWork]}\r\n                              height={80} width={barWidth} layout={\"vertical\"} margin={barMargin}>\r\n                        <XAxis type=\"number\" hide={true}/>\r\n                        <YAxis type=\"category\" dataKey={\"name\"} hide={true}/>\r\n                        <Tooltip/>\r\n                        <Legend/>\r\n                        <Bar barSize={10} dataKey=\"planned\" stackId=\"a\" fill={completedColor} name={\"Planned Work\"}>\r\n                            <LabelList dataKey=\"planned\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                        <Bar barSize={10} dataKey=\"unplanned\" stackId=\"a\" fill={unfinishedColor}\r\n                             name={\"Unplanned Work\"}>\r\n                            <LabelList dataKey=\"unplanned\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                    </BarChart>\r\n                </div>\r\n                <div className={\"chartSection\"}>\r\n                    <BarChart data={[this.props.plannedVsReported]}\r\n                              height={80} width={barWidth} layout={\"vertical\"} margin={barMargin}>\r\n                        <XAxis type=\"number\" hide={true}\r\n                               domain={[0, this.props.plannedVsReported.base + this.props.plannedVsReported.extra]}/>\r\n                        <YAxis type=\"category\" dataKey={\"name\"} hide={true}/>\r\n                        <Tooltip/>\r\n                        <Legend/>\r\n                        <Bar barSize={10} dataKey=\"base\" stackId=\"a\"\r\n                             fill={baseHour === 'planned' ? plannedColor : reportedColor}\r\n                             name={baseHour === 'planned' ? 'Planned Hours' : 'Reported Hours'}>\r\n                            <LabelList dataKey=\"base\" position=\"top\"/>\r\n                        </Bar>\r\n                        <Bar barSize={10} dataKey=\"extra\" stackId=\"a\"\r\n                             fill={baseHour === 'planned' ? reportedColor : plannedColor}\r\n                             name={baseHour === 'planned' ? 'Extra Reported Hours' : 'Extra Planned Hours'}>\r\n                            <LabelList dataKey=\"extra\" position=\"top\"/>\r\n                        </Bar>\r\n                    </BarChart>\r\n                </div>\r\n                <div className={\"chartSection\"}>\r\n                    <PieChart width={barWidth} height={240} margin={{top: 40, right: 0, left: 0, bottom: 20}}>\r\n                        <Pie isAnimationActive={false}\r\n                             dataKey={\"value\"}\r\n                             data={[{name: 'Estimated Hours', value: this.props.hoursData.estimatedHours}]}\r\n                             cx={barWidth / 2}\r\n                             cy={80} outerRadius={60} innerRadius={52} startAngle={estimatedStartAngle}\r\n                             endAngle={estimatedEndAngle} fill={actualColor}\r\n                             label={renderPieCenter}\r\n                             labelLine={false}/>\r\n                        <Pie isAnimationActive={false}\r\n                             dataKey={\"value\"}\r\n                             data={[{name: 'Planned Hours', value: this.props.hoursData.plannedHours}]}\r\n                             cx={barWidth / 2}\r\n                             cy={80} outerRadius={70} innerRadius={62} startAngle={plannedStartAngle}\r\n                             endAngle={plannedEndAngle} fill={plannedColor}\r\n                             label/>\r\n                        <Pie isAnimationActive={false}\r\n                             dataKey={\"value\"}\r\n                             data={[{name: 'Reported Hours', value: this.props.hoursData.reportedHours}]}\r\n                             cx={barWidth / 2}\r\n                             cy={80} outerRadius={80} innerRadius={72} startAngle={reportedStartAngle}\r\n                             endAngle={reportedEndAngle} fill={reportedColor}\r\n                             label/>\r\n                        <Legend/>\r\n                        <Tooltip/>\r\n                    </PieChart>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"col-md-2\"}>\r\n                <div className={\"chartSection\"}>\r\n                    <BarChart data={[this.props.unplannedReport]}\r\n                              height={120} width={(dashboardWidth - 120) / 6} layout={\"vertical\"} margin={barMargin}>\r\n                        <XAxis type=\"number\" hide={true}/>\r\n                        <YAxis type=\"category\" dataKey={\"name\"} hide={true}/>\r\n                        <Tooltip/>\r\n                        <Legend/>\r\n                        <Bar barSize={10} dataKey=\"reportedHours\" fill={reportedColor}\r\n                             name={\"Unplanned Reported Hours\"}>\r\n                            <LabelList dataKey=\"reportedHours\" position=\"top\"/>\r\n                        </Bar>\r\n                    </BarChart>\r\n                </div>\r\n            </div>\r\n            <div className={\"col-md-4\"}>\r\n                <div className={\"chartSection\"}>\r\n                    <BarChart data={[this.props.mgmtData]}\r\n                              height={120} width={(dashboardWidth - 120) / 3} layout={\"vertical\"}\r\n                              margin={{top: 20, right: 40, left: 40, bottom: 20}}>\r\n                        <XAxis type=\"number\" hide={true}/>\r\n                        <YAxis type=\"category\" dataKey={\"name\"} hide={true}/>\r\n                        <Tooltip/>\r\n                        <Legend/>\r\n                        <Bar barSize={10} dataKey=\"plannedBefore\" fill={\"#ffcb9e\"}\r\n                             name={\"Planned Before\"}>\r\n                            <LabelList dataKey=\"plannedBefore\" position=\"top\"/>\r\n                        </Bar>\r\n                        <Bar barSize={10} dataKey=\"plannedAfter\" fill={plannedColor}\r\n                             name={\"Planned After\"}>\r\n                            <LabelList dataKey=\"plannedAfter\" position=\"top\"/>\r\n                        </Bar>\r\n                        <ReferenceLine x={0} stroke='black' isFront={true}>\r\n                            <Label value=\"0 Hours\" position=\"top\"/>\r\n                        </ReferenceLine>\r\n\r\n                    </BarChart>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"col-md-4\"}>\r\n                <div className={\"chartSection\"}>\r\n                    <BarChart data={[this.props.mgmtData]}\r\n                              height={120} width={(dashboardWidth - 120) / 3} layout={\"vertical\"} margin={barMargin}>\r\n                        <XAxis type=\"number\" hide={true}/>\r\n                        <YAxis type=\"category\" dataKey={\"name\"} hide={true}/>\r\n                        <Tooltip/>\r\n                        <Legend/>\r\n                        <Bar barSize={10} dataKey=\"plannedHoursOnLeave\" stackId=\"a\" fill={plannedColor} name={\"PH (On Leave)\"}>\r\n                            <LabelList dataKey=\"plannedHoursOnLeave\" position=\"top\" />\r\n                        </Bar>\r\n                        <Bar barSize={10} dataKey=\"plannedHoursLastMinuteLeave\" stackId=\"a\" fill={unfinishedColor}\r\n                             name={\"PH (Last Minute)\"}>\r\n                            <LabelList dataKey=\"plannedHoursLastMinuteLeave\" position=\"top\" />\r\n                        </Bar>\r\n                    </BarChart>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={\"col-md-2\"}>\r\n                <div className={\"chartSection\"}>\r\n                    <BarChart data={[this.props.mgmtData]}\r\n                              height={120} width={(dashboardWidth - 120) / 6} layout={\"vertical\"}\r\n                              margin={{top: 20, right: 40, left: 40, bottom: 20}}>\r\n                        <XAxis type=\"number\" hide={true}/>\r\n                        <YAxis type=\"category\" dataKey={\"name\"} hide={true}/>\r\n                        <Tooltip/>\r\n                        <Legend/>\r\n                        <Bar barSize={10} dataKey=\"reportedAfter\" fill={\"#d671a5\"}\r\n                             name={\"Reported After\"}>\r\n                            <LabelList dataKey=\"reportedAfter\" position=\"top\"/>\r\n                        </Bar>\r\n\r\n                    </BarChart>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div className={\"col-md-12\"}>\r\n                {!beforeOrSameAsStartMonth && <button className={\"btn reportingArrow\"}\r\n                                                      style={{position: 'absolute', top: 93, left: 20}}\r\n                                                      onClick={() => {\r\n                                                          let newMonthMoment = this.state.monthMoment.subtract(1, 'month')\r\n                                                          this.props.getReleaseDailyPlannings(this.props.release._id, newMonthMoment.month(), newMonthMoment.year())\r\n                                                      }}\r\n                                                      type=\"button\">\r\n                    <i className=\"glyphicon glyphicon-arrow-left\"></i>\r\n                </button>}\r\n\r\n                <div className={\"chartSection\"}\r\n                     style={{paddingRight: \"0px\", paddingLeft: \"50px\"}}>\r\n                    <BarChart data={this.props.dailyPlannings}\r\n                              height={250} width={planningsWidth}\r\n                              margin={{top: 40, right: 0, left: 0, bottom: 20}}\r\n                              barGap={2}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                        <XAxis dataKey={\"planningDateString\"} type={\"category\"}/>\r\n                        <YAxis type=\"number\"/>\r\n                        <Tooltip/>\r\n                        <Legend/>\r\n                        <Bar barSize={12} dataKey=\"plannedHours\"\r\n                             fill={plannedColor}\r\n                             name={'Planned Hours'}>\r\n                            <LabelList dataKey=\"plannedHours\" position=\"top\"/>\r\n                        </Bar>\r\n\r\n                        <Bar barSize={12} dataKey=\"reportedHours\"\r\n                             fill={reportedColor}\r\n                             name={'Reported Hours'}>\r\n                            <LabelList dataKey=\"reportedHours\" position=\"top\"/>\r\n                        </Bar>\r\n                    </BarChart>\r\n                </div>\r\n\r\n                {!afterOrSameAsLastMonth && <button className={\"btn reportingArrow\"}\r\n                                                    style={{position: 'absolute', top: 93, right: 20}}\r\n                                                    onClick={() => {\r\n                                                        let newMonthMoment = this.state.monthMoment.add(1, 'month')\r\n                                                        this.props.getReleaseDailyPlannings(this.props.release._id, newMonthMoment.month(), newMonthMoment.year())\r\n                                                    }}\r\n                                                    type=\"button\">\r\n                    <i className=\"glyphicon glyphicon-arrow-right\"></i>\r\n                </button>}\r\n\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(DashboardSection)\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/sections/ReleaseDashboardSection.js","import React, {Component} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {renderText, renderTextArea} from './fields'\r\nimport {required} from \"./validation\"\r\nimport * as logger from '../../clientLogger'\r\n\r\nlet ReportTaskDescriptionForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting} = props;\r\n    logger.debug(logger.CLIENT_FORM_RENDER, props)\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <Field name=\"taskName\"\r\n                       component={renderText}\r\n                       label={\"Task Name\"} readOnly={true}/>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <Field name=\"status\"\r\n                       component={renderText}\r\n                       label={\"Status you are reporting:\"} readOnly={true}/>\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <Field name=\"reportDescription\"\r\n                       placeholder={\"Add details of work done on task '\" + props.taskName + \"' on date you are reporting for.\"}\r\n                       component={renderTextArea}\r\n                       label={\"Add Details of Work Done\"} validate={[required]} rows={10}/>\r\n\r\n                <button type=\"submit\" disabled={submitting} className=\"btn customBtn\">Submit</button>\r\n            </div>\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nReportTaskDescriptionForm = reduxForm({\r\n    form: 'report-task-description'\r\n})(ReportTaskDescriptionForm)\r\n\r\nexport default ReportTaskDescriptionForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/ReportTaskDescriptionForm.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {ReleaseTaskPlanningFormContainer} from \"../../containers\"\r\n\r\nconst ReleaseTaskPlanningFormDialog = (props) => {\r\n    return <Modal className=\"estimationModal releaseDialog\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Add Task Planning</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <ReleaseTaskPlanningFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default ReleaseTaskPlanningFormDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/ReleaseTaskPlanningFormDialog.js","import React, {Component} from 'react';\r\nimport {LoginFormContainer} from '../../containers'\r\n\r\nclass AdminHome extends Component {\r\n    render() {\r\n        return ([<LoginFormContainer/>])\r\n    }\r\n}\r\n\r\nexport default AdminHome\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/pages/Home.js","import {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport React from 'react'\r\nimport {renderDateTimePickerString, renderSelect, renderText} from './fields'\r\nimport * as logger from '../../clientLogger'\r\nimport {number, required} from \"./validation\"\r\nimport moment from 'moment'\r\nimport momentLocalizer from 'react-widgets-moment'\r\nimport {connect} from 'react-redux'\r\nimport _ from 'lodash'\r\n\r\nmoment.locale('en')\r\nmomentLocalizer()\r\n\r\nlet EstimationAddToReleaseForm = (props) => {\r\n    const {pristine, submitting, change, reset} = props\r\n    const {devStartDate, devReleaseDate, clientReleaseDate, allAvailableReleases, release} = props\r\n    let max = !_.isEmpty(devReleaseDate) ? moment(devReleaseDate).toDate() : !_.isEmpty(clientReleaseDate) ? moment(clientReleaseDate).toDate() : undefined\r\n    let maxRelease = !_.isEmpty(clientReleaseDate) ? moment(clientReleaseDate).toDate() : undefined\r\n    let now = new Date()\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div className=\"row\">\r\n\r\n            <Field name=\"estimation._id\" component=\"input\" type=\"hidden\"/>\r\n\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-4\">\r\n                    <Field name=\"billedHours\" component={renderText} label={\"Negotiated Billed Hours:\"}\r\n                           validate={[required, number]}/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <Field name=\"name\" component={renderText} label={\"Name (Iteration):\"}\r\n                           validate={[required]}/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <Field name=\"release._id\" component={renderSelect} options={allAvailableReleases}\r\n                           validate={[required]}\r\n                           label={\"Release:\"}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-4\">\r\n                    <Field name=\"devStartDate\" component={renderDateTimePickerString}\r\n                           min={now}\r\n                           max={max}\r\n                           showTime={false}\r\n                           label={\"Expected Start Date For Developer:\"} validate={[required]}/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <Field name=\"devReleaseDate\" component={renderDateTimePickerString}\r\n                           min={moment(devStartDate).toDate()}\r\n                           max={maxRelease}\r\n                           showTime={false}\r\n                           label={\"Expected Developer Release Date:\"} validate={[required]}/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <Field name=\"clientReleaseDate\" component={renderDateTimePickerString}\r\n                           min={moment(devReleaseDate).toDate()}\r\n                           showTime={false}\r\n                           label={\"Expected Client Release Date:\"}\r\n                           validate={required}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div className=\"row initiatEstimation\">\r\n            <div className=\"col-md-6 text-center\">\r\n                <button type=\"submit\" disabled={pristine || submitting} className=\"btn customBtn\">Submit</button>\r\n            </div>\r\n            <div className=\"col-md-6 text-center\">\r\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset} className=\"btn customBtn\">\r\n                    Reset\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nEstimationAddToReleaseForm = reduxForm({\r\n    form: 'estimation-add-to-release'\r\n})(EstimationAddToReleaseForm)\r\n\r\nconst selector = formValueSelector('estimation-add-to-release')\r\n\r\nEstimationAddToReleaseForm = connect(\r\n    state => {\r\n        const {devStartDate, devReleaseDate, clientReleaseDate} = selector(state, 'devStartDate', 'devReleaseDate', 'clientReleaseDate')\r\n        return {\r\n            devStartDate,\r\n            devReleaseDate,\r\n            clientReleaseDate\r\n        }\r\n    }\r\n)(EstimationAddToReleaseForm)\r\n\r\n\r\nexport default EstimationAddToReleaseForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/EstimationAddToReleaseForm.js","import {connect} from 'react-redux'\r\nimport {ReleaseDeveloperFilterForm} from \"../../components\"\r\nimport * as A from \"../../actions\"\r\nimport * as SC from \"../../../server/serverconstants\"\r\nimport {NotificationManager} from 'react-notifications'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    getEmployeePlanDetails: (employeeId, startDate, endDate, releaseID) => {\r\n        if (!employeeId) {\r\n            return NotificationManager.error(\"Please select employee\")\r\n        } else {\r\n\r\n            if (!startDate)\r\n                startDate = SC.NONE\r\n\r\n            if (!endDate)\r\n                endDate = SC.NONE\r\n            return dispatch(A.getEmployeePlanDetailsForRelease(employeeId, startDate, endDate, releaseID))\r\n        }\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    team: state.release.teamOfRelease,\r\n    selectedReleaseID: state.release.selectedRelease._id\r\n})\r\n\r\n\r\nconst ReleaseDeveloperFilterFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReleaseDeveloperFilterForm)\r\n\r\nexport default ReleaseDeveloperFilterFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/ReleaseDeveloperFilterFormContainer.js","import {connect} from 'react-redux'\r\nimport {EstimationSuggestTaskForm} from \"../../components\"\r\nimport * as logger from '../../clientLogger'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as SC from \"../../../server/serverconstants\"\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        if (values._id) {\r\n            values.estimatedHours = Number(values.estimatedHours)\r\n            logger.debug(logger.ESTIMATION_TASK_FORM_SUBMIT, \"values:\", values)\r\n            dispatch(A.updateTaskToEstimationOnServer(values)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success(\"Suggestions saved successfully\")\r\n                    // hide dialog\r\n                    dispatch(A.hideComponent(COC.ESTIMATION_SUGGEST_TASK_FORM_DIALOG))\r\n                } else {\r\n                    NotificationManager.error(json.message)\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            values.estimatedHours = Number(values.estimatedHours)\r\n            logger.debug(logger.ESTIMATION_TASK_FORM_SUBMIT, \"values:\", values)\r\n            dispatch(A.addTaskToEstimationOnServer(values)).then(json => {\r\n                if (json.success) {\r\n                    if (values.loggedInUserRole == SC.ROLE_NEGOTIATOR)\r\n                        NotificationManager.success(\"Task suggestions saved successfully\")\r\n                    else if (values.loggedInUserRole == SC.ROLE_ESTIMATOR)\r\n                        NotificationManager.success(\"Task estimations saved successfully\")\r\n                    // hide dialog\r\n                    dispatch(A.hideComponent(COC.ESTIMATION_SUGGEST_TASK_FORM_DIALOG))\r\n                } else {\r\n                    NotificationManager.error(json.message)\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    estimation: state.estimation.selected\r\n})\r\n\r\nconst EstimationSuggestTaskFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EstimationSuggestTaskForm)\r\n\r\nexport default EstimationSuggestTaskFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/EstimationSuggestTaskFormContainer.js","import React from 'react'\r\nimport {EstimationFeature} from \"../\"\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nlet EstimationFeatures = (props) => {\r\n    let childProps = Object.assign({}, props, {\r\n        features: undefined\r\n    })\r\n    const {changedByNegotiator, changedByEstimator, permissionRequested, addedFromRepository, addedByNegotiator, addedByEstimator, hasError} = props.filter\r\n    const {expandedFeatureID} = props\r\n\r\n    return Array.isArray(props.features) && props.features.map((f, idx) => {\r\n            if (!f) {\r\n                return <span></span>\r\n            }\r\n            if (changedByNegotiator && changedByEstimator && permissionRequested && addedFromRepository && addedByNegotiator && addedByEstimator && hasError) {\r\n                return (expandedFeatureID === f._id) ?\r\n                    <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                       expanded={true}/> :\r\n                    <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}/>\r\n            } else {\r\n                if (changedByNegotiator && f.negotiator && (f.negotiator.changeSuggested || f.negotiator.changedInThisIteration) && (!f.addedInThisIteration)) {\r\n                    return (expandedFeatureID === f._id) ?\r\n                        <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                           expanded={true}/> :\r\n                        <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}/>\r\n                } else if (changedByEstimator && f.estimator && (f.estimator.changedKeyInformation || f.estimator.changedInThisIteration)) {\r\n                    return (expandedFeatureID === f._id) ?\r\n                        <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                           expanded={true}/> :\r\n                        <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}/>\r\n                } else if (permissionRequested && f.estimator && ((f.estimator.removalRequested) || (f.estimator.changeRequested) || (f.tasks && Array.isArray(f.tasks) && f.tasks.length && f.tasks.findIndex(t => ((t.estimator && t.estimator.removalRequested) || (t.estimator && t.estimator.changeRequested))) != -1))) {\r\n                    return (expandedFeatureID === f._id) ?\r\n                        <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                           expanded={true}/> :\r\n                        <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}/>\r\n                } else if (addedFromRepository && ((f.repo && !f.repo.addedFromThisEstimation) || (f.tasks && Array.isArray(f.tasks) && f.tasks.length && f.tasks.findIndex(t => t.repo && !t.repo.addedFromThisEstimation) != -1))) {\r\n                    return (expandedFeatureID === f._id) ?\r\n                        <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                           expanded={true}/> :\r\n                        <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}/>\r\n                } else if (addedByNegotiator && ((f.addedInThisIteration && f.owner == SC.OWNER_NEGOTIATOR) || (f.tasks && Array.isArray(f.tasks) && f.tasks.length && f.tasks.findIndex(t => t.addedInThisIteration && t.owner == SC.OWNER_NEGOTIATOR) != -1))) {\r\n                    return (expandedFeatureID === f._id) ?\r\n                        <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                           expanded={true}/> :\r\n                        <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}/>\r\n                } else if (addedByEstimator && ((f.addedInThisIteration && f.owner == SC.OWNER_ESTIMATOR) || (f.tasks && Array.isArray(f.tasks) && f.tasks.length && f.tasks.findIndex(t => t.addedInThisIteration && t.owner == SC.OWNER_ESTIMATOR) != -1))) {\r\n                    return (expandedFeatureID === f._id) ?\r\n                        <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                           expanded={true}/> :\r\n                        <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}/>\r\n                } else if (hasError && f.hasError) {\r\n                    return (expandedFeatureID === f._id) ?\r\n                        <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                           expanded={true}/> :\r\n                        <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}/>\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nexport default EstimationFeatures\r\n\r\n\r\n{/*\r\n\r\n        if (!f) {\r\n            return <span></span>\r\n        }\r\n        if (estimator && changeRequested && repository && grantPermission && suggestions && negotiator) {\r\n\r\n        }\r\n        else {\r\n            if (estimator || changeRequested || repository || grantPermission || suggestions || negotiator) {\r\n\r\n                if (loggedInUserRole == SC.ROLE_ESTIMATOR) {\r\n\r\n\r\n                    //when feature owner is estimator\r\n                    if (estimator) {\r\n                        if (f.owner === SC.OWNER_ESTIMATOR)\r\n                            return (expandedFeatureID === f._id) ?\r\n                                <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                                   expanded=\"true\"/> :\r\n                                <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}/>\r\n\r\n                    }\r\n\r\n                    //when negotiator grant the permission required\r\n                    if (grantPermission) {\r\n                        if (f.negotiator.changedInThisIteration && f.negotiator.changeGranted) {\r\n                            return (expandedFeatureID === f._id) ?\r\n                                <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                                   expanded=\"true\"/> :\r\n                                <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}/>\r\n                        }\r\n                    }\r\n                    if (suggestions) {\r\n                        if (f.negotiator.changedInThisIteration && f.negotiator.changeSuggested) {\r\n                            return (expandedFeatureID === f._id) ?\r\n                                <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                                   expanded=\"true\"/> :\r\n                                <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}/>\r\n                        }\r\n                    }\r\n\r\n                    //feature added from repository\r\n                    if (repository) {\r\n                        if (f.repo)\r\n                            if (!f.repo.addedFromThisEstimation) {\r\n                                return (expandedFeatureID === f._id) ?\r\n                                    <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                                       expanded=\"true\"/> :\r\n                                    <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}/>\r\n                            }\r\n                    }\r\n                }\r\n                else {\r\n                    if (loggedInUserRole == SC.ROLE_NEGOTIATOR) {\r\n\r\n                        //feature owner is negotiator\r\n                        if (negotiator) {\r\n                            if (f.owner === SC.OWNER_NEGOTIATOR)\r\n                                return (expandedFeatureID === f._id) ?\r\n                                    <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                                       expanded=\"true\"/> :\r\n                                    <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}/>\r\n\r\n                        }\r\n\r\n                        //when estimator asked for change request on feature\r\n                        if (changeRequested) {\r\n                            if (f.estimator.changedInThisIteration) {\r\n                                if (f.estimator.changeRequested || f.estimator.removalRequested) {\r\n                                    return (expandedFeatureID === f._id) ?\r\n                                        <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                                           expanded=\"true\"/> :\r\n                                        <EstimationFeature feature={f} index={idx}\r\n                                                           key={\"feature\" + idx} {...childProps}/>\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                        if (repository) {\r\n                            if (f.repo)\r\n                                if (!f.repo.addedFromThisEstimation) {\r\n                                    return (expandedFeatureID === f._id) ?\r\n                                        <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                                           expanded=\"true\"/> :\r\n                                        <EstimationFeature feature={f} index={idx}\r\n                                                           key={\"feature\" + idx} {...childProps}/>\r\n                                }\r\n                        }\r\n                        if (suggestions) {\r\n                            if (f.estimator.changedInThisIteration && f.estimator.changedKeyInformation) {\r\n                                return (expandedFeatureID === f._id) ?\r\n                                    <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                                       expanded=\"true\"/> :\r\n                                    <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}/>\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        return (expandedFeatureID === f._id) ?\r\n                            <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}\r\n                                               expanded=\"true\"/> :\r\n                            <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}/>\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                // by default show all\r\n                return (expandedFeatureID === f._id) ?\r\n                    <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps} expanded=\"true\"/> :\r\n                    <EstimationFeature feature={f} index={idx} key={\"feature\" + idx} {...childProps}/>\r\n            }\r\n        }\r\n\r\n\r\n   */\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/components/sections/EstimationFeatures.js","import React, {Component} from 'react'\r\nimport {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport {connect} from 'react-redux'\r\nimport {renderDateTimePickerString, renderField, renderText, renderTextArea} from './fields'\r\nimport {email, number, passwordLength, required} from \"./validation\"\r\n\r\n\r\nconst passwordMatch = (value, values) => {\r\n    return (value != values.password) ? `both password field should be same ` : undefined\r\n}\r\n\r\nclass UserProfileForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {handleSubmit, pristine, reset, submitting} = this.props;\r\n\r\n        return <div className=\"col-md-8\">\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-12 pad\">\r\n\r\n                    <div className=\"col-md-12\">\r\n\r\n\r\n                        <form key=\"userProfileForm\" onSubmit={handleSubmit}>\r\n\r\n\r\n                            {/*firstname lastName*/}\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-md-6\">\r\n                                    <Field name=\"firstName\" placeholder={\"First Name\"} component={renderText}\r\n                                           label={\"First Name:\"} validate={[required]}/>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <Field name=\"lastName\" label={\"Last Name :\"} placeholder={\"Last Name\"}\r\n                                           component={renderText} validate={[required]}/>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <Field name=\"phone\" label={\"Phone No.:\"} placeholder={\"phone Name\"}\r\n                                           component={renderText} validate={[required, number]}/>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <Field name=\"email\" label={\"Email :\"} placeholder={\"Email\"}\r\n                                           validate={[required, email]}\r\n                                           component={renderText} type=\"email\"/>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <Field name=\"address\" label={\"Address :\"} placeholder={\"address\"}\r\n                                           component={renderTextArea} validate={[required]}/>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n\r\n\r\n                                <div className=\"col-md-6\">\r\n                                    <Field name=\"password\" label={\"New Password :\"} placeholder={\"new Password\"}\r\n                                           validate={[passwordLength]}\r\n                                           component={renderText} type=\"password\"/>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6\">\r\n\r\n                                    <Field name=\"confirmPassword\" label=\"Confirm Password :\"\r\n                                           placeholder={\"confirm Password\"}\r\n                                           validate={[passwordLength, passwordMatch]} component={renderField}\r\n                                           type=\"password\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-md-6\">\r\n                                    <Field name=\"dob\" placeholder={\"date of birth :\"}\r\n                                           component={renderDateTimePickerString}\r\n                                           showTime={false}\r\n                                           label={\"DOB :\"} validate={[required]}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6\">\r\n                                    <Field name=\"designation\" label={\"designation :\"}\r\n                                           placeholder={\"Employee-designation\"}\r\n                                           component={renderText} readOnly={true}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <Field name=\"employeeCode\" label={\"code :\"} placeholder={\"Employee-Code\"}\r\n                                           component={renderText} readOnly={true}/>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n\r\n                                    <Field name=\"dateJoined\" label={\"Date of joining :\"}\r\n                                           placeholder={\"Employee-date of joining\"}\r\n                                           component={renderText} readOnly={true}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row updateUserProfile\">\r\n                                <div className=\"col-md-6 text-right\">\r\n                                    <button type=\"submit\" disabled={pristine || submitting} className=\"btn customBtn\">\r\n                                        Update\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"col-md-6 text-left\">\r\n                                    <button type=\"button\" disabled={pristine || submitting} className=\"btn customBtn\"\r\n                                            onClick={reset}>Reset\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nUserProfileForm = reduxForm({\r\n    form: 'user-profile'\r\n})(UserProfileForm)\r\n\r\nconst selector = formValueSelector('user-profile');\r\n\r\nUserProfileForm = connect(\r\n    state => {\r\n        const changeCredentials = selector(state, 'changeCredentials')\r\n        return {changeCredentials};\r\n    }\r\n)(UserProfileForm)\r\nexport default UserProfileForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/UserProfileForm.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {RepositoryFeatureDetailPageContainer} from \"../../containers\"\r\n\r\nconst RepositoryFeatureDetailDialog = (props) => {\r\n    return <Modal  className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Feature Detail Page</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <RepositoryFeatureDetailPageContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default RepositoryFeatureDetailDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/RepositoryFeatureDetailDialog.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport {withRouter} from 'react-router-dom'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport _ from 'lodash'\r\n\r\nclass EstimationList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.options = {\r\n            onRowClick: this.onRowClick.bind(this)\r\n        }\r\n        this.state = {\r\n            status: SC.ALL,\r\n            projectID: SC.ALL\r\n        }\r\n        this.filterEstimationByProject = this.filterEstimationByProject.bind(this);\r\n    }\r\n\r\n    onRowClick(row) {\r\n        this.props.history.push(\"/app-home/estimation-detail\")\r\n        this.props.estimationSelected(row)\r\n\r\n    }\r\n\r\n    filterEstimationStatus(status) {\r\n        this.setState({status: status})\r\n        this.props.getAllEstimations(this.state.projectID, status)\r\n    }\r\n\r\n    filterEstimationByProject(projectID) {\r\n\r\n        this.setState({projectID: projectID})\r\n        this.props.getAllEstimations(projectID, this.state.status)\r\n    }\r\n\r\n    formatProject(project) {\r\n        if (project)\r\n            return project.name\r\n        return ''\r\n    }\r\n\r\n    columnClassStatusFormat(status) {\r\n        if (status == SC.STATUS_ESTIMATION_REQUESTED)\r\n            return 'erRowColor'\r\n        if (status == SC.STATUS_INITIATED)\r\n            return 'inRowColor'\r\n        if (status == SC.STATUS_PENDING)\r\n            return 'penRowColor'\r\n        if (status == SC.STATUS_APPROVED)\r\n            return 'appRowColor'\r\n        if (status == SC.STATUS_REVIEW_REQUESTED)\r\n            return 'rrRowColor'\r\n        if (status == SC.STATUS_CHANGE_REQUESTED)\r\n            return 'crRowColor'\r\n        if (status == SC.STATUS_REOPENED)\r\n            return 'roRowColor'\r\n        if (status == SC.STATUS_PROJECT_AWARDED)\r\n            return 'paRowColor'\r\n        if (status == SC.STATUS_REJECTED)\r\n            return 'rejRowColor'\r\n        return ''\r\n    }\r\n\r\n    formatStatus(status) {\r\n        return ''\r\n    }\r\n\r\n\r\n    columnClassUserFormat(user) {\r\n        return 'estimationListUser'\r\n    }\r\n\r\n    formatClient(client) {\r\n        if (client)\r\n            return client.name\r\n        return ''\r\n    }\r\n\r\n    formatTechnologies(technologies) {\r\n        if (Array.isArray(technologies))\r\n            return _.join(technologies.map(t => t.name))\r\n        return ''\r\n    }\r\n\r\n    formatProjectDescription(description) {\r\n        if (description)\r\n            return description\r\n        return ''\r\n    }\r\n\r\n    formatEstimator(estimator) {\r\n        if (estimator)\r\n            return estimator.firstName\r\n        return ''\r\n    }\r\n\r\n    formatNegotiator(negotiator) {\r\n        if (negotiator)\r\n            return negotiator.firstName\r\n        return ''\r\n    }\r\n\r\n\r\n    viewButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\"glyphicon glyphicon-th-list pull-left btn btn-custom\" type=\"button\">\r\n            </button>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {projects, estimations, loggedInUser} = this.props\r\n        return (\r\n            <div key=\"estimation_list\" className=\"clearfix\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"col-md-8 estimationSearchSection\">\r\n                        <div className=\"col-md-4\">\r\n                            <select\r\n                                className=\"form-control estimationSearchProject \" onChange={(projectID) =>\r\n                                this.filterEstimationByProject(projectID.target.value)\r\n                            }>\r\n                                {<option value={SC.ALL}>{'All Projects'}</option>}\r\n                                {\r\n                                    projects && projects.map(option => {\r\n\r\n                                            return <option value={_.get(option, \"_id\")}\r\n                                                           key={option[\"_id\"]}>{_.get(option, 'name')}</option>\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <select className=\"form-control estimationSearchStatus\" onChange={(status) =>\r\n                                this.filterEstimationStatus(status.target.value)\r\n                            }>\r\n                                <option value={SC.ALL}>All Status</option>\r\n                                <option value={SC.STATUS_ESTIMATION_REQUESTED}>{SC.STATUS_ESTIMATION_REQUESTED}</option>\r\n                                <option value={SC.STATUS_INITIATED}>{SC.STATUS_INITIATED}</option>\r\n                                <option value={SC.STATUS_PENDING}>{SC.STATUS_PENDING}</option>\r\n                                <option value={SC.STATUS_APPROVED}>{SC.STATUS_APPROVED}</option>\r\n                                <option value={SC.STATUS_REVIEW_REQUESTED}>{SC.STATUS_REVIEW_REQUESTED}</option>\r\n                                <option value={SC.STATUS_CHANGE_REQUESTED}>{SC.STATUS_CHANGE_REQUESTED}</option>\r\n                                <option value={SC.STATUS_REOPENED}>{SC.STATUS_REOPENED}</option>\r\n                                <option value={SC.STATUS_PROJECT_AWARDED}>{SC.STATUS_PROJECT_AWARDED}</option>\r\n                                <option value={SC.STATUS_REJECTED}>{SC.STATUS_REJECTED}</option>\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"estimation \">\r\n                                {this.props.loggedInUser.roleNames.includes(SC.ROLE_NEGOTIATOR) &&\r\n                                <button className=\"btn customBtn estimationSearchInitiateBtn\"\r\n                                        onClick={() => this.props.showEstimationInitiateForm()}>Initiate Estimation\r\n                                </button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"estimation\">\r\n                        <BootstrapTable options={this.options} data={this.props.estimations}\r\n                                        multiColumnSearch={true}\r\n                                        search={true}\r\n                                        striped={true}\r\n                                        hover={true}>\r\n                            <TableHeaderColumn columnTitle width='10px' dataField='status'\r\n                                               dataFormat={this.formatStatus}\r\n                                               columnClassName={this.columnClassStatusFormat}></TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle isKey dataField='_id' searchable={false}\r\n                                               hidden={true}>ID</TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='project'\r\n                                               dataFormat={this.formatProject.bind(this)}>Project\r\n                                Name</TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='client'\r\n                                               dataFormat={this.formatClient.bind(this)}>Client</TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='technologies'\r\n                                               dataFormat={this.formatTechnologies.bind(this)}>Technologies</TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='estimatedHours'>Total Hours</TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='description'\r\n                                               dataFormat={this.formatProjectDescription.bind(this)}>Project\r\n                                Description</TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='estimator'\r\n                                               columnClassName={this.columnClassUserFormat}\r\n                                               dataFormat={this.formatEstimator.bind(this)}>Estimator</TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='negotiator'\r\n                                               columnClassName={this.columnClassUserFormat}\r\n                                               dataFormat={this.formatNegotiator.bind(this)}>Negotiator</TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='status'>Status</TableHeaderColumn>\r\n                        </BootstrapTable>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(EstimationList)\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/EstimationList.js","import React from 'react'\r\nimport {SidebarSection, SidebarSideSection} from \"./\"\r\nimport SidebarSectionContainer from '../../containers/sections/SidebarSectionContainer'\r\n\r\nconst Sidebar = (props) => <div className=\"sidebar-wrapper\">\r\n    <div className=\"web_logo\">\r\n        <img src=\"/images/logo.png\"/>\r\n    </div>\r\n    <div className=\"user_name\">\r\n        <img src=\"/images/user.png\" height=\"30\" width=\"30\"/> {props.loggedInUser.fullName}\r\n    </div>\r\n    <SidebarSideSection/>\r\n    <SidebarSectionContainer/>\r\n</div>\r\n\r\nexport default Sidebar\n\n\n// WEBPACK FOOTER //\n// ./client/components/sections/Sidebar.js","export * from './userAction'\r\nexport * from './permissionAction'\r\nexport * from './appAction'\r\nexport * from './roleAction'\r\nexport * from './clientAction'\r\nexport * from './estimationAction'\r\nexport * from './projectAction'\r\nexport * from './technologyAction'\r\nexport * from './leaveAction'\r\nexport * from './repositoryAction'\r\nexport * from './AttendanceSettingAction'\r\nexport * from './releaseAction'\r\nexport * from './calendarAction'\r\nexport * from './reportingAction'\r\nexport * from './employeeAction'\r\nexport * from './warningAction'\r\nexport * from './holidayAction'\r\nexport * from './dashboardAction'\r\nexport * from './developmentTypeAction'\r\nexport * from './moduleAction'\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/actions/index.js","import {connect} from 'react-redux'\r\nimport {EstimationProjectAwardForm} from \"../../components\"\r\nimport * as logger from '../../clientLogger'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (formInput) => {\r\n        formInput.billedHours = parseInt(formInput.billedHours)\r\n        logger.debug(logger.ESTIMATION_PROJECT_AWARD_FORM_SUBMIT, \"formInput:\", formInput)\r\n        return dispatch(A.addCreateReleaseOnServer(formInput)).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success(\"Project Awarded\")\r\n                // hide dialog\r\n                dispatch(A.hideComponent(COC.ESTIMATION_PROJECT_AWARD_FORM_DIALOG))\r\n            } else {\r\n                NotificationManager.error(\"Project Awardation Failed\")\r\n            }\r\n        })\r\n    }\r\n})\r\nconst mapStateToProps = (state) => {\r\n\r\n    let managers = []\r\n    let leaders = []\r\n    let team = []\r\n\r\n\r\n    if (state.user.userWithRoleCategory) {\r\n        // Users who has role as a manager or leader or both\r\n        managers = state.user.userWithRoleCategory && state.user.userWithRoleCategory.managers ? state.user.userWithRoleCategory.managers : []\r\n        leaders = state.user.userWithRoleCategory && state.user.userWithRoleCategory.leaders ? state.user.userWithRoleCategory.leaders : []\r\n        team = state.user.userWithRoleCategory && state.user.userWithRoleCategory.team ?\r\n            state.user.userWithRoleCategory.team.map((dev, idx) => {\r\n                dev.name = dev.firstName + ' ' + dev.lastName\r\n                return dev\r\n            })\r\n            : []\r\n\r\n    }\r\n\r\n    return {\r\n        team,\r\n        managers,\r\n        leaders\r\n    }\r\n}\r\n\r\nconst EstimationProjectAwardFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EstimationProjectAwardForm)\r\n\r\nexport default EstimationProjectAwardFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/EstimationProjectAwardFormContainer.js","import {connect} from 'react-redux'\r\nimport {LoginForm} from \"../../components\"\r\nimport {loginUserOnServer} from \"../../actions\"\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => dispatch(loginUserOnServer(values))\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        errorMsg: state.user.loginError\r\n    }\r\n}\r\n\r\nconst LoginFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LoginForm)\r\n\r\nexport default LoginFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/LoginFormContainer.js","// tabs\r\nexport const PERMISSION_TAB = \"Permission\"\r\nexport const ROLE_TAB = \"Role\"\r\nexport const USER_TAB = \"User\"\r\nexport const ADMIN_USER_TAB = \"Manage User\"\r\nexport const USER_PROFILE_TAB = \"Profile\"\r\nexport const ADMIN_PERMISSION_TAB = \"Manage Permission\"\r\nexport const EMPLOYEE_SETTING_TAB = \"Employee Setting\"\r\nexport const LEAVE_SETTING_TAB = \"Leave Setting\"\r\nexport const HOLIDAY_TAB = \"Holiday \"\r\n\r\n// forms\r\nexport const PERMISSION_FORM = \"PERMISSION_FORM\"\r\nexport const ROLE_FORM = \"ROLE_FORM\"\r\nexport const USER_FORM = \"USER_FORM\"\r\nexport const ADMIN_USER_FORM = \"ADMIN_USER_FORM\"\r\nexport const USER_PROFILE_FORM = \"USER_PROFILE_FORM\"\r\nexport const ADMIN_ROLE_FORM = \"ADMIN_ROLE_FORM\"\r\nexport const CLIENT_FORM = \"CLIENT_FORM\"\r\nexport const PROJECT_FORM = \"PROJECT_FORM\"\r\nexport const TECHNOLOGY_FORM = \"TECHNOLOGY_FORM\"\r\nexport const LEAVE_REQUEST_FORM = \"LEAVE_REQUEST_FORM\"\r\nexport const ATTENDANCE_SETTING_FORM = \"ATTENDANCE_SETTING_FORM\"\r\nexport const MERGE_TASK_PLANNING_FORM = \"MERGE_TASK_PLANNING_FORM\"\r\nexport const EMPLOYEE_SETTING_FORM = \"EMPLOYEE_SETTING_FORM\"\r\nexport const LEAVE_SETTING_FORM = \"LEAVE_SETTING_FORM\"\r\nexport const HOLIDAY_FORM = \"HOLIDAY_FORM\"\r\n\r\n\r\n// lists\r\nexport const PERMISSION_LIST = \"PERMISSION_LIST\"\r\nexport const ROLE_LIST = \"ROLE_LIST\"\r\nexport const USER_LIST = \"USER_LIST\"\r\nexport const ADMIN_USER_LIST = \"ADMIN_USER_LIST\"\r\nexport const ADMIN_ROLE_LIST = \"ADMIN_ROLE_LIST\"\r\nexport const ESTIMATION_LIST = \"ESTIMATION_LIST\"\r\nexport const PROJECT_LIST = \"PROJECT_LIST\"\r\nexport const MODULE_LIST = \"MODULE_LIST\"\r\nexport const TECHNOLOGIES_LIST = \"TECHNOLOGIES_LIST\"\r\nexport const CLIENT_LIST = \"CLIENT_LIST\"\r\nexport const LEAVE_LIST = \"LEAVE_LIST\"\r\nexport const RELEASE_LIST = \"RELEASE_LIST\"\r\nexport const RELEASE_PLAN_LIST = \"RELEASE_PLAN_LIST\"\r\nexport const RELEASE_TASK_PLANNING_PAGE = \"RELEASE_TASK_DETAIL_PAGE\"\r\nexport const HOLIDAY_LIST = \"HOLIDAY_LIST\"\r\n\r\n\r\n// dialogs\r\nexport const ESTIMATION_INITIATE_DIALOG = \"ESTIMATION_INITIATE_DIALOG\"\r\nexport const ESTIMATION_TASK_DIALOG = \"ESTIMATION_TASK_DIALOG\"\r\nexport const TECHNOLOGY_FORM_DIALOG = \"TECHNOLOGY_FORM_DIALOG\"\r\nexport const PROJECT_FORM_DIALOG = \"PROJECT_FORM_DIALOG\"\r\nexport const MODULE_FORM_DIALOG = \"MODULE_FORM_DIALOG\"\r\nexport const CLIENT_FORM_DIALOG = \"CLIENT_FORM_DIALOG\"\r\nexport const LEAVE_REQUEST_FORM_DIALOG = \"LEAVE_REQUEST_FORM_DIALOG\"\r\nexport const ESTIMATION_FEATURE_DIALOG = \"ESTIMATION_FEATURE_DIALOG\"\r\nexport const MOVE_TASK_TO_FEATURE_FORM_DIALOG = \"MOVE_TASK_TO_FEATURE_FORM_DIALOG\"\r\nexport const ESTIMATION_SUGGEST_TASK_FORM_DIALOG = \"ESTIMATION_SUGGEST_TASK_FORM_DIALOG\"\r\nexport const ESTIMATION_SUGGEST_FEATURE_FORM_DIALOG = \"ESTIMATION_SUGGEST_FEATURE_FORM_DIALOG\"\r\nexport const ESTIMATION_PROJECT_AWARD_FORM_DIALOG = \"ESTIMATION_PROJECT_AWARD_FORM_DIALOG\"\r\nexport const ESTIMATION_ADD_TO_RELEASE_FORM_DIALOG = \"ESTIMATION_ADD_TO_RELEASE_FORM_DIALOG\"\r\nexport const RELEASE_PLAN_ADD_TO_RELEASE_FORM_DIALOG = \"RELEASE_PLAN_ADD_TO_RELEASE_FORM_DIALOG\"\r\nexport const REPOSITORY_TASK_DETAIL_DIALOG = \"REPOSITORY_TASK_DETAIL_DIALOG\"\r\nexport const REPOSITORY_FEATURE_DETAIL_DIALOG = \"REPOSITORY_FEATURE_DETAIL_DIALOG\"\r\nexport const ESTIMATION_FILTER_DIALOG = \"ESTIMATION_FILTER_DIALOG\"\r\nexport const LEAVE_APPROVE_DIALOG = \"LEAVE_APPROVE_DIALOG\"\r\nexport const LEAVE_REJECT_DIALOG = \"LEAVE_REJECT_DIALOG\"\r\nexport const RELEASE_TASK_PLANNING_FORM_DIALOG = \"RELEASE_TASK_PLANNING_FORM_DIALOG\"\r\nexport const MOVE_TASK_PLAN_DIALOG = \"MOVE_TASK_PLAN_DIALOG\"\r\nexport const UPDATE_RELEASE_DATES_DIALOG = \"UPDATE_RELEASE_DATES_DIALOG\"\r\nexport const TASK_SHIFT_DIALOG = \"TASK_SHIFT_DIALOG\"\r\nexport const DASHBOARD_SECTION = \"DASHBOARD_SECTION\"\r\nexport const REPORT_TASK_DESCRIPTION_DIALOG = \"REPORT_TASK_DESCRIPTION_DIALOG\"\r\nexport const CREATE_RELEASE_FORM_DIALOG = \"CREATE_RELEASE_FORM_DIALOG\"\r\n\r\n// pages\r\nexport const ESTIMATION_DETAIL_PAGE = \"ESTIMATION_DETAIL_PAGE\"\r\nexport const REPORTING_TASK_PAGE = \"REPORTING_TASK_PAGE\"\r\nexport const REPORTING_TASK_DETAIL_PAGE = \"REPORTING_TASK_DETAIL_PAGE\"\r\nexport const CALENDAR_TASK_DETAIL_PAGE = \"CALENDAR_TASK_DETAIL_PAGE\"\r\nexport const CALENDAR_TASK_PAGE = \"CALENDAR_TASK_PAGE\"\r\nexport const LEAVE_DETAIL_PAGE = \"LEAVE_DETAIL_PAGE\"\r\nexport const TASK_REPORT_DETAIL_PAGE = \"TASK_REPORT_DETAIL_PAGE\"\n\n\n// WEBPACK FOOTER //\n// ./client/components/componentConsts.js","import React, {Component} from 'react'\r\nimport {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport {renderCheckBox, renderDateTimePickerString, renderSelect, renderText, renderTextArea} from './fields'\r\nimport {number, required} from \"./validation\"\r\nimport {connect} from 'react-redux'\r\nimport moment from 'moment'\r\nimport momentLocalizer from 'react-widgets-moment'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nmoment.locale('en')\r\nmomentLocalizer()\r\nlet ReleaseTaskPlanningForm = (props) => {\r\n    const {change, handleSubmit, submitting, pristine, reset} = props\r\n    const {allTeam, releaseTeam, releasePlan, projectUsersOnly, initial} = props\r\n    const devStartDateMoment = moment(initial.devStartDate).hour(0).minute(0).second(0).milliseconds(0)\r\n    const devEndDateMoment = moment(initial.devEndDate).hour(0).minute(0).second(0).milliseconds(0)\r\n    const min = devStartDateMoment.toDate()\r\n    const max = devEndDateMoment.toDate()\r\n\r\n    let employees = []\r\n    if (releasePlan && releasePlan.rolesInThisRelease) {\r\n        if (releasePlan.rolesInThisRelease.indexOf(SC.ROLE_MANAGER) > -1)\r\n            employees = projectUsersOnly ? releaseTeam : allTeam\r\n        else if (releasePlan.rolesInThisRelease.indexOf(SC.ROLE_LEADER) > -1)\r\n            employees = releaseTeam\r\n    }\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6 releaseAlign\">\r\n\r\n                <Field name=\"release._id\" component=\"input\" type=\"hidden\"/>\r\n\r\n                <Field name=\"planningDate\"\r\n                       placeholder={\"Date\"}\r\n                       component={renderDateTimePickerString}\r\n                       showTime={false}\r\n                       min={min}\r\n                       max={max}\r\n                       label={\" Date :\"} validate={[required]}/>\r\n                <Field name=\"planning.plannedHours\"\r\n                       placeholder={\"Enter Hours\"}\r\n                       component={renderSelect}\r\n                       label={\"Planning Hours:\"}\r\n                       validate={[required, number]}\r\n                       options={\r\n                           [{'name': '0.5'}, {'name': '1'}, {'name': '1.5'}, {'name': '2'}, {'name': '2.5'}, {'name': '3'}, {'name': '3.5'},\r\n                               {'name': '4'}, {'name': '4.5'}, {'name': '5'}, {'name': '5.5'}, {'name': '6'}, {'name': '6.5'}, {'name': '7'},\r\n                               {'name': '7.5'}, {'name': '8'}, {'name': '8.5'}, {'name': '9'}, {'name': '9.5'}, {'name': '10'}, {'name': '10.5'}\r\n                               ,{'name': '11'}, {'name': '11.5'}, {'name': '12'}]}\r\n                       valueField={\"name\"}\r\n                />\r\n\r\n                <Field name=\"employee.name\" component=\"input\" type=\"hidden\"/>\r\n                {\r\n                    releasePlan && releasePlan.rolesInThisRelease.indexOf(SC.ROLE_MANAGER) > -1 ?\r\n                        <Field name=\"projectUsersOnly\"\r\n                               type=\"checkbox\"\r\n                               label=\"projectUsersOnly\"\r\n                               className=\"input checkbox planchk \"\r\n                               component={renderCheckBox}/> : null\r\n                }\r\n\r\n                <Field name=\"employee._id\" placeholder={\"Name of Developer\"}\r\n                       component={renderSelect}\r\n                       options={employees}\r\n                       label={\"Developer Name:\"}\r\n                       onChange={(event, newValue, oldValue) => {\r\n                           let employee = allTeam.find(e => e._id == newValue)\r\n                           change(\"employee.name\", employee.name)\r\n                       }}\r\n                       validate={[required]}/>\r\n\r\n                <div className=\"planTextArea\">\r\n                    <Field name=\"description\"\r\n                           label={\"Description:\"}\r\n                           component={renderTextArea}\r\n                           type=\"text\"\r\n                           rows={8}\r\n                           placeholder=\"Enter task description\"\r\n                           validate={[required]}/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"col-md-12 releaseAlign\">\r\n                <div className=\"col-md-4 releasePlanBtn\">\r\n                    <button type=\"submit\" className=\"btn customBtn \" disabled={submitting || pristine}>Plan Task\r\n                    </button>\r\n                </div>\r\n                <div className=\"col-md-4 releaseResetBtn\">\r\n                    <button type=\"button\" className=\"btn customBtn\" disabled={submitting || pristine} onClick={reset}>\r\n                        Reset\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nReleaseTaskPlanningForm = reduxForm({\r\n    form: 'task-planning'\r\n})(ReleaseTaskPlanningForm)\r\n\r\nconst selector = formValueSelector('task-planning')\r\n\r\nReleaseTaskPlanningForm = connect(\r\n    state => {\r\n        const projectUsersOnly = selector(state, 'projectUsersOnly')\r\n        return {\r\n            projectUsersOnly\r\n        }\r\n    }\r\n)(ReleaseTaskPlanningForm)\r\n\r\n\r\nexport default ReleaseTaskPlanningForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/ReleaseTaskPlanningForm.js","import {connect} from 'react-redux'\r\nimport {TaskReportDetailPage} from '../../components/index'\r\nimport * as A from '../../actions/index'\r\nimport * as COC from '../../components/componentConsts'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport * as U from '../../../server/utils'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    ReportGoBack: (event) => {\r\n        dispatch(A.showComponentHideOthers(COC.RELEASE_PLAN_LIST))\r\n\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    taskPlan: state.report.reportTaskDetail.taskPlan,\r\n    release: state.report.reportTaskDetail.release,\r\n    releasePlan: state.report.reportTaskDetail.releasePlan,\r\n    taskPlans: state.report.reportTaskDetail.taskPlans\r\n})\r\n\r\nconst TaskReportDetailPageContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TaskReportDetailPage)\r\n\r\nexport default TaskReportDetailPageContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/TaskReportDetailPageContainer.js","import React, {Component} from 'react'\r\n\r\nclass RepositoryFeatureDetailPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showHistory: false\r\n        }\r\n        this.showHistoryDetail = this.showHistoryDetail.bind(this);\r\n    }\r\n\r\n    showHistoryDetail() {\r\n        this.setState({showHistory: !this.state.showHistory})\r\n    }\r\n\r\n\r\n    render() {\r\n        const {feature, estimationId} = this.props\r\n        const {showHistory} = this.state\r\n        return (\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-10\">\r\n                    <h3 className=\"repo-detail-header\">{feature.name} </h3>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                    <h3 className=\"repo-detail-hour\">{feature.estimatedHours ? '(' + feature.estimatedHours + ')' : '(00)'} </h3>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <p className=\"repositoryModalPara repo-detail\">Feature Description: {feature.description} </p>\r\n                </div>\r\n                <div className=\"col-md-12 pad\">\r\n                    <div className=\"col-md-3\">\r\n                        <button className=\"customBtn\" type=\"button\" onClick={\r\n                            this.showHistoryDetail\r\n                        }>History\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-md-4 pad\">\r\n                        <button className=\"customBtn\" type=\"button\" onClick={() => {\r\n                            this.props.addFeature(estimationId, feature._id)\r\n                        }}>Add to Estimation\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-md-5\">\r\n                        <button className=\"customBtn\" type=\"button\" onClick={() => {\r\n                            this.props.copyFeature(estimationId, feature._id)\r\n                        }}>Copy To Estimation\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {showHistory &&\r\n                <div>{feature.hasHistory ?\r\n                    <div>\r\n                        <lablel>under Construction</lablel>\r\n                    </div>\r\n                    :\r\n                    <lablel>No History available</lablel>\r\n\r\n                } </div>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RepositoryFeatureDetailPage\n\n\n// WEBPACK FOOTER //\n// ./client/components/pages/RepositoryFeatureDetailPage.js","import React, {Component} from 'react'\r\nimport {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport {renderDateTimePickerString, renderSelect,} from './fields'\r\nimport moment from 'moment'\r\nimport momentLocalizer from 'react-widgets-moment'\r\nimport {connect} from 'react-redux'\r\nimport _ from 'lodash'\r\nimport * as U from '../../../server/utils'\r\n\r\nmoment.locale('en')\r\nmomentLocalizer()\r\nlet ReleaseDeveloperFilterForm = (props) => {\r\n    const {team, handleSubmit, employeeId, startDate, endDate, selectedReleaseID} = props\r\n    let min = startDate && U.nowMomentInIndia().isSameOrBefore(U.momentInUTC(startDate)) ? U.momentInUTC(startDate) : U.nowMomentInIndia()\r\n    let max = U.momentInUTC(endDate)\r\n    console.log(\"min\", min)\r\n    console.log(\"max\", max)\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className=\"col-md-12 planFilterDivider\">\r\n            <div className=\"col-md-4 \">\r\n                <Field name=\"employeeId\" placeholder={\"Name of Developer\"}\r\n                       onChange={(event, newValue, oldValue) => {\r\n                           props.getEmployeePlanDetails(newValue, startDate, endDate, selectedReleaseID)\r\n                       }}\r\n                       component={renderSelect} options={team}\r\n                       label={\"Developer Name:\"}/>\r\n\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n                <div className=\"col-md-6\">\r\n                    <Field name=\"startDate\"\r\n                           placeholder={\"Start Date\"}\r\n                           component={renderDateTimePickerString}\r\n                           onChange={(event, newValue, oldValue) => {\r\n                               props.getEmployeePlanDetails(employeeId, newValue, endDate, selectedReleaseID)\r\n                           }}\r\n                           showTime={false}\r\n                           min={min ? min.toDate() : min}\r\n                           max={max ? max.toDate() : max}\r\n                           label={\" From :\"}/>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <Field name=\"endDate\" placeholder={\" End Date\"} component={renderDateTimePickerString}\r\n                           onChange={(event, newValue, oldValue) => {\r\n                               props.getEmployeePlanDetails(employeeId, startDate, newValue, selectedReleaseID)\r\n                           }}\r\n                           showTime={false}\r\n                           min={min ? min.toDate() : min}\r\n                           label={\" To :\"}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nReleaseDeveloperFilterForm = reduxForm({\r\n    form: 'developer-filter'\r\n})(ReleaseDeveloperFilterForm)\r\n\r\nconst selector = formValueSelector('developer-filter')\r\n\r\nReleaseDeveloperFilterForm = connect(\r\n    state => {\r\n        const {employeeId, startDate, endDate} = selector(state, 'employeeId', 'startDate', 'endDate')\r\n        return {\r\n            employeeId,\r\n            startDate,\r\n            endDate\r\n        }\r\n    }\r\n)(ReleaseDeveloperFilterForm)\r\n\r\n\r\nexport default ReleaseDeveloperFilterForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/ReleaseDeveloperFilterForm.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {LeaveRequestFormContainer} from \"../../containers\"\r\n\r\nconst LeaveRequestFormDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Raise Leave</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <LeaveRequestFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default LeaveRequestFormDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/LeaveRequestFormDialog.js","import * as AC from \"../actions/actionConsts\"\r\n\r\nlet initialState = {\r\n    all: [],\r\n    selected: {}\r\n}\r\n\r\nlet moduleReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AC.ADD_MODULES:\r\n            return Object.assign({}, state, {all: action.modules})\r\n        case AC.ADD_MODULE:\r\n            return Object.assign({}, state, {all: [...state.all, action.module]})\r\n        case AC.EDIT_MODULE:\r\n            return Object.assign({}, state, {all: state.all.map(item => item._id == action.module._id ? action.module : item)})\r\n        case AC.DELETE_MODULE:\r\n            return Object.assign({}, state, {all: state.all.filter(item => item._id !== action.moduleID)})\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default moduleReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/moduleReducer.js","import * as AC from '../actions/actionConsts'\r\n\r\nlet initialState = {\r\n    all: [],\r\n    selected: {}\r\n}\r\n\r\nlet developmentTypeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AC.ADD_DEVELOPMENT_TYPES:\r\n            return Object.assign({}, state, {all: action.developmentTypes})\r\n        case AC.ADD_DEVELOPMENT_TYPE:\r\n            return Object.assign({}, state, {all: [...state.all, action.developmentType]})\r\n        case AC.DELETE_DEVELOPMENT_TYPE:\r\n            return Object.assign({}, state, {all: state.all.filter(item => item._id !== action.developmentTypeID)})\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default developmentTypeReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/developmentTypeReducer.js","import {connect} from 'react-redux'\r\nimport {ReportingDateNavBar} from \"../../components\"\r\nimport * as A from '../../actions/index'\r\nimport moment from 'moment'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onReleaseSelected: (releaseID, planDate, iterationType, taskStatus) => {\r\n        if (releaseID && planDate) {\r\n            dispatch(A.getReportingTasksForDate(releaseID, planDate, iterationType, taskStatus))\r\n\r\n        }\r\n    },\r\n    setReportDate: (reportDate) => {\r\n        return dispatch(A.setReportDate(reportDate))\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    reportedStatus: state.report.reportedStatus,\r\n    releaseID: state.report.releaseID,\r\n    iterationType: state.report.iterationType,\r\n    initialValues: {\r\n        \"dateOfReport\": moment(state.report.dateStringOfReport).toDate()\r\n    }\r\n})\r\n\r\nconst ReportingDateNavBarContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReportingDateNavBar)\r\n\r\nexport default ReportingDateNavBarContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/ReportingDateNavBarContainer.js","import React, {Component} from 'react'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport {ConfirmationDialog} from \"../\"\r\nimport {NewConfirmationDialog} from \"../dialogs/ConfirmationDialog\";\r\nimport {EstimationFeaturesContainer, EstimationTasksContainer, RepositorySearchContainer} from \"../../containers\"\r\nimport * as logger from '../../clientLogger'\r\nimport _ from 'lodash'\r\n\r\n\r\nclass EstimationDetail extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showEstimationRequestDialog: false,\r\n            showEstimationApproveDialog: false,\r\n            showEstimationDeleteDialog: false\r\n        };\r\n    }\r\n\r\n    onClose() {\r\n        this.setState({\r\n            showEstimationRequestDialog: false,\r\n            showEstimationReviewDialog: false,\r\n            showEstimationChangeDialog: false,\r\n            showEstimationApproveDialog: false,\r\n            showEstimationReopenDialog: false,\r\n            showEstimationDeleteDialog: false\r\n        })\r\n    }\r\n\r\n    onConfirmEstimationApprove() {\r\n        this.setState({showEstimationApproveDialog: false})\r\n        this.props.estimationApprove(this.props.estimation)\r\n    }\r\n\r\n    onConfirmEstimationRequest() {\r\n        this.setState({showEstimationRequestDialog: false})\r\n        this.props.sendEstimationRequest(this.props.estimation)\r\n    }\r\n\r\n    onConfirmReviewRequest() {\r\n        this.setState({showEstimationReviewDialog: false})\r\n        this.props.sendReviewRequest(this.props.estimation)\r\n    }\r\n\r\n    onConfirmChangeRequest() {\r\n        this.setState({showEstimationChangeDialog: false})\r\n        this.props.sendChangeRequest(this.props.estimation)\r\n    }\r\n\r\n    onConfirmReopen() {\r\n        this.setState({showEstimationReopenDialog: false})\r\n        this.props.reopenEstimation(this.props.estimation)\r\n    }\r\n\r\n    onConfirmDelete() {\r\n        this.setState({showEstimationDeleteDialog: false})\r\n        this.props.deleteEstimation(this.props.estimation).then(json => {\r\n            if (json.success) {\r\n                this.props.history.push(\"/app-home/estimation\")\r\n                this.props.estimationGoBack()\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        logger.debug(logger.ESTIMATION_DETAIL_RENDER, this.props)\r\n        const {estimation, userRoleInThisEstimation} = this.props;\r\n        let editView = false\r\n        if ((userRoleInThisEstimation === SC.ROLE_NEGOTIATOR && _.includes([SC.STATUS_INITIATED, SC.STATUS_REVIEW_REQUESTED], estimation.status)) || (userRoleInThisEstimation === SC.ROLE_ESTIMATOR && _.includes([SC.STATUS_ESTIMATION_REQUESTED, SC.STATUS_CHANGE_REQUESTED], estimation.status))) {\r\n            editView = true\r\n        }\r\n\r\n        return <div>\r\n            <div className=\"col-md-8 pad estimation-container\">\r\n                <div className=\"col-md-12 estimateheader\">\r\n                    {estimation.canApprove && userRoleInThisEstimation === SC.ROLE_NEGOTIATOR && estimation.status === SC.STATUS_REVIEW_REQUESTED ?\r\n                        <div className=\"col-md-5 pad\">\r\n\r\n                            <div className=\"col-md-6 backarrow estimationBackArrow\">\r\n                                <h5>\r\n                                    <button title=\"Go Back\" className=\"btn-link pad\" onClick={() => {\r\n                                        this.props.history.push(\"/app-home/estimation\")\r\n                                        this.props.estimationGoBack()\r\n                                    }}><i className=\"glyphicon glyphicon-arrow-left\"></i></button>\r\n\r\n                                    <b>{estimation.project ? estimation.project.name : ''}</b>\r\n                                </h5>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <button className=\"btn approveBtn\"\r\n                                        onClick={() => this.setState({showEstimationApproveDialog: true})}>Approve\r\n                                    Estimation\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        : <div className=\"col-md-5 pad\">\r\n\r\n                            <div title=\"Go Back\" className=\"col-md-5 backarrow estimationBackArrow\">\r\n                                <h5>\r\n                                    <button className=\"btn-link pad\" onClick={() => {\r\n                                        this.props.history.push(\"/app-home/estimation\")\r\n                                        this.props.estimationGoBack()\r\n                                    }}><i className=\"glyphicon glyphicon-arrow-left\"></i></button>\r\n\r\n                                    <b>{estimation.project ? estimation.project.name : ''}</b>\r\n                                </h5>\r\n                            </div>\r\n                            {\r\n                                (_.includes([SC.STATUS_INITIATED], estimation.status) && userRoleInThisEstimation === SC.ROLE_NEGOTIATOR) &&\r\n                                <button type=\"button\" className=\"btn customBtn\" onClick={() => {\r\n                                    this.props.editEstimationInitiateForm(estimation)\r\n                                }\r\n                                }>Edit Estimation</button>\r\n\r\n                            }\r\n                        </div>\r\n\r\n\r\n                    }\r\n                    {\r\n                        this.state.showEstimationRequestDialog &&\r\n                        <NewConfirmationDialog show={true} onConfirm={this.onConfirmEstimationRequest.bind(this)}\r\n                                               title=\"Estimation Request\" onClose={this.onClose.bind(this)}\r\n                        >\r\n                            <div>This will send an 'Estimation Request' to\r\n                                <span className={\"highlightText\"}> {this.props.estimation.estimator.firstName}</span> so\r\n                                that appropriate estimates can be added.\r\n                                You will be unable to edit it until <span\r\n                                    className={\"highlightText\"}> {this.props.estimation.estimator.firstName}</span> sends\r\n                                estimation back for your review. Please confirm.\r\n                            </div>\r\n                        </NewConfirmationDialog>\r\n                    }\r\n                    {\r\n                        this.state.showEstimationApproveDialog &&\r\n                        <ConfirmationDialog show={true} onConfirm={this.onConfirmEstimationApprove.bind(this)}\r\n                                            title=\"Estimation Approve\" onClose={this.onClose.bind(this)}\r\n                                            body={`Approving estimation means that you are satisfied with this estimation and now locking it. Neither you nor ${this.props.estimation.estimator.firstName} would be able to change anything in estimation. You can re-open estimation anytime to start modifying it again. Please confirm!`}/>\r\n                    }\r\n\r\n                    {\r\n                        this.state.showEstimationChangeDialog &&\r\n                        <NewConfirmationDialog show={true} onConfirm={this.onConfirmChangeRequest.bind(this)}\r\n                                               title=\"Change Request\" onClose={this.onClose.bind(this)}>\r\n                            <div>This will send a 'Change Request' to\r\n                                <span className={\"highlightText\"}> {this.props.estimation.estimator.firstName}</span> so\r\n                                that appropriate changes can be made to estimation as per your suggestions.\r\n                                You will be unable to edit it until <span\r\n                                    className={\"highlightText\"}> {this.props.estimation.estimator.firstName}</span> sends\r\n                                estimation back for your review. Please confirm.\r\n                            </div>\r\n                        </NewConfirmationDialog>\r\n\r\n                    }\r\n\r\n                    {\r\n                        this.state.showEstimationReviewDialog &&\r\n                        <ConfirmationDialog show={true} onConfirm={this.onConfirmReviewRequest.bind(this)}\r\n                                            title=\"Estimation Request\" onClose={this.onClose.bind(this)}\r\n                                            dialogName={SC.DIALOG_ESTIMATION_REQUEST_REVIEW}\r\n                                            hasError={this.props.estimation.hasError}\r\n                                            body={this.props.estimation && this.props.estimation.hasError ?\r\n                                                `There are still few tasks/features that have estimated hours missing. This would prevent ${this.props.estimation.negotiator.firstName} from approving them during review and hence estimation would need to be send back to you needing extra iteration for completion. Press 'Cancel' to add missing information or press Confirm to send Estimation for review` :\r\n                                                `You are about to send 'Review Request' to ${this.props.estimation.negotiator.firstName}. Please note , any estimates given by you would be considered final and ${this.props.estimation.negotiator.firstName} would be able to approve them without needing further changes from you. Please confirm!`\r\n                                            }\r\n                        />\r\n                    }\r\n                    {\r\n                        this.state.showEstimationReopenDialog &&\r\n                        <ConfirmationDialog show={true} onConfirm={this.onConfirmReopen.bind(this)}\r\n                                            title=\"Estimation Reopen\" onClose={this.onClose.bind(this)}\r\n                                            body=\"Reopening an estimation means you would like to make changes to this estimation. Please confirm!\"/>\r\n                    }\r\n                    {\r\n                        this.state.showEstimationDeleteDialog &&\r\n                        <ConfirmationDialog show={true} onConfirm={this.onConfirmDelete.bind(this)}\r\n                                            dialogName={SC.DIALOG_ESTIMATION_REQUEST_REVIEW}\r\n                                            title=\"Estimation Delete\" onClose={this.onClose.bind(this)}\r\n                                            hasError={true}\r\n                                            body=\"Deleting this estimation would remove it from database. This operation cannot be reversed. Please confirm!!!\"/>\r\n                    }\r\n\r\n\r\n                    <div className=\"col-md-3\">\r\n                        {\r\n                            userRoleInThisEstimation === SC.ROLE_NEGOTIATOR && estimation.status === SC.STATUS_INITIATED &&\r\n                            <button className=\"btn customBtn\"\r\n                                    onClick={() => this.setState({showEstimationRequestDialog: true})}>Request\r\n                                Estimation\r\n                            </button>\r\n                        }\r\n                        {\r\n\r\n                            userRoleInThisEstimation === SC.ROLE_NEGOTIATOR && estimation.status === SC.STATUS_APPROVED &&\r\n                            <button className=\"btn reopenBtn\"\r\n                                    onClick={() => this.setState({showEstimationReopenDialog: true})}>Reopen Estimation\r\n                            </button>\r\n                        }\r\n                        {\r\n                            userRoleInThisEstimation === SC.ROLE_NEGOTIATOR && estimation.status === SC.STATUS_REVIEW_REQUESTED &&\r\n                            <button className=\"btn customBtn\"\r\n                                    onClick={() => this.setState({showEstimationChangeDialog: true})}>\r\n                                Request Change\r\n                            </button>\r\n                        }\r\n\r\n                        {\r\n                            userRoleInThisEstimation === SC.ROLE_ESTIMATOR && (estimation.status === SC.STATUS_ESTIMATION_REQUESTED || estimation.status === SC.STATUS_CHANGE_REQUESTED) &&\r\n                            <button className=\"btn customBtn\"\r\n                                    onClick={() => {\r\n\r\n                                        this.props.hasErrorInEstimation(this.props.estimation)\r\n                                        this.setState({showEstimationReviewDialog: true})\r\n                                    }\r\n                                    }>\r\n                                Request Review\r\n                            </button>\r\n                        }\r\n\r\n                    </div>\r\n                    <div className=\"col-md-1\">\r\n                        {\r\n                            userRoleInThisEstimation === SC.ROLE_NEGOTIATOR && (estimation.status === SC.STATUS_INITIATED || estimation.status === SC.STATUS_REVIEW_REQUESTED) &&\r\n                            < button type=\"button\" className=\"btn customBtn deleteEstimationBtn\" onClick={() => {\r\n                                this.setState({showEstimationDeleteDialog: true})\r\n\r\n                            }\r\n                            }><i className=\"fa fa-trash iconClr \"></i></button>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-md-3 pad \">\r\n                        <div className=\"estimationfileoption\">\r\n                            <ul className=\"list-unstyled\">\r\n                                {editView &&\r\n                                < button type=\"button\" className=\"btn customBtn filterAlign\" onClick={() => {\r\n                                    this.props.estimationFilterForm()\r\n                                }\r\n                                }>filter</button>\r\n                                }\r\n\r\n                                {/*\r\n                                    <li><a href=\"\"> <i className=\"fa fa-file-pdf-o\"></i></a></li>\r\n                                    < li > < a href=\"\"> <i className=\"fa fa-file-word-o\"></i></a></li>\r\n                                    <li><a href=\"\"> <i className=\" fa fa-file-excel-o\"></i></a></li>\r\n                                    <li><a href=\"\"> <i className=\"glyphicon glyphicon-option-vertical pull-right\">\r\n                                    </i></a>\r\n                                    </li>\r\n                                */}\r\n\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                < div\r\n                    className=\"col-md-12 \">\r\n                    < div\r\n                        className=\"col-md-2 pad\">\r\n                        < div\r\n                            className=\"estimationuser tooltip\"> < span> C < /span>\r\n        <p className=\"tooltiptext\">{estimation.client ? estimation.client.name : ''}</p>\r\n        <\r\n                            /div>\r\n        <div className=\"estimationuser tooltip\"><span>N</span>\r\n            <p className=\"tooltiptext\">{estimation.negotiator ? estimation.negotiator.firstName : ''}</p>\r\n        </div>\r\n        < div\r\n            className=\"estimationuser tooltip\"> < span> E < /span>\r\n        <p className=\"tooltiptext\">{estimation.estimator ? estimation.estimator.firstName : ''}</p>\r\n        <\r\n            /div>\r\n    </div>\r\n        <div className=\"col-md-2\">\r\n            <div className=\"logo\">\r\n\r\n                {\r\n                    estimation.technologies.map(t =>\r\n                        <img src={\"/images/technology/\" + t.name.replace(' ', '_') + \".png\"}/>\r\n                    )\r\n                }\r\n\r\n                {/*\r\n                            <img src=\"/images/react.png\"/>\r\n                            <img src=\"/images/mongodb.png\"/>\r\n                              <img src=\"/images/node.png\"/>\r\n                             */}\r\n\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-5\">\r\n                {(userRoleInThisEstimation === SC.ROLE_NEGOTIATOR && _.includes([SC.STATUS_INITIATED, SC.STATUS_REVIEW_REQUESTED], estimation.status) ||\r\n                    userRoleInThisEstimation === SC.ROLE_ESTIMATOR && _.includes([SC.STATUS_ESTIMATION_REQUESTED, SC.STATUS_CHANGE_REQUESTED], estimation.status))\r\n                && <form>\r\n                    <button type=\"button\" className=\"btn taskbtn\"\r\n                            onClick={() => this.props.showAddTaskForm(estimation)}><i\r\n                        className=\"fa fa-plus-circle\"></i>\r\n                        Add Task\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn featurebtn\"\r\n                            onClick={() => this.props.showAddFeatureForm(estimation)}\r\n                    ><i className=\"fa fa-plus-circle\"></i>\r\n                        Add Feature\r\n                    </button>\r\n                </form>}\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n            <div className=\"col-md-6  esTime\">\r\n            <b>{estimation.estimatedHours + \" Hrs\"}</b>\r\n        <div className=\"clock\">\r\n            <i className=\"fa fa-clock-o \" title=\"estimated Hours\"></i>\r\n            </div>\r\n\r\n        </div>\r\n        <div className=\"col-md-6  esTime\">\r\n            <b>{estimation.suggestedHours + \" Hrs\"}</b>\r\n            <div className=\"suggestedclock\">\r\n            <i className=\"fa fa-clock-o \" title=\"Suggeted Hours\"></i>\r\n        </div>\r\n\r\n    </div>\r\n    </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\" col-md-12\">\r\n                            <div className=\"col-md-6\"><span className=\"customBtn\">{estimation.status}</span></div>\r\n                            <div className=\"col-md-2 col-md-offset-4\">\r\n                                <button style={{float: 'right'}} type=\"button\" className=\"btn customBtn\" onClick={\r\n                                    () => {\r\n                                        this.props.refreshEstimation(estimation)\r\n                                    }}><i className=\"fa fa-refresh\"></i></button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            <EstimationFeaturesContainer estimationStatus={estimation.status}\r\n                                                         editView={editView}\r\n                                                         loggedInUserRole={userRoleInThisEstimation}/>\r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"col-md-12\">\r\n                            <EstimationTasksContainer estimationStatus={estimation.status}\r\n                                                      editView={editView}\r\n                                                      loggedInUserRole={userRoleInThisEstimation}/>\r\n                        </div>\r\n                        {(estimation.status === SC.STATUS_APPROVED) && (userRoleInThisEstimation === SC.ROLE_NEGOTIATOR) &&\r\n                        <div className=\"col-md-12\">\r\n                            <button type=\"button\" className=\"btn customBtn\" onClick={\r\n                                () => {\r\n                                    this.props.showProjectAwardForm(estimation)\r\n                                }}>Create Release\r\n                            </button>\r\n                            <button type=\"button\" className=\"btn customBtn\" onClick={\r\n                                () => {\r\n                                    this.props.showAddToReleaseForm(estimation)\r\n                                }}>Add to Release\r\n                            </button>\r\n                        </div>}\r\n                    </div>\r\n                    <div className=\"col-md-4 estimationsection pad\">\r\n                        <RepositorySearchContainer editView={editView}/>\r\n                    </div>\r\n                </div>\r\n                }\r\n\r\n                }\r\n\r\n                export default EstimationDetail\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/pages/EstimationDetail.js","import * as A from \"../../actions\";\r\nimport * as COC from \"../../components/componentConsts\";\r\nimport {connect} from \"react-redux\";\r\nimport {ClientList} from \"../../components\";\r\nimport {initialize, SubmissionError} from \"redux-form\";\r\nimport {NotificationManager} from \"react-notifications\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    showClientCreationForm: () => {\r\n\r\n        dispatch(A.showComponent(COC.CLIENT_FORM_DIALOG))\r\n    },\r\n    showClientEditForm: (client) => {\r\n        //dispatch(A.getAllClientsFromServer()),\r\n        dispatch(A.showComponent(COC.CLIENT_FORM_DIALOG)),\r\n            dispatch(initialize('client', client))\r\n    },\r\n    deleteClient: (clientID) => dispatch(A.deleteClientOnServer(clientID)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success('Client Removed Successfully')\r\n        } else {\r\n            NotificationManager.error('Client Not removed!')\r\n            throw new SubmissionError({client: \"Client Removal Failed\"})\r\n        }\r\n    }),\r\n\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loggedInUser: state.user.loggedIn,\r\n        clients: state.client.all\r\n    }\r\n}\r\n\r\nconst ClientListContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ClientList)\r\n\r\nexport default ClientListContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/ClientListContainer.js","import React, {Component} from 'react'\r\nimport Header from '../sections/Header'\r\nimport Tabs from '../sections/Tabs'\r\n\r\nclass SuperAdminHome extends Component {\r\n    render() {\r\n        return ([<Header key=\"super_admin_header\" {...this.props}/>,\r\n            <div key=\"adminhome_div\" className=\"col-md-12 pad topNav\">\r\n                <Tabs match={this.props.match} {...this.props}/>\r\n            </div>])\r\n    }\r\n}\r\n\r\nexport default SuperAdminHome\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/pages/SuperAdminHome.js","import React, {Component} from 'react';\r\nimport Header from '../sections/Header'\r\nimport Tabs from '../sections/Tabs'\r\n\r\nclass AdminHome extends Component {\r\n    render() {\r\n        return ([<Header key=\"admin_header1\" {...this.props}/>,\r\n            <div key=\"admin-home_div\" className=\"col-md-12 pad topNav\">\r\n                <Tabs match={this.props.match} {...this.props}/>\r\n            </div>])\r\n    }\r\n}\r\n\r\nexport default AdminHome\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/pages/AdminHome.js","import {connect} from 'react-redux'\r\nimport {ReleaseDashboardSection} from \"../../components\"\r\nimport * as A from \"../../actions\";\r\nimport moment from 'moment'\r\n\r\nconst mapDispatchToprops = (dispatch, ownProps) => ({\r\n    getDashboardData: (release) => {\r\n        dispatch(A.getReleaseForDashboard(release._id)).then(() => {\r\n            let m = moment()\r\n            dispatch(A.getReleaseDayPlannings(release._id, m.month(), m.year()))\r\n        })\r\n    },\r\n    getReleaseDailyPlannings: (releaseID, month, year) => {\r\n        dispatch(A.getReleaseDayPlannings(releaseID, month, year))\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    plannedVsUnplannedWork: state.dashboard.plannedVsUnplannedWork,\r\n    overallProgress: state.dashboard.overallProgress,\r\n    completedPendingProgress: state.dashboard.completedPendingProgress,\r\n    plannedVsReported: state.dashboard.plannedVsReported,\r\n    hoursData: state.dashboard.hoursData,\r\n    estimatedProgress: state.dashboard.estimatedProgress,\r\n    progress: state.dashboard.progress,\r\n    unplannedReport: state.dashboard.unplannedReport,\r\n    dailyPlannings: state.dashboard.dailyPlannings,\r\n    selectedRelease: state.release.selectedRelease,\r\n    resetDailyPlanningMonth: state.dashboard.resetDailyPlanningMonth,\r\n    mgmtData: state.dashboard.mgmtData\r\n})\r\n\r\n\r\nconst ReleaseDashboardSectionContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToprops\r\n)(ReleaseDashboardSection)\r\n\r\nexport default ReleaseDashboardSectionContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/sections/ReleaseDashboardSectionContainer.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport {withRouter} from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport * as U from '../../../server/utils'\r\nimport {ConfirmationDialog} from \"../index\";\r\n\r\nclass LeaveList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showLeaveDeleteRequestDialog: false,\r\n            row: {}\r\n        };\r\n    }\r\n\r\n    onClose() {\r\n        this.setState({\r\n            showLeaveDeleteRequestDialog: false,\r\n        })\r\n    }\r\n\r\n    rowClassNameFormat(row, rowIdx) {\r\n        return row.status === SC.LEAVE_STATUS_APPROVED ? 'td-row-approved' : row.status === SC.LEAVE_STATUS_CANCELLED ? 'td-row-cancelled' : '';\r\n    }\r\n\r\n    formatCreatedDate(leave) {\r\n        if (leave) {\r\n            return moment(leave).format(\"DD-MM-YYYY \")\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatLeaveRaisedUser(user) {\r\n        if (user && user.firstName) {\r\n            return user.firstName + ' ' + user.lastName\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatLeaveApproverUser(user) {\r\n        if (user && user.name) {\r\n            return user.name\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatLeaveType(leaveType) {\r\n        if (leaveType)\r\n            return leaveType.name\r\n        return ''\r\n    }\r\n\r\n    viewButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\" btn btn-custom\" type=\"button\" onClick={() => {\r\n                this.props.history.push('/app-home/leave-detail')\r\n                this.props.showLeaveDetails(row)\r\n            }}>\r\n                <i className=\"fa fa-eye\"></i>\r\n            </button>\r\n        )\r\n    }\r\n\r\n\r\n    viewDeleteButton(cell, row, enumObject, rowIndex) {\r\n\r\n\r\n        return (<button\r\n                className=\" btn btn-custom\"\r\n                disabled={!row.canDelete}\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    this.setState({showLeaveDeleteRequestDialog: true, row: row})\r\n                }}>\r\n                <i className=\"fa fa-trash\"></i>\r\n            </button>\r\n        )\r\n\r\n    }\r\n\r\n    viewCancelButton(cell, row, enumObject, rowIndex) {\r\n\r\n\r\n        return (<button className=\" btn btn-custom \" type=\"button\"\r\n                        disabled={!row.canCancel} onClick={() => {\r\n                return this.props.cancelLeave(row)\r\n            }}>\r\n                <i className=\"fa fa-remove\"></i>\r\n            </button>\r\n        )\r\n\r\n    }\r\n\r\n    viewApproveButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\" btn btn-custom\"\r\n                        type=\"button\"\r\n                        disabled={!row.canApprove}\r\n                        onClick={() => {\r\n                            return this.props.approveLeave(row)\r\n                        }}>\r\n                <i className=\"fa fa-check approveLeave\"></i>\r\n            </button>\r\n        )\r\n\r\n    }\r\n\r\n    onConfirmDeleteRequest() {\r\n        this.setState({showLeaveDeleteRequestDialog: false})\r\n        this.props.revokeLeave(this.state.row)\r\n    }\r\n\r\n\r\n    render() {\r\n        const {leaves, loggedInUser} = this.props\r\n        return (\r\n            <div>\r\n                <div key=\"raise_leave_key\" className=\"clearfix\">\r\n\r\n\r\n                    <div className=\"col-md-12 pad\">\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"col-md-6\">\r\n                                        {\r\n                                            loggedInUser && U.userHasOnlyRole(loggedInUser, SC.ROLE_TOP_MANAGEMENT) ? null :\r\n                                                <button className=\"btn customBtn leaveBtn\"\r\n                                                        onClick={() => this.props.showRaiseLeaveForm()}>Raise-Leave\r\n                                                </button>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-md-6  releaseSearchContent \">\r\n                                        <div\r\n                                            className={loggedInUser && U.userHasOnlyRole(loggedInUser, SC.ROLE_TOP_MANAGEMENT) ? \"estimation releaseSelect  releaseSearchStatus leaveSelectHighestRole\" : \"estimation releaseSelect  releaseSearchStatus leaveSelect\"}>\r\n                                            <select className=\"form-control\" title=\"Select Status\"\r\n                                                    onChange={(status) =>\r\n                                                        this.props.changeLeaveStatus(status.target.value)\r\n                                                    }>\r\n                                                {\r\n                                                    <option key={SC.ALL} value={SC.ALL}>All Status</option>\r\n                                                }\r\n                                                {\r\n                                                    SC.ALL_LEAVE_STATUS_ARRAY.map(leave => <option key={leave}\r\n                                                                                                   value={leave}>{leave}</option>)\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                className={loggedInUser && U.userHasOnlyRole(loggedInUser, SC.ROLE_TOP_MANAGEMENT) ? \"estimation\" : \"estimation leave\"}>\r\n\r\n                                <BootstrapTable options={this.options} data={leaves}\r\n                                                multiColumnSearch={true}\r\n                                                search={true}\r\n                                                striped={true}\r\n                                                trClassName={this.rowClassNameFormat.bind(this)}\r\n                                                hover={true}>\r\n                                    <TableHeaderColumn columnTitle isKey dataField='_id'\r\n                                                       hidden={true}>ID</TableHeaderColumn>\r\n\r\n                                    <TableHeaderColumn width=\"6%\" dataField='button'\r\n                                                       dataFormat={this.viewButton.bind(this)}>View\r\n                                    </TableHeaderColumn>\r\n\r\n                                    {loggedInUser && U.userHasRole(loggedInUser, SC.ROLE_TOP_MANAGEMENT) ?\r\n                                        <TableHeaderColumn width=\"10%\" columnTitle dataField='user'\r\n                                                           dataFormat={this.formatLeaveRaisedUser.bind(this)}>Raised\r\n                                            By\r\n                                        </TableHeaderColumn>\r\n                                        : <TableHeaderColumn width=\"8%\" columnTitle dataField='created'\r\n                                                             dataFormat={this.formatCreatedDate.bind(this)}>Created\r\n                                        </TableHeaderColumn>\r\n                                    }\r\n\r\n                                    <TableHeaderColumn columnTitle width=\"8%\" dataField='startDateString'\r\n                                    >Start Date\r\n                                    </TableHeaderColumn>\r\n\r\n                                    <TableHeaderColumn columnTitle width=\"8%\" dataField='endDateString'\r\n                                    >End Date\r\n                                    </TableHeaderColumn>\r\n\r\n                                    <TableHeaderColumn width=\"8%\" columnTitle dataField='dayType'>Day\r\n                                        Type</TableHeaderColumn>\r\n\r\n                                    <TableHeaderColumn columnTitle dataField='leaveType'\r\n                                                       dataFormat={this.formatLeaveType.bind(this)}>\r\n                                        Leave Type\r\n                                    </TableHeaderColumn>\r\n\r\n                                    <TableHeaderColumn width=\"10%\" columnTitle\r\n                                                       dataField='status'>Status</TableHeaderColumn>\r\n                                    <TableHeaderColumn columnTitle width=\"17%\" dataField='approver'\r\n                                                       dataFormat={this.formatLeaveApproverUser.bind(this)}>Approver</TableHeaderColumn>\r\n\r\n                                    {loggedInUser && U.userHasOnlyRole(loggedInUser, SC.ROLE_TOP_MANAGEMENT) ? null :\r\n                                        <TableHeaderColumn width=\"7%\" dataField='deleteButton'\r\n                                                           dataFormat={this.viewDeleteButton.bind(this)}>\r\n                                            Delete</TableHeaderColumn>}\r\n                                    {loggedInUser && U.userHasRole(loggedInUser, SC.ROLE_TOP_MANAGEMENT) &&\r\n                                    <TableHeaderColumn width=\"7%\"\r\n                                                       dataField='cancelButton'\r\n                                                       dataFormat={this.viewCancelButton.bind(this)}>\r\n                                        Reject\r\n                                    </TableHeaderColumn>}\r\n                                    {loggedInUser && U.userHasRole(loggedInUser, SC.ROLE_TOP_MANAGEMENT) &&\r\n                                    <TableHeaderColumn width=\"7%\"\r\n                                                       dataField='approveButton'\r\n                                                       dataFormat={this.viewApproveButton.bind(this)}>\r\n                                        Approve\r\n                                    </TableHeaderColumn>}\r\n\r\n\r\n                                </BootstrapTable>\r\n                                {\r\n                                    this.state && this.state.showLeaveDeleteRequestDialog &&\r\n                                    <ConfirmationDialog show={true}\r\n                                                        onConfirm={this.onConfirmDeleteRequest.bind(this)}\r\n                                                        title=\"Leave Delete\" onClose={this.onClose.bind(this)}\r\n                                                        body=\"Are you sure you want to delete this leave. Please confirm!\"/>\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(LeaveList)\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/LeaveList.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {EstimationFeatureFormContainer} from \"../../containers\"\r\n\r\nconst EstimationFeatureDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Add Feature to Estimation</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <EstimationFeatureFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default EstimationFeatureDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/EstimationFeatureDialog.js","import * as AC from \"../actions/actionConsts\";\r\n\r\nlet initialState = {\r\n    all: [],\r\n    selected: {}\r\n}\r\n\r\nconst roleReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AC.ADD_ROLES:\r\n            return Object.assign({}, state, {all: action.roles})\r\n        case AC.ADD_ROLE:\r\n            return Object.assign({}, state, {all: [...state.all, action.role]})\r\n        case AC.EDIT_ROLE:\r\n            return Object.assign({}, state, {all: state.all.map(item => item._id == action.role._id ? action.role : item)})\r\n        case AC.DELETE_ROLE:\r\n            return Object.assign({}, state, {all: state.all.filter(item => item._id !== action.role._id)})\r\n        case AC.ADMIN_EDITING_ROLE:\r\n            // Admin has started editing this role (he can only enable/disable permissions), add appropriate needed for edit\r\n            return Object.assign({}, state, {\r\n                selected: Object.assign({}, action.role, {permissions: Array.isArray(action.role.permissions) ? action.role.permissions.filter(p => p.enabled) : []}),\r\n                permissionOptions: action.role.permissions\r\n            })\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default roleReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/roleReducer.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {ReleaseMoveTaskPlanFormContainer} from \"../../containers\"\r\n\r\nconst ReleaseMoveTaskPlanFormDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Move Task</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <ReleaseMoveTaskPlanFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default ReleaseMoveTaskPlanFormDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/ReleaseMoveTaskPlanFormDialog.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {CreateReleaseFormContainer} from \"../../containers\"\r\n\r\nconst CreateReleaseDialog = (props) => {\r\n    return <Modal className=\"add-to-release-dialog\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Create Release</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <CreateReleaseFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default CreateReleaseDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/CreateReleaseDialog.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {ReleaseTaskPlanningShiftFormContainer} from \"../../containers\"\r\n\r\nconst TaskShiftDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Shift Task</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <ReleaseTaskPlanningShiftFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default TaskShiftDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/TaskShiftDialog.js","import * as SC from './serverconstants'\r\nimport moment from 'moment-timezone'\r\nimport _ from 'lodash'\r\n//import logger from './logger'\r\n\r\nexport const isAuthenticated = (ctx) => {\r\n    if (ctx.isAuthenticated())\r\n        return true\r\n    return false\r\n}\r\n\r\nexport const isSuperAdmin = (ctx) => {\r\n    if (ctx.isAuthenticated()) {\r\n        if (ctx.state.user && Array.isArray(ctx.state.user.roles) && ctx.state.user.roles.findIndex(r => r.name === SC.ROLE_SUPER_ADMIN) !== -1)\r\n            return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport const isHighestManagementRole = (ctx) => {\r\n    if (ctx.isAuthenticated()) {\r\n        if (ctx.state.user && Array.isArray(ctx.state.user.roles) && ctx.state.user.roles.findIndex(r => r.name === SC.ROLE_TOP_MANAGEMENT) !== -1)\r\n            return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport const isAdmin = (ctx) => {\r\n    if (ctx.isAuthenticated()) {\r\n        if (ctx.state.user && Array.isArray(ctx.state.user.roles) && ctx.state.user.roles.findIndex(r => r.name === SC.ROLE_ADMIN) !== -1)\r\n            return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport const isAppUser = (ctx) => {\r\n    if (ctx.isAuthenticated()) {\r\n        if (ctx.state.user && Array.isArray(ctx.state.user.roles) && ctx.state.user.roles.findIndex(r => r.name === SC.ROLE_APP_USER) !== -1)\r\n            return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport const hasRole = (ctx, roleName) => {\r\n    if (ctx.isAuthenticated()) {\r\n        if (ctx.state.user && Array.isArray(ctx.state.user.roles) && ctx.state.user.roles.findIndex(r => r.name === roleName) !== -1)\r\n            return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport const userHasRole = (user, roleName) => {\r\n    if (user && Array.isArray(user.roles) && user.roles.length && user.roles.findIndex(r => r.name === roleName) !== -1)\r\n        return true\r\n    return false\r\n}\r\n\r\n\r\nexport const userHasOnlyRole = (user, roleName) => {\r\n    if (user && Array.isArray(user.roles) && user.roles.length && user.roles.length === 1 && user.roles.findIndex(r => r.name === roleName) !== -1)\r\n        return true\r\n    return false\r\n}\r\n\r\nexport const dateInUTC = (dateString) => {\r\n    let momentDate = moment.tz(dateString, SC.DATE_FORMAT, SC.UTC_TIMEZONE).startOf('day')\r\n    if (momentDate.isValid())\r\n        return momentDate.toDate()\r\n    return undefined\r\n}\r\n\r\nexport const momentInUTC = (dateString) => {\r\n    let momentDate = moment.tz(dateString, SC.DATE_FORMAT, SC.UTC_TIMEZONE).startOf('day')\r\n    if (momentDate.isValid())\r\n        return momentDate\r\n    return undefined\r\n}\r\n\r\n\r\nexport const convertUTCDateMomentToTZ = (utcMoment, timeZone) => {\r\n    // format in utc\r\n    console.log(\"utc moment found as \", utcMoment)\r\n\r\n    let dateString = utcMoment.utc().format(SC.DATE_FORMAT)\r\n    console.log(\"date string in utc is \", dateString)\r\n    // now parse it using timezone\r\n    return moment.tz(dateString, SC.DATE_FORMAT, timeZone).clone()\r\n\r\n}\r\n\r\nexport const sameMomentInUTC = (d) => {\r\n    return moment.utc().startOf('day').minute(d.getMinutes()).hour(d.getHours()).date(d.getDate()).month(d.getMonth()).year(d.getFullYear())\r\n}\r\n\r\nexport const sameMomentInTimezone = (d, timeZone) => {\r\n    console.log(\"d.getMinutes() \", d.getMinutes())\r\n    console.log(\"d.getHours() \", d.getHours())\r\n    return moment.tz(timeZone).startOf('day').minute(d.getMinutes()).hour(d.getHours()).date(d.getDate()).month(d.getMonth()).year(d.getFullYear())\r\n}\r\n\r\n\r\nexport const momentFromDBDate = (d) => {\r\n    return moment.tz(d, SC.UTC_TIMEZONE)\r\n}\r\n\r\n\r\nexport const momentFromDateInTimeZone = (d, timeZone) => {\r\n    return moment.tz(timeZone).startOf('day').minute(d.getMinutes()).hour(d.getHours()).date(d.getDate()).month(d.getMonth()).year(d.getFullYear())\r\n}\r\n\r\nexport const formatDateInUTC = (date) => {\r\n    return moment(date).utc().format(SC.DATE_FORMAT)\r\n}\r\n\r\nexport const formatDateInTimezone = (date, timeZone) => {\r\n    return moment(date).tz(timeZone).format(SC.DATE_FORMAT)\r\n}\r\n\r\nexport const formatDateTimeInTimezone = (date, timeZone) => {\r\n    return moment(date).tz(timeZone).format(SC.DATE_TIME_FORMAT)\r\n}\r\n\r\n\r\nexport const momentInTimeZone = (dateString, timeZone) => {\r\n    let momentDate = moment.tz(dateString, SC.DATE_FORMAT, timeZone)\r\n    if (momentDate.isValid())\r\n        return momentDate\r\n    return undefined\r\n}\r\n\r\nexport const nowMomentInTimeZone = (timeZone) => {\r\n    let now = new Date()\r\n    let nowString = formatDateInTimezone(now, timeZone)\r\n    let nowMoment = moment.tz(nowString, SC.DATE_FORMAT, timeZone)\r\n    if (nowMoment.isValid())\r\n        return nowMoment\r\n    return undefined\r\n}\r\n\r\nexport const nowMomentInIndia = () => {\r\n    let now = new Date()\r\n    let nowString = formatDateInTimezone(now, SC.INDIAN_TIMEZONE)\r\n    let nowMoment = moment.tz(nowString, SC.DATE_FORMAT, SC.INDIAN_TIMEZONE)\r\n    if (nowMoment.isValid())\r\n        return nowMoment\r\n    return undefined\r\n}\r\n\r\nexport const getPastMidNight = (timeZone) => {\r\n    return moment().tz(timeZone).startOf('day')\r\n}\r\n\r\nexport const getNextMidNight = (timeZone) => {\r\n    return moment().tz(timeZone).startOf('day').add(1, 'day')\r\n}\r\n\r\nexport const getNowMomentInUtc = () => {\r\n    let now = new Date()\r\n    let nowString = formatDateInTimezone(now, SC.DATE_FORMAT, SC.UTC_TIMEZONE)\r\n    let nowMoment = momentInUTC(nowString)\r\n\r\n    if (nowMoment.isValid())\r\n        return nowMoment\r\n    return undefined\r\n}\r\n\r\nexport const getNowStringInIndia = () => {\r\n    let now = new Date()\r\n    let nowString = formatDateInTimezone(now, SC.INDIAN_TIMEZONE)\r\n    return nowString\r\n}\r\n\r\nexport const getNowStringInUtc = () => {\r\n    let now = new Date()\r\n    let nowString = formatDateInTimezone(now, SC.UTC_TIMEZONE)\r\n    return nowString\r\n}\r\n\r\nexport const getCurrentYear = () => {\r\n    let now = new Date()\r\n    return now.getFullYear()\r\n}\r\n\r\n/**\r\n * Returns true if if array in second argument include value/values in first argument\r\n * @param values - primitive or array\r\n * @param arr - Array\r\n * @returns {boolean}\r\n */\r\nexport const includeAny = (values, arr) => {\r\n    if (!Array.isArray(arr))\r\n        return false\r\n    if (Array.isArray(values)) {\r\n        let result = false;\r\n        values.forEach(v => {\r\n                if (_.includes(arr, v))\r\n                    result = true\r\n            }\r\n        )\r\n        return result;\r\n    } else if (values) {\r\n        if (_.includes(arr, values))\r\n            return true;\r\n    }\r\n    return false\r\n}\r\n\r\nexport const getFullName = (user) => {\r\n    return user ? user.firstName && user.lastName ? user.firstName + ' ' + user.lastName : user.firstName ? user.firstName : user.lastName ? user.lastName : '' : ''\r\n}\r\n\r\nexport const twoDecimalHours = (hours) => {\r\n    return parseFloat(hours.toFixed(2))\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/utils.js\n// module id = DcaD\n// module chunks = 0","import {connect} from 'react-redux'\r\nimport AppHome from '../../components/pages/AppHome'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loggedInUser: state.user.loggedIn\r\n})\r\n\r\nconst AppHomeContainer = withRouter(connect(\r\n    mapStateToProps\r\n)(AppHome))\r\n\r\nexport default AppHomeContainer\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/AppHomeContainer.js","import * as AC from \"./actionConsts\"\r\n\r\n\r\nexport const addProjects = (projects) => ({\r\n    type: AC.ADD_PROJECTS,\r\n    projects: projects\r\n})\r\n\r\nexport const addProject = (project) => ({\r\n    type: AC.ADD_PROJECT,\r\n    project: project\r\n})\r\n\r\nexport const deleteProject = (projectID) => ({\r\n    type: AC.DELETE_PROJECT,\r\n    projectID: projectID\r\n})\r\n\r\nexport const editProject = (project) => ({\r\n\r\n    type: AC.EDIT_PROJECT,\r\n    project: project\r\n})\r\n\r\nexport const getAllProjectsFromServer = () => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/projects', {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addProjects(json.data))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const getAllProjectsUserReleasesFromServer = () => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/projects/user-releases', {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addProjects(json.data))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const getAllProjectsUserEstimationsFromServer = () => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/projects/user-estimations', {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addProjects(json.data))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const addProjectOnServer = (formInput) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/projects',\r\n            {\r\n                method: \"post\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(addProject(json.data))\r\n\r\n\r\n                }\r\n                return json\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProjectOnServer = (projectID) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/projects/' + projectID,\r\n            {\r\n                method: \"delete\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'ap plication/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(deleteProject(projectID))\r\n                    // clear user form after update is successful\r\n                }\r\n                return json\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const editProjectOnServer = (project) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/projects',\r\n            {\r\n                method: \"put\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(project)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(editProject(json.data))\r\n                }\r\n                return json\r\n        })\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/actions/projectAction.js","import * as AC from '../actions/actionConsts'\r\nimport * as SC from '../../server/serverconstants'\r\n\r\nlet initialState = {\r\n    plannedVsUnplannedWork: {},\r\n    overallProgress: {},\r\n    completedPendingProgress: {},\r\n    plannedVsReported: {},\r\n    hoursData: {},\r\n    estimatedProgress: {},\r\n    progress: {},\r\n    dailyPlannings: [],\r\n    resetDailyPlanningMonth: false\r\n\r\n}\r\n\r\nconst dashboardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AC.CALCULATE_RELEASE_STATS:\r\n\r\n            let plannedVsUnplannedWork = {}\r\n            let overallProgress = {}\r\n            let completedPendingProgress = {}\r\n            let plannedVsReported = {}\r\n            let hoursData = {}\r\n            let estimatedProgress = {}\r\n            let progress = {}\r\n\r\n            let release = Object.assign({}, action.release)\r\n\r\n            // To calculate percentage of planned work we need to iterate on all iterations of type 'planned' and then\r\n            // sum all plannedHoursEstimatedTasks and then compare them against sum of all estimated hours\r\n            let plannedIterations = release.iterations.filter(i => i.type == SC.ITERATION_TYPE_PLANNED || i.type == SC.ITERATION_TYPE_ESTIMATED)\r\n\r\n            // there should only be one unplanned iteration\r\n            let unPlannedIteration = release.iterations.find(i => i.type == SC.ITERATION_TYPE_UNPLANNED)\r\n\r\n            if (plannedIterations && plannedIterations.length) {\r\n\r\n                let s = {\r\n                    sumPlannedHours: 0,\r\n                    sumEstimatedHours: 0,\r\n                    sumReportedHours: 0,\r\n                    sumEstimatedHoursCompletedTasks: 0,\r\n                    sumPlannedHoursReportedTasks: 0,\r\n                    sumProgressEstimatedHours: 0,\r\n                    sumPlannedHoursEstimatedTasks: 0\r\n                }\r\n\r\n                plannedIterations.forEach(p => {\r\n                    s.sumPlannedHours += p.plannedHours\r\n                    s.sumEstimatedHours += p.estimatedHours\r\n                    s.sumReportedHours += p.reportedHours\r\n                    s.sumEstimatedHoursCompletedTasks += p.estimatedHoursCompletedTasks\r\n                    s.sumPlannedHoursReportedTasks += p.plannedHoursReportedTasks\r\n                    s.sumProgressEstimatedHours += p.estimatedHours * p.progress\r\n                    s.sumPlannedHoursEstimatedTasks += p.plannedHoursEstimatedTasks\r\n                })\r\n\r\n                /**\r\n                 * Overall progress\r\n                 */\r\n\r\n                progress['actual'] = s.sumEstimatedHours != 0 ? parseFloat((s.sumProgressEstimatedHours / s.sumEstimatedHours).toFixed(2)) : 0\r\n                overallProgress = {\r\n                    ran: Math.random(),\r\n                    total: 100,\r\n                    progress: progress['actual'],\r\n                    remaining: parseFloat((100 - progress['actual']).toFixed(2))\r\n                }\r\n\r\n                /**\r\n                 * Progress Completed/Pending tasks\r\n                 */\r\n\r\n                let progressCompletedTasks = s.sumEstimatedHours != 0 ? parseFloat(((s.sumEstimatedHoursCompletedTasks * 100) / s.sumEstimatedHours).toFixed(2)) : 0\r\n                //progressCompletedTasks = parseFloat(progressCompletedTasks.toFixed(2))\r\n                let progressPendingTasks = parseFloat((progress['actual'] - progressCompletedTasks).toFixed(2))\r\n\r\n                completedPendingProgress = {\r\n                    ran: Math.random(),\r\n                    total: 100,\r\n                    completed: progressCompletedTasks,\r\n                    pending: progressPendingTasks,\r\n                    remaining: parseFloat((100 - progress['actual']).toFixed(2))\r\n                }\r\n\r\n                /**\r\n                 * Estimated progress as per reporting\r\n                 */\r\n\r\n                let estimatedProgressReporting = s.sumEstimatedHours != 0 ? parseFloat(((s.sumReportedHours * 100) / s.sumEstimatedHours).toFixed(2)) : 0\r\n                let estimatedProgressPlanning = s.sumEstimatedHours != 0 ? parseFloat(((s.sumPlannedHoursReportedTasks * 100) / s.sumEstimatedHours).toFixed(2)) : 0\r\n\r\n                estimatedProgress = {\r\n                    ran: Math.random(),\r\n                    reported: estimatedProgressReporting,\r\n                    planned: estimatedProgressPlanning,\r\n                    remainingReported: parseFloat((100 - estimatedProgressReporting).toFixed(2)),\r\n                    remainingPlanned: parseFloat((100 - estimatedProgressPlanning).toFixed(2))\r\n                }\r\n\r\n                progress['reported'] = estimatedProgressReporting\r\n                progress['planned'] = estimatedProgressPlanning\r\n\r\n                /**\r\n                 * Planned Vs Unplanned work calculation\r\n                 */\r\n\r\n                let planned = s.sumEstimatedHours != 0 ? parseFloat(((s.sumPlannedHoursEstimatedTasks * 100) / s.sumEstimatedHours).toFixed(2)) : 0\r\n                plannedVsUnplannedWork = {\r\n                    ran: Math.random(), // added random as animation and label were not working simultaneously, need to remove this as soon as bug with rechart is fixed\r\n                    total: 100,\r\n                    planned: planned,\r\n                    unplanned: parseFloat((100 - planned).toFixed(2))\r\n                }\r\n\r\n\r\n                /**\r\n                 * Planned v/s Reported Bar graph calculations\r\n                 */\r\n\r\n                plannedVsReported = {\r\n                    ran: Math.random(),\r\n                    base: s.sumPlannedHoursReportedTasks >= s.sumReportedHours ? s.sumReportedHours : s.sumPlannedHoursReportedTasks,\r\n                    baseHour: s.sumPlannedHoursReportedTasks >= s.sumReportedHours ? 'reported' : 'planned',\r\n                    extra: s.sumPlannedHoursReportedTasks >= s.sumReportedHours ? s.sumPlannedHoursReportedTasks - s.sumReportedHours : s.sumReportedHours - s.sumPlannedHoursReportedTasks\r\n                }\r\n\r\n                /**\r\n                 * Hours comparison pie chart data\r\n                 */\r\n\r\n                hoursData.plannedHours = s.sumPlannedHours\r\n                hoursData.reportedHours = s.sumReportedHours\r\n                hoursData.estimatedHours = s.sumEstimatedHours\r\n            }\r\n\r\n            let unplannedReport = {\r\n                ran: Math.random(),\r\n                reportedHours: unPlannedIteration ? unPlannedIteration.reportedHours : 0\r\n            }\r\n\r\n\r\n            return Object.assign({}, state, {\r\n                plannedVsUnplannedWork,\r\n                overallProgress,\r\n                completedPendingProgress,\r\n                plannedVsReported,\r\n                hoursData,\r\n                estimatedProgress,\r\n                progress,\r\n                unplannedReport,\r\n                mgmtData: {\r\n                    ran: Math.random(),\r\n                    plannedAfter: action.mgmtData.plannedAfterAvg,\r\n                    plannedBefore: -action.mgmtData.plannedBeforeAvg,\r\n                    reportedAfter: action.mgmtData.reportedAfterAvg,\r\n                    plannedHoursLastMinuteLeave: action.mgmtData.plannedHoursLastMinuteLeave,\r\n                    plannedHoursOnLeave: action.mgmtData.plannedHoursOnLeave - action.mgmtData.plannedHoursLastMinuteLeave\r\n                }\r\n            })\r\n\r\n        case AC.ADD_DAILY_PLANNINGS:\r\n            return Object.assign({}, state, {\r\n                dailyPlannings: [...action.dailyPlannings],\r\n                resetDailyPlanningMonth: action.resetDailyPlanningMonth,\r\n                plannedVsUnplannedWork: Object.assign({}, state.plannedVsUnplannedWork, {\r\n                    ran: Math.random()\r\n                }),\r\n                overallProgress: Object.assign({}, state.overallProgress, {\r\n                    ran: Math.random()\r\n                }),\r\n                completedPendingProgress: Object.assign({}, state.completedPendingProgress, {\r\n                    ran: Math.random()\r\n                }),\r\n                plannedVsReported: Object.assign({}, state.plannedVsReported, {\r\n                    ran: Math.random()\r\n                }),\r\n                hoursData: Object.assign({}, state.hoursData, {\r\n                    ran: Math.random()\r\n                }),\r\n                estimatedProgress: Object.assign({}, state.estimatedProgress, {\r\n                    ran: Math.random()\r\n                }),\r\n                progress: Object.assign({}, state.progress, {\r\n                    ran: Math.random()\r\n                }),\r\n                unplannedReport: Object.assign({}, state.unplannedReport, {\r\n                    ran: Math.random()\r\n                }),\r\n                mgmtData: Object.assign({}, state.mgmtData, {\r\n                    ran: Math.random()\r\n                })\r\n            })\r\n            break;\r\n\r\n        case AC.SET_RELEASE_ID:\r\n            // while selection of reporting status it is set to state also\r\n            return Object.assign({}, state, {\r\n                selectedReleaseID: action.releaseID\r\n            })\r\n        case AC.ADD_USER_RELEASES:\r\n            // All Releases where loggedIn user in involved as (manager, leader, developer)\r\n            return Object.assign({}, state, {\r\n                allReleases: action.releases\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default dashboardReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/dashboardReducer.js","import * as AC from \"../actions/actionConsts\"\r\n\r\n\r\nlet initialState = {\r\n    all: [],\r\n    selected: {}\r\n}\r\n\r\nconst clientReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AC.ADD_CLIENTS:\r\n            return Object.assign({}, state, {all: action.clients})\r\n\r\n        case AC.ADD_CLIENT:\r\n            return Object.assign({}, state, {all: [...state.all, action.client]})\r\n\r\n        case AC.DELETE_CLIENT:\r\n            return Object.assign({}, state, {all: state.all.filter(item => item._id !== action.clientID)})\r\n\r\n        case AC.UPDATE_CLIENT:\r\n            return Object.assign({}, state, {all: state.all.map(item => item._id == action.client._id ? action.client : item)})\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default clientReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/clientReducer.js","import * as AC from \"../actions/actionConsts\"\r\nimport * as SC from \"../../server/serverconstants\"\r\nimport moment from 'moment'\r\n\r\nlet now = new Date()\r\nlet nowString = moment(now).format(SC.DATE_FORMAT)\r\nlet initialState = {\r\n    allAvailableReleases: [],\r\n    all: [],\r\n    releasePlans: [],\r\n    selectedRelease: {},\r\n    selectedReleasePlan: {},\r\n    teamOfRelease: [],\r\n    taskPlans: [],\r\n    developerPlans: [],\r\n    expanded: false,\r\n    fromSchedule: nowString,\r\n    schedules: [],\r\n    employeeSetting: {},\r\n    from: nowString,\r\n    selectedTab: SC.RELEASE_DASHBOARD_TAB,\r\n    taskPlansOfReleasePlanDeveloper: []\r\n}\r\n\r\nconst releaseReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AC.ADD_AVAILABLE_RELEASES:\r\n            // add all releases from server\r\n\r\n            return Object.assign({}, state, {allAvailableReleases: action.releases && Array.isArray(action.releases) && action.releases.length ? action.releases : []})\r\n\r\n        case AC.ADD_RELEASES:\r\n            // add all releases from server\r\n            let allReleases = action.releases && Array.isArray(action.releases) && action.releases.length ? action.releases.map(r => {\r\n                let plannedIterations = r.iterations.filter(i => i.type == SC.ITERATION_TYPE_PLANNED || i.type == SC.ITERATION_TYPE_ESTIMATED)\r\n                let s = {\r\n                    sumPlannedHours: 0,\r\n                    sumEstimatedHours: 0,\r\n                    sumReportedHours: 0,\r\n                    sumEstimatedHoursCompletedTasks: 0,\r\n                    sumPlannedHoursReportedTasks: 0,\r\n                    sumProgressEstimatedHours: 0,\r\n                    sumPlannedHoursEstimatedTasks: 0,\r\n                    sumExpectedBilledHours: 0\r\n                }\r\n\r\n                plannedIterations.forEach(p => {\r\n                    s.sumPlannedHours += p.plannedHours\r\n                    s.sumEstimatedHours += p.estimatedHours\r\n                    s.sumReportedHours += p.reportedHours\r\n                    s.sumEstimatedHoursCompletedTasks += p.estimatedHoursCompletedTasks\r\n                    s.sumPlannedHoursReportedTasks += p.plannedHoursReportedTasks\r\n                    s.sumProgressEstimatedHours += p.estimatedHours * p.progress\r\n                    s.sumPlannedHoursEstimatedTasks += p.plannedHoursEstimatedTasks\r\n                    s.sumExpectedBilledHours += p.expectedBilledHours\r\n                })\r\n\r\n                s.progress = s.sumEstimatedHours != 0 ? parseFloat((s.sumProgressEstimatedHours / s.sumEstimatedHours).toFixed(2)) : 0\r\n                r.plannedStats = s\r\n                return r;\r\n            }) : []\r\n\r\n            return Object.assign({}, state, {all: allReleases})\r\n\r\n        case AC.ADD_RELEASE:\r\n            let addedRelease = action.release\r\n            let plannedItrs = addedRelease.iterations.filter(i => i.type == SC.ITERATION_TYPE_PLANNED || i.type == SC.ITERATION_TYPE_ESTIMATED)\r\n            let sums = {\r\n                sumPlannedHours: 0,\r\n                sumEstimatedHours: 0,\r\n                sumReportedHours: 0,\r\n                sumEstimatedHoursCompletedTasks: 0,\r\n                sumPlannedHoursReportedTasks: 0,\r\n                sumProgressEstimatedHours: 0,\r\n                sumPlannedHoursEstimatedTasks: 0,\r\n                sumExpectedBilledHours: 0\r\n            }\r\n\r\n            plannedItrs.forEach(p => {\r\n                sums.sumPlannedHours += p.plannedHours\r\n                sums.sumEstimatedHours += p.estimatedHours\r\n                sums.sumReportedHours += p.reportedHours\r\n                sums.sumEstimatedHoursCompletedTasks += p.estimatedHoursCompletedTasks\r\n                sums.sumPlannedHoursReportedTasks += p.plannedHoursReportedTasks\r\n                sums.sumProgressEstimatedHours += p.estimatedHours * p.progress\r\n                sums.sumPlannedHoursEstimatedTasks += p.plannedHoursEstimatedTasks\r\n                sums.sumExpectedBilledHours += p.expectedBilledHours\r\n            })\r\n\r\n            sums.progress = sums.sumEstimatedHours != 0 ? parseFloat((sums.sumProgressEstimatedHours / sums.sumEstimatedHours).toFixed(2)) : 0\r\n            addedRelease.plannedStats = sums\r\n            return Object.assign({}, state, {all: [...state.all, addedRelease]})\r\n            break;\r\n        case AC.RELEASE_SELECTED:\r\n            // add selected release details from server\r\n            // Select team\r\n\r\n            let release = action.release\r\n\r\n            let plannedIterations = release.iterations.filter(i => i.type == SC.ITERATION_TYPE_PLANNED || i.type == SC.ITERATION_TYPE_ESTIMATED)\r\n            let sm = {\r\n                sumPlannedHours: 0,\r\n                sumEstimatedHours: 0,\r\n                sumReportedHours: 0,\r\n                sumEstimatedHoursCompletedTasks: 0,\r\n                sumPlannedHoursReportedTasks: 0,\r\n                sumProgressEstimatedHours: 0,\r\n                sumPlannedHoursEstimatedTasks: 0,\r\n                sumExpectedBilledHours: 0\r\n            }\r\n\r\n            plannedIterations.forEach(p => {\r\n                sm.sumPlannedHours += p.plannedHours\r\n                sm.sumEstimatedHours += p.estimatedHours\r\n                sm.sumReportedHours += p.reportedHours\r\n                sm.sumEstimatedHoursCompletedTasks += p.estimatedHoursCompletedTasks\r\n                sm.sumPlannedHoursReportedTasks += p.plannedHoursReportedTasks\r\n                sm.sumProgressEstimatedHours += p.estimatedHours * p.progress\r\n                sm.sumPlannedHoursEstimatedTasks += p.plannedHoursEstimatedTasks\r\n                sm.sumExpectedBilledHours += p.expectedBilledHours\r\n            })\r\n\r\n            sm.progress = sm.sumEstimatedHours != 0 ? parseFloat((sm.sumProgressEstimatedHours / sm.sumEstimatedHours).toFixed(2)) : 0\r\n            release.plannedStats = sm\r\n            return Object.assign({}, state, {\r\n                selectedRelease: release,\r\n                teamOfRelease: [...action.release.team, ...action.release.nonProjectTeam]\r\n            })\r\n\r\n        case AC.ADD_RELEASE_PLANS:\r\n            // adding release plan li\r\n            return Object.assign({}, state, {releasePlans: action.releasePlans})\r\n\r\n\r\n        case AC.RELEASE_PLAN_SELECTED:\r\n            // selecting release plan and its initial data\r\n            return Object.assign({}, state, {\r\n                selectedReleasePlan: action.releasePlan,\r\n                expanded: false,\r\n                developerPlans: []\r\n            })\r\n\r\n        case AC.UPDATE_RELEASE_PLAN:\r\n            // update release plan details\r\n            return Object.assign({}, state, {\r\n                selectedReleasePlan: action.releasePlan\r\n            })\r\n\r\n        case AC.ADD_RELEASE_TASK_PLANNINGS:\r\n            // Stores task planning details on Release section of selected tasks\r\n            return Object.assign({}, state, {\r\n                taskPlans: action.taskPlans,\r\n                expanded: false\r\n            })\r\n\r\n\r\n        case AC.ADD_RELEASE_TASK_PLANNING_TO_STATE:\r\n            // Add task planning to planning list\r\n            return Object.assign({}, state, {\r\n                taskPlans: [...state.taskPlans, action.taskPlan]\r\n            })\r\n\r\n        case AC.UPDATE_TASK_PLANNING:\r\n            // update task planning from planning list\r\n            return Object.assign({}, state, {\r\n                taskPlans: state.taskPlans && Array.isArray(state.taskPlans) && state.taskPlans.length ? state.taskPlans.map(tp =>\r\n                    (tp._id === action.taskPlan._id) ? Object.assign({}, action.taskPlan) : tp) : []\r\n            })\r\n\r\n        case AC.UPDATE_TASK_PLANS:\r\n            // update task plans from planning list\r\n            return Object.assign({}, state, {\r\n                taskPlans: state.taskPlans && Array.isArray(state.taskPlans) && state.taskPlans.length ? state.taskPlans.map(tp => {\r\n                    if (action.taskPlans.findIndex(taskPlan => taskPlan._id.toString() === tp._id.toString() === -1))\r\n                        return tp\r\n                    else return action.taskPlans.find(taskPlan => taskPlan._id.toString() === tp._id.toString())\r\n                }) : []\r\n\r\n            })\r\n\r\n        case AC.DELETE_TASK_PLAN:\r\n            // Delete task planning from planning list\r\n            return Object.assign({}, state, {\r\n                taskPlans: state.taskPlans && Array.isArray(state.taskPlans) && state.taskPlans.length ? state.taskPlans.filter(plan => plan._id.toString() !== action.planID.toString()) : []\r\n            })\r\n\r\n\r\n        case AC.ADD_DEVELOPER_FILTERED:\r\n            // Stores Developer planning details according to Developer selection  and date  selection\r\n            return Object.assign({}, state, {\r\n                developerPlans: action.developerPlans\r\n            })\r\n\r\n        case AC.UPDATE_DEVELOPER_FILTERED:\r\n            // Update Developer Task planning details\r\n            return Object.assign({}, state, {\r\n                developerPlans: state.developerPlans && Array.isArray(state.developerPlans) && state.developerPlans.length ?\r\n                    state.developerPlans.map(dp =>\r\n                        (dp._id === action.developerPlanned._id) ? Object.assign({}, action.developerPlanned) : dp) : []\r\n            })\r\n\r\n        case AC.EXPAND_DESCRIPTION:\r\n            return Object.assign({}, state, {\r\n                expanded: action.flag\r\n            })\r\n\r\n        case AC.SET_DEVELOPERS_SCHEDULE:\r\n            // Show Developer task planning Schedule\r\n            return Object.assign({}, state, {\r\n                schedules: action.schedules\r\n            })\r\n\r\n        case AC.SET_EMPLOYEE_SETTINGS:\r\n            // show Developer  status according to Planned task on developer\r\n            return Object.assign({}, state, {\r\n                employeeSetting: action.empSetting\r\n            })\r\n\r\n        case AC.SET_FROM_DATE:\r\n            return Object.assign({}, state, {\r\n                from: action.date\r\n            })\r\n        case AC.ADD_TASK_PLANNINGS:\r\n            // add all task-plannings from server\r\n            return Object.assign({}, state, {\r\n                taskPlans: action.taskPlannings\r\n            })\r\n        case AC.UPDATE_RELEASE_DATES:\r\n            // update release dates details\r\n            return Object.assign({}, state, {\r\n                selectedRelease: action.releaseDates\r\n            })\r\n        case AC.RELEASE_TAB_SELECTED:\r\n            return Object.assign({}, state, {\r\n                selectedTab: action.tab\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default releaseReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/releaseReducer.js","import {connect} from 'react-redux'\r\nimport {CreateReleaseForm} from \"../../components\"\r\nimport * as logger from '../../clientLogger'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (formInput) => {\r\n        logger.debug(logger.ESTIMATION_PROJECT_AWARD_FORM_SUBMIT, \"formInput:\", formInput)\r\n        return dispatch(A.createReleaseOnServer(formInput)).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success(\"Release Created\")\r\n                // hide dialog\r\n                dispatch(A.hideComponent(COC.CREATE_RELEASE_FORM_DIALOG))\r\n            } else {\r\n                NotificationManager.error(\"Release Creation Failed\")\r\n            }\r\n        })\r\n    }\r\n})\r\nconst mapStateToProps = (state) => {\r\n\r\n    let managers = []\r\n    let leaders = []\r\n    let team = []\r\n\r\n    if (state.user.userWithRoleCategory) {\r\n        // Users who has role as a manager or leader or both\r\n        managers = state.user.userWithRoleCategory && state.user.userWithRoleCategory.managers ? state.user.userWithRoleCategory.managers : []\r\n        leaders = state.user.userWithRoleCategory && state.user.userWithRoleCategory.leaders ? state.user.userWithRoleCategory.leaders : []\r\n        team = state.user.userWithRoleCategory && state.user.userWithRoleCategory.team ?\r\n            state.user.userWithRoleCategory.team.map((dev, idx) => {\r\n                dev.name = dev.firstName + ' ' + dev.lastName\r\n                return dev\r\n            })\r\n            : []\r\n\r\n    }\r\n\r\n    return {\r\n        team,\r\n        managers,\r\n        leaders,\r\n        projects: state.project.all,\r\n        technologies: state.technology.all,\r\n        developmentTypes: state.developmentType.all,\r\n        modules: state.module.all\r\n    }\r\n}\r\n\r\nconst CreateReleaseFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CreateReleaseForm)\r\n\r\nexport default CreateReleaseFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/CreateReleaseFormContainer.js","import React from 'react';\r\nimport BigCalendar from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nBigCalendar.momentLocalizer(moment);\r\n\r\nclass CalendarTaskPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSelectEvent = this.onSelectEvent.bind(this)\r\n    }\r\n\r\n    onSelectEvent(event) {\r\n\r\n        return this.props.taskSelected(event).then(json => {\r\n            if (json.success) {\r\n                this.props.history.push(\"/app-home/calendar-task-detail\")\r\n                this.props.showTaskDetailPage()\r\n            }\r\n            return json\r\n        })\r\n    }\r\n\r\n    eventStyleGetter(event, start, end, isSelected) {\r\n\r\n        let bg = \"\";\r\n        if (event.report.status == \"un-reported\") {\r\n            bg = \"#9fa725\"\r\n        }\r\n\r\n        else if (event.report.status == \"Started\") {\r\n            bg = \"#1A4ECD\"\r\n        }\r\n\r\n        else if (event.report.status == \"pending\") {\r\n            bg = \"#FF0000\"\r\n        }\r\n\r\n        else if (event.report.status == \"completed\") {\r\n\r\n            bg = \"#4AD938\"\r\n        }\r\n        else {\r\n            bg = \"#000000\"\r\n        }\r\n\r\n        let style = {\r\n            backgroundColor: bg,\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            color: \"#fff\",\r\n            border: '0px',\r\n            display: 'block'\r\n        };\r\n        return {\r\n            style: style\r\n        };\r\n    }\r\n\r\n    Event({event}) {\r\n        return (\r\n            <span>\r\n               <p>{event.title}</p>\r\n        </span>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        /* let formats = {\r\n             // formats the day and week view tp '03/12'\r\n             dayFormat: (date, culture, localizer) =>\r\n                 localizer.format(date, 'dddd DD-MMM', culture),\r\n             // formats the top of day view to '03/12'\r\n             dayHeaderFormat: (date, culture, localizer) =>\r\n                 localizer.format(date, 'dddd DD-MMM', culture),\r\n             weekdayFormat: (date, culture, localizer) =>\r\n                 localizer.format(date, 'dddd', culture),\r\n             selectRangeFormat: (date, culture, localizer) =>\r\n                 localizer.format(date, 'dddd', culture)\r\n         }*/\r\n\r\n        return (<div>\r\n            <BigCalendar\r\n                views={{month: true, week: true, day: true}}\r\n                view={this.props.selectedView}\r\n                date={this.props.selectedDate}\r\n                timeslots={4}\r\n                components={{event: this.Event}}\r\n                selectable\r\n                popup\r\n                onSelectEvent={event => {\r\n\r\n                    this.onSelectEvent(event)\r\n                }}\r\n                events={this.props.events && this.props.events.length ? this.props.events : []}\r\n                startAccessor='start'\r\n                endAccessor='end'\r\n                titleAccessor='title'\r\n                eventPropGetter={(this.eventStyleGetter)}\r\n                onNavigate={(date, view) => {\r\n                    console.log(\"onNaviagate called with date \", date)\r\n                    this.props.changeViewAndDate(view, date);\r\n                }}\r\n                onView={(view) => {\r\n                    console.log(\"onView called with date \")\r\n                    this.props.changeViewAndDate(view, this.props.selectedDate);\r\n                }}\r\n            />\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default withRouter(CalendarTaskPage);\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/pages/CalendarTaskPage.js","import * as AC from '../actions/actionConsts'\r\nimport moment from 'moment'\r\nimport * as SC from '../../server/serverconstants'\r\nimport * as U from '../../server/utils'\r\n\r\nlet now = new Date()\r\nlet initialState = {\r\n    allReleases: [],\r\n    availableReleases: [],\r\n    taskPlan: {},\r\n    releasePlan: {},\r\n    release: {},\r\n    releaseID: SC.ALL,\r\n    reportedStatus: SC.ALL,\r\n    iterationType: SC.ITERATION_TYPE_PLANNED,\r\n    dateStringOfReport: U.getNowStringInIndia(),\r\n    reportedTasks: [],\r\n    releasesReports: [],\r\n    reportTaskDetail: {\r\n        taskPlan: {},\r\n        taskPlans: [],\r\n        release: {},\r\n        releasePlan: {}\r\n    }\r\n}\r\n\r\nconst reportingReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AC.ADD_USER_RELEASES:\r\n            // All Releases where loggedIn user in involved as (manager, leader, developer)\r\n            return Object.assign({}, state, {\r\n                allReleases: action.releases\r\n            })\r\n\r\n        case AC.ADD_RELEASES_AND_TASKS_OF_SELECTED_DATE:\r\n            // Releases and its task plans where loggedIn user in involved as (manager, leader, developer) for selected date\r\n            return Object.assign({}, state, {\r\n                availableReleases: action.releases,\r\n                dateStringOfReport: action.date\r\n            })\r\n        case AC.TASK_REPORTED:\r\n            return Object.assign({}, state, {\r\n                availableReleases: state.availableReleases.map(r => {\r\n                    if (r._id.toString() == action.task.release._id.toString()) {\r\n                        return Object.assign({}, r, {\r\n                            tasks: r.tasks.map(t => {\r\n                                if (t._id.toString() == action.task._id.toString()) {\r\n                                    return action.task\r\n                                } else\r\n                                    return t\r\n                            })\r\n                        })\r\n                    } else\r\n                        return r\r\n\r\n                })\r\n            })\r\n\r\n        case AC.REPORT_TASK_SELECTED:\r\n            // task is selected to see task detail\r\n            return Object.assign({}, state, {\r\n                reportTaskDetail: {\r\n                    taskPlan: action.detail.taskPlan,\r\n                    taskPlans: action.detail.taskPlans,\r\n                    release: action.detail.release,\r\n                    releasePlan: Object.assign({}, action.detail.releasePlan, {\r\n                        estimationDescription: action.detail.estimationDescription\r\n                    })\r\n                }\r\n            })\r\n\r\n        case AC.UPDATE_SELECTED_TASK_PLAN:\r\n            // task is selected to see task detail\r\n            return Object.assign({}, state, {\r\n                taskPlan: action.project.taskPlan\r\n            })\r\n\r\n        case AC.UPDATE_SELECTED_RELEASE_PLAN:\r\n            // task is selected to see task detail\r\n            return Object.assign({}, state, {\r\n                reportTaskDetail: Object.assign({}, state.reportTaskDetail, {\r\n                    releasePlan: action.releasePlan\r\n                })\r\n            })\r\n\r\n        case AC.SET_REPORT_DATE:\r\n            // while selection of reporting date it is set to state also\r\n            return Object.assign({}, state, {\r\n                dateStringOfReport: action.reportDate\r\n            })\r\n\r\n        case AC.SET_STATUS:\r\n            // while selection of reporting status it is set to state also\r\n            return Object.assign({}, state, {\r\n                status: action.status\r\n            })\r\n\r\n        case AC.SET_RELEASE_ID:\r\n            // while selection of reporting releaseID it is set to state also\r\n            return Object.assign({}, state, {\r\n                releaseID: action.releaseID\r\n            })\r\n\r\n        case AC.SET_ITERATION_TYPE:\r\n            // while selection of reporting iteration type it is set to state also\r\n            return Object.assign({}, state, {\r\n                iterationType: action.iterationType\r\n            })\r\n\r\n        case AC.SET_REPORTS_OF_RELEASE:\r\n            // while task plan need to see report list by manager and leader\r\n            return Object.assign({}, state, {\r\n                releasesReports: action.reports\r\n            })\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reportingReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/reportingReducer.js","import {connect} from 'react-redux'\r\nimport {AdminUserList} from \"../../components\"\r\nimport {initialize, SubmissionError} from 'redux-form'\r\nimport {NotificationManager} from \"react-notifications\";\r\nimport * as A from \"../../actions\";\r\nimport * as COC from \"../../components/componentConsts\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    showAdminUserEditForm: (user) => {\r\n        dispatch(A.showComponentHideOthers(COC.ADMIN_USER_FORM)),\r\n            dispatch(initialize('admin-user', user))\r\n    },\r\n    deleteAdminUser: (userId) => dispatch(A.deleteUserOnServer(userId)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success('User Deleted Successfully')\r\n        } else {\r\n            NotificationManager.error('User Not Deleted!')\r\n            throw new SubmissionError({users: \"User Deletion Failed\"})\r\n        }\r\n    }),\r\n    showAdminUserForm: () => dispatch(A.showComponentHideOthers(COC.ADMIN_USER_FORM))\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loggedInUser: state.user.loggedIn,\r\n        AdminUsers: state.user.all\r\n    }\r\n}\r\n\r\nconst AdminUserListContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AdminUserList)\r\nexport default AdminUserListContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/AdminUserListContainer.js","//login\r\nimport ReportTaskDescriptionFormContainer from \"./forms/ReportTaskDescriptionFormContainer\";\r\n\r\nexport {default as LoginFormContainer} from './forms/LoginFormContainer'\r\n\r\n\r\n//Pages\r\nexport {default as HomeContainer} from './pages/HomeContainer'\r\nexport {default as SuperAdminHomeContainer} from './pages/SuperAdminHomeContainer'\r\nexport {default as AdminHomeContainer} from './pages/AdminHomeContainer'\r\nexport {default as AppHomeContainer} from './pages/AppHomeContainer'\r\n\r\n\r\n//RolesAndPermission\r\nexport {default as PermissionFormContainer} from './forms/PermissionFormContainer'\r\nexport {default as RoleFormContainer} from './forms/RoleFormContainer'\r\nexport {default as PermissionListContainer} from './lists/PermissionListContainer'\r\nexport {default as RoleListContainer} from './lists/RoleListContainer'\r\n\r\n\r\n//Users\r\nexport {default as UserFormContainer} from './forms/UserFormContainer'\r\nexport {default as UserListContainer} from './lists/UserListContainer'\r\nexport {default as AdminUserFormContainer} from './forms/AdminUserFormContainer'\r\nexport {default as AdminUserListContainer} from './lists/AdminUserListContainer'\r\nexport {default as UserProfileFormContainer} from './forms/UserProfileFormContainer'\r\nexport {default as AdminRoleFormContainer} from './forms/AdminRoleFormContainer'\r\nexport {default as AdminRoleListContainer} from './lists/AdminRoleListContainer'\r\n\r\n//Employee Setting\r\nexport {default as EmployeeSettingFormContainer} from './forms/EmployeeSettingFormContainer'\r\n\r\n\r\n//Repository pages\r\nexport {default as RepositoryTaskDetailPageContainer} from './pages/RepositoryTaskDetailPageContainer'\r\nexport {default as RepositoryFeatureDetailPageContainer} from './pages/RepositoryFeatureDetailPageContainer'\r\nexport {default as RepositorySearchContainer} from './pages/RepositorySearchContainer'\r\n\r\n\r\n//Estimation pages\r\nexport {default as EstimationListContainer} from './lists/EstimationListContainer'\r\nexport {default as EstimationDetailContainer} from './pages/EstimationDetailContainer'\r\nexport {default as EstimationTasksContainer} from './sections/EstimationTasksContainer'\r\nexport {default as EstimationFeaturesContainer} from './sections/EstimationFeaturesContainer'\r\nexport {default as DashboardSectionContainer} from './sections/DashboardSectionContainer'\r\nexport {default as ReleaseDashboardSectionContainer} from './sections/ReleaseDashboardSectionContainer'\r\n\r\n\r\n//Sections\r\nexport {default as TabSectionContainer} from './sections/TabSectionContainer'\r\n\r\n\r\n//Estimation Forms\r\nexport {default as EstimationInitiateFormContainer} from './forms/EstimationInitiateFormContainer'\r\nexport {default as EstimationTaskFormContainer} from './forms/EstimationTaskFormContainer'\r\nexport {default as EstimationFeatureFormContainer} from './forms/EstimationFeatureFormContainer'\r\nexport {default as MoveTaskInFeatureFormContainer} from './forms/MoveTaskInFeatureFormContainer'\r\nexport {default as EstimationSuggestTaskFormContainer} from './forms/EstimationSuggestTaskFormContainer'\r\nexport {default as EstimationSuggestFeatureFormContainer} from './forms/EstimationSuggestFeatureFormContainer'\r\nexport {default as EstimationProjectAwardFormContainer} from './forms/EstimationProjectAwardFormContainer'\r\nexport {default as EstimationAddToReleaseFormContainer} from './forms/EstimationAddToReleaseFormContainer'\r\nexport {default as EstimationFilterFormContainer} from './forms/EstimationFilterFormContainer'\r\nexport {default as ReportTaskDescriptionFormContainer} from './forms/ReportTaskDescriptionFormContainer'\r\n\r\n// Release forms\r\nexport {default as CreateReleaseFormContainer} from './forms/CreateReleaseFormContainer'\r\n\r\n//Projects\r\nexport {default as ProjectListContainer} from './lists/ProjectListContainer'\r\nexport {default as ProjectFormContainer} from './forms/ProjectFormContainer'\r\n\r\n\r\n//Modules\r\nexport {default as ModuleListContainer} from './lists/ModuleListContainer'\r\nexport {default as ModuleFormContainer} from './forms/ModuleFormContainer'\r\n\r\n\r\n//technology\r\nexport {default as TechnologyListContainer} from './lists/TechnologyListContainer'\r\nexport {default as TechnologyFormContainer} from './forms/TechnologyFormContainer'\r\n\r\n\r\n//Client\r\nexport {default as ClientListContainer} from './lists/ClientListContainer'\r\nexport {default as ClientFormContainer} from './forms/ClientFormContainer'\r\n\r\n\r\n//leave\r\nexport {default as LeaveRequestFormContainer} from './forms/LeaveRequestFormContainer'\r\nexport {default as LeaveListContainer} from './lists/LeaveListContainer'\r\nexport {default as LeaveDetailPageContainer} from './pages/LeaveDetailPageContainer'\r\nexport {default as LeaveApprovalReasonFormContainer} from './forms/LeaveApprovalReasonFormContainer'\r\n\r\n\r\n//Leave Setting\r\nexport {default as LeaveSettingFormContainer} from './forms/LeaveSettingFormContainer'\r\n\r\n\r\n//attendance setting\r\nexport {default as AttendanceSettingFormContainer} from './forms/AttendanceSettingFormContainer'\r\n\r\n\r\n//Release setting\r\nexport {default as TaskReportDetailPageContainer} from './pages/TaskReportDetailPageContainer'\r\nexport {default as TaskReportListContainer} from './lists/TaskReportListContainer'\r\nexport {default as TaskPlanListContainer} from './lists/TaskPlanListContainer'\r\nexport {default as ReleaseDeveloperScheduleFormContainer} from './forms/ReleaseDeveloperScheduleFormContainer'\r\nexport {default as ReleaseDevelopersSchedulesContainer} from './pages/ReleaseDevelopersSchedulesContainer'\r\nexport {default as ReleaseTaskPlanningShiftFormContainer} from './forms/ReleaseTaskPlanningShiftFormContainer'\r\nexport {default as ReleaseDeveloperFilterFormContainer} from './forms/ReleaseDeveloperFilterFormContainer'\r\nexport {default as ReleaseTaskPlanningFormContainer} from './forms/ReleaseTaskPlanningFormContainer'\r\nexport {default as ReleaseMoveTaskPlanFormContainer} from './forms/ReleaseMoveTaskPlanFormContainer'\r\nexport {default as UpdateReleaseDatesFormContainer} from './forms/UpdateReleaseDatesFormContainer'\r\nexport {default as ReleasePlanAddToReleaseFormContainer} from './forms/ReleasePlanAddToReleaseFormContainer'\r\nexport {default as ReleaseListContainer} from './lists/ReleaseListContainer'\r\nexport {default as ReleasePlanListContainer} from './lists/ReleasePlanListContainer'\r\nexport {default as ReleasePlanSectionContainer} from './sections/ReleasePlanSectionContainer'\r\nexport {default as ReleaseTaskPlanningPageContainer} from './pages/ReleaseTaskPlanningPageContainer'\r\n\r\n//Calendar\r\nexport {default as CalendarTaskPageContainer} from './pages/CalendarTaskPageContainer'\r\nexport {default as CalendarTaskDetailPageContainer} from './pages/CalendarTaskDetailPageContainer'\r\n\r\n//Reporting\r\nexport {default as ReportingCommentFormContainer} from './forms/ReportingCommentFormContainer'\r\nexport {default as ReportingTaskPageContainer} from './pages/ReportingTaskPageContainer'\r\nexport {default as ReportingTaskDetailPageContainer} from './pages/ReportingTaskDetailPageContainer'\r\nexport {default as ReportingDateNavBarContainer} from './pages/ReportingDateNavBarContainer'\r\n\r\n//Warning\r\nexport {default as WarningListContainer} from './lists/WarningListContainer'\r\n\r\n//\r\nexport {default as HolidayFormContainer} from './forms/HolidayFormContainer'\r\nexport {default as HolidayListContainer} from './lists/HolidayListContainer'\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/containers/index.js","import * as AC from './actionConsts'\r\n\r\nexport const addUserReleases = (releases) => ({\r\n    type: AC.ADD_USER_RELEASES,\r\n    releases: releases\r\n})\r\n\r\nexport const addReleasesAndTasksOfSelectedDate = (releases, date) => ({\r\n    type: AC.ADD_RELEASES_AND_TASKS_OF_SELECTED_DATE,\r\n    releases: releases,\r\n    date: date\r\n})\r\n\r\nexport const setReportDate = (reportDate) => ({\r\n    type: AC.SET_REPORT_DATE,\r\n    reportDate: reportDate\r\n})\r\n\r\nexport const setReportedStatus = (status) => ({\r\n    type: AC.SET_STATUS,\r\n    status: status\r\n})\r\n\r\nexport const setReleaseID = (releaseID) => ({\r\n    type: AC.SET_RELEASE_ID,\r\n    releaseID: releaseID\r\n})\r\n\r\nexport const setIterationType = (iterationType) => ({\r\n    type: AC.SET_ITERATION_TYPE,\r\n    iterationType: iterationType\r\n})\r\n\r\nexport const releaseSelectedForReporting = (release) => ({\r\n    type: AC.RELEASE_SELECTED_FOR_REPORTING,\r\n    release: release\r\n})\r\n\r\nexport const setReportTaskPlanDetail = (detail) => ({\r\n    type: AC.REPORT_TASK_SELECTED,\r\n    detail: detail\r\n})\r\n\r\nexport const updateSelectedTaskPlan = (taskPlan) => ({\r\n    type: AC.UPDATE_SELECTED_TASK_PLAN,\r\n    taskPlan: taskPlan\r\n})\r\n\r\nexport const updateSelectedReleasePlan = (releasePlan) => ({\r\n    type: AC.UPDATE_SELECTED_RELEASE_PLAN,\r\n    releasePlan: releasePlan\r\n})\r\n\r\n\r\nexport const setReportsOfRelease = (reports) => ({\r\n    type: AC.SET_REPORTS_OF_RELEASE,\r\n    reports: reports\r\n})\r\n\r\nexport const taskReported = (task) => ({\r\n    type: AC.TASK_REPORTED,\r\n    task: task\r\n})\r\n\r\n\r\n/**\r\n * Gets all releases date\r\n */\r\nexport const getUserReleasesFromServer = () => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/reporting/user-releases', {\r\n                method: 'get',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addUserReleases(json.data))\r\n                }\r\n                return json.data\r\n            })\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Gets tasks that user can see/report for selected date\r\n */\r\nexport const getReportingTasksForDate = (releaseID, date, iterationType, taskStatus) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/reporting/task-plans/release/' + releaseID + '/date/' + date + '/iteration-type/' + iterationType + '/task-status/' + taskStatus, {\r\n                method: 'get',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addReleasesAndTasksOfSelectedDate(json.data, date))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const getDataForReportTaskDetailPageFromServer = (taskPlanID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/reporting/report-task-detail-page/task-plan/' + taskPlanID, {\r\n                method: 'get',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(setReportTaskPlanDetail(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\nexport const getTaskReportsReleasePlanPage = (releaseID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/reporting/release-plan-page/release/' + releaseID, {\r\n                method: 'get',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    console.log(\"json-data\", json.data)\r\n                    dispatch(setReportsOfRelease(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\nexport const reportTaskToServer = (task) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/reporting/task-plans/' + task._id, {\r\n                method: 'put',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(task)\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    if (json.data && json.data.taskPlan && json.data.taskPlan._id) {\r\n                        // return dispatch(getTaskPlanDetailsFromServer(json.data.taskPlan._id))\r\n                    }\r\n\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const addCommentToServer = (comment) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/reporting/comment', {\r\n                method: 'post',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(comment)\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.data && json.data.releasePlanID) {\r\n                    return dispatch(getReleasePlanByIdFromServer(json.data.releasePlanID))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const getReleasePlanByIdFromServer = (releasePlanID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/releases/' + releasePlanID + '/release-plan', {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(updateSelectedReleasePlan(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/actions/reportingAction.js","import React, {Component} from 'react'\r\nimport {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport {renderSelect} from './fields'\r\nimport moment from 'moment'\r\nimport momentLocalizer from 'react-widgets-moment'\r\nimport {connect} from 'react-redux'\r\nimport {NotificationManager} from 'react-notifications'\r\n\r\nmoment.locale('en')\r\nmomentLocalizer()\r\n\r\n\r\nclass ReleaseDeveloperScheduleForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            monthMoment: moment()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let props = this.props\r\n        const {handleSubmit, employeeID, team} = props\r\n        return <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"col-md-offset-3 col-md-6 repositoryHeading releaseDevScheduleHeading\">\r\n                    <span className={\"highlightText\"}>Employee Work Calendar</span>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"col-md-offset-3 col-md-6 pad\">\r\n                        <Field name=\"employeeID\"\r\n                               onChange={(event, newValue, oldValue) => {\r\n                                   props.getDeveloperSchedules(newValue, this.state.monthMoment.month(), this.state.monthMoment.year())\r\n                               }}\r\n                               component={renderSelect}\r\n                               noneOptionText={\"Select Employee...\"}\r\n\r\n                               options={team}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"col-md-3\">\r\n                        <button className={\"btn reportingArrow\"}\r\n                                style={{marginLeft: '-16px'}}\r\n                                onClick={() => {\r\n                                    if(!employeeID) {\r\n                                        return NotificationManager.error('Please select employee!')\r\n                                    }\r\n                                    let newMonthMoment = this.state.monthMoment.clone().subtract(1, 'month')\r\n                                    props.getDeveloperSchedules(employeeID, newMonthMoment.month(), newMonthMoment.year())\r\n                                    this.setState({\r\n                                        monthMoment: newMonthMoment\r\n                                    })\r\n                                }}\r\n                                type=\"button\">\r\n                            <i className=\"glyphicon glyphicon-arrow-left\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-md-6\" style={{margin: \"10px 0px\", fontSize: \"20\", textAlign: 'center'}}>\r\n                        {this.state.monthMoment.format('MMMM, YY')}\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                        <button className=\"btn reportingArrow\"\r\n                                style={{marginLeft: '27px'}}\r\n                                onClick={() => {\r\n                                    if(!employeeID) {\r\n                                        return NotificationManager.error('Please select employee!')\r\n                                    }\r\n                                    let newMonthMoment = this.state.monthMoment.clone().add(1, 'month')\r\n                                    props.getDeveloperSchedules(employeeID, newMonthMoment.month(), newMonthMoment.year())\r\n                                    this.setState({\r\n                                        monthMoment: newMonthMoment\r\n                                    })\r\n                                }}\r\n                                type=\"button\">\r\n                            <i className=\"glyphicon glyphicon-arrow-right\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    }\r\n}\r\n\r\nReleaseDeveloperScheduleForm = reduxForm({\r\n    form: 'developer-Schedule'\r\n})(ReleaseDeveloperScheduleForm)\r\n\r\nconst selector = formValueSelector('developer-Schedule')\r\n\r\nReleaseDeveloperScheduleForm = connect(\r\n    state => {\r\n        const {fromSchedule, employeeID} = selector(state, 'fromSchedule', \"employeeID\")\r\n        return {\r\n            fromSchedule,\r\n            employeeID\r\n        }\r\n    }\r\n)(ReleaseDeveloperScheduleForm)\r\n\r\n\r\nexport default ReleaseDeveloperScheduleForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/ReleaseDeveloperScheduleForm.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport {withRouter} from 'react-router-dom'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport moment from 'moment'\r\n\r\n\r\nclass TaskReportList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.options = {\r\n            sizePerPageList: [{\r\n                text: '6', value: 6\r\n            }, {\r\n                text: '10', value: 10\r\n            }, {\r\n                text: '20', value: 20\r\n            }, {\r\n                text: '50', value: 50\r\n            }],\r\n            sizePerPage: 6,  // which size per page you want to locate as default\r\n            onRowClick: this.onRowClick.bind(this)\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllTaskReports(this.props.release)\r\n    }\r\n\r\n    formatPlanningDate(dateString) {\r\n        if (dateString) {\r\n            return moment(dateString, SC.DATE_FORMAT).format(SC.DATE_DISPLAY_FORMAT)\r\n            //return row\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatDeveloperName(employee) {\r\n        if (employee)\r\n            return employee.name\r\n        return ''\r\n    }\r\n\r\n    formatTaskName(task, row) {\r\n        if (task) {\r\n            if (row.iterationType == SC.ITERATION_TYPE_PLANNED)\r\n                return <span style={{color: '#4172c1'}}>{task.name}</span>\r\n            else if (row.iterationType == SC.ITERATION_TYPE_UNPLANNED)\r\n                return <span style={{color: '#e52d8c'}}>{task.name}</span>\r\n            else\r\n                return <span>{task.name}</span>\r\n        }\r\n\r\n        return ''\r\n    }\r\n\r\n    formatPlannedHours(planning) {\r\n        console.log(\"Planning---------------\", planning)\r\n        if (planning)\r\n            return planning.plannedHours\r\n        return 0\r\n    }\r\n\r\n    formatPlannedDate(row) {\r\n        if (row) {\r\n            return moment(row).format(\"DD-MM-YYYY\")\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatReportedStatus(report) {\r\n        if (report)\r\n            return report.status\r\n        return ''\r\n    }\r\n\r\n    formatReportedHours(report) {\r\n        if (report)\r\n            return report.reportedHours\r\n        return 0\r\n    }\r\n\r\n\r\n    onRowClick(row) {\r\n        this.props.taskPlanSelected(row).then(json => {\r\n            if (json.success) {\r\n                this.props.history.push('/app-home/task-report-detail')\r\n                this.props.showTaskDetailPage()\r\n            }\r\n            return json\r\n        })\r\n    }\r\n\r\n    viewDetailButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\" btn btn-custom \" type=\"button\" onClick={() => {\r\n                this.props.taskPlanSelected(row).then(json => {\r\n                    if (json.success) {\r\n                        this.props.history.push('/app-home/task-report-detail')\r\n                        this.props.showTaskDetailPage()\r\n                    }\r\n                    return json\r\n                })\r\n            }}>\r\n                <i className=\"fa fa-eye\"></i>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {reports} = this.props\r\n        console.log(\"reports------------------\", reports)\r\n        return (\r\n            <div className=\"col-md-12 release-options\">\r\n                <BootstrapTable options={this.options} data={reports}\r\n                                multiColumnSearch={true}\r\n                                search={false}\r\n                                striped={true}\r\n                                pagination\r\n                                hover={true}\r\n                                height={\"300px\"}>\r\n                    <TableHeaderColumn columnTitle isKey dataField='_id'\r\n                                       hidden={true}>ID\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn columnTitle width={\"25%\"} dataField='task'\r\n                                       dataFormat={this.formatTaskName.bind(this)}>Task Name\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn width={\"25%\"} columnTitle dataField='employee'\r\n                                       dataFormat={this.formatDeveloperName.bind(this)}>Developer\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn columnTitle width={\"14%\"} dataField='planningDateString' dataFormat={this.formatPlanningDate.bind(this)}>Planning\r\n                        Date\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn columnTitle width={\"12%\"} dataField='planning' dataFormat={this.formatPlannedHours.bind(this)} dataAlign={\"right\"}>Planned\r\n                        Hours\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"12%\" columnTitle dataField='report'\r\n                                       dataFormat={this.formatReportedHours.bind(this)} dataAlign={\"right\"}>Reported\r\n                        Hours</TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"12%\" columnTitle dataField='report'\r\n                                       dataFormat={this.formatReportedStatus.bind(this)} dataAlign={\"center\"}>Status\r\n                    </TableHeaderColumn>\r\n\r\n                </BootstrapTable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(TaskReportList)\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/TaskReportList.js","import * as AC from '../actions/actionConsts'\r\n\r\nexport const changeNavigationView = (view, date) => ({\r\n    type: AC.CHANGE_CALENDAR_NAVIGATION,\r\n    view: view,\r\n    date: date\r\n})\r\n\r\nexport const showUsersTask = (tasks) => ({\r\n    type: AC.SHOW_USERS_TASKS,\r\n    tasks: tasks\r\n})\r\n\r\nexport const setCalendarTaskDetails = (detail) => ({\r\n    type: AC.SET_CALENDAR_TASK_DETAILS,\r\n    detail: detail\r\n})\r\n\r\nexport const getAllTaskPlansFromServer = () => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/calendars/tasks',\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\"\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(json => {\r\n            if (json.success) {\r\n                dispatch(showUsersTask(json.data))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getTaskAndProjectDetailsForCalendarFromServer = (taskPlanID) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/calendars/task-details/task-plan/' + taskPlanID,\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\"\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(json => {\r\n            if (json.success) {\r\n                dispatch(setCalendarTaskDetails(json.data))\r\n            }\r\n            return json\r\n        })\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/actions/calendarAction.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport {withRouter} from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport momentLocalizer from 'react-widgets-moment'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport _ from 'lodash'\r\nimport {\r\n    ReleaseDeveloperFilterFormContainer,\r\n    ReleaseDeveloperScheduleFormContainer,\r\n    ReleaseDevelopersSchedulesContainer\r\n} from '../../containers'\r\nimport {ConfirmationDialog} from \"../\";\r\n\r\nmoment.locale('en')\r\nmomentLocalizer()\r\n\r\nclass ReleaseTaskPlanningPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showTaskDeleteConfirmationDialog: false,\r\n            showTaskReopenConfirmationDialog: false,\r\n            row: {}\r\n        };\r\n\r\n        this.taskListPageOptions = {\r\n            sizePerPageList: [{\r\n                text: '5', value: 5\r\n            }],\r\n            sizePerPage: 5  // which size per page you want to locate as default\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onClose() {\r\n        this.setState({\r\n            showTaskDeleteConfirmationDialog: false\r\n        })\r\n    }\r\n\r\n    closeReopenTaskDialog() {\r\n        this.setState({\r\n            showTaskReopenConfirmationDialog: false\r\n        })\r\n    }\r\n\r\n    deleteCellButton(cell, row, enumObject, rowIndex) {\r\n        /*\r\n            let now = new Date()\r\n            let nowMomentString = moment(now).format(SC.DATE_FORMAT)\r\n            let nowMoment = moment(nowMomentString)\r\n            let planningMoment = moment(row.planningDateString)\r\n            if (planningMoment.isBefore(nowMoment))\r\n                return '' // planning date is over cannot delete now\r\n                */\r\n        if (row.report.reportedOnDate)\r\n            return '' // task is already report cannot delete now\r\n        else return (<button className=\" pull-left btn btn-custom\" type=\"button\"\r\n                             onClick={() => {\r\n                                 this.setState({showTaskDeleteConfirmationDialog: true, row: row})\r\n                             }}>\r\n            <i className=\"fa fa-trash\"></i>\r\n        </button>)\r\n    }\r\n\r\n    editCellButton(cell, row, enumObject, rowIndex) {\r\n        let now = new Date()\r\n        let nowMomentString = moment(now).format(SC.DATE_FORMAT)\r\n        let nowMoment = moment(nowMomentString)\r\n        let planningMoment = moment(row.planningDateString)\r\n        return ''\r\n    }\r\n\r\n    reopenCellButton(cell, row, enumObject, rowIndex) {\r\n\r\n        // Manager/leader can reopen task having status as completed if they think work is still pending\r\n        if (row.report.status == SC.STATUS_COMPLETED) {\r\n            return (<button className=\" pull-left btn btn-custom\" type=\"button\"\r\n                            onClick={() => {\r\n                                this.setState({showTaskReopenConfirmationDialog: true, row: row})\r\n                            }}>\r\n                <i className=\"fa fa-unlock\"></i>\r\n            </button>)\r\n        } else\r\n            return ''\r\n\r\n    }\r\n\r\n\r\n    actionCellButton(cell, row) {\r\n        if (row && row.canMove)\r\n            return (<button className=\" btn btn-custom customBtn mergeBtn\" type=\"button\"\r\n                            onClick={() => {\r\n                                this.props.openMoveTaskPlanForm(row, this.props.workCalendarEmployeeID)\r\n                            }}>Move</button>)\r\n        else return ''\r\n    }\r\n\r\n    formatPlanningDate(row) {\r\n        if (row && !_.isEmpty(row)) {\r\n            return moment(row, SC.DATE_FORMAT).format(SC.DATE_DISPLAY_FORMAT)\r\n            //return row\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatPlannedHours(planning) {\r\n        if (planning && planning.plannedHours)\r\n            return Number(planning.plannedHours)\r\n        else return 0\r\n    }\r\n\r\n    formatDeveloper(developer) {\r\n        if (developer && developer.name) {\r\n            return developer.name\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatReport(report) {\r\n        if (report && report.status) {\r\n            return report.status\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatTaskName(task) {\r\n        if (task && task.name) {\r\n            return task.name\r\n        }\r\n        return ''\r\n    }\r\n\r\n    onConfirmDeleteRequest() {\r\n        this.setState({showTaskDeleteConfirmationDialog: false})\r\n        this.props.deleteTaskPlanningRow(this.state.row, this.props.workCalendarEmployeeID)\r\n    }\r\n\r\n    reopenTask() {\r\n        this.setState({showTaskReopenConfirmationDialog: false})\r\n        this.props.reopenTask(this.state.row)\r\n    }\r\n\r\n    formatFlags(flags) {\r\n        let flagImageArray = flags && flags.length ? flags.map((flag, idx) => {\r\n            if (flag === SC.WARNING_UNPLANNED)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"unplanned\" + idx} src=\"/images/unplanned.png\"\r\n                            title=\"Unplanned\"/>\r\n            else if (flag === SC.WARNING_TOO_MANY_HOURS)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"too_many_hours\" + idx}\r\n                            src=\"/images/too_many_hours.png\"\r\n                            title=\"Too Many Hours\"/>\r\n            else if (flag === SC.WARNING_EMPLOYEE_ON_LEAVE)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"employee-on-leave\" + idx}\r\n                            src=\"/images/employee_on_leave.png\"\r\n                            title=\"Employee On Leave\"/>\r\n            else if (flag === SC.WARNING_RELEASE_DATE_MISSED_1)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"release_date_missed_1\" + idx}\r\n                            src=\"/images/release_date_missed_1.png\"\r\n                            title=\"Release Date Missed 1\"/>\r\n            else if (flag === SC.WARNING_RELEASE_DATE_MISSED_2)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"release_date_missed_2\" + idx}\r\n                            src=\"/images/release_date_missed_2.png\"\r\n                            title=\"Release Date Missed 2\"/>\r\n            else if (flag === SC.WARNING_RELEASE_DATE_MISSED_3)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"release_date_missed_3\" + idx}\r\n                            src=\"/images/release_date_missed_3.png\"\r\n                            title=\"Release Date Missed 3\"/>\r\n            else if (flag === SC.WARNING_RELEASE_DATE_MISSED_4)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"release_date_missed_4\" + idx}\r\n                            src=\"/images/release_date_missed_4.png\"\r\n                            title=\"Release Date Missed 4\"/>\r\n            else if (flag === SC.WARNING_PLANNED_BEYOND_RELEASE_DATE)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"planned_beyond_release_date\" + idx}\r\n                            src=\"/images/planned_beyond_release_date.png\"\r\n                            title=\"Planned Beyond Release Date\"/>\r\n            else if (flag === SC.WARNING_LESS_PLANNED_HOURS)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"less_planned_hours\" + idx}\r\n                            src=\"/images/less_planned_hours.png\"\r\n                            title=\"Less Planned Hours\"/>\r\n            else if (flag === SC.WARNING_MORE_PLANNED_HOURS)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"more_planned_hours\" + idx}\r\n                            src=\"/images/more_planned_hours.png\"\r\n                            title=\"More Planned Hours\"/>\r\n            else if (flag === SC.WARNING_MORE_REPORTED_HOURS_1)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"more_reported_hours_1\" + idx}\r\n                            src=\"/images/more_reported_hours_1.png\"\r\n                            title=\"More Reported Hours 1\"/>\r\n            else if (flag === SC.WARNING_MORE_REPORTED_HOURS_2)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"more_reported_hours_2\" + idx}\r\n                            src=\"/images/more_reported_hours_2.png\"\r\n                            title=\"More Reported Hours 2\"/>\r\n            else if (flag === SC.WARNING_MORE_REPORTED_HOURS_3)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"more_reported_hours_3\" + idx}\r\n                            src=\"/images/more_reported_hours_3.png\"\r\n                            title=\"More Reported Hours 3\"/>\r\n            else if (flag === SC.WARNING_MORE_REPORTED_HOURS_4)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"more_reported_hours_4\" + idx}\r\n                            src=\"/images/more_reported_hours_4.png\"\r\n                            title=\"More Reported Hours 4\"/>\r\n            else if (flag === SC.WARNING_HAS_UNREPORTED_DAYS)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"has-unreported-days\" + idx}\r\n                            src=\"/images/has_unreported_days.png\"\r\n                            title=\"Has Unreported Days\"/>\r\n            else if (flag === SC.WARNING_UNREPORTED)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"unreported\" + idx}\r\n                            src=\"/images/unreported.png\"\r\n                            title=\"Unreported\"/>\r\n            else if (flag === SC.WARNING_PENDING_ON_END_DATE)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"pending-on-enddate\" + idx}\r\n                            src=\"/images/pending-on-enddate.png\"\r\n                            title=\"Pending On Enddate\"/>\r\n            else if (flag === SC.WARNING_COMPLETED_BEFORE_END_DATE)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"completed-before-enddate\" + idx}\r\n                            src=\"/images/completed_before_enddate.png\"\r\n                            title=\"Completed Before Enddate\"/>\r\n            else if (flag === SC.WARNING_EMPLOYEE_ASK_FOR_LEAVE)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"employee-ask-for-leave\"}\r\n                            src=\"/images/employee-ask-for-leave.png\"\r\n                            title=\"Employee Ask For Leave\"/>\r\n            else return ''\r\n        }) : null\r\n        return <span>{flagImageArray}</span>\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {releasePlan, taskPlans, developerPlans, expanded, release, workCalendarEmployeeID} = this.props\r\n        return (\r\n            <div>\r\n                <div className=\"col-md-8 pad\">\r\n                    <div className=\"col-md-12 estimateheader\">\r\n                        <div className=\"col-md-6 pad\">\r\n                            <div className=\"backarrow\">\r\n                                <h5>\r\n                                    <button className=\"btn-link\" title=\"Go Back\" onClick={() => {\r\n                                        this.props.history.push(\"/app-home/release-plan\")\r\n                                        this.props.ReleaseTaskGoBack(release)\r\n                                    }}><i className=\"glyphicon glyphicon-arrow-left\"></i></button>\r\n                                    <b title={releasePlan && releasePlan.task ? releasePlan.task.name : ''}>{releasePlan.task ? releasePlan.task.name : ''} </b>\r\n                                </h5>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-2 \">\r\n                            <button\r\n                                className=\" btn refreshBtn \"\r\n                                type=\"button\"\r\n                                onClick={() => {\r\n                                    this.props.refreshSelectedTaskPlan(releasePlan, releasePlan.rolesInThisRelease)\r\n                                }}>\r\n                                <i className=\"fa fa-refresh \"></i>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"col-md-2  releaseClock \">\r\n                            <i className=\"fa fa-clock-o \"\r\n                               title=\"Estimated Hours\"></i><b>{releasePlan && releasePlan.task ? releasePlan.task.estimatedHours : ''}\r\n                            Hrs</b>\r\n                        </div>\r\n                        <div className=\"col-md-2  releaseClock releasePlannedHrs\">\r\n                            <i className=\"fa fa-clock-o \"\r\n                               title=\"Planned Hours\"></i><b>{releasePlan && releasePlan.planning ? releasePlan.planning.plannedHours : ''}\r\n                            Hrs</b>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-12 \">\r\n                        <div className={expanded ? \"expanded-release-content\" : 'release-content'}>\r\n                            <p className=\"task-description \">{releasePlan && releasePlan.task ? releasePlan.task.description : ''}</p>\r\n                            {expanded ? <label className=\"div-hover releaseReadLessLabel releaseReadLessLabelClick\"\r\n                                               onClick={() => this.props.expandDescription(false)}>...Read\r\n                                Less</label> : <label className=\"div-hover releaseReadMoreLabel\"\r\n                                                      onClick={() => this.props.expandDescription(true)}>...Read\r\n                                More</label>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-12 releasePlanChkBtn\">\r\n                        <div className=\"col-md-4 planchk\">\r\n                        </div>\r\n                        <div className=\"col-md-4 planBtn\">\r\n                            <button type=\"button\" className=\"btn releasePlanTaskbtn\"\r\n                                    onClick={() => this.props.showTaskPlanningCreationForm(releasePlan, workCalendarEmployeeID)}>\r\n                                <i className=\"fa fa-plus-circle\"></i>\r\n                                Plan Task\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"estimation\">\r\n                            <BootstrapTable options={this.options} data={taskPlans}\r\n                                            striped={true}\r\n                                            hover={true}\r\n                                            height={\"300px\"}\r\n                                            options={this.taskListPageOptions}\r\n                                            pagination\r\n                            >\r\n                                <TableHeaderColumn columnTitle isKey dataField='_id'\r\n                                                   hidden={true}>ID</TableHeaderColumn>\r\n                                <TableHeaderColumn columnTitle dataField='planningDateString'\r\n                                                   width={\"15%\"}\r\n                                                   dataFormat={this.formatPlanningDate.bind(this)}>Date</TableHeaderColumn>\r\n                                <TableHeaderColumn columnTitle dataField='planning'\r\n                                                   width={\"10%\"}\r\n                                                   dataFormat={this.formatPlannedHours.bind(this)}>Planned\r\n                                    Hours</TableHeaderColumn>\r\n                                <TableHeaderColumn columnTitle dataField='employee'\r\n                                                   dataFormat={this.formatDeveloper.bind(this)}\r\n                                                   width={\"20%\"}>Developer</TableHeaderColumn>\r\n                                <TableHeaderColumn dataField='flags'\r\n                                                   dataFormat={this.formatFlags.bind(this)} width={\"18%\"}>Flags\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn columnTitle dataField='report'\r\n                                                   dataFormat={this.formatReport.bind(this)} width={\"13%\"}>Status\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn columnTitle={\"Delete Task\"} width=\"8%\" dataField='button'\r\n                                                   dataFormat={this.deleteCellButton.bind(this)}><i\r\n                                    className=\"fa fa-trash\"></i>\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn columnTitle={\"Edit Task\"} width=\"8%\" dataField='button'\r\n                                                   dataFormat={this.editCellButton.bind(this)}><i\r\n                                    className=\"fa fa-pencil\"></i>\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn columnTitle={\"Reopen Task\"} width=\"8%\" dataField='button'\r\n                                                   dataFormat={this.reopenCellButton.bind(this)}><i\r\n                                    className=\"fa fa-unlock\"></i>\r\n                                </TableHeaderColumn>\r\n                            </BootstrapTable>\r\n                            {\r\n                                this.state && this.state.showTaskDeleteConfirmationDialog &&\r\n                                <ConfirmationDialog show={true}\r\n                                                    onConfirm={this.onConfirmDeleteRequest.bind(this)}\r\n                                                    title=\"Task Delete\" onClose={this.onClose.bind(this)}\r\n                                                    body=\"Are you sure you want to delete this task plan. Please confirm!\"/>\r\n                            }\r\n                            {\r\n                                this.state && this.state.showTaskReopenConfirmationDialog &&\r\n                                <ConfirmationDialog show={true}\r\n                                                    onConfirm={this.reopenTask.bind(this)}\r\n                                                    title=\"Task Reopen\" onClose={this.closeReopenTaskDialog.bind(this)}\r\n                                                    body=\"This will mark task as 'pending' again. Please confirm.\"/>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <ReleaseDeveloperFilterFormContainer/>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"estimation\">\r\n                            <BootstrapTable options={this.options} data={developerPlans}\r\n                                            striped={true}\r\n                                            hover={true}>\r\n                                <TableHeaderColumn columnTitle isKey dataField='_id'\r\n                                                   hidden={true}>ID</TableHeaderColumn>\r\n                                <TableHeaderColumn columnTitle dataField='planningDateString'\r\n                                                   dataFormat={this.formatPlanningDate.bind(this)}>\r\n                                    Date\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn columnTitle dataField='task'\r\n                                                   dataFormat={this.formatTaskName.bind(this)}>\r\n                                    Task Name\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn width=\"25%\" columnTitle dataField='employee'\r\n                                                   dataFormat={this.formatDeveloper.bind(this)}>\r\n                                    Developer\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn columnTitle dataField='planning'\r\n                                                   dataFormat={this.formatPlannedHours.bind(this)}>\r\n                                    Planned Effort\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn columnTitle dataField='report'\r\n                                                   dataFormat={this.formatReport.bind(this)}>\r\n                                    Reported\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn width=\"12%\" dataField='button'\r\n                                                   dataFormat={this.actionCellButton.bind(this)}>\r\n                                    <i className=\"fa fa-plus\"></i>\r\n                                </TableHeaderColumn>\r\n                            </BootstrapTable>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4 estimationsection pad\">\r\n                    <div>\r\n                        <ReleaseDeveloperScheduleFormContainer/>\r\n                    </div>\r\n                    <ReleaseDevelopersSchedulesContainer/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReleaseTaskPlanningPage.defaultProps = {\r\n    expanded: false\r\n}\r\nexport default withRouter(ReleaseTaskPlanningPage)\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/pages/ReleaseTaskPlanningPage.js","import {connect} from 'react-redux'\r\nimport {ReportingTaskPage} from '../../components/index'\r\nimport * as A from '../../actions/index'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport {initialize} from 'redux-form'\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    setReleaseID: (releaseID, date, iterationType, reportedStatus) => {\r\n        dispatch(A.setReleaseID(releaseID))\r\n        dispatch(A.getReportingTasksForDate(releaseID, date, iterationType, reportedStatus))\r\n    },\r\n    setReportedStatus: (releaseID, date, iterationType, reportedStatus) => {\r\n        dispatch(A.setReportedStatus(reportedStatus))\r\n        dispatch(A.getReportingTasksForDate(releaseID, date, iterationType, reportedStatus))\r\n    },\r\n    setIterationType: (releaseID, date, iterationType, reportedStatus) => {\r\n        dispatch(A.setIterationType(iterationType))\r\n        dispatch(A.getReportingTasksForDate(releaseID, date, iterationType, reportedStatus))\r\n    },\r\n    taskPlanSelected: (taskPlan) => dispatch(A.getDataForReportTaskDetailPageFromServer(taskPlan._id)),\r\n    showTaskDetailPage: () => {\r\n        dispatch(A.showComponentHideOthers(COC.REPORTING_TASK_DETAIL_PAGE))\r\n    },\r\n    reportTask: (task, date, iterationType) => {\r\n        let reportData = {\r\n            _id: task._id,\r\n            reportedHours: parseFloat(task.reportedHours),\r\n            status: iterationType == SC.ITERATION_TYPE_PLANNED ? task.status : SC.STATUS_PENDING,\r\n            reportedDate: date,\r\n            iterationType: iterationType,\r\n            taskName: task.task.name,\r\n            reportDescription: task.report.description\r\n        }\r\n\r\n        dispatch(initialize('report-task-description', reportData))\r\n        dispatch(A.showComponent(COC.REPORT_TASK_DESCRIPTION_DIALOG))\r\n\r\n\r\n        /*\r\n        return dispatch(A.reportTaskToServer(inputTask)).then((json) => {\r\n            if (json.success) {\r\n                NotificationManager.success('Task report submitted.')\r\n                dispatch(A.taskReported(json.data.taskPlan))\r\n            } else\r\n                NotificationManager.error(json.message)\r\n            return json\r\n        })\r\n        */\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    allReleases: state.report.allReleases,\r\n    releases: state.report.availableReleases,\r\n    dateOfReport: state.report.dateStringOfReport,\r\n    releaseID: state.report.releaseID,\r\n    reportedStatus: state.report.reportedStatus,\r\n    iterationType: state.report.iterationType\r\n})\r\n\r\nconst ReportingTaskPageContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReportingTaskPage)\r\n\r\nexport default ReportingTaskPageContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/ReportingTaskPageContainer.js","import {combineReducers} from 'redux'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport userReducer from './userReducer'\r\nimport appReducer from './appReducer'\r\nimport permissionReducer from './permissionReducer'\r\nimport roleReducer from './roleReducer'\r\nimport clientReducer from './clientReducer'\r\nimport estimationReducer from './estimationReducer'\r\nimport projectReducer from './projectReducer'\r\nimport technologyReducer from './technologyReducer'\r\nimport leaveReducer from './leaveReducer'\r\nimport repositoryReducer from './repositoryReducer'\r\nimport attendanceSettingReducer from './attendanceSettingReducer'\r\nimport releaseReducer from './releaseReducer'\r\nimport calendarReducer from './calendarReducer'\r\nimport reportingReducer from './reportingReducer'\r\nimport warningReducer from './warningReducer'\r\nimport holidayReducer from './holidayReducer'\r\nimport dashboardReducer from './dashboardReducer'\r\nimport employeeReducer from './employeeReducer'\r\nimport developmentTypeReducer from './developmentTypeReducer'\r\nimport moduleReducer from './moduleReducer'\r\n\r\n\r\nconst reducers = combineReducers({\r\n    form: formReducer, // Redux form state\r\n    user: userReducer,\r\n    app: appReducer,\r\n    permission: permissionReducer,\r\n    role: roleReducer,\r\n    client: clientReducer,\r\n    estimation: estimationReducer,\r\n    project: projectReducer,\r\n    technology: technologyReducer,\r\n    leave: leaveReducer,\r\n    repository: repositoryReducer,\r\n    attendanceSetting: attendanceSettingReducer,\r\n    release: releaseReducer,\r\n    calendar: calendarReducer,\r\n    report: reportingReducer,\r\n    warning: warningReducer,\r\n    holiday: holidayReducer,\r\n    dashboard: dashboardReducer,\r\n    employee: employeeReducer,\r\n    developmentType: developmentTypeReducer,\r\n    module: moduleReducer\r\n})\r\nexport default reducers\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/index.js","import {required} from \"./validation\"\r\nimport {renderText} from \"./fields\"\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport React from 'react'\r\nimport * as logger from \"../../clientLogger\";\r\n\r\n\r\nlet TechnologyForm = (props) => {\r\n    logger.debug(logger.TECHNOLOGY_FORM_RENDER, \"onSubmit: props:\", props)\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <Field name=\"name\" placeholder={\"Name of Technology\"} component={renderText}\r\n                       label={\"Technology Name:\"} validate={[required]}/>\r\n\r\n\r\n                <button type=\"submit\" disabled={props.pristine || props.submitting} className=\"btn customBtn\">Submit\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nTechnologyForm = reduxForm({\r\n    form: 'technology'\r\n})(TechnologyForm)\r\n\r\nexport default TechnologyForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/TechnologyForm.js","import * as AC from \"../actions/actionConsts\"\r\n\r\nlet initialState = {\r\n    all: [],\r\n    selected: {},\r\n    tasks: [],\r\n    features: [],\r\n    expandedFeatureID: undefined,\r\n    expandedTaskID: undefined,\r\n    filter: {\r\n        changedByNegotiator: true,\r\n        changedByEstimator: true,\r\n        permissionRequested: true,\r\n        addedFromRepository: true,\r\n        addedByNegotiator: true,\r\n        addedByEstimator: true,\r\n        hasError: true\r\n\r\n    }\r\n\r\n}\r\n\r\nconst estimationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AC.ADD_ESTIMATION_TASK:\r\n            // task is added to estimation, it would be added against selected estimation\r\n            let addTaskFeature = {}\r\n            if (action.task && action.task.feature && action.task.feature._id && Array.isArray(state.features)) {\r\n                addTaskFeature = state.features.find(item => item._id == action.task.feature._id)\r\n                if (addTaskFeature && Array.isArray(addTaskFeature.tasks)) {\r\n                    addTaskFeature.tasks.push(action.task)\r\n                }\r\n                else {\r\n                    addTaskFeature.tasks = [action.task]\r\n                }\r\n                return Object.assign({}, state, {\r\n                    features: Array.isArray(state.features) ?\r\n                        state.features.map(item => item._id == addTaskFeature._id ?\r\n                            Object.assign({}, addTaskFeature) : item) : null\r\n                })\r\n            }\r\n            else\r\n                return Object.assign({}, state, {\r\n                    tasks: Array.isArray(state.tasks) ? [...state.tasks, action.task] : [action.task]\r\n                })\r\n\r\n\r\n        case AC.UPDATE_ESTIMATION_TASK:\r\n            let feature = {}\r\n            if (action.task && action.task.feature && action.task.feature._id && Array.isArray(state.features)) {\r\n                feature = state.features.find(item => item._id == action.task.feature._id)\r\n                if (feature && Array.isArray(feature.tasks)) {\r\n                    feature.tasks = feature.tasks.map(item => item._id == action.task._id ?\r\n                        Object.assign({}, action.task) : item)\r\n                    return Object.assign({}, state, {\r\n                        features: Array.isArray(state.features) ?\r\n                            state.features.map(item => item._id == feature._id ?\r\n                                Object.assign({}, feature) : item) : null\r\n                    })\r\n                }\r\n\r\n            }\r\n            else\r\n                return Object.assign({}, state, {\r\n                    tasks: Array.isArray(state.tasks) ?\r\n                        state.tasks.map(item => item._id == action.task._id ?\r\n                            Object.assign({}, action.task) : item) : null\r\n                })\r\n\r\n\r\n        case AC.ADD_ESTIMATION_FEATURE:\r\n            // feature is added to estimation, it would be added against selected estimation\r\n            return Object.assign({}, state, {\r\n                features: Array.isArray(state.features) ? [...state.features, action.feature] : [action.feature]\r\n            })\r\n\r\n\r\n        case AC.UPDATE_ESTIMATION_FEATURE:\r\n            // feature is updated to  selected estimation\r\n            if (action.feature && action.feature.tasks && action.feature.tasks.length) {\r\n                return Object.assign({}, state, {\r\n                    features: Array.isArray(state.features) ? state.features.map(item => {\r\n                        if (item._id == action.feature._id) {\r\n                            return Object.assign({}, action.feature)\r\n                        } else return item\r\n                    }) : null,\r\n                    tasks: action.feature && action.feature.tasks ? {} : state.tasks\r\n                })\r\n            } else return Object.assign({}, state, {\r\n                features: Array.isArray(state.features) ? state.features.map(item => {\r\n                    if (item._id == action.feature._id) {\r\n                        action.feature.tasks = item.tasks\r\n                        return Object.assign({}, action.feature)\r\n                    } else return item\r\n                }) : null\r\n            })\r\n\r\n        case AC.MOVE_TASK_IN_FEATURE:\r\n            return Object.assign({}, state, {\r\n                tasks: state.tasks.filter(item => item._id != action.task._id),\r\n                features: Array.isArray(state.features) && state.features.length > 0 ? state.features.map((feature, idx) => {\r\n                    if (feature._id == action.task.feature._id) {\r\n                        return Object.assign({}, feature, {\r\n                                tasks: Array.isArray(feature.tasks) ? [...feature.tasks, Object.assign({}, action.task)] : [Object.assign({}, action.task)]\r\n                            }\r\n                        )\r\n                    }\r\n                    return feature\r\n                }) : []\r\n            })\r\n\r\n\r\n        case AC.MOVE_TASK_OUTOF_FEATURE:\r\n            /*\r\n                As task is moved out, task would be added to tasks array and would be removed from feature it was part of\r\n             */\r\n            return Object.assign({}, state, {\r\n                tasks: [...state.tasks, Object.assign({}, action.task)],\r\n                features: Array.isArray(state.features) && state.features.length > 0 ? state.features.map((feature, idx) => {\r\n                    if (feature._id == action.featureID) {\r\n                        return Object.assign({}, feature, {\r\n                            tasks: Array.isArray(feature.tasks) ? feature.tasks.filter(t => t._id != action.task._id) : []\r\n                        })\r\n                    }\r\n                    return feature\r\n                }) : []\r\n            })\r\n\r\n\r\n        case AC.DELETE_ESTIMATION_TASK:\r\n            let featureTask = {}\r\n            if (action.task && action.task.feature && action.task.feature._id && Array.isArray(state.features)) {\r\n                featureTask = state.features.find(item => item._id == action.task.feature._id)\r\n                if (featureTask && Array.isArray(featureTask.tasks)) {\r\n                    featureTask.tasks = featureTask.tasks.filter(item => item._id != action.task._id)\r\n                    return Object.assign({}, state, {\r\n                        features: Array.isArray(state.features) ?\r\n                            state.features.map(item => item._id == featureTask._id ?\r\n                                Object.assign({}, featureTask) : item) : null\r\n                    })\r\n                }\r\n\r\n            }\r\n            else\r\n                return Object.assign({}, state, {tasks: state.tasks.filter(item => item._id != action.task._id)})\r\n\r\n\r\n        case AC.ADD_ESTIMATIONS:\r\n            return Object.assign({}, state, {all: action.estimations})\r\n\r\n\r\n        case AC.ADD_ESTIMATION:\r\n            return Object.assign({}, state, {all: [...state.all, action.estimation]})\r\n\r\n\r\n        case AC.EDIT_ESTIMATION:\r\n            return Object.assign({}, state, {\r\n                all: state.all.map(item => item._id == action.estimation._id ? action.estimation : item),\r\n                selected: Object.assign({}, action.estimation)\r\n            })\r\n\r\n\r\n        case AC.SELECT_ESTIMATION:\r\n            return Object.assign({}, state, {\r\n                selected: Object.assign({}, action.estimation, {\r\n                    tasks: undefined,\r\n                    features: undefined,\r\n                }),\r\n                tasks: Array.isArray(action.estimation.tasks) && action.estimation.tasks.length > 0 ? action.estimation.tasks.filter(t => t.isDeleted == false) : [],\r\n                features: Array.isArray(action.estimation.features) && action.estimation.features.length > 0 ?\r\n                    action.estimation.features.filter(f => {\r\n                            if (f.isDeleted == false) {\r\n                                if (Array.isArray(f.tasks) && f.tasks.length > 0)\r\n                                    f.tasks = f.tasks.filter(t => t.isDeleted == false)\r\n\r\n                                return true;\r\n                            }\r\n                            else return false\r\n                        }\r\n                    ) : [],\r\n\r\n                expandedFeatureID: undefined,\r\n                expandedTaskID: undefined,\r\n                filter: {\r\n                    changedByNegotiator: true,\r\n                    changedByEstimator: true,\r\n                    permissionRequested: true,\r\n                    addedFromRepository: true,\r\n                    addedByNegotiator: true,\r\n                    addedByEstimator: true,\r\n                    hasError: true\r\n\r\n                }\r\n            })\r\n\r\n\r\n        case AC.UPDATE_SELECTED_ESTIMATION:\r\n            return Object.assign({}, state, {\r\n                selected: Object.assign({}, action.estimation, {\r\n                    tasks: undefined,\r\n                    features: undefined\r\n                }),\r\n            })\r\n\r\n\r\n        case AC.DELETE_ESTIMATION:\r\n            return Object.assign({}, state, {estimation: state.all && state.all.length ? state.all.filter(item => item._id != action.estimationID) : []})\r\n\r\n\r\n        case AC.DELETE_ESTIMATION_FEATURE:\r\n            return Object.assign({}, state, {features: state.features.filter(item => item._id != action.feature._id)})\r\n\r\n\r\n        case AC.EXPAND_FEATURE:\r\n            // Compare expanded feature ID with expanded feature id of state\r\n\r\n            if (state.expandedFeatureID && state.expandedFeatureID == action.featureID) {\r\n                // Feature was expanded and clicked again, so contract\r\n                return Object.assign({}, state, {\r\n                    expandedFeatureID: undefined,\r\n                    expandedTaskID: undefined\r\n                })\r\n            }\r\n\r\n            return Object.assign({}, state, {\r\n                expandedFeatureID: action.featureID,\r\n                expandedTaskID: undefined\r\n            })\r\n\r\n\r\n        case AC.EXPAND_TASK:\r\n            // Compare expanded task ID with expanded task id of state\r\n            if (state.expandedTaskID && state.expandedTaskID == action.taskID) {\r\n                // Feature was expanded and clicked again, so contract\r\n                return Object.assign({}, state, {\r\n                    expandedFeatureID: undefined,\r\n                    expandedTaskID: undefined\r\n                })\r\n            }\r\n            return Object.assign({}, state, {\r\n                expandedFeatureID: undefined,\r\n                expandedTaskID: action.taskID\r\n            })\r\n\r\n        case AC.EXPAND_TASK_AND_FEATURE:\r\n            // Compare expanded task ID with expanded task id of state\r\n            if (state.expandedTaskID && state.expandedTaskID == action.taskID && state.expandedFeatureID && state.expandedFeatureID == action.featureID) {\r\n                // Feature was expanded and clicked again, so contract\r\n                return Object.assign({}, state, {\r\n                    expandedFeatureID: action.featureID,\r\n                    expandedTaskID: undefined\r\n                })\r\n            }\r\n            else if (state.expandedFeatureID && state.expandedFeatureID == action.featureID) {\r\n                return Object.assign({}, state, {\r\n                    expandedFeatureID: action.featureID,\r\n                    expandedTaskID: action.taskID\r\n                })\r\n            } else return state\r\n\r\n\r\n        case AC.ADD_FILTERED_ESTIMATIONS:\r\n            return Object.assign({}, state, {\r\n                filter: {\r\n                    changedByNegotiator: action.filter && action.filter.changedByNegotiator ? true : false,\r\n                    changedByEstimator: action.filter && action.filter.changedByEstimator ? true : false,\r\n                    permissionRequested: action.filter && action.filter.permissionRequested ? true : false,\r\n                    addedFromRepository: action.filter && action.filter.addedFromRepository ? true : false,\r\n                    addedByEstimator: action.filter && action.filter.addedByEstimator ? true : false,\r\n                    addedByNegotiator: action.filter && action.filter.addedByNegotiator ? true : false,\r\n                    hasError: action.filter && action.filter.hasError ? true : false\r\n                }\r\n            })\r\n\r\n\r\n        case AC.CLEAR_FILTER_FROM_ESTIMATION:\r\n            return Object.assign({}, state, {\r\n                filter: {\r\n                    changedByNegotiator: false,\r\n                    changedByEstimator: false,\r\n                    permissionRequested: false,\r\n                    addedFromRepository: false,\r\n                    addedByNegotiator: false,\r\n                    addedByEstimator: false,\r\n                    hasError: false\r\n                }\r\n            })\r\n        case AC.SELECT_ALL_FILTER_FROM_ESTIMATION:\r\n            return Object.assign({}, state, {\r\n                filter: {\r\n                    changedByNegotiator: true,\r\n                    changedByEstimator: true,\r\n                    permissionRequested: true,\r\n                    addedFromRepository: true,\r\n                    addedByNegotiator: true,\r\n                    addedByEstimator: true,\r\n                    hasError: true\r\n                }\r\n            })\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default estimationReducer\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/estimationReducer.js","import {connect} from 'react-redux'\r\nimport UserForm from \"../../components/forms/UserForm\"\r\nimport {NotificationManager} from \"react-notifications\";\r\nimport {SubmissionError} from \"redux-form\";\r\nimport * as EC from \"../../../server/errorcodes\";\r\nimport * as A from \"../../actions\";\r\nimport * as COC from \"../../components/componentConsts\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        if (!values._id) {\r\n            return dispatch(A.addUserOnServer(values)).then((json) => {\r\n                    if (json.success) {\r\n                        dispatch(A.showComponentHideOthers(COC.USER_LIST))\r\n                        NotificationManager.success('User Added Successful');\r\n                    } else {\r\n                        NotificationManager.error('User Added Failed');\r\n                        if (json.code && json.code == EC.ALREADY_EXISTS) {\r\n                            // role already exists throw SubmissionError to show appropriate error\r\n                            throw new SubmissionError({email: 'Email already exists'})\r\n                        }\r\n                        throw new SubmissionError(json.errors)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            return dispatch(A.editUserOnServer(values)).then((json) => {\r\n                    if (json.success) {\r\n                        dispatch(A.showComponentHideOthers(COC.USER_LIST))\r\n                        NotificationManager.success('User Updated Successful');\r\n                    } else {\r\n                        NotificationManager.error('User Updated Failed');\r\n                        if (json.code && json.code == EC.EMAIL_ALREADY_USED) {\r\n                            throw new SubmissionError({email: 'Email already exists'})\r\n                            // role already exists throw SubmissionError to show appropriate error\r\n                        }\r\n                        else if (json.code && json.code == EC.PASSWORD_NOT_MATCHED) {\r\n                            throw new SubmissionError({password: 'Password not matched'})\r\n                        }\r\n                        else throw new SubmissionError(json.errors)\r\n                    }\r\n                }\r\n            )\r\n\r\n        }\r\n    },\r\n    showUserList: () => dispatch(A.showComponentHideOthers(COC.USER_LIST))\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    roles: state.role.all\r\n\r\n    // roles:state.users.roles\r\n})\r\n\r\nconst UserFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UserForm)\r\n\r\nexport default UserFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/UserFormContainer.js","import {connect} from 'react-redux'\r\nimport {TechnologyForm} from \"../../components\"\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as EC from \"../../../server/errorcodes\";\r\nimport {SubmissionError} from \"redux-form\";\r\nimport * as logger from '../../clientLogger'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        logger.debug(logger.TECHNOLOGY_FORM_CONNECT, \"onSubmit:values:\", values)\r\n        return dispatch(A.addTechnologyOnServer(values)).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success('Technology Added Successfully')\r\n                dispatch(A.hideComponent(COC.TECHNOLOGY_FORM_DIALOG))\r\n\r\n            } else {\r\n                NotificationManager.error('Technology Not Added!')\r\n                if (json.code == EC.ALREADY_EXISTS)\r\n                    throw new SubmissionError({name: \"Technology Already Exists\"})\r\n            }\r\n            return json\r\n        })\r\n\r\n    }\r\n})\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    //clients: state.client.all,\r\n    technologies: state.technology.all,\r\n\r\n})\r\n\r\nconst TechnologyFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TechnologyForm)\r\n\r\nexport default TechnologyFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/TechnologyFormContainer.js","import {connect} from 'react-redux'\r\nimport {ModuleForm} from \"../../components\"\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as EC from \"../../../server/errorcodes\";\r\nimport {SubmissionError} from \"redux-form\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        if (!values._id) {\r\n            return dispatch(A.addModuleOnServer(values)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success('Module Added Successfully')\r\n                    dispatch(A.hideComponent(COC.MODULE_FORM_DIALOG))\r\n\r\n                } else {\r\n                    NotificationManager.error('Module Not Added!')\r\n                    if (json.code == EC.ALREADY_EXISTS)\r\n                        throw new SubmissionError({name: \"Module Already Exists\"})\r\n                }\r\n                return json\r\n            })\r\n        } else {\r\n            return dispatch(A.editModuleOnServer(values)).then(response => {\r\n                if (response.success) {\r\n                    dispatch(A.hideComponent(COC.MODULE_FORM_DIALOG)),\r\n                        NotificationManager.success('Module Updated Successfully')\r\n                } else {\r\n                    NotificationManager.error('Module Updated Failed');\r\n                    if (response.code == EC.ALREADY_EXISTS)\r\n                        throw new SubmissionError({name: \"Module Already Exists\"})\r\n                }\r\n                return json\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clients: state.client.all,\r\n    projects: state.project.all,\r\n\r\n})\r\n\r\nconst ModuleFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ModuleForm)\r\n\r\nexport default ModuleFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/ModuleFormContainer.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {ReportTaskDescriptionFormContainer} from \"../../containers\"\r\n\r\nconst ReportTaskDescriptionFormDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Report Details</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <ReportTaskDescriptionFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default ReportTaskDescriptionFormDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/ReportTaskDescriptionFormDialog.js","import {connect} from 'react-redux'\r\nimport {ReleaseTaskPlanningForm} from \"../../components\"\r\nimport * as A from \"../../actions\"\r\nimport * as COC from \"../../components/componentConsts\";\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as EC from '../../../server/errorcodes'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (taskPlan) => {\r\n        taskPlan.planning.plannedHours = Number(taskPlan.planning.plannedHours)\r\n        return dispatch(A.addTaskPlanningOnServer(taskPlan)).then(json => {\r\n            if (json.success) {\r\n                console.log(\"==== taskPlan Planning added ==== \", taskPlan.employee._id, taskPlan.workCalendarEmployeeID)\r\n                NotificationManager.success(\"taskPlan Planning Added\")\r\n                dispatch(A.hideComponent(COC.RELEASE_TASK_PLANNING_FORM_DIALOG))\r\n                // If workCalendar employee id matches with task planning employee id fetch work calendar\r\n                if (taskPlan.employee._id.toString() == taskPlan.workCalendarEmployeeID.toString())\r\n                    dispatch(A.getEmployeeWorkCalendarFromServer(taskPlan.workCalendarEmployeeID))\r\n                return json\r\n            }\r\n            else {\r\n                return NotificationManager.error(json.message)\r\n            }\r\n        })\r\n\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    releaseTeam: state.release && state.release.selectedRelease && state.release.selectedRelease.team && state.release.selectedRelease.team.length ? state.release.selectedRelease.team : [],\r\n    allTeam: state.user.allDevelopers && state.user.allDevelopers ? state.user.allDevelopers : [],\r\n    initial: state.release.selectedRelease.iterations[state.release.selectedReleasePlan.release.iteration.idx],\r\n    releasePlan: state.release.selectedReleasePlan\r\n})\r\n\r\n\r\nconst ReleaseTaskPlanningFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReleaseTaskPlanningForm)\r\n\r\nexport default ReleaseTaskPlanningFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/ReleaseTaskPlanningFormContainer.js","import React, {Component} from 'react'\r\nimport {renderDateTimePickerString} from \"./fields\"\r\nimport {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport moment from 'moment'\r\nimport {connect} from 'react-redux'\r\nimport momentLocalizer from 'react-widgets-moment'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nmoment.locale('en')\r\nmomentLocalizer()\r\n\r\nclass ReportingDateNavBar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {reportedStatus, releaseID, dateOfReport, iterationType} = this.props\r\n        const {change} = this.props\r\n        return (\r\n            <form>\r\n                <div className='col-md-12'>\r\n                    <div className=\"col-md-2 div-hover\">\r\n                        <button className=\"btn reportingArrow\"\r\n                                style={{marginLeft: '117px'}}\r\n                                onClick={() => {\r\n                                    let prevDate = moment(dateOfReport).clone().subtract(1, 'days').format(SC.DATE_FORMAT)\r\n                                    this.props.setReportDate(prevDate)\r\n                                    this.props.onReleaseSelected(releaseID, prevDate, iterationType, reportedStatus)\r\n                                    change(\"dateOfReport\", moment(prevDate).clone().toDate())\r\n\r\n                                }}\r\n                                type=\"button\">\r\n                            <i className=\"glyphicon glyphicon-arrow-left\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-md-3 reportingDatePicker\">\r\n                        <Field name='dateOfReport'\r\n                               onChange={(event, newValue, oldValue) => {\r\n                                   this.props.setReportDate(newValue)\r\n                                   this.props.onReleaseSelected(releaseID, newValue, iterationType, reportedStatus)\r\n                               }}\r\n                               label=''\r\n                               component={renderDateTimePickerString}\r\n                               showTime={false}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 div-hover\">\r\n                        <button className=\"btn reportingArrow\"\r\n                                style={{marginLeft: '150px'}}\r\n                                onClick={() => {\r\n                                    let nextDate = moment(dateOfReport).clone().add(1, 'days').format('YYYY-MM-DD')\r\n\r\n                                    this.props.setReportDate(nextDate)\r\n                                    this.props.onReleaseSelected(releaseID, nextDate, iterationType, reportedStatus)\r\n                                    change(\"dateOfReport\", moment(nextDate).clone().toDate())\r\n                                }}\r\n                                type=\"button\">\r\n                            <i className=\"glyphicon glyphicon-arrow-right\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <hr/>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nReportingDateNavBar = reduxForm({\r\n    form: 'reporting-date'\r\n})(ReportingDateNavBar)\r\n\r\nconst selector = formValueSelector('reporting-date')\r\n\r\nReportingDateNavBar = connect(\r\n    state => {\r\n        const dateOfReport = selector(state, 'dateOfReport')\r\n        return {\r\n            dateOfReport\r\n        }\r\n    }\r\n)(ReportingDateNavBar)\r\n\r\n\r\nexport default ReportingDateNavBar\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/ReportingDateNavBar.js","import {required} from \"./validation\"\r\nimport {renderSelect, renderText} from \"./fields\"\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport React from 'react'\r\n\r\nlet ProjectForm = (props) => {\r\n    const {reset, pristine, submitting, handleSubmit, clients} = props\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <Field name=\"name\" placeholder={\"Name of project\"} component={renderText}\r\n                       label={\"Project Name:\"} validate={[required]}/>\r\n\r\n                <Field name=\"client._id\" component={renderSelect} label={\"Client :\"} options={clients}\r\n                       validate={[required]}/>\r\n\r\n                <button type=\"submit\" disabled={pristine || submitting} className=\"btn customBtn\"> Submit\r\n                </button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nProjectForm = reduxForm({\r\n    form: 'project'\r\n})(ProjectForm)\r\n\r\nexport default ProjectForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/ProjectForm.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {ReleasePlanAddToReleaseFormContainer} from \"../../containers\"\r\n\r\nconst ReleasePlanAddToReleaseDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Add To ReleasePlan</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <ReleasePlanAddToReleaseFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default ReleasePlanAddToReleaseDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/ReleasePlanAddToReleaseDialog.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {ConfirmationDialog} from \"../index\";\r\nimport * as CM from \"../../clientMsg\"\r\n\r\nclass ModuleList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showModuleDeletionDialog: false,\r\n            addRow: null\r\n\r\n\r\n        }\r\n    }\r\n\r\n    onClose() {\r\n        this.setState({showModuleDeletionDialog: false})\r\n    }\r\n\r\n    OkConfirmationForDeletingModule() {\r\n        this.setState({showModuleDeletionDialog: false})\r\n        this.props.deleteModule(this.state.addRow)\r\n    }\r\n\r\n    viewDeleteButton(cell, row, enumObject, rowIndex) {\r\n\r\n\r\n        return (<button className=\" btn btn-custom \" type=\"button\" onClick={() => {\r\n                this.setState({showModuleDeletionDialog: true}),\r\n                    this.setState({addRow: row._id})\r\n            }}>\r\n                <i className=\"fa fa-trash\"></i>\r\n            </button>\r\n        )\r\n\r\n    }\r\n\r\n    viewEditButton(cell, row, enumObject, rowIndex) {\r\n\r\n\r\n        return (<button className=\" btn btn-custom\" type=\"button\" onClick={() => {\r\n                this.props.showModuleEditForm(row)\r\n\r\n            }}>\r\n                <i className=\"fa fa-pencil\"></i>\r\n            </button>\r\n\r\n        )\r\n    }\r\n\r\n    formatProject(project) {\r\n        if (project)\r\n            return project.name\r\n        return ''\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>{this.state.showModuleDeletionDialog &&\r\n            <ConfirmationDialog show={true} onConfirm={this.OkConfirmationForDeletingModule.bind(this)}\r\n                                title={CM.DELETE_MODULE} onClose={this.onClose.bind(this)}\r\n                                body={CM.DELETE_MODULE_BODY}/>\r\n            }\r\n                <div key=\"project_list\" className=\"clearfix\">\r\n\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"col-md-12 pad\">\r\n\r\n                            <div className=\"col-md-12\">\r\n                                <button className=\"btn customBtn\"\r\n                                        onClick={() => this.props.showModuleCreationForm()}>Create Module\r\n                                </button>\r\n\r\n                                <div className=\"estimation\">\r\n\r\n                                    <BootstrapTable options={this.options} data={this.props.modules}\r\n                                                    striped={true}\r\n                                                    hover={true}>\r\n                                        <TableHeaderColumn columnTitle isKey dataField='_id'\r\n                                                           hidden={true}>ID</TableHeaderColumn>\r\n                                        <TableHeaderColumn columnTitle dataField='name'>Module Name</TableHeaderColumn>\r\n                                        <TableHeaderColumn columnTitle dataField='project'\r\n                                                           dataFormat={this.formatProject.bind(this)}>Project\r\n                                            Name</TableHeaderColumn>\r\n                                        <TableHeaderColumn width=\"15%\" dataField='editButton'\r\n                                                           dataFormat={this.viewEditButton.bind(this)}>Edit Module\r\n                                        </TableHeaderColumn>\r\n                                        <TableHeaderColumn width=\"15%\" dataField='deleteButton'\r\n                                                           dataFormat={this.viewDeleteButton.bind(this)}>Delete Module\r\n                                        </TableHeaderColumn>\r\n\r\n                                    </BootstrapTable>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ModuleList)\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/ModuleList.js","import {required} from \"./validation\"\r\nimport {renderSelect, renderText} from \"./fields\"\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport React from 'react'\r\n\r\nlet ModuleForm = (props) => {\r\n    const {reset, pristine, submitting, handleSubmit, projects} = props\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <Field name=\"name\" placeholder={\"Name of Module\"} component={renderText}\r\n                       label={\"Module Name:\"} validate={[required]}/>\r\n\r\n                <Field name=\"project._id\" component={renderSelect} label={\"Project :\"} options={projects}\r\n                       validate={[required]}/>\r\n\r\n                <button type=\"submit\" disabled={pristine || submitting} className=\"btn customBtn\">Submit</button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nModuleForm = reduxForm({\r\n    form: 'module'\r\n})(ModuleForm)\r\n\r\nexport default ModuleForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/ModuleForm.js","import React from 'react'\r\nimport moment from 'moment';\r\nimport Multiselect from 'react-widgets/lib/Multiselect'\r\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker'\r\nimport _ from 'lodash'\r\n/*\r\nForm Field components\r\n */\r\n\r\nexport const renderText = ({\r\n                               input,\r\n                               label,\r\n                               readOnly = false,\r\n                               disbled = false,\r\n                               type,\r\n                               placeholder,\r\n                               meta: {touched, error, warning}\r\n                           }) =>\r\n    <div className=\"form-group\">\r\n        <label htmlFor={input.name}>{label} {touched &&\r\n        ((error &&\r\n            <span className=\"validation-error\">\r\n              {error}\r\n            </span>))\r\n        }</label>\r\n        <input {...input} readOnly={readOnly} disabled={disbled} placeholder={placeholder} type={type}\r\n               className={'form-control ' + (touched && ((!error && 'valid-field') || (error && 'invalid-field')))}/>\r\n    </div>\r\n\r\nexport const renderCheckBox = ({\r\n                                   input,\r\n                                   label,\r\n                                   readOnly,\r\n                                   className = \"input checkbox\",\r\n                                   meta: {touched, error, warning}\r\n                               }) =>\r\n    <div className={className}>\r\n        {touched &&\r\n        ((error &&\r\n            <span className=\"validation-error\">\r\n              {error}\r\n            </span>))\r\n        }\r\n        <label>\r\n            <input {...input} readOnly={readOnly} checked={input && input.value ? true : false}\r\n                   onChange={input.onChange} type=\"checkbox\"/>\r\n            {label}\r\n        </label>\r\n\r\n    </div>\r\n/*\r\nexport const renderCheckBox = ({\r\n                                   input,\r\n                                   label,\r\n                                   readOnly,\r\n                                   meta: {touched, error, warning}\r\n                               }) =>\r\n            <div className=\"input checkbox\">\r\n        {touched &&\r\n        ((error &&\r\n            <span className=\"validation-error\">\r\n        {error}\r\n            </span>))\r\n        }\r\n         <label>\r\n             <input {...input} readOnly={readOnly} type=\"checkbox\"/>\r\n              {label}\r\n            </label>\r\n\r\n                </div>*/\r\n\r\nexport const renderSelect = ({\r\n                                 input,\r\n                                 onChange,\r\n                                 label,\r\n                                 options,\r\n                                 readOnly = false,\r\n                                 noneOptionText = 'Select ...',\r\n                                 noneOptionValue = '',\r\n                                 showNoneOption = true,\r\n                                 displayField = 'name',\r\n                                 optionalDisplayField = 'name',\r\n                                 disabled = false,\r\n                                 valueField = \"_id\",\r\n                                 hoverEnabledMsg,\r\n                                 hoverDisabledMsg,\r\n                                 meta: {touched, error, warning}\r\n                             }) => {\r\n\r\n    return <div className=\"form-group\" style={{position: \"relative\"}}>\r\n        <label htmlFor={input.name}>{label} {touched &&\r\n        ((error &&\r\n            <span className=\"validation-error\">\r\n            {error}\r\n          </span>))\r\n        }</label>\r\n        <select {...input}\r\n                className={\"form-control hoverTooltip \" + (touched && ((!error && \"valid-field\") || (error && \"invalid-field\")))}\r\n                disabled={disabled} readOnly={readOnly}>\r\n            {showNoneOption && <option value={noneOptionValue}>{noneOptionText}</option>}\r\n            {\r\n                options && options.map(option => {\r\n                        return <option value={_.get(option, valueField)}\r\n                                       key={option[valueField]}>{_.get(option, displayField) ? _.get(option, displayField) : _.get(option, optionalDisplayField)}</option>\r\n                    }\r\n                )\r\n            }\r\n        </select>\r\n        {hoverEnabledMsg && <span className=\"enabledMsg\">{hoverEnabledMsg}</span>}\r\n        {hoverDisabledMsg && <span className=\"disabledMsg\">{hoverDisabledMsg}</span>}\r\n    </div>\r\n}\r\n\r\n\r\nexport const renderTextArea = ({\r\n                                   input,\r\n                                   label,\r\n                                   placeholder,\r\n                                   disabled = false,\r\n                                   readOnly = false,\r\n                                   rows,\r\n                                   hoverEnabledMsg,\r\n                                   hoverDisabledMsg,\r\n                                   meta: {touched, error, warning}\r\n                               }) =>\r\n    <div className=\"form-group\">\r\n        <label htmlFor={input.name}>{label} {touched &&\r\n        ((error &&\r\n            <span className=\"validation-error\">\r\n            {error}\r\n          </span>))\r\n        }</label>\r\n        <textarea rows={rows} {...input} placeholder={placeholder} readOnly={readOnly} disabled={disabled}\r\n                  className={\"form-control hoverToolTip \" + (touched && ((!error && \"valid-field\") || (error && \"invalid-field\")))}></textarea>\r\n    </div>\r\nexport const renderError = ({\r\n                                input,\r\n                                label,\r\n                                meta: {touched, error, warning}\r\n                            }) =>\r\n    <h3><span className=\"label label-danger\">{error}</span></h3>\r\n\r\nexport const renderLoginField = ({\r\n                                     input,\r\n                                     label,\r\n                                     readOnly,\r\n                                     type,\r\n                                     placeholder,\r\n                                     meta: {touched, error, warning}\r\n                                 }) =>\r\n    <div className=\"col-md-12\">\r\n        <label htmlFor={input.name}>{label} {touched &&\r\n        ((error &&\r\n            <span className=\"validation-error\">\r\n              {error}\r\n            </span>))\r\n        }</label>\r\n        <input {...input} className=\"form-control\" type={type}/>\r\n    </div>\r\n\r\nexport const renderMultiSelect = ({\r\n                                      input,\r\n                                      data,\r\n                                      valueField = \"_id\",\r\n                                      disabled = false,\r\n                                      textField = \"name\",\r\n                                      label,\r\n                                      placeholder,\r\n                                      meta: {touched, error, warning}\r\n                                  }) =>\r\n    <div className=\"form-group\">\r\n        <label htmlFor={input.name}>{label} {touched &&\r\n        ((error &&\r\n            <span className=\"validation-error\">\r\n                {error}\r\n            </span>))\r\n        }</label>\r\n        <Multiselect {...input}\r\n                     onBlur={() => input.onBlur()}\r\n                     value={input.value || []} // requires value to be an array\r\n                     data={data}\r\n                     disabled={disabled}\r\n                     valueField={valueField}\r\n                     label={label}\r\n                     textField={textField}\r\n                     placeholder={placeholder}\r\n        />\r\n    </div>\r\n\r\nexport const renderField = ({\r\n                                input,\r\n                                label,\r\n                                readOnly,\r\n                                type,\r\n                                placeholder,\r\n                                meta: {touched, error, warning},\r\n                                disabled = false\r\n                            }) =>\r\n    <div className=\"form-group\">\r\n        <label htmlFor={input.name}>{label} {touched &&\r\n        ((error &&\r\n            <span className=\"validation-error\">\r\n              {error}\r\n            </span>))\r\n        }</label>\r\n        <input {...input} readOnly={readOnly} disabled={disabled} placeholder={placeholder} type={type}\r\n               className={'form-control ' + (touched && ((!error && 'valid-field') || (error && 'invalid-field')))}/>\r\n    </div>\r\n\r\nexport const renderDateTimePickerString = ({\r\n                                               input: {onChange, value, name, onBlur},\r\n                                               label,\r\n                                               readOnly,\r\n                                               timeZone = 'America/New_York',\r\n                                               dropUp = false,\r\n                                               info,\r\n                                               showTime = false,\r\n                                               showCalendar = true,\r\n                                               min,\r\n                                               max,\r\n                                               type,\r\n                                               placeholder,\r\n                                               disabled = false,\r\n                                               currentDate,\r\n                                               meta: {touched, error, warning},\r\n                                               hoverEnabledMsg,\r\n                                               hoverDisabledMsg\r\n                                           }) => {\r\n\r\n    let val = undefined\r\n\r\n    if (value) {\r\n        if (showCalendar && showTime)\r\n            val = moment(value, 'YYYY-MM-DD').toDate()\r\n        else if (showCalendar)\r\n            val = moment(value, 'YYYY-MM-DD').toDate()\r\n        else if (showTime)\r\n            val = moment(value, 'YYYY-MM-DD').toDate()\r\n    }\r\n\r\n    const parse = event => {\r\n        if (event) {\r\n            if (showCalendar) {\r\n                if (showTime) {\r\n                    if (typeof(event) === 'object' && event.target && event.target.value) {\r\n                        let v = moment(event.target.value).format('YYYY-MM-DD')\r\n                        return v\r\n                    } else {\r\n                        let v = moment(event).format('YYYY-MM-DD')\r\n                        return v\r\n                    }\r\n                } else {\r\n                    if (typeof(event) === 'object' && event.target && event.target.value) {\r\n                        let v = moment(event.target.value).format('YYYY-MM-DD')\r\n                        return v\r\n                    } else {\r\n                        let v = moment(event).format('YYYY-MM-DD')\r\n                        return v\r\n                    }\r\n                }\r\n            } else {\r\n                if (showTime) {\r\n                    if (typeof(event) === 'object' && event.target && event.target.value) {\r\n                        if (event.target.value.length == 7)\r\n                            event.target.value = '0' + event.target.value\r\n                        return event.target.value;\r\n                    } else {\r\n                        if (event && event.length == 7)\r\n                            event = '0' + event\r\n                        let v = moment(event).format('YYYY-MM-DD')\r\n                        return v\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return undefined\r\n    }\r\n\r\n    return <div className=\"form-group\" style={{position: \"relative\"}}>\r\n        <label htmlFor={name}>{label} {touched &&\r\n        ((error &&\r\n            <span className=\"validation-error\">\r\n            {error}\r\n          </span>))\r\n\r\n        }{(info &&\r\n            <span className=\"field-info\">\r\n            {info}\r\n          </span>)}</label>\r\n        <DateTimePicker\r\n            className=\" hoverTooltip\"\r\n            min={min}\r\n            max={max}\r\n            readOnly={readOnly}\r\n            disabled={disabled}\r\n            onChange={event => onChange(parse(event))}\r\n            onBlur={event => onBlur(parse(event))}\r\n            time={showTime}\r\n            calendar={showCalendar}\r\n            value={val}\r\n            dropUp={dropUp}\r\n            currentDate={currentDate}\r\n            onKeyPress={event => event.preventDefault()}\r\n            onKeyDown={event => event.preventDefault()}\r\n        />\r\n        {hoverEnabledMsg && <span className=\"enabledMsg\" style={{width: 250}}>{hoverEnabledMsg}</span>}\r\n        {hoverDisabledMsg && <span className=\"disabledMsg\">{hoverDisabledMsg}</span>}\r\n\r\n    </div>\r\n}\r\n\r\nexport const renderDateTimePicker = ({\r\n                                         input: {onChange, value, name, onBlur},\r\n                                         label,\r\n                                         readOnly,\r\n                                         info,\r\n                                         showTime,\r\n                                         showCalendar,\r\n                                         min,\r\n                                         max,\r\n                                         type,\r\n                                         dropUp = false,\r\n                                         placeholder,\r\n                                         disabled = false,\r\n                                         meta: {touched, error, warning}\r\n                                     }) => {\r\n    return <div className=\"form-group\">\r\n        <label htmlFor={name}>{label} {touched &&\r\n        ((error &&\r\n            <span className=\"validation-error\">\r\n            {error}\r\n          </span>))\r\n\r\n        }{(info &&\r\n            <span className=\"field-info\">\r\n            {info}\r\n          </span>)}</label>\r\n        <DateTimePicker\r\n            min={min}\r\n            max={max}\r\n            format={'MM-DD-YYYY'}\r\n            readOnly={readOnly}\r\n            disabled={disabled}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            time={showTime}\r\n            calendar={showCalendar}\r\n            value={!value ? null : new Date(value)}\r\n\r\n        />\r\n    </div>\r\n}\r\n\r\n\r\nexport const renderDateTimeStringShow = ({\r\n                                             input: {onChange, value, name},\r\n                                             label,\r\n                                             readOnly,\r\n                                             info,\r\n                                             showTime,\r\n                                             showCalendar,\r\n                                             min,\r\n                                             max,\r\n                                             formate = \"DD-MM-YYYY\",\r\n                                             type,\r\n                                             dropUp = false,\r\n                                             placeholder,\r\n                                             disabled = false,\r\n                                             meta: {touched, error, warning}\r\n                                         }) => {\r\n    // console.log(\"value\", value)\r\n    return <div className=\"form-group\">\r\n        <label htmlFor={name}>{label} {touched &&\r\n        ((error &&\r\n            <span className=\"validation-error\">\r\n            {error}\r\n          </span>))\r\n\r\n        }{(info &&\r\n            <span className=\"field-info\">\r\n            {info}\r\n          </span>)}</label>\r\n        <label>{moment(value).format(formate)}</label>\r\n    </div>\r\n}\r\n\r\n\r\n/*\r\nexport const renderDateTimePickerWithLeave = ({\r\n                                                  input: {onChange, value, name},\r\n                                                  label,\r\n                                                  readOnly,\r\n                                                  info,\r\n                                                  showTime = false,\r\n                                                  showCalendar,\r\n                                                  leaveDays = [\"Sunday\", \"Saturday\"],\r\n                                                  min,\r\n                                                  max,\r\n                                                  type,\r\n                                                  dropUp = false,\r\n                                                  placeholder,\r\n                                                  disabled = false,\r\n                                                  meta: {touched, error, warning}\r\n                                              }) => {\r\n\r\n    const filter = event => {\r\n        if (event) {\r\n            console.log(\"event\", event)\r\n             console.log(\"event.target.value\", event.target.value)\r\n             if (showCalendar) {\r\n                 if (showTime) {\r\n                     console.log(\"under Development\")\r\n                 } else {\r\n                     if (typeof(event) === 'object' && event.target && event.target.value) {\r\n                         let v = moment(event.target.value).format('YYYY-MM-DD')\r\n                         return v\r\n                     } else {\r\n                         let v = moment(event).format('YYYY-MM-DD')\r\n                         return v\r\n                     }\r\n                 }\r\n             } else {\r\n                 if (showTime) {\r\n                     if (typeof(event) === 'object' && event.target && event.target.value) {\r\n                         if (event.target.value.length == 7)\r\n                             event.target.value = '0' + event.target.value\r\n                         return event.target.value;\r\n                     } else {\r\n                         if (event && event.length == 7)\r\n                             event = '0' + event\r\n                         let v = moment(event).format('YYYY-MM-DD')\r\n                         return v\r\n                     }\r\n                 }\r\n             }\r\n            console.log(\"moment(event).format\", moment(event).format('YYYY-MM-DD'))\r\n            console.log(\"day\", moment(\"9-18-2016\").format('dddd'))\r\n            console.log(\"day Comparision\", _.includes(leaveDays, moment(\"9-18-2016\").format('dddd')))\r\n            console.log(\" new Date(event).getDay()\", new Date(event).getDay())\r\n\r\n            //  console.log(\"moment(event).format\",_.include(\"\") moment(event).hour(0).minute(0).second(0).millisecond(0))\r\n            return moment(event).format('YYYY-MM-DD')\r\n        }\r\n        return undefined\r\n    }\r\n    return <div className=\"form-group\">\r\n        <label htmlFor={name}>{label} {touched &&\r\n        ((error &&\r\n            <span className=\"validation-error\">\r\n            {error}\r\n          </span>))\r\n\r\n        }{(info &&\r\n            <span className=\"field-info\">\r\n            {info}\r\n          </span>)}</label>\r\n        <DateTimePicker\r\n            min={min}\r\n            max={max}\r\n            format={'MM-DD-YYYY'}\r\n            readOnly={readOnly}\r\n            disabled={disabled}\r\n            onChange={event => onChange(filter(event))}\r\n            time={showTime}\r\n            calendar={showCalendar}\r\n            value={!value ? null : new Date(value)}\r\n\r\n        />\r\n    </div>\r\n}\r\n*/\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/fields.js","import * as A from '../actions'\r\nimport * as AC from \"./actionConsts\";\r\n\r\n\r\nexport const calculateReleaseStats = (data) => ({\r\n    type: AC.CALCULATE_RELEASE_STATS,\r\n    release: data.release,\r\n    mgmtData: data.mgmtData\r\n})\r\n\r\nexport const addReleaseDailyPlannings = (dailyPlannings, resetDailyPlanningMonth) => ({\r\n    type: AC.ADD_DAILY_PLANNINGS,\r\n    dailyPlannings: dailyPlannings,\r\n    resetDailyPlanningMonth: resetDailyPlanningMonth ? true : false\r\n})\r\n\r\n\r\nexport const getReleaseForDashboard = (releaseID) => {\r\n    console.log(\"releaseID\", releaseID)\r\n    return function (dispatch) {\r\n        return fetch('/api/dashboard/release-data',\r\n            {\r\n                method: \"post\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    releaseID: releaseID\r\n                })\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(calculateReleaseStats(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const getReleaseDayPlannings = (releaseID, month, year, resetDailyPlanningMonth) => {\r\n    return function (dispatch) {\r\n        return fetch('/api/dashboard/day-plannings/' + releaseID + '/month/' + month + '/year/' + year,\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(addReleaseDailyPlannings(json.data, resetDailyPlanningMonth))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/actions/dashboardAction.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport {withRouter} from 'react-router-dom'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nclass WarningList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.options = {\r\n            sizePerPageList: [{\r\n                text: '6', value: 6\r\n            }, {\r\n                text: '10', value: 10\r\n            }, {\r\n                text: '20', value: 20\r\n            }, {\r\n                text: '50', value: 50\r\n            }],\r\n            sizePerPage: 6,  // which size per page you want to locate as default\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllWarnings(this.props.release)\r\n    }\r\n\r\n\r\n    formatFlag(flag) {\r\n        if (flag === SC.WARNING_UNPLANNED)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"unplanned\"} src=\"/images/unplanned.png\"\r\n                        title=\"Unplanned\"/>\r\n        else if (flag === SC.WARNING_TOO_MANY_HOURS)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"too_many_hours\"}\r\n                        src=\"/images/too_many_hours.png\"\r\n                        title=\"Too Many Hours\"/>\r\n        else if (flag === SC.WARNING_EMPLOYEE_ON_LEAVE)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"employee-on-leave\"}\r\n                        src=\"/images/employee_on_leave.png\"\r\n                        title=\"Employee On Leave\"/>\r\n        else if (flag === SC.WARNING_RELEASE_DATE_MISSED_1)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"release_date_missed_1\"}\r\n                        src=\"/images/release_date_missed_1.png\"\r\n                        title=\"Release Date Missed 1\"/>\r\n        else if (flag === SC.WARNING_RELEASE_DATE_MISSED_2)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"release_date_missed_2\"}\r\n                        src=\"/images/release_date_missed_2.png\"\r\n                        title=\"Release Date Missed 2\"/>\r\n        else if (flag === SC.WARNING_RELEASE_DATE_MISSED_3)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"release_date_missed_3\"}\r\n                        src=\"/images/release_date_missed_3.png\"\r\n                        title=\"Release Date Missed 3\"/>\r\n        else if (flag === SC.WARNING_RELEASE_DATE_MISSED_4)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"release_date_missed_4\"}\r\n                        src=\"/images/release_date_missed_4.png\"\r\n                        title=\"Release Date Missed 4\"/>\r\n        else if (flag === SC.WARNING_PLANNED_BEYOND_RELEASE_DATE)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"planned_beyond_release_date\"}\r\n                        src=\"/images/planned_beyond_release_date.png\"\r\n                        title=\"Planned Beyond Release Date\"/>\r\n        else if (flag === SC.WARNING_LESS_PLANNED_HOURS)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"less_planned_hours\"}\r\n                        src=\"/images/less_planned_hours.png\"\r\n                        title=\"Less Planned Hours\"/>\r\n        else if (flag === SC.WARNING_MORE_PLANNED_HOURS)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"more_planned_hours\"}\r\n                        src=\"/images/more_planned_hours.png\"\r\n                        title=\"More Planned Hours\"/>\r\n        else if (flag === SC.WARNING_MORE_REPORTED_HOURS_1)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"more_reported_hours_1\"}\r\n                        src=\"/images/more_reported_hours_1.png\"\r\n                        title=\"More Reported Hours 1\"/>\r\n        else if (flag === SC.WARNING_MORE_REPORTED_HOURS_2)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"more_reported_hours_2\"}\r\n                        src=\"/images/more_reported_hours_2.png\"\r\n                        title=\"More Reported Hours 2\"/>\r\n        else if (flag === SC.WARNING_MORE_REPORTED_HOURS_3)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"more_reported_hours_3\"}\r\n                        src=\"/images/more_reported_hours_3.png\"\r\n                        title=\"More Reported Hours 3\"/>\r\n        else if (flag === SC.WARNING_MORE_REPORTED_HOURS_4)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"more_reported_hours_4\"}\r\n                        src=\"/images/more_reported_hours_4.png\"\r\n                        title=\"More Reported Hours 4\"/>\r\n        else if (flag === SC.WARNING_HAS_UNREPORTED_DAYS)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"has-unreported-days\"}\r\n                        src=\"/images/has_unreported_days.png\"\r\n                        title=\"Has Unreported Days\"/>\r\n        else if (flag === SC.WARNING_UNREPORTED)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"unreported\"}\r\n                        src=\"/images/unreported.png\"\r\n                        title=\"Unreported\"/>\r\n        else if (flag === SC.WARNING_PENDING_ON_END_DATE)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"pending-on-enddate\"}\r\n                        src=\"/images/pending-on-enddate.png\"\r\n                        title=\"Pending On Enddate\"/>\r\n        else if (flag === SC.WARNING_COMPLETED_BEFORE_END_DATE)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"completed-before-enddate\"}\r\n                        src=\"/images/completed_before_enddate.png\"\r\n                        title=\"Completed Before Enddate\"/>\r\n        else if (flag === SC.WARNING_EMPLOYEE_ASK_FOR_LEAVE)\r\n            return <img className=\"div-hover releasePlanFlagImg\" key={\"employee-ask-for-leave\"}\r\n                        src=\"/images/employee-ask-for-leave.png\"\r\n                        title=\"Employee Ask For Leave\"/>\r\n\r\n    }\r\n\r\n    formatReleases(releases) {\r\n        if (releases && releases.length > 0)\r\n            return releases.map(release => release.project && release.project.name ? release.project.name : \"project\").join(\", \")\r\n        else\r\n            return ''\r\n    }\r\n\r\n    formatReleasePlans(releasePlans) {\r\n        if (releasePlans && releasePlans.length > 0)\r\n            return releasePlans.map(releasePlan => releasePlan.task && releasePlan.task.name ? releasePlan.task.name : \"releasePlan\").join(\", \")\r\n        else\r\n            return ''\r\n    }\r\n\r\n\r\n    render() {\r\n        const {warnings, release} = this.props\r\n\r\n        return ([\r\n            <div key={\"warning-search\"} className=\"col-md-12 release-options\">\r\n\r\n                <div className=\"search-btn-container\">\r\n                    <select className=\"form-control\" title=\"Select Flag\" onChange={(flag) =>\r\n                        this.props.fetchWarningOnFlags(flag.target.value, release)\r\n                    }>\r\n                        <option value={SC.ALL}>All Flags</option>\r\n                        {SC.ALL_WARNING_NAME_ARRAY.map((warning, idx) => <option\r\n                            key={warning + idx} value={warning}>{warning}</option>)}\r\n\r\n                    </select>\r\n                </div>\r\n            </div>,\r\n            <div key={\"warning-table\"} className=\"col-md-12 estimation release-plan-table\">\r\n                <BootstrapTable options={this.options} data={warnings}\r\n                                multiColumnSearch={true}\r\n                                search={false}\r\n                                striped={true}\r\n                                pagination\r\n                                hover={true}\r\n                                height={\"300px\"}>\r\n                    <TableHeaderColumn columnTitle isKey dataField='_id'\r\n                                       hidden={true}>ID\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"20%\" columnTitle dataField='type'>Warning\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"12%\" columnTitle dataField='type'\r\n                                       dataFormat={this.formatFlag.bind(this)}>Warning Flag\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"15%\" columnTitle dataField='releases'\r\n                                       dataFormat={this.formatReleases.bind(this)}>Projects\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn columnTitle dataField='releasePlans'\r\n                                       dataFormat={this.formatReleasePlans.bind(this)}>Tasks\r\n                    </TableHeaderColumn>\r\n\r\n                </BootstrapTable>\r\n            </div>])\r\n    }\r\n}\r\n\r\nexport default withRouter(WarningList)\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/WarningList.js","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Tab extends React.Component {\r\n    render() {\r\n        return (\r\n            <li className={this.props.isActive ? \"active\" : null}>\r\n                <Link onClick={this.props.handleClick}\r\n                      to={this.props.match.url + this.props.data.url}>{this.props.data.displayName ? this.props.data.displayName : this.props.data.name}</Link>\r\n            </li>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tab;\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/tabs/Tab.js","import {connect} from 'react-redux'\r\nimport {LeaveApprovelResonForm} from \"../../components\"\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport {change} from 'redux-form'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    saveIsApproved: (isApproved) => {\r\n        return dispatch(change(\"leave-approval\", \"isApproved\", isApproved))\r\n    },\r\n    onSubmit: (values) => {\r\n        if (!values.leaveID || !values.reason) {\r\n            return NotificationManager.error('Reason not provided')\r\n        }\r\n        if (values.isApproved) {\r\n            return dispatch(A.approveLeaveRequestFromServer(values.leaveID, values.reason)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success('Leave request Approved Successfully')\r\n                    dispatch(A.hideComponent(COC.LEAVE_APPROVE_DIALOG))\r\n                } else {\r\n                    NotificationManager.error('Leave request Approval failed')\r\n                }\r\n                return json\r\n            })\r\n        } else {\r\n            return dispatch(A.rejectLeaveRequestFromServer(values.leaveID, values.reason)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success('Leave request Cancelled Successfully')\r\n                    dispatch(A.hideComponent(COC.LEAVE_REJECT_DIALOG))\r\n                } else {\r\n                    NotificationManager.error('process failed')\r\n                }\r\n                return json\r\n            })\r\n        }\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    initialValues: {\r\n        \"leaveID\": state.leave.selected._id\r\n    }\r\n})\r\n\r\nconst LeaveApprovalReasonFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LeaveApprovelResonForm)\r\n\r\nexport default LeaveApprovalReasonFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/LeaveApprovalReasonFormContainer.js","import * as AC from \"../actions/actionConsts\"\r\n\r\n\r\nlet initialState = {\r\n    all: [],\r\n    selected: {}\r\n}\r\n\r\nconst attendanceSettingReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AC.ADD_UPDATE_ATTENDANCE_SETTING:\r\n            return Object.assign({}, state, {\r\n                selected: Object.assign(action.attendanceSetting)\r\n            })\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default attendanceSettingReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/attendanceSettingReducer.js","import * as AC from \"../actions/actionConsts\";\r\n\r\nlet initialState = {\r\n    all: [],\r\n    selected: {},\r\n    leaveTypes: [],\r\n\r\n}\r\n\r\nlet leaveReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case AC.ADD_LEAVE_TYPES:\r\n            return Object.assign({}, state, {leaveTypes: action.leaveTypes})\r\n\r\n        case AC.ADD_LEAVES:\r\n            return Object.assign({}, state, {all: action.leaves})\r\n\r\n        case AC.LEAVE_SELECTED:\r\n            return Object.assign({}, state, {selected: action.leave})\r\n\r\n        case AC.ADD_LEAVE:\r\n            return Object.assign({}, state, {all: [...state.all, action.leave]})\r\n\r\n        case AC.UPDATE_LEAVE:\r\n            return Object.assign({}, state, {\r\n                all: state.all.map(item => item._id.toString() === action.leave._id.toString() ? Object.assign({}, action.leave) : item)\r\n            })\r\n\r\n        case AC.REVOKE_LEAVE:\r\n            return Object.assign({}, state, {all: state.all.filter(item => item._id.toString() !== action.leave._id.toString())})\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default leaveReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/leaveReducer.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {EstimationFilterFormContainer} from \"../../containers\"\r\n\r\nconst EstimationFilterDialog = (props) => {\r\n    return <Modal className=\"estimationModal filterDialog\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Filters</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <EstimationFilterFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default EstimationFilterDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/EstimationFilterDialog.js","import * as AC from \"./actionConsts\"\r\nimport {initialize} from 'redux-form'\r\n\r\nexport const addLeaves = (leaves) => ({\r\n    type: AC.ADD_LEAVES,\r\n    leaves: leaves\r\n})\r\n\r\nexport const leaveSelected = (leave) => ({\r\n    type: AC.LEAVE_SELECTED,\r\n    leave: leave\r\n})\r\n\r\nexport const addLeave = (leave) => ({\r\n    type: AC.ADD_LEAVE,\r\n    leave: leave\r\n})\r\n\r\nexport const updateLeave = (leave) => ({\r\n    type: AC.UPDATE_LEAVE,\r\n    leave: leave\r\n})\r\n\r\nexport const revokeLeave = (leave) => ({\r\n    type: AC.REVOKE_LEAVE,\r\n    leave: leave\r\n})\r\n\r\nexport const addLeaveTypes = (leaveTypes) => ({\r\n    type: AC.ADD_LEAVE_TYPES,\r\n    leaveTypes: leaveTypes\r\n})\r\n\r\n/*-----------------------  LEAVE SETTING SECTION ---------------------------------*/\r\n\r\n\r\nexport const getLeaveSettingFromServer = () => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/leave/leave-setting',\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(initialize(\"leave-setting\", json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const addLeaveSettingOnServer = (leaveSetting) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/leave/leave-setting',\r\n            {\r\n                method: \"post\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(leaveSetting)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(initialize(\"leave-setting\", json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const updateLeaveSettingOnServer = (leaveSetting) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/leave/leave-setting',\r\n            {\r\n                method: \"put\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, *!/!*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(leaveSetting)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(initialize(\"leave-setting\", json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n/*---------------------------  LEAVE SECTION --------------------------------------*/\r\n\r\nexport const getAllLeaveTypesFromServer = () => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/leave/leave-types', {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addLeaveTypes(json.data))\r\n                }\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const getAllLeavesFromServer = (status) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/leave/' + status,\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n            if (json.success) {\r\n                dispatch(addLeaves(json.data))\r\n            }\r\n            return json\r\n        })\r\n    }\r\n}\r\n\r\nexport const addLeaveRequestOnServer = (formInput) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/leave',\r\n            {\r\n                method: \"post\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    if (json.data.leave) {\r\n                        dispatch(addLeave(json.data.leave))\r\n                    }\r\n\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const deleteLeaveFromServer = (leaveID) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/leave/' + leaveID,\r\n            {\r\n                method: \"delete\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    if (json.data.leave) {\r\n                        dispatch(revokeLeave(json.data.leave))\r\n                    }\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const rejectLeaveRequestFromServer = (leaveID, reason) => {\r\n    return function (dispatch) {\r\n        return fetch('/api/leave/' + leaveID + '/reject',\r\n            {\r\n                method: \"put\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({reason: reason})\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    if (json.data.leave) {\r\n                        dispatch(updateLeave(json.data.leave))\r\n                    }\r\n\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const approveLeaveRequestFromServer = (leaveID, reason) => {\r\n    console.log(\"leaveID\", leaveID)\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/leave/' + leaveID + '/approve/',\r\n            {\r\n                method: \"put\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({reason: reason})\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    if (json.data.leave) {\r\n                        dispatch(updateLeave(json.data.leave))\r\n                    }\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/actions/leaveAction.js","import {connect} from 'react-redux'\r\nimport {RepositoryFeatureDetailPage} from '../../components'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as EC from '../../../server/errorcodes'\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    addFeature: (EstimationId, featureId) => dispatch(A.addFeatureFromRepositoryToEstimationOnServer(EstimationId, featureId)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success(\"Feature Added\")\r\n            // hide dialog\r\n            dispatch(A.hideComponent(COC.REPOSITORY_FEATURE_DETAIL_DIALOG))\r\n        } else {\r\n            if (json.code == EC.ALREADY_EXISTS)\r\n                NotificationManager.error(\"Feature Already Added \")\r\n            else NotificationManager.error(\"Feature Addition Failed\")\r\n\r\n        }\r\n    }),\r\n    copyFeature: (EstimationId, featureId) => dispatch(A.copyFeatureFromRepositoryToEstimationOnServer(EstimationId, featureId)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success(\"Feature Copied\")\r\n            // hide dialog\r\n            dispatch(A.hideComponent(COC.REPOSITORY_FEATURE_DETAIL_DIALOG))\r\n        } else {\r\n            if (json.code == EC.ALREADY_EXISTS)\r\n                NotificationManager.error(\"Feature Already Available\")\r\n            else NotificationManager.error(\"Feature Addition Failed\")\r\n\r\n        }\r\n    })\r\n})\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    feature: state.repository.feature,\r\n    estimationId: state.estimation.selected && state.estimation.selected._id ? state.estimation.selected._id : undefined\r\n})\r\n\r\nconst RepositoryFeatureDetailPageContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(RepositoryFeatureDetailPage)\r\n\r\nexport default RepositoryFeatureDetailPageContainer\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/RepositoryFeatureDetailPageContainer.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {ConfirmationDialog} from \"../index\";\r\nimport * as CM from \"../../clientMsg\"\r\n\r\nclass ProjectList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showProjectDeletionDialog: false,\r\n            addRow: null\r\n\r\n\r\n        }\r\n    }\r\n\r\n    onClose() {\r\n        this.setState({showProjectDeletionDialog: false})\r\n    }\r\n\r\n    OkConfirmationForDeletingProject() {\r\n        this.setState({showProjectDeletionDialog: false})\r\n        this.props.deleteProject(this.state.addRow)\r\n    }\r\n\r\n    viewDeleteButton(cell, row, enumObject, rowIndex) {\r\n\r\n\r\n        return (<button className=\" btn btn-custom \" type=\"button\" onClick={() => {\r\n                this.setState({showProjectDeletionDialog: true}),\r\n                    this.setState({addRow: row._id})\r\n            }}>\r\n                <i className=\"fa fa-trash\"></i>\r\n            </button>\r\n        )\r\n\r\n    }\r\n\r\n    viewEditButton(cell, row, enumObject, rowIndex) {\r\n\r\n\r\n        return (<button className=\" btn btn-custom\" type=\"button\" onClick={() => {\r\n                this.props.showPorjectEditForm(row)\r\n\r\n            }}>\r\n                <i className=\"fa fa-pencil\"></i>\r\n            </button>\r\n\r\n        )\r\n    }\r\n\r\n    formatClient(client) {\r\n        if (client)\r\n            return client.name\r\n        return ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>{this.state.showProjectDeletionDialog &&\r\n            <ConfirmationDialog show={true} onConfirm={this.OkConfirmationForDeletingProject.bind(this)}\r\n                                title={CM.DELETE_PROJECT} onClose={this.onClose.bind(this)}\r\n                                body={CM.DELETE_PROJECT_BODY}/>\r\n            }\r\n                <div key=\"project_list\" className=\"clearfix\">\r\n\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"col-md-12 pad\">\r\n\r\n                            <div className=\"col-md-12\">\r\n                                <button className=\"btn customBtn\"\r\n                                        onClick={() => this.props.showProjectCreationForm()}>Create Project\r\n                                </button>\r\n\r\n                                <div className=\"estimation\">\r\n\r\n                                    <BootstrapTable options={this.options} data={this.props.projects}\r\n                                                    striped={true}\r\n                                                    hover={true}>\r\n                                        <TableHeaderColumn columnTitle isKey dataField='_id'\r\n                                                           hidden={true}>ID</TableHeaderColumn>\r\n                                        <TableHeaderColumn columnTitle dataField='name'>Project Name</TableHeaderColumn>\r\n                                        <TableHeaderColumn columnTitle dataField='client'\r\n                                                           dataFormat={this.formatClient.bind(this)}>Client\r\n                                            Name</TableHeaderColumn>\r\n                                        <TableHeaderColumn width=\"15%\" dataField='editButton'\r\n                                                           dataFormat={this.viewEditButton.bind(this)}>Edit project\r\n                                        </TableHeaderColumn>\r\n                                        <TableHeaderColumn width=\"15%\" dataField='deleteButton'\r\n                                                           dataFormat={this.viewDeleteButton.bind(this)}>Delete project\r\n                                        </TableHeaderColumn>\r\n\r\n                                    </BootstrapTable>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ProjectList)\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/ProjectList.js","import {connect} from 'react-redux'\r\nimport {ReleaseMoveTaskPlanForm} from \"../../components\"\r\nimport * as COC from '../../components/componentConsts'\r\nimport * as A from '../../actions'\r\nimport {NotificationManager} from \"react-notifications\"\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (newTaskPlanning) => {\r\n        //console.log(\"release move \", newTaskPlanning)\r\n        return dispatch(A.moveTaskPlanOnServer(newTaskPlanning)).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success(\"Task Planning Merged\")\r\n                dispatch(A.hideComponent(COC.MOVE_TASK_PLAN_DIALOG))\r\n\r\n                if (newTaskPlanning.employee._id.toString() == newTaskPlanning.workCalendarEmployeeID.toString())\r\n                    dispatch(A.getEmployeeWorkCalendarFromServer(newTaskPlanning.workCalendarEmployeeID))\r\n                return json\r\n\r\n            }\r\n            else NotificationManager.error(json.message)\r\n\r\n            return json\r\n        })\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    initial: state.release.selectedRelease.iterations[0]\r\n})\r\n\r\n\r\nconst ReleaseMoveTaskPlanFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReleaseMoveTaskPlanForm)\r\n\r\nexport default ReleaseMoveTaskPlanFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/ReleaseMoveTaskPlanFormContainer.js","import React, {Component} from 'react'\r\nimport {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport {renderDateTimePickerString, renderSelect} from './fields'\r\nimport moment from 'moment'\r\nimport momentLocalizer from 'react-widgets-moment'\r\nimport momentTZ from 'moment-timezone'\r\nimport {connect} from 'react-redux'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nmoment.locale('en')\r\nmomentLocalizer()\r\nlet ReleaseTaskPlanningShiftForm = (props) => {\r\n    const {day, month, handleSubmit, employee, daysToShift, year, days, release} = props\r\n\r\n    //let m =\r\n\r\n    let m = moment()\r\n    m.date(day)\r\n    m.month(month)\r\n    m.year(year)\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className={\"row\"}>\r\n            <div className={\"col-md-4\"}>\r\n                <span>From Date: <span className={\"highlightText\"}>{m.format('Do, MMM, YY')}</span></span>\r\n            </div>\r\n            <div className={\"col-md-offset-4 col-md-4\"}>\r\n                <span>Employee: <span className={\"highlightText\"}>{employee.name}</span></span>\r\n            </div>\r\n        </div>\r\n        <div className={\"row\"}>\r\n            <div className=\"col-md-12 planDivider\">\r\n                <div className=\"col-md-offset-8 col-md-4\"><span>Days to Shift</span>\r\n                    <Field name=\"daysToShift\" placeholder={\"select days\"}\r\n                           displayField={\"day\"}\r\n                           valueField={\"day\"}\r\n                           component={renderSelect} options={days}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className={\"row\"}>\r\n            <div className=\"col-md-offset-4 col-md-8\">\r\n                <div style={{float: \"right\"}}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn customBtn Past \"\r\n                        onClick={() => {\r\n                            props.shiftTasksToPast(release._id, employee._id, day, month, year, daysToShift)\r\n                        }}><span className=\"glyphicon glyphicon-chevron-left\"></span>\r\n                        Shift in Past\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn customBtn Future\"\r\n                        onClick={() => {\r\n                            props.shiftTasksToFuture(release._id, employee._id, day, month, year, daysToShift)\r\n                        }}>\r\n                        Shift in Future\r\n                        <span className=\"glyphicon glyphicon-chevron-right\"></span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nReleaseTaskPlanningShiftForm = reduxForm({\r\n    form: 'task-plan-shift'\r\n})(ReleaseTaskPlanningShiftForm)\r\n\r\nconst selector = formValueSelector('task-plan-shift')\r\n\r\nReleaseTaskPlanningShiftForm = connect(\r\n    state => {\r\n        const {employee, month, day, year, daysToShift} = selector(state, 'employee', 'month', 'day', 'year', 'daysToShift', 'release')\r\n        return {\r\n            employee,\r\n            month,\r\n            day,\r\n            year,\r\n            daysToShift\r\n        }\r\n    }\r\n)(ReleaseTaskPlanningShiftForm)\r\n\r\n\r\nexport default ReleaseTaskPlanningShiftForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/ReleaseTaskPlanningShiftForm.js","import {required} from \"./validation\"\r\nimport {renderDateTimePickerString, renderSelect, renderTextArea} from \"./fields\"\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport momentLocalizer from 'react-widgets-moment'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nmoment.locale('en')\r\nmomentLocalizer()\r\n\r\nclass LeaveApprovalReasonForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.saveIsApproved(this.props.isApproved)\r\n    }\r\n\r\n    render() {\r\n        const {pristine, submitting, reset, handleSubmit, isApproved} = this.props\r\n        return <form onSubmit={handleSubmit}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <Field name=\"leaveID\" component=\"input\" type=\"hidden\"/>\r\n                    <Field name=\"isApproved\" component=\"input\" type=\"hidden\"/>\r\n                    <Field width=\"80%\" name=\"reason\" validate={[required]} component={renderTextArea}\r\n                           label=\"Reason:\"/>\r\n                    <button type=\"submit\" disabled={pristine || submitting} className=\"btn customBtn\"> Submit</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </form>\r\n    }\r\n}\r\n\r\nLeaveApprovalReasonForm = reduxForm({\r\n    form: 'leave-approval'\r\n\r\n})(LeaveApprovalReasonForm)\r\n\r\nexport default LeaveApprovalReasonForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/LeaveApprovalReasonForm.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {EstimationAddToReleaseFormContainer} from \"../../containers\"\r\n\r\nconst EstimationAddToReleaseDialog = (props) => {\r\n    return <Modal className=\"add-to-release-dialog\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Add To Release</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <EstimationAddToReleaseFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default EstimationAddToReleaseDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/EstimationAddToReleaseDialog.js","import {connect} from 'react-redux'\r\nimport {ReleaseTaskPlanningShiftForm} from '../../components'\r\nimport * as A from '../../actions'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport {TASK_SHIFT_DIALOG} from \"../../components/componentConsts\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    shiftTasksToFuture: (releaseId, employeeId, day, month, year, daysToShift) => {\r\n        if (!daysToShift)\r\n            return NotificationManager.error('Please select Number of days to shift')\r\n\r\n        return dispatch(A.shiftTasksToFutureOnServer({\r\n            releaseId,\r\n            employeeId,\r\n            day,\r\n            month,\r\n            year,\r\n            daysToShift: Number(daysToShift)\r\n        })).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success('Shifting to future date completed...')\r\n                dispatch(A.hideComponent(TASK_SHIFT_DIALOG))\r\n                dispatch(A.getEmployeeWorkCalendarFromServer(employeeId, month, year))\r\n            }\r\n            else NotificationManager.error(json.message)\r\n        })\r\n\r\n    },\r\n    shiftTasksToPast: (releaseId, employeeId, day, month, year, daysToShift) => {\r\n        if (!daysToShift)\r\n            return NotificationManager.error('Please select Number of days to shift')\r\n\r\n        return dispatch(A.shiftTasksToPastOnServer({\r\n            releaseId,\r\n            employeeId,\r\n            day,\r\n            month,\r\n            year,\r\n            daysToShift: Number(daysToShift)\r\n        })).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success('Shifting to past date completed...')\r\n                dispatch(A.hideComponent(TASK_SHIFT_DIALOG))\r\n                dispatch(A.getEmployeeWorkCalendarFromServer(employeeId, month, year))\r\n            }\r\n            else NotificationManager.error(json.message)\r\n        })\r\n        /*\r\n        if (!employeeId || !baseDate || !Number(daysToShift)) {\r\n            if (!employeeId)\r\n                return NotificationManager.error('Please select employee')\r\n            else if (!baseDate)\r\n                return NotificationManager.error('Please select base date')\r\n\r\n            else if (!daysToShift)\r\n                return NotificationManager.error('Please select Number of days to shift')\r\n\r\n        }\r\n        else return dispatch(A.shiftTasksToPastOnServer({\r\n            employeeId: employeeId,\r\n            baseDate: baseDate,\r\n            daysToShift: Number(daysToShift),\r\n            releasePlanID: releasePlanID\r\n        })).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success('Plan shifted to past')\r\n            }\r\n            else NotificationManager.error('Plan shifting failed')\r\n        })\r\n        */\r\n    }\r\n\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let days = [\r\n        {'day': 1},\r\n        {'day': 2},\r\n        {'day': 3},\r\n        {'day': 4},\r\n        {'day': 5},\r\n        {'day': 6},\r\n        {'day': 7},\r\n        {'day': 8},\r\n        {'day': 9},\r\n        {'day': 10},\r\n        {'day': 11},\r\n        {'day': 12},\r\n        {'day': 13},\r\n        {'day': 14},\r\n        {'day': 15},\r\n        {'day': 16},\r\n        {'day': 17},\r\n        {'day': 18},\r\n        {'day': 19},\r\n        {'day': 20},\r\n        {'day': 21},\r\n        {'day': 22},\r\n        {'day': 23},\r\n        {'day': 24},\r\n        {'day': 25},\r\n        {'day': 26},\r\n        {'day': 27},\r\n        {'day': 28},\r\n        {'day': 29},\r\n        {'day': 30}\r\n    ]\r\n    return {\r\n        release: state.release.selectedRelease,\r\n        team: state.user && state.user.allDevelopers && state.user.allDevelopers.length ? state.user.allDevelopers : [],\r\n        days\r\n    }\r\n}\r\n\r\n\r\nconst ReleaseTaskPlanningShiftFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReleaseTaskPlanningShiftForm)\r\n\r\nexport default ReleaseTaskPlanningShiftFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/ReleaseTaskPlanningShiftFormContainer.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {UpdateReleaseDatesFormContainer} from \"../../containers\"\r\n\r\nconst ReleasePlanningUpdateFormDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Update Planning Date</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <UpdateReleaseDatesFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default ReleasePlanningUpdateFormDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/UpdateReleaseDatesFormDialog.js","import React, {Component} from 'react'\r\nimport {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport {renderMultiSelect, renderText} from './fields'\r\nimport {email, passwordLength, required} from \"./validation\"\r\nimport {connect} from 'react-redux'\r\nimport * as logger from '../../clientLogger'\r\n\r\nconst passwordMatch = (value, values) => {\r\n\r\n    return (value != values.password) ? `Should match password value` : undefined\r\n}\r\n\r\nclass UserForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        logger.debug(logger.USER_FORM_RENDER, 'props', this.props)\r\n        const {_id, changeCredentials} = this.props;\r\n\r\n        return [\r\n            <div key=\"UserFormBackButton\">\r\n                <button type=\"button\"\r\n                        onClick={() => this.props.showUserList()}>\r\n                    <i className=\"glyphicon glyphicon-arrow-left\"></i>\r\n                </button>\r\n            </div>,\r\n            <form key=\"UserForm\" onSubmit={this.props.handleSubmit}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <Field name=\"_id\" component=\"input\" className=\"form-control\" type=\"hidden\"></Field>\r\n                        <Field name=\"firstName\" label=\"First Name:\" component={renderText} type=\"text\"\r\n                               validate={[required]}/>\r\n\r\n                        <Field name=\"lastName\" label=\"Last Name:\" component={renderText} type=\"text\"\r\n                               validate={[required]}/>\r\n                        <Field\r\n                            name=\"roles\"\r\n                            component={renderMultiSelect} label=\"Roles:\"\r\n                            data={this.props.roles} validate={[required]} valueField=\"_id\" textField=\"name\"/>\r\n\r\n                        <Field name=\"email\" label=\"Email:\" component={renderText} type=\"email\"\r\n                               validate={[required, email]}/>\r\n\r\n\r\n                        {this.props._id &&\r\n                        <div>\r\n                            <label><Field name=\"changeCredentials\" component=\"input\" type=\"checkbox\"/>Change\r\n                                Credentials</label>\r\n                        </div>\r\n                        }\r\n                        {(!this.props._id || changeCredentials) &&\r\n                        <Field name=\"password\" label=\"Password:\" component={renderText} type=\"password\"\r\n                               validate={[required, passwordLength]}/>}\r\n\r\n                        {(!this.props._id || changeCredentials) &&\r\n                        <Field name=\"confirmPassword\" label=\"Confirm Password:\" component={renderText} type=\"password\"\r\n                               validate={[required, passwordLength, passwordMatch]}/>}\r\n\r\n                        <button type=\"submit\"\r\n                                className=\"btn btn-submit\"> {(!this.props._id && \"Add\") || (this.props._id && \"Update\")} </button>\r\n                    </div>\r\n                </div>\r\n            </form>]\r\n\r\n    }\r\n}\r\n\r\nUserForm = reduxForm({\r\n    form: 'user'\r\n})(UserForm)\r\n\r\nconst selector = formValueSelector('user')\r\n\r\nUserForm = connect(\r\n    state => {\r\n        const {_id, changeCredentials} = selector(state, '_id', 'changeCredentials')\r\n        const selectedRoles = selector(state, 'roles')\r\n        return {\r\n            _id,\r\n            changeCredentials,\r\n            selectedRoles\r\n        }\r\n    }\r\n)(UserForm)\r\n\r\n\r\nexport default UserForm\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/UserForm.js","/*----------------------------- ACTION CONSTANTS -----------------------------*/\r\n\r\n\r\n//LOGIN CONSTANTS\r\nexport const ADD_LOGIN_USER = \"ADD_LOGIN_USER\"\r\nexport const LOGIN_FAILED = \"LOGIN_FAILED\"\r\n\r\n//SYSYTEM CONSTANTS\r\nexport const SHOW_COMPONENT_HIDE_OTHER = \"SHOW_COMPONENT_HIDE_OTHER\"\r\nexport const SHOW_COMPONENT = \"SHOW_COMPONENT\"\r\nexport const HIDE_COMPONENT = \"HIDE_COMPONENT\"\r\nexport const ADD_SSR_FLAG = \"ADD_SSR_FLAG\"\r\nexport const CLEAR_SSR_FLAG = \"CLEAR_SSR_FLAG\"\r\nexport const SHOW_LOADER = \"SHOW_LOADER\"\r\nexport const HIDE_LOADER = \"HIDE_LOADER\"\r\n\r\n//PERMISSIONS CONSTANTS\r\nexport const ADD_PERMISSIONS = \"ADD_PERMISSIONS\"\r\nexport const ADD_PERMISSION = \"ADD_PERMISSION\"\r\nexport const EDIT_PERMISSION = \"EDIT_PERMISSION\"\r\nexport const DELETE_PERMISSION = \"DELETE_PERMISSION\"\r\n\r\n//ROLES CONSTANTS\r\nexport const ADD_ROLES = \"ADD_ROLES\"\r\nexport const ADD_ROLE = \"ADD_ROLE\"\r\nexport const EDIT_ROLE = \"EDIT_ROLE\"\r\nexport const DELETE_ROLE = \"DELETE_ROLE\"\r\n\r\n//USER CONSTANTS\r\nexport const ADD_USERS = \"ADD_USERS\"\r\nexport const ADD_USERS_WITH_ROLE_CATEGORY = \"ADD_USERS_WITH_ROLE_CATEGORY\"\r\nexport const ADD_USERS_WITH_ROLE_DEVELOPER = \"ADD_USERS_WITH_ROLE_DEVELOPER\"\r\nexport const ADD_DEVELOPERS_TO_STATE = \"ADD_DEVELOPERS_TO_STATE\"\r\nexport const ADD_USER = \"ADD_USER\"\r\nexport const EDIT_USER = \"EDIT_USER\"\r\nexport const DELETE_USER = \"DELETE_USER\"\r\nexport const ADD_ADMIN_USER = \"ADD_ADMIN_USER\"\r\nexport const UPDATE_ADMIN_USER = \"UPDATE_ADMIN_USER\"\r\nexport const DELETE_ADMIN_USER = \"DELETE_ADMIN_USER\"\r\nexport const ADMIN_EDITING_ROLE = \"ADMIN_EDITING_ROLE\"\r\nexport const ADD_CLIENTS = \"ADD_CLIENTS\"\r\nexport const ADD_CLIENT = \"ADD_CLIENT\"\r\nexport const UPDATE_CLIENT = \"UPDATE_CLIENT\"\r\nexport const DELETE_CLIENT = \"DELETE_CLIENT\"\r\n\r\n\r\n//ESTIMATION CONSTANTS\r\nexport const ADD_ESTIMATIONS = \"ADD_ESTIMATIONS\"\r\nexport const ADD_ESTIMATION = \"ADD_ESTIMATION\"\r\nexport const EDIT_ESTIMATION = \"EDIT_ESTIMATION\"\r\nexport const DELETE_ESTIMATION = \"DELETE_ESTIMATION\"\r\nexport const SELECT_ESTIMATION = \"SELECT_ESTIMATION\"\r\nexport const ADD_ESTIMATION_TASK = \"ADD_ESTIMATION_TASK\"\r\nexport const UPDATE_ESTIMATION_TASK = \"UPDATE_ESTIMATION_TASK\"\r\nexport const ADD_ESTIMATION_FEATURE = \"ADD_ESTIMATION_FEATURE\"\r\nexport const UPDATE_ESTIMATION_FEATURE = \"UPDATE_ESTIMATION_FEATURE\"\r\nexport const MOVE_TASK_IN_FEATURE = \"MOVE_TASK_IN_FEATURE\"\r\nexport const MOVE_TASK_OUTOF_FEATURE = \"MOVE_TASK_OUTOF_FEATURE\"\r\nexport const UPDATE_SELECTED_ESTIMATION = \"UPDATE_SELECTED_ESTIMATION\"\r\n\r\nexport const ESTIMATION_TASK_DELETE = \"ESTIMATION_TASK_DELETE\"\r\nexport const REQUEST_FOR_TASK_EDIT_PERMISSION = \"REQUEST_FOR_TASK_EDIT_PERMISSION\"\r\nexport const DELETE_ESTIMATION_TASK = \"DELETE_ESTIMATION_TASK\"\r\nexport const DELETE_ESTIMATION_FEATURE = \"DELETE_ESTIMATION_FEATURE\"\r\nexport const UPDATE_USER_PROFILE_STATE = \"UPDATE_USER_PROFILE_STATE\"\r\nexport const EXPAND_FEATURE = \"EXPAND_FEATURE\"\r\nexport const EXPAND_TASK = \"EXPAND_TASK\"\r\nexport const EXPAND_TASK_AND_FEATURE = \"EXPAND_TASK_AND_FEATURE\"\r\nexport const ADD_FILTERED_ESTIMATIONS = \"ADD_FILTERED_ESTIMATIONS\"\r\nexport const CLEAR_FILTER_FROM_ESTIMATION = \"CLEAR_FILTER_FROM_ESTIMATION\"\r\nexport const SELECT_ALL_FILTER_FROM_ESTIMATION = \"SELECT_ALL_FILTER_FROM_ESTIMATION\"\r\n\r\n//project constants\r\nexport const ADD_PROJECTS = \"ADD_PROJECTS\"\r\nexport const ADD_PROJECT = \"ADD_PROJECT\"\r\nexport const EDIT_PROJECT = \"EDIT_PROJECT\"\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\"\r\n\r\n//module constants\r\nexport const ADD_MODULES = \"ADD_MODULES\"\r\nexport const ADD_MODULE = \"ADD_MODULE\"\r\nexport const EDIT_MODULE = \"EDIT_MODULE \"\r\nexport const DELETE_MODULE = \"DELETE_MODULE \"\r\n\r\n//TECHNOLOGY CONSTANTS\r\nexport const ADD_TECHNOLOGIES = \"ADD_TECHNOLOGIES\"\r\nexport const ADD_TECHNOLOGY = \"ADD_TECHNOLOGY\"\r\nexport const DELETE_TECHNOLOGY = \"DELETE_TECHNOLOGY\"\r\n\r\n//LEAVE CONSTANTS\r\nexport const ADD_LEAVE_TYPES = \"ADD_LEAVE_TYPES\"\r\nexport const ADD_LEAVES = \"ADD_LEAVES\"\r\nexport const LEAVE_SELECTED = \"LEAVE_SELECTED\"\r\nexport const ADD_LEAVE = \"ADD_LEAVE\"\r\nexport const UPDATE_LEAVE = \"UPDATE_LEAVE\"\r\nexport const REVOKE_LEAVE = \"REVOKE_LEAVE\"\r\n\r\n//RELEASE CONSTANTS\r\nexport const ADD_AVAILABLE_RELEASES = \"ADD_AVAILABLE_RELEASES\"\r\nexport const ADD_RELEASES = \"ADD_RELEASES\"\r\nexport const RELEASE_SELECTED = \"RELEASE_SELECTED\"\r\nexport const ADD_RELEASE = \"ADD_RELEASE\"\r\nexport const ADD_RELEASE_PLANS = \"ADD_RELEASE_PLANS\"\r\nexport const RELEASE_PLAN_SELECTED = \"RELEASE_PLAN_SELECTED\"\r\nexport const ADD_RELEASE_TASK_PLANNINGS = \"ADD_RELEASE_TASK_PLANNINGS\"\r\nexport const DELETE_TASK_PLAN = \"DELETE_TASK_PLAN\"\r\nexport const ADD_DEVELOPER_FILTERED = \"ADD_DEVELOPER_FILTERED\"\r\nexport const UPDATE_DEVELOPER_FILTERED = \"UPDATE_DEVELOPER_FILTERED\"\r\nexport const ADD_RELEASE_TASK_PLANNING_TO_STATE = \"ADD_RELEASE_TASK_PLANNING_TO_STATE\"\r\nexport const UPDATE_TASK_PLANNING = \"UPDATE_TASK_PLANNING\"\r\nexport const UPDATE_TASK_PLANS = \"UPDATE_TASK_PLANS\"\r\nexport const EXPAND_DESCRIPTION = \"EXPAND_DESCRIPTION\"\r\nexport const SET_DEVELOPERS_SCHEDULE = \"SET_DEVELOPERS_SCHEDULE\"\r\nexport const SET_FROM_DATE = \"SET_FROM_DATE\"\r\nexport const UPDATE_RELEASE_PLAN = \"UPDATE_RELEASE_PLAN\"\r\nexport const ADD_TASK_PLANNINGS = \"ADD_TASK_PLANNINGS\"\r\nexport const UPDATE_RELEASE_DATES = \"UPDATE_RELEASE_DATES\"\r\nexport const RELEASE_TAB_SELECTED = \"RELEASE_TAB_SELECTED\"\r\n\r\n//REPOSITORY CONSTANTS\r\nexport const SELECT_REPOSITORY = \"SELECT_REPOSITORY\"\r\nexport const SELECT_TASK_FROM_REPOSITORY = \"SELECT_TASK_FROM_REPOSITORY\"\r\nexport const SELECT_FEATURE_FROM_REPOSITORY = \"SELECT_FEATURE_FROM_REPOSITORY\"\r\n\r\n//ATTENDANCE CONSTANTS\r\nexport const ADD_UPDATE_ATTENDANCE_SETTING = \"ADD_UPDATE_ATTENDANCE_SETTING\"\r\n\r\n//REPORTING CONSTANTS\r\nexport const CHANGE_CALENDAR_NAVIGATION = \"CHANGE_CALENDAR_NAVIGATION\"\r\nexport const SHOW_USERS_TASKS = \"SHOW_USERS_TASKS\"\r\nexport const SET_CALENDAR_TASK_DETAILS = \"SET_CALENDAR_TASK_DETAILS\"\r\n\r\n//REPORTING CONSTANTS\r\nexport const ADD_USER_RELEASES = \"ADD_USER_RELEASES\"\r\nexport const ADD_RELEASES_AND_TASKS_OF_SELECTED_DATE = \"ADD_RELEASES_AND_TASKS_OF_SELECTED_DATE\"\r\nexport const RELEASE_SELECTED_FOR_REPORTING = \"RELEASE_SELECTED_FOR_REPORTING\"\r\nexport const NO_PROJECT_SELECTED = \"NO_PROJECT_SELECTED\"\r\nexport const REPORT_TASK_SELECTED = \"REPORT_TASK_SELECTED\"\r\nexport const ADD_TASK_COMMENT = \"ADD_TASK_COMMENT\"\r\nexport const SET_STATUS = \"SET_STATUS\"\r\nexport const SET_REPORT_DATE = \"SET_REPORT_DATE\"\r\nexport const SET_RELEASE_ID = \"SET_RELEASE_ID\"\r\nexport const SET_ITERATION_TYPE = \"SET_ITERATION_TYPE\"\r\nexport const UPDATE_SELECTED_TASK_PLAN = \"UPDATE_SELECTED_TASK_PLAN\"\r\nexport const UPDATE_SELECTED_RELEASE_PLAN = \"UPDATE_SELECTED_RELEASE_PLAN\"\r\nexport const SET_REPORTS_OF_RELEASE = \"SET_REPORTS_OF_RELEASE\"\r\nexport const TASK_REPORTED = \"TASK_REPORTED\"\r\n\r\n//WARNING CONSTANTS\r\nexport const ADD_WARNINGS = \"ADD_WARNINGS\"\r\n\r\n//HOLIDAY CONSTANTS\r\nexport const ADD_HOLIDAY = \"ADD_HOLIDAY\"\r\nexport const ADD_HOLIDAYS = \"ADD_HOLIDAYS\"\r\nexport const ADD_ALL_YEARS = \"ADD_ALL_YEARS\"\r\nexport const DELETE_HOLIDAY = \"DELETE_HOLIDAY\"\r\nexport const UPDATE_HOLIDAY = \"UPDATE_HOLIDAY\"\r\n\r\n\r\n//EMPLOYEE CONSTANTS\r\nexport const SET_EMPLOYEE_SETTINGS = \"SET_EMPLOYEE_SETTINGS\"\r\nexport const ADD_WORK_CALENDAR = \"ADD_WORK_CALENDAR\"\r\n\r\n// DEVELOPMENT TYPE\r\nexport const ADD_DEVELOPMENT_TYPES = \"ADD_DEVELOPMENT_TYPES\"\r\nexport const ADD_DEVELOPMENT_TYPE = \"ADD_DEVELOPMENT_TYPE\"\r\nexport const DELETE_DEVELOPMENT_TYPE = \"DELETE_DEVELOPMENT_TYPE\"\r\n\r\nexport const CALCULATE_RELEASE_STATS = \"CALCULATE_RELEASE_STATS\"\r\nexport const ADD_DAILY_PLANNINGS = \"ADD_DAILY_PLANNINGS\"\r\nexport const SET_PLANNING_MONTH = \"SET_PLANNING_MONTH\"\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/actions/actionConsts.js","import {connect} from 'react-redux'\r\nimport * as A from '../../actions/index'\r\nimport {ReleasePlanSection} from \"../../components\"\r\nimport * as COC from '../../components/componentConsts'\r\nimport {withRouter} from 'react-router-dom'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport {initialize} from 'redux-form'\r\nimport * as U from \"../../../server/utils\";\r\nimport moment from \"moment/moment\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n        ReleaseProjectGoBack: (release) => {\r\n            dispatch(A.getReleaseFromServer(release._id)).then(json => {\r\n                if (json.success) {\r\n                    dispatch(A.showComponentHideOthers(COC.RELEASE_LIST))\r\n                }\r\n            })\r\n            dispatch(A.getAllReleasesFromServer(SC.ALL))\r\n\r\n        },\r\n        tabSelected: (tab) => dispatch(A.releaseTabSelected(tab)),\r\n        openUpdateReleaseDatesForm: (release) => {\r\n            dispatch(initialize(\"update-release-dates\", {\r\n                _id: release._id\r\n            }))\r\n            dispatch(A.showComponent(COC.UPDATE_RELEASE_DATES_DIALOG))\r\n        }\r\n    }\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loggedInUser: state.user.loggedIn,\r\n    release: state.release.selectedRelease,\r\n    selectedTab: state.release.selectedTab\r\n})\r\n\r\nconst ReleasePlanSectionContainer = withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReleasePlanSection))\r\n\r\nexport default ReleasePlanSectionContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/sections/ReleasePlanSectionContainer.js","import {connect} from 'react-redux'\r\nimport {ClientForm} from \"../../components\"\r\nimport * as logger from '../../clientLogger'\r\nimport * as A from \"../../actions\"\r\nimport {addClientOnServer, editClientOnServer} from \"../../actions\"\r\nimport {SubmissionError} from \"redux-form\";\r\nimport * as EC from \"../../../server/errorcodes\";\r\nimport {NotificationManager} from \"react-notifications\";\r\nimport * as COC from \"../../components/componentConsts\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        if (!values._id) {\r\n            logger.debug(logger.CLIENT_FORM_CONNECT, \"onSubmit:values:\", values)\r\n            return dispatch(addClientOnServer(values)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success('Client Added Successfully')\r\n                    dispatch(A.hideComponent(COC.CLIENT_FORM_DIALOG))\r\n\r\n                } else {\r\n                    NotificationManager.error('Client Not Added!')\r\n                    if (json.code == EC.ALREADY_EXISTS)\r\n                        throw new SubmissionError({name: \"Client Already Exists\"})\r\n                }\r\n                return json\r\n            })\r\n        } else {\r\n            return dispatch(editClientOnServer(values)).then(response => {\r\n                if (response.success) {\r\n                    dispatch(A.hideComponent(COC.CLIENT_FORM_DIALOG)),\r\n                        NotificationManager.success('Client Updated Successfully')\r\n                } else {\r\n                    NotificationManager.error('Client Updated Failed');\r\n                    if (response.code == EC.ALREADY_EXISTS)\r\n                        throw new SubmissionError({name: \"Client Already Exists\"})\r\n                }\r\n                return json\r\n            })\r\n        }\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({})\r\n\r\nconst ClientFormContainer = connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(ClientForm)\r\n\r\nexport default ClientFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/ClientFormContainer.js","import {connect} from 'react-redux'\r\nimport {ReleaseDeveloperScheduleForm} from '../../components'\r\nimport * as A from '../../actions'\r\nimport {NotificationManager} from 'react-notifications'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    getDeveloperSchedules: (employeeID, month, year) => {\r\n        console.log(\"employee id is \", employeeID)\r\n        console.log(\"month is \", month)\r\n        if (employeeID !== undefined) {\r\n            if (employeeID === '')\r\n                // clearing work calendar\r\n                return dispatch(A.addWorkCalendar({}))\r\n            else\r\n                return dispatch(A.getEmployeeWorkCalendarFromServer(employeeID.toString(), month, year))\r\n        } else if (employeeID == undefined) {\r\n            return NotificationManager.error('Please select employee!')\r\n        } else\r\n            return NotificationManager.error('Date is not picked up properly!')\r\n\r\n\r\n    }\r\n})\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    team: state.release.teamOfRelease,\r\n    initialValues: {\r\n        'employeeId': undefined\r\n    }\r\n})\r\n\r\nconst ReleaseDeveloperScheduleFormContainerContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReleaseDeveloperScheduleForm)\r\n\r\nexport default ReleaseDeveloperScheduleFormContainerContainer\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/ReleaseDeveloperScheduleFormContainer.js","import {connect} from 'react-redux'\r\nimport {LeaveRequestForm} from \"../../components\"\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as EC from \"../../../server/errorcodes\";\r\nimport {SubmissionError} from \"redux-form\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        return dispatch(A.addLeaveRequestOnServer(values)).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success('leave Request Added Successfully')\r\n                dispatch(A.hideComponent(COC.LEAVE_REQUEST_FORM_DIALOG))\r\n\r\n            } else {\r\n                NotificationManager.error(json.message)\r\n            }\r\n            return json\r\n        })\r\n\r\n\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    leaveTypes: state.leave.leaveTypes\r\n})\r\n\r\nconst LeaveRequestFormCOntainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LeaveRequestForm)\r\n\r\nexport default LeaveRequestFormCOntainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/LeaveRequestFormContainer.js","import React, {Component} from 'react';\r\nimport {ContentMain, Sidebar} from \"../sections\"\r\n\r\nclass AppHome extends Component {\r\n    render() {\r\n        return <div className=\"container-fluid\">\r\n            <div className=\"row no-gutter\">\r\n                <Sidebar loggedInUser={this.props.loggedInUser}/>\r\n                <div className=\"col-md-9 rightContent\">\r\n                    <ContentMain {...this.props}/>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default AppHome\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/pages/AppHome.js","import React, {Component} from 'react'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {BarChart, XAxis, YAxis, Tooltip, Legend, Bar, LabelList, PieChart, Pie} from 'recharts'\r\n\r\n\r\nconst addPercentage = (value) => {\r\n    console.log(\"formatter called with value \", value)\r\n    if (value == 0)\r\n        return ''\r\n    return value + '%'\r\n}\r\n\r\nconst getHoursAngles = (estimatedHours, plannedHours, reportedHours) => {\r\n    let maxHours = Math.max(estimatedHours, plannedHours, reportedHours)\r\n    let estimatedStartAngle = 180, plannedStartAngle = 180, reportedStartAngle = 180\r\n    let estimatedEndAngle = 0, plannedEndAngle = 0, reportedEndAngle = 0;\r\n\r\n    if (maxHours == estimatedHours) {\r\n        // estimated hours are maximum\r\n        estimatedEndAngle = -180\r\n        plannedEndAngle = 180 - (plannedHours / maxHours) * 360\r\n        reportedEndAngle = 180 - (reportedHours * 360) / maxHours\r\n    } else if (maxHours == plannedHours) {\r\n        plannedEndAngle = -180\r\n        estimatedEndAngle = 180 - (estimatedHours * 360) / maxHours\r\n        reportedEndAngle = 180 - (reportedHours * 360) / maxHours\r\n    } else {\r\n        reportedEndAngle = -180\r\n        estimatedEndAngle = 180 - (estimatedHours * 360) / maxHours\r\n        plannedEndAngle = 180 - (plannedHours * 360) / maxHours\r\n    }\r\n\r\n    return {\r\n        estimatedStartAngle,\r\n        estimatedEndAngle,\r\n        plannedStartAngle,\r\n        plannedEndAngle,\r\n        reportedStartAngle,\r\n        reportedEndAngle\r\n    }\r\n}\r\n\r\nconst RADIAN = Math.PI / 180;\r\n\r\nconst renderCustomizedLabel = ({cx, cy, value}) => {\r\n    return (\r\n        <text x={cx} y={cy} fill=\"#d35ba1\" fontWeight={\"bold\"} textAnchor={'middle'} dominantBaseline=\"middle\">\r\n            {`${value}`}\r\n        </text>\r\n    );\r\n};\r\n\r\n\r\nclass DashboardSection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    onReleaseSelect(releaseID) {\r\n        this.props.setReleaseID(releaseID)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        console.log(\"DashboardSection->render() called\", window.innerWidth, window.innerHeight)\r\n\r\n        let dashboardWidth = window.innerWidth * 0.8 // as content section has 80% width\r\n\r\n        console.log(\"dashboard width is \", dashboardWidth)\r\n        let barMargin = {top: 20, right: 20, left: 30, bottom: 30}\r\n        let barWidth = (dashboardWidth - barMargin.left * 2 - barMargin.right * 2) / 2\r\n        console.log(\"bar width calculated as \", barWidth)\r\n\r\n        const {estimatedStartAngle, estimatedEndAngle, plannedStartAngle, plannedEndAngle, reportedStartAngle, reportedEndAngle} = getHoursAngles(this.props.hoursData.estimatedHours, this.props.hoursData.plannedHours, this.props.hoursData.reportedHours)\r\n        console.log(estimatedEndAngle, plannedEndAngle, reportedEndAngle)\r\n\r\n        let baseHour = this.props.plannedVsReported.baseHour\r\n\r\n        const {selectedReleaseID, allReleases} = this.props\r\n        return <div>\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-4 \">\r\n                    <div>\r\n                        <select\r\n                            value={selectedReleaseID}\r\n                            className=\"form-control\"\r\n                            title=\"Select Flag\"\r\n\r\n                            onChange={(release) =>\r\n                                this.onReleaseSelect(release.target.value)\r\n                            }>\r\n                            {\r\n                                allReleases && allReleases.length ? allReleases.map((release, idx) =>\r\n                                    <option\r\n                                        key={idx}\r\n                                        value={release._id}>\r\n                                        {release.project.name} ({release.name})\r\n                                    </option>) : null\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={\"col-md-6\"} style={{marginRight: \"0px\"}}>\r\n                <div className={\"chartSection\"}>\r\n                    <BarChart data={[this.props.overallProgress]}\r\n                              height={80} width={barWidth} layout={\"vertical\"} margin={barMargin}>\r\n                        <XAxis type=\"number\" hide={true}/>\r\n                        <YAxis type=\"category\" dataKey={\"name\"} hide={true}/>\r\n                        <Tooltip/>\r\n                        <Legend/>\r\n                        <Bar barSize={10} dataKey=\"progress\" stackId=\"a\" fill=\"#6CE190\" name={\"Overall Progress\"}>\r\n                            <LabelList dataKey=\"progress\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                        <Bar barSize={10} dataKey=\"remaining\" stackId=\"a\" fill=\"#E25858\" name={\"Unfinished\"}>\r\n                            <LabelList dataKey=\"remaining\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                    </BarChart>\r\n                </div>\r\n\r\n                <div className={\"chartSection\"}>\r\n                    <BarChart data={[this.props.completedPendingProgress]}\r\n                              height={80} width={barWidth} margin={barMargin}\r\n                              layout={\"vertical\"}>\r\n                        <XAxis type=\"number\" hide={true}/>\r\n                        <YAxis type=\"category\" dataKey={\"name\"} hide={true}/>\r\n                        <Legend/>\r\n                        <Bar barSize={10} dataKey=\"completed\" stackId=\"a\" fill=\"#6CE190\"\r\n                             name={\"Progress (Completed Tasks)\"}>\r\n                            <LabelList dataKey=\"completed\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                        <Bar barSize={10} dataKey=\"pending\" stackId=\"a\" fill=\"#f5f968\"\r\n                             name={\"Progress (Pending Tasks)\"}>\r\n                            <LabelList dataKey=\"pending\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                        <Bar barSize={10} dataKey=\"remaining\" stackId=\"a\" fill=\"#E25858\" name={\"Unfinished\"}>\r\n                            <LabelList dataKey=\"remaining\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                    </BarChart>\r\n                </div>\r\n\r\n                <div className={\"chartSection\"}>\r\n\r\n                    <BarChart data={[this.props.estimatedProgress]}\r\n                              height={80} width={barWidth} margin={barMargin}\r\n                              layout={\"vertical\"} barGap={30}>\r\n                        <XAxis type=\"number\" hide={true}/>\r\n                        <YAxis type=\"category\" dataKey={\"name\"} hide={true}/>\r\n                        <Legend/>\r\n                        <Bar barSize={10} dataKey=\"planned\" fill=\"#f2e974\" stackId=\"planned\"\r\n                             name={\"Estimated Progress (Per Planned)\"}>\r\n                            <LabelList dataKey=\"planned\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                        <Bar barSize={10} dataKey=\"remainingPlanned\" stackId=\"planned\" fill=\"#E25858\"\r\n                             name={\"Remaining (Planned)\"}>\r\n                            <LabelList dataKey=\"remainingPlanned\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                    </BarChart>\r\n                </div>\r\n\r\n                <div className={\"chartSection\"}>\r\n\r\n                    <BarChart data={[this.props.estimatedProgress]}\r\n                              height={80} width={barWidth} margin={barMargin}\r\n                              layout={\"vertical\"} barGap={30}>\r\n                        <XAxis type=\"number\" hide={true}/>\r\n                        <YAxis type=\"category\" dataKey={\"name\"} hide={true}/>\r\n                        <Legend/>\r\n                        <Bar barSize={10} dataKey=\"reported\" fill=\"#5cd1d1\" stackId=\"reported\"\r\n                             name={\"Estimated Progress (Per Reporting)\"}>\r\n                            <LabelList dataKey=\"reported\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                        <Bar barSize={10} dataKey=\"remainingReported\" stackId=\"reported\" fill=\"#E25858\"\r\n                             name={\"Remaining (Report)\"}>\r\n                            <LabelList dataKey=\"remainingReported\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n\r\n                    </BarChart>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={\"col-md-6\"}>\r\n                <div className={\"chartSection\"}>\r\n                    <BarChart data={[this.props.plannedVsUnplannedWork]}\r\n                              height={80} width={barWidth} layout={\"vertical\"} margin={barMargin}>\r\n                        <XAxis type=\"number\" hide={true}/>\r\n                        <YAxis type=\"category\" dataKey={\"name\"} hide={true}/>\r\n                        <Tooltip/>\r\n                        <Legend/>\r\n                        <Bar barSize={10} dataKey=\"planned\" stackId=\"a\" fill=\"#6CE190\" name={\"Planned Work\"}>\r\n                            <LabelList dataKey=\"planned\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                        <Bar barSize={10} dataKey=\"unplanned\" stackId=\"a\" fill=\"#E25858\" name={\"Unplanned Work\"}>\r\n                            <LabelList dataKey=\"unplanned\" position=\"top\" formatter={addPercentage}/>\r\n                        </Bar>\r\n                    </BarChart>\r\n                </div>\r\n                <div className={\"chartSection\"}>\r\n                    <BarChart data={[this.props.plannedVsReported]}\r\n                              height={80} width={barWidth} layout={\"vertical\"} margin={barMargin}>\r\n                        <XAxis type=\"number\" hide={true}\r\n                               domain={[0, this.props.plannedVsReported.base + this.props.plannedVsReported.extra]}/>\r\n                        <YAxis type=\"category\" dataKey={\"name\"} hide={true}/>\r\n                        <Tooltip/>\r\n                        <Legend/>\r\n                        <Bar barSize={10} dataKey=\"base\" stackId=\"a\"\r\n                             fill={baseHour === 'planned' ? '#f2e974' : '#5cd1d1'}\r\n                             name={baseHour === 'planned' ? 'Planned Hours' : 'Reported Hours'}>\r\n                            <LabelList dataKey=\"base\" position=\"top\"/>\r\n                        </Bar>\r\n                        <Bar barSize={10} dataKey=\"extra\" stackId=\"a\" fill=\"#E25858\"\r\n                             name={baseHour === 'planned' ? 'Extra Reported Hours' : 'Extra Planned Hours'}>\r\n                            <LabelList dataKey=\"extra\" position=\"top\"/>\r\n                        </Bar>\r\n                    </BarChart>\r\n                </div>\r\n                <div className={\"chartSection\"}>\r\n                    <PieChart width={barWidth} height={240} margin={barMargin}>\r\n                        <Pie isAnimationActive={false}\r\n                             dataKey={\"value\"}\r\n                             data={[{name: 'Estimated Hours', value: this.props.hoursData.estimatedHours}]}\r\n                             cx={barWidth / 2}\r\n                             cy={80} outerRadius={60} innerRadius={40} startAngle={estimatedStartAngle}\r\n                             endAngle={estimatedEndAngle} fill=\"#d35ba1\"\r\n                             label={renderCustomizedLabel}\r\n                             labelLine={false}/>\r\n                        <Pie isAnimationActive={false}\r\n                             dataKey={\"value\"}\r\n                             data={[{name: 'Planned Hours', value: this.props.hoursData.plannedHours}]}\r\n                             cx={barWidth / 2}\r\n                             cy={80} outerRadius={70} innerRadius={62} startAngle={plannedStartAngle}\r\n                             endAngle={plannedEndAngle} fill=\"#f2e974\"\r\n                             label/>\r\n                        <Pie isAnimationActive={false}\r\n                             dataKey={\"value\"}\r\n                             data={[{name: 'Reported Hours', value: this.props.hoursData.reportedHours}]}\r\n                             cx={barWidth / 2}\r\n                             cy={80} outerRadius={80} innerRadius={72} startAngle={reportedStartAngle}\r\n                             endAngle={reportedEndAngle} fill=\"#5cd1d1\"\r\n                             label/>\r\n                        <Legend/>\r\n                        <Tooltip/>\r\n                    </PieChart>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(DashboardSection)\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/sections/DashboardSection.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {EstimationSuggestTaskFormContainer} from \"../../containers\"\r\n\r\nconst EstimationSuggestTaskDialog = (props) => {\r\n    return <Modal className=\"estimationModal suggestDialog\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Suggest Task Detail For Estimation</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <EstimationSuggestTaskFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default EstimationSuggestTaskDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/EstimationSuggestTaskDialog.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {RepositoryTaskDetailPageContainer} from \"../../containers\"\r\n\r\nconst RepositoryTaskDetailDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Task Detail Page</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <RepositoryTaskDetailPageContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default RepositoryTaskDetailDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/RepositoryTaskDetailDialog.js","import * as AC from './actionConsts'\r\nimport * as logger from '../clientLogger'\r\n\r\n\r\nexport const addAllPermissions = (permissions) => ({\r\n        type: AC.ADD_PERMISSIONS,\r\n        permissions: permissions\r\n})\r\n\r\nexport const addPermission = (permission) => ({\r\n    type: AC.ADD_PERMISSION,\r\n    permission: permission\r\n})\r\n\r\nexport const editPermission = (permission) => ({\r\n    type: AC.EDIT_PERMISSION,\r\n    permission: permission\r\n})\r\nexport const deletePermission = (PermissionID) => ({\r\n    type: AC.DELETE_PERMISSION,\r\n    PermissionID: PermissionID\r\n})\r\n\r\nexport const addPermissionOnServer = (formInput) => {\r\n    logger.debug(logger.PERMISSION_THUNK, 'addPermissionOnServer()')\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/permissions',\r\n            {\r\n                method: \"post\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(addPermission(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const editPermissionOnServer = (formInput) => {\r\n    logger.debug(logger.PERMISSION_THUNK, 'editPermissionOnServer()')\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/permissions',\r\n            {\r\n                method: \"put\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(editPermission((json.data)))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const deletePermissionOnServer = (PermissionId) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/permissions/' + PermissionId,\r\n            {\r\n                method: \"delete\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(deletePermission(PermissionId))\r\n                    // clear user form after update is successful\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const getAllPermissionsFromServer = () => {\r\n    logger.debug(logger.PERMISSION_THUNK, 'getAllPermissionsFromServer()')\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/permissions',\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(addAllPermissions(json.data))\r\n                }\r\n                return json\r\n        })\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/actions/permissionAction.js","import {connect} from 'react-redux'\r\nimport {PermissionList} from \"../../components\"\r\nimport {initialize} from 'redux-form'\r\nimport * as logger from '../../clientLogger'\r\nimport * as A from \"../../actions\"\r\nimport * as COC from \"../../components/componentConsts\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    logger.debug(logger.PERMISSION_LIST_CONNECT, \"mapDispatchToProps()\")\r\n    return {\r\n        getAllPermissions: () => dispatch(A.getAllPermissionsFromServer()),\r\n        showPermissionForm: () => dispatch(A.showComponentHideOthers(COC.PERMISSION_FORM)),\r\n        editPermission: (permission, rowIdx) => {\r\n            dispatch(initialize(\"permission\", permission))\r\n            dispatch(A.showComponentHideOthers(COC.PERMISSION_FORM))\r\n        },\r\n        deleteUser: (userId) => dispatch(A.deletePermissionOnServer(userId))\r\n}}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let childProps = {\r\n        loggedInUser: state.user.loggedIn,\r\n        permissions: state.permission.all\r\n    }\r\n    logger.debug(logger.PERMISSION_LIST_CONNECT, \"mapStateToProps(): \", childProps)\r\n    return childProps\r\n}\r\n\r\nconst PermissionListContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PermissionList)\r\n\r\nexport default PermissionListContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/PermissionListContainer.js","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nimport * as SC from '../../../server/serverconstants'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../componentConsts'\r\nimport * as U from '../../../server/utils'\r\n\r\nconst SidebarSection = (props) => {\r\n    let roles = []\r\n    if (props && props.loggedInUser && props.loggedInUser.roleNames && props.loggedInUser.roleNames.length)\r\n        roles = props.loggedInUser.roleNames\r\n\r\n    return <section className=\"sidebar\">\r\n        <div className=\"clearfix\">\r\n            <div className=\"sidebarContent\">\r\n                <div className=\"col-md-12 pad\">\r\n                    <ul className=\"list-unstyled\">\r\n                        {/*\r\n                            (roles.indexOf(SC.ROLE_MANAGER) > -1 || roles.indexOf(SC.ROLE_LEADER) > -1) &&\r\n                            <li><Link to=\"/app-home/dashboard\" onClick={() => {\r\n                                props.dispatch(A.showComponentHideOthers(COC.DASHBOARD_SECTION))\r\n                                props.dispatch(A.getUserReleasesFromServer(SC.ALL)).then(releases => {\r\n                                    console.log(\"inside then of get release from server \", releases)\r\n                                    if (releases && releases.length) {\r\n                                        props.dispatch(A.setReleaseID(releases[0]._id))\r\n                                        props.dispatch(A.getReleaseForDashboard(releases[0]._id))\r\n                                    }\r\n                                })\r\n                            }}>Dashboard</Link></li>\r\n                        */  }\r\n                        {\r\n                            (roles.indexOf(SC.ROLE_MANAGER) > -1 || roles.indexOf(SC.ROLE_LEADER) > -1 ||\r\n                                roles.indexOf('Developer') > -1) &&\r\n                            <li><Link to=\"/app-home/calendar\" onClick={() => {\r\n                                props.dispatch(A.getAllTaskPlansFromServer())\r\n                                props.dispatch(A.showComponentHideOthers(COC.CALENDAR_TASK_PAGE))\r\n\r\n                            }}>Calendar</Link></li>\r\n                        }\r\n\r\n                        {\r\n\r\n                            (roles.indexOf(SC.ROLE_MANAGER) > -1 || roles.indexOf(SC.ROLE_LEADER) > -1) &&\r\n                            <li><Link to=\"/app-home/release\" onClick={() => {\r\n                                props.dispatch(A.getAllReleasesFromServer(SC.ALL))\r\n                                props.dispatch(A.showComponentHideOthers(COC.RELEASE_LIST))\r\n\r\n                            }}>Release</Link></li>\r\n                        }\r\n\r\n                        {\r\n                            (roles.indexOf(SC.ROLE_MANAGER) > -1 || roles.indexOf(SC.ROLE_LEADER) > -1 ||\r\n                                roles.indexOf(SC.ROLE_DEVELOPER) > -1 || roles.indexOf(SC.ROLE_NON_PROJECT_DEVELOPER) > -1) &&\r\n                            <li><Link to=\"/app-home/reporting\" onClick={() => {\r\n                                props.dispatch(A.getUserReleasesFromServer(SC.ALL))\r\n                                /*on reporting click by default all task plans and projects will be there with params\r\n                                releaseID,\r\n                                 * @param releaseID - releaseId by default all release will be fetched\r\n                                 * @param nowString - Current Date Of Indian Time-ZOne\r\n                                 * @param 'planned' - release-plan iteration type\r\n                                 * @param task status - 'all'\r\n                                 */\r\n                                props.dispatch(A.getReportingTasksForDate(SC.ALL, U.getNowStringInIndia(), SC.ITERATION_TYPE_PLANNED, SC.ALL))\r\n                                props.dispatch(A.setReleaseID(SC.ALL))\r\n                                props.dispatch(A.setReportDate(U.getNowStringInIndia()))\r\n                                props.dispatch(A.setReportedStatus(SC.ALL))\r\n                                props.dispatch(A.setIterationType(SC.ITERATION_TYPE_PLANNED))\r\n                                props.dispatch(A.showComponentHideOthers(COC.REPORTING_TASK_PAGE))\r\n\r\n                            }}>Reporting</Link></li>\r\n                        }\r\n\r\n                        {\r\n                            (roles.indexOf(SC.ROLE_NEGOTIATOR) > -1 || roles.indexOf(SC.ROLE_ESTIMATOR) > -1) &&\r\n                            <li><Link to=\"/app-home/estimation\" onClick={() => {\r\n                                props.dispatch(A.getAllEstimationsFromServer(SC.ALL, SC.ALL))\r\n                                props.dispatch(A.getAllProjectsUserEstimationsFromServer())\r\n                                props.dispatch(A.showComponentHideOthers(COC.ESTIMATION_LIST))\r\n\r\n                            }}>Estimation</Link></li>\r\n                        }\r\n\r\n                        {\r\n                            roles.indexOf(SC.ROLE_NEGOTIATOR) > -1 &&\r\n                            <li><Link to=\"/app-home/client\" onClick={() => {\r\n                                props.dispatch(A.getAllClientsFromServer())\r\n                                props.dispatch(A.showComponentHideOthers(COC.CLIENT_LIST))\r\n\r\n                            }}>Client</Link></li>\r\n                        }\r\n\r\n                        {\r\n                            roles.indexOf(SC.ROLE_NEGOTIATOR) > -1 &&\r\n                            <li><Link to=\"/app-home/projects\" onClick={() => {\r\n                                props.dispatch(A.getAllClientsFromServer())\r\n                                props.dispatch(A.getAllProjectsFromServer())\r\n                                props.dispatch(A.showComponentHideOthers(COC.PROJECT_LIST))\r\n                            }}>Projects</Link></li>\r\n                        }\r\n\r\n\r\n                        {\r\n                            roles.indexOf(SC.ROLE_NEGOTIATOR) > -1 &&\r\n                            <li><Link to=\"/app-home/modules\" onClick={() => {\r\n                                props.dispatch(A.getAllProjectsFromServer())\r\n                                props.dispatch(A.getAllModulesFromServer())\r\n                                props.dispatch(A.showComponentHideOthers(COC.MODULE_LIST))\r\n                            }}>Modules</Link></li>\r\n                        }\r\n\r\n\r\n                        {\r\n                            roles.indexOf(SC.ROLE_NEGOTIATOR) > -1 &&\r\n                            <li><Link to=\"/app-home/technology\" onClick={() => {\r\n                                props.dispatch(A.getAllTechnologiesFromServer())\r\n                                props.dispatch(A.showComponentHideOthers(COC.TECHNOLOGIES_LIST))\r\n\r\n                            }}>Technology</Link></li>\r\n                        }\r\n\r\n                        {\r\n                            (roles.indexOf(SC.ROLE_MANAGER) > -1 || roles.indexOf(SC.ROLE_LEADER) > -1 ||\r\n                                roles.indexOf(SC.ROLE_DEVELOPER) > -1 || roles.indexOf(SC.ROLE_NON_PROJECT_DEVELOPER) > -1 || roles.indexOf(SC.ROLE_TOP_MANAGEMENT) > -1) &&\r\n                            <li><Link to=\"/app-home/leave\" onClick={() => {\r\n                                props.dispatch(A.getAllLeavesFromServer(SC.ALL))\r\n                                props.dispatch(A.getAllLeaveTypesFromServer())\r\n                                props.dispatch(A.showComponentHideOthers(COC.LEAVE_LIST))\r\n                            }}>Leave</Link></li>\r\n                        }\r\n\r\n                        {\r\n                            roles.indexOf(SC.ROLE_TOP_MANAGEMENT) > -1 &&\r\n                            <li><Link to=\"/app-home/attendance\" onClick={() => {\r\n                                props.dispatch(A.getAttendanceSettingFromServer())\r\n                                props.dispatch(A.showComponentHideOthers(COC.ATTENDANCE_SETTING_FORM))\r\n\r\n                            }}>Attendance Setting</Link></li>\r\n                        }\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n}\r\n\r\nexport default connect()(SidebarSection)\n\n\n// WEBPACK FOOTER //\n// ./client/components/sections/SidebarSection.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport Dialog from 'react-bootstrap-dialog'\r\n\r\nclass AdminUserList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    editCellButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\"glyphicon glyphicon-pencil pull-left btn btn-custom\" type=\"button\"\r\n                        onClick={() => this.onClickUserEditSelected(cell, row, rowIndex)}>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    onClickUserEditSelected(cell, row, rowIndex) {\r\n        this.props.showAdminUserEditForm(row);\r\n    }\r\n\r\n    deleteCellButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\"glyphicon glyphicon-trash pull-left btn btn-custom\" type=\"button\"\r\n                        onClick={() => this.onClickCaseTypeDeleteSelected(cell, row, rowIndex)}>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    onClickCaseTypeDeleteSelected(cell, row, rowIndex) {\r\n        this.dialog.show({\r\n            title: \"Remove Permission\",\r\n            body: \"Remove Permission\",\r\n            actions: [\r\n                Dialog.DefaultAction('Remove', () => {\r\n                    this.props.deleteAdminUser(row._id)\r\n                }, 'btn-custom'),\r\n                Dialog.DefaultAction('Close', () => {\r\n                    this.dialog.hide()\r\n                }, 'btn-custom')\r\n            ],\r\n            bsSize: 'small',\r\n            onHide: (dialog) => {\r\n                this.dialog.hide()\r\n            }\r\n        })\r\n    }\r\n\r\n    formatRole(roles, row) {\r\n        if (roles && roles.length > 0)\r\n            return roles.map(role => role.role).join(\", \")\r\n        else\r\n            return ''\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"col-md-10\">\r\n                <Dialog ref={(el) => {\r\n                    this.dialog = el\r\n                }}/>\r\n\r\n                {//(this.props.loggedInUser.isSuperAdmin) ?\r\n                    <button className=\"btn btn-default btn-submit\" onClick={() => this.props.showAdminUserForm()}>Create\r\n                        User</button>\r\n                    //: <div style={{height: '10px'}}></div>\r\n                }\r\n\r\n\r\n                <BootstrapTable options={this.options} data={this.props.AdminUsers} striped={true}\r\n                                hoveNr={true}>\r\n                    <TableHeaderColumn isKey dataField='_id' hidden={true}>ID</TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"20%\" dataField=\"firstName\" dataSort={true}>First Name</TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"20%\" dataField=\"lastName\">Last Name</TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"26%\" dataField=\"roles\"\r\n                                       dataFormat={this.formatRole}>Roles</TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"22%\" dataField=\"email\">Email</TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"8%\" dataField='button' dataFormat={this.editCellButton.bind(this)}><i\r\n                        className=\"fa fa-pencil\"></i></TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"8%\" dataField='button'\r\n                                       dataFormat={this.deleteCellButton.bind(this)}><i className=\"fa fa-trash\"></i>\r\n                    </TableHeaderColumn>\r\n\r\n                </BootstrapTable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminUserList\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/AdminUserList.js","import {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport React from 'react'\r\nimport {renderDateTimePickerString, renderMultiSelect, renderSelect, renderText} from './fields'\r\nimport * as logger from '../../clientLogger'\r\nimport {number, required} from \"./validation\"\r\nimport moment from 'moment'\r\nimport momentLocalizer from 'react-widgets-moment'\r\nimport {connect} from 'react-redux'\r\nimport _ from 'lodash'\r\n\r\nmoment.locale('en')\r\nmomentLocalizer()\r\n\r\nlet EstimationProjectAwardForm = (props) => {\r\n    //logger.debug(logger.ESTIMATION_PROJECT_AWARD_FORM_RENDER, props)\r\n    const {pristine, submitting, reset, change} = props\r\n    const {team, managers, leaders, devStartDate, devReleaseDate, clientReleaseDate, manager, leader} = props\r\n    let max = !_.isEmpty(devReleaseDate) ? moment(devReleaseDate).toDate() : !_.isEmpty(clientReleaseDate) ? moment(clientReleaseDate).toDate() : undefined\r\n    let maxRelease = !_.isEmpty(clientReleaseDate) ? moment(clientReleaseDate).toDate() : undefined\r\n\r\n    /*\r\n        While creating/adding release to an estimation, an user which is chosen as a Manager cannot be chosen as Leader and vice versa.\r\n        A manager/leader can be chose as Developer if they have that role as well.\r\n    */\r\n\r\n    let updatedManagerList = leader && leader._id ? managers.filter(m => m._id.toString() !== leader._id.toString()) : managers\r\n    let updatedLeaderList = manager && manager._id ? leaders.filter(l => l._id.toString() !== manager._id.toString()) : leaders\r\n    let now = new Date()\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div className=\"row\">\r\n\r\n            <Field name=\"estimation._id\" component=\"input\" type=\"hidden\"/>\r\n            <Field name=\"_id\" component=\"input\" type=\"hidden\"/>\r\n\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-6\">\r\n                    <Field name=\"billedHours\" component={renderText} label={\"Negotiated Billed Hours:\"}\r\n                           validate={[required, number]}/>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <Field name=\"releaseVersionName\" component={renderText} validate={[required]}\r\n                           label={\"Name (Relese Version):\"}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-4\">\r\n                    <Field name=\"devStartDate\" component={renderDateTimePickerString}\r\n                           min={now}\r\n                           max={max}\r\n                           showTime={false}\r\n                           label={\"Expected Start Date For Developer:\"} validate={[required]}/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <Field name=\"devReleaseDate\" component={renderDateTimePickerString}\r\n                           min={moment(devStartDate).toDate()}\r\n                           max={maxRelease}\r\n                           showTime={false}\r\n                           label={\"Expected Developer Release Date:\"} validate={[required]}/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <Field name=\"clientReleaseDate\" component={renderDateTimePickerString}\r\n                           min={moment(devReleaseDate).toDate()}\r\n                           showTime={false}\r\n                           label={\"Expected Client Release Date:\"}\r\n                           validate={required}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-6\">\r\n                    <Field name=\"manager._id\"\r\n                           component={renderSelect}\r\n                           label={\"Manager Of Release:\"}\r\n                           options={updatedManagerList}\r\n                           validate={required}\r\n                           valueField=\"_id\"\r\n                           displayField=\"Name\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n\r\n                    <Field name=\"leader._id\"\r\n                           component={renderSelect}\r\n                           label={\"Leader Of Release:\"}\r\n                           options={updatedLeaderList}\r\n                           validate={required}\r\n                           valueField=\"_id\"\r\n                           displayField=\"Name\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-12\">\r\n                    <Field name=\"team\"\r\n                           component={renderMultiSelect}\r\n                           label={\"Planned Employees For Release:\"}\r\n                           data={team}\r\n                           validate={required}\r\n                           textField=\"name\"\r\n                           valueField=\"_id\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div className=\"row initiatEstimation\">\r\n            <div className=\"col-md-6 text-center\">\r\n                <button type=\"submit\" disabled={pristine || submitting} className=\"btn customBtn\">Submit</button>\r\n            </div>\r\n            <div className=\"col-md-6 text-center\">\r\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset} className=\"btn customBtn\">\r\n                    Reset\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nEstimationProjectAwardForm = reduxForm({\r\n    form: 'estimation-project-award'\r\n})(EstimationProjectAwardForm)\r\n\r\nconst selector = formValueSelector('estimation-project-award')\r\n\r\nEstimationProjectAwardForm = connect(\r\n    state => {\r\n        const {devStartDate, devReleaseDate, clientReleaseDate} = selector(state, 'devStartDate', 'devReleaseDate', 'clientReleaseDate')\r\n        const manager = selector(state, 'manager')\r\n        const leader = selector(state, 'leader')\r\n        return {\r\n            devStartDate,\r\n            devReleaseDate,\r\n            clientReleaseDate,\r\n            manager,\r\n            leader\r\n        }\r\n    }\r\n)(EstimationProjectAwardForm)\r\n\r\n\r\nexport default EstimationProjectAwardForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/EstimationProjectAwardForm.js","import {connect} from 'react-redux'\r\nimport {SidebarSection} from \"../../components/sections\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loggedInUser: state.user.loggedIn\r\n})\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({})\r\n\r\nconst SidebarSectionContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SidebarSection)\r\n\r\nexport default SidebarSectionContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/sections/SidebarSectionContainer.js","import {connect} from 'react-redux'\r\nimport AdminHome from '../../components/pages/AdminHome'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loggedInUser: state.user.loggedIn\r\n})\r\n\r\nconst AdminHomeContainer = withRouter(connect(\r\n    mapStateToProps\r\n)(AdminHome))\r\n\r\nexport default AdminHomeContainer\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/AdminHomeContainer.js","import {connect} from 'react-redux'\r\nimport SuperAdminHome from '../../components/pages/SuperAdminHome'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loggedInUser: state.user.loggedIn\r\n})\r\n\r\nconst SuperAdminHomeContainer = withRouter(connect(\r\n    mapStateToProps\r\n)(SuperAdminHome))\r\n\r\nexport default SuperAdminHomeContainer\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/SuperAdminHomeContainer.js","import * as AC from \"./actionConsts\";\r\n\r\nexport const addTechnologies = (technologies) => ({\r\n    type: AC.ADD_TECHNOLOGIES,\r\n    technologies: technologies\r\n})\r\n\r\nexport const addTechnology = (technology) => ({\r\n    type: AC.ADD_TECHNOLOGY,\r\n    technology: technology\r\n})\r\n\r\nexport const deleteTechnology = (TechnologyID) => ({\r\n    type: AC.DELETE_TECHNOLOGY,\r\n    TechnologyID: TechnologyID\r\n})\r\n\r\nexport const getAllTechnologiesFromServer = () => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/technologies', {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addTechnologies(json.data))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const addTechnologyOnServer = (formInput) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/technologies',\r\n            {\r\n                method: \"post\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(addTechnology(json.data))\r\n\r\n\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const deleteTechnologyOnServer = (TechnologyID) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/technologies/' + TechnologyID,\r\n            {\r\n                method: \"delete\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'ap plication/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(deleteTechnology(TechnologyID))\r\n                    // clear user form after update is successful\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/actions/technologyAction.js","import React, {Component} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {renderDateTimePickerString, renderDateTimeStringShow, renderField} from './fields'\r\nimport {required} from \"./validation\"\r\nimport moment from 'moment'\r\nimport momentLocalizer from 'react-widgets-moment'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nmoment.locale('en')\r\nmomentLocalizer()\r\nlet ReleaseMoveTaskPlanForm = (props) => {\r\n    const {change, team, handleSubmit, submitting, pristine, reset, initial, workCalendarEmployeeID} = props\r\n    const today = new Date()\r\n    const todayMoment = moment(today).hour(0).minute(0).second(0).milliseconds(0)\r\n    const devStartDateMoment = moment(initial.devStartDate).hour(0).minute(0).second(0).milliseconds(0)\r\n    const devEndDateMoment = moment(initial.devEndDate).hour(0).minute(0).second(0).milliseconds(0)\r\n\r\n\r\n    const min = devStartDateMoment.isSameOrAfter(todayMoment) ? devStartDateMoment.toDate() : todayMoment.toDate()\r\n    const max = devEndDateMoment.toDate()\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-10\">\r\n\r\n                <Field name=\"release._id\" component=\"input\" type=\"hidden\"/>\r\n\r\n                <Field name=\"task.name\"\r\n                       readOnly\r\n                       component={renderField}\r\n                       label={\" Task Name : \"}\r\n                       validate={[required]}\r\n                />\r\n\r\n                <Field name=\"planningDateString\"\r\n                       placeholder={\"Date\"}\r\n                       component={renderDateTimeStringShow}\r\n                       showTime={false}\r\n                       min={min}\r\n                       max={max}\r\n                       formate={SC.DATE_AND_DAY_SHOW_FORMAT}\r\n                       label={\"Planning Date : \"}\r\n                       validate={[required]}\r\n                />\r\n\r\n                <div className=\"col-md-8\">\r\n                    <Field name=\"rePlanningDate\"\r\n                           placeholder={\"Date\"}\r\n                           component={renderDateTimePickerString}\r\n                           showTime={false}\r\n                           min={min}\r\n                           max={max}\r\n                           label={\"Move to Date :\"}\r\n                           validate={[required]}\r\n                    />\r\n                </div>\r\n\r\n                {/*<Field name=\"planning.plannedHours\" placeholder={\"Enter Hours\"} component={renderText}\r\n                       label={\"Estimated Hours:\"} validate={[required, number]}/>\r\n                */}\r\n            </div>\r\n\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-4\">\r\n                    <button type=\"submit\" className=\"btn customBtn\" disabled={submitting || pristine}>\r\n                        Move\r\n                    </button>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <button type=\"button\" className=\"btn customBtn\" disabled={submitting || pristine} onClick={reset}>\r\n                        Reset\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nReleaseMoveTaskPlanForm = reduxForm({\r\n    form: 'move-task-planning'\r\n})(ReleaseMoveTaskPlanForm)\r\n\r\nexport default ReleaseMoveTaskPlanForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/ReleaseMoveTaskPlanForm.js","import * as AC from \"../actions/actionConsts\";\r\nimport * as U from \"../../server/utils\";\r\n\r\nlet initialState = {\r\n    all: [],\r\n    allYears: [],\r\n\r\n}\r\n\r\nlet holidayReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AC.ADD_HOLIDAY:\r\n            return Object.assign({}, state, {all: [...state.all, action.holiday]})\r\n\r\n        case AC.ADD_HOLIDAYS:\r\n            return Object.assign({}, state, {all: action.holidays})\r\n\r\n        case AC.ADD_ALL_YEARS:\r\n            let currentYear = U.getCurrentYear()\r\n            let years = action.years && action.years.length ? action.years.map(y => y.calendarYear) : []\r\n            return Object.assign({}, state, {allYears: years && years.length && years.findIndex(y => y == currentYear) != -1 ? years : [...years, currentYear]})\r\n\r\n        case AC.DELETE_HOLIDAY:\r\n            let holidayDateMoment = U.momentInUTC(action.holidayDateString)\r\n            return Object.assign({}, state, {all: state.all.filter(item => !U.momentInUTC(item.dateString).isSame(holidayDateMoment))})\r\n\r\n        case AC.UPDATE_HOLIDAY:\r\n            return Object.assign({}, state, {\r\n                all: state.all.map(item => item._id.toString() == action.holiday._id.toString() ? action.holiday : item)\r\n            })\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default holidayReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/holidayReducer.js","import {required} from \"./validation\"\r\nimport {renderDateTimePickerString, renderSelect, renderTextArea} from \"./fields\"\r\nimport {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport momentLocalizer from 'react-widgets-moment'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport * as U from '../../../server/utils'\r\nimport {connect} from 'react-redux'\r\nimport _ from 'lodash'\r\n\r\n\r\nmoment.locale('en')\r\nmomentLocalizer()\r\n\r\nlet LeaveRequestForm = (props) => {\r\n    const {pristine, submitting, reset, handleSubmit, startDate, endDate} = props\r\n    let now = new Date()\r\n    const startDateMoment = startDate && !_.isEmpty(startDate) ? U.momentInTimeZone(startDate, SC.INDIAN_TIMEZONE) : undefined\r\n    const endDateMoment = endDate && !_.isEmpty(endDate) ? U.momentInTimeZone(endDate, SC.INDIAN_TIMEZONE) : undefined\r\n    const startDateMomentDate = startDateMoment && startDateMoment.isValid() ? startDateMoment.toDate() : undefined\r\n    const endDateMomentDate = endDateMoment && endDateMoment.isValid() ? endDateMoment.toDate() : undefined\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <Field name=\"_id\" component=\"input\" type=\"hidden\"/>\r\n                <Field name=\"dayType\" placeholder={\"Leave day\"} displayField={\"name\"} valueField={\"name\"}\r\n                       component={renderSelect} options={SC.LEAVE_TYPE_DAY_WITH_NAME_ARRAY}\r\n                       label={\"Day type :\"} validate={[required]}/>\r\n\r\n                <Field name=\"startDate\" placeholder={\"Leave Start Date :\"} component={renderDateTimePickerString}\r\n                       showTime={false}\r\n                       label={\"Start Date :\"}\r\n                       min={now}\r\n                       max={endDateMomentDate}\r\n                       validate={[required]}/>\r\n\r\n                <Field name=\"endDate\" placeholder={\"Leave End Date :\"} component={renderDateTimePickerString}\r\n                       showTime={false}\r\n                       min={startDateMomentDate ? startDateMomentDate : now}\r\n                       label={\"End Date :\"}\r\n                       validate={[required]}/>\r\n\r\n                <Field name=\"leaveType._id\" placeholder={\"type of leave\"} displayField={\"name\"} valueField={\"_id\"}\r\n                       component={renderSelect} options={props.leaveTypes}\r\n                       label={\"Type :\"} validate={[required]}/>\r\n\r\n                <Field width=\"80%\" name=\"description\" validate={[required]} component={renderTextArea}\r\n                       label=\"Description:\"/>\r\n\r\n                <button type=\"submit\" disabled={pristine || submitting} className=\"btn customBtn\"> Submit</button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nLeaveRequestForm = reduxForm({\r\n    form: 'leave-request'\r\n\r\n})(LeaveRequestForm)\r\nconst selector = formValueSelector('leave-request')\r\n\r\nLeaveRequestForm = connect(\r\n    state => {\r\n        const {startDate, endDate} = selector(state, 'startDate', 'endDate')\r\n        return {\r\n            startDate,\r\n            endDate,\r\n        }\r\n    }\r\n)(LeaveRequestForm)\r\n\r\nexport default LeaveRequestForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/LeaveRequestForm.js","// Env\r\nexport const PROD_ENV = 'production'\r\nexport const DEV_ENV = 'development'\r\n//Common Names\r\n\r\nexport const ALL = 'all'\r\nexport const NONE = 'none'\r\n\r\n// User Role\r\nexport const ROLE_ADMIN = 'Admin'\r\nexport const ROLE_SUPER_ADMIN = 'Super Admin'\r\nexport const ROLE_APP_USER = 'App User'\r\nexport const ROLE_ESTIMATOR = 'Estimator'\r\nexport const ROLE_NEGOTIATOR = 'Negotiator'\r\nexport const ROLE_MANAGER = 'Manager'\r\nexport const ROLE_LEADER = 'Leader'\r\nexport const ROLE_DEVELOPER = 'Developer'\r\nexport const ROLE_NON_PROJECT_DEVELOPER = 'Non Project Developer'\r\nexport const ROLE_TOP_MANAGEMENT = 'Top Management'\r\nexport const ALL_ROLE_ARRAY = [\r\n    ROLE_ADMIN,\r\n    ROLE_SUPER_ADMIN,\r\n    ROLE_APP_USER,\r\n    ROLE_ESTIMATOR,\r\n    ROLE_NEGOTIATOR,\r\n    ROLE_MANAGER,\r\n    ROLE_LEADER,\r\n    ROLE_DEVELOPER,\r\n    ROLE_TOP_MANAGEMENT\r\n]\r\n\r\n\r\n// test emails\r\nexport const SUPER_ADMIN_EMAIL = 'superadmin@test.com'\r\nexport const ADMIN_EMAIL = 'admin@test.com'\r\nexport const APP_USER_EMAIL = 'appuser@test.com'\r\n\r\n// owner\r\nexport const OWNER_ESTIMATOR = 'estimator'\r\nexport const OWNER_NEGOTIATOR = 'negotiator'\r\nexport const OWNER_MANAGER = 'manager'\r\nexport const OWNER_LEADER = 'leader'\r\n\r\n// Estimation status\r\nexport const STATUS_PENDING = 'pending'\r\nexport const STATUS_APPROVED = 'approved'\r\nexport const STATUS_INITIATED = 'initiated'\r\nexport const STATUS_ESTIMATION_REQUESTED = 'estimation-requested'\r\nexport const STATUS_REVIEW_REQUESTED = 'review-requested'\r\nexport const STATUS_CHANGE_REQUESTED = 'change-requested'\r\nexport const STATUS_REOPENED = 'reopened'\r\nexport const STATUS_PROJECT_AWARDED = 'project-awarded'\r\nexport const STATUS_REJECTED = 'rejected'\r\nexport const STATUS_CANCELLED = 'cancelled'\r\nexport const STATUS_PLANNED = 'planned'\r\n\r\n//Leave Status\r\n\r\n\r\nexport const LEAVE_TYPE_FULL_DAY = 'Full'\r\nexport const LEAVE_TYPE_HALF_DAY = 'Half'\r\nexport const LEAVE_TYPE_DAY_WITH_NAME_ARRAY = [{name: LEAVE_TYPE_HALF_DAY}, {name: LEAVE_TYPE_FULL_DAY}]\r\nexport const LEAVE_TYPE_DAY_ARRAY = [LEAVE_TYPE_HALF_DAY, LEAVE_TYPE_FULL_DAY]\r\n\r\n\r\nexport const LEAVE_STATUS_RAISED = 'raised'\r\nexport const LEAVE_STATUS_APPROVED = 'approved'\r\nexport const LEAVE_STATUS_CANCELLED = 'cancelled'\r\nexport const ALL_LEAVE_STATUS_ARRAY = [LEAVE_STATUS_RAISED, LEAVE_STATUS_APPROVED, LEAVE_STATUS_CANCELLED]\r\n\r\n//Statuses\r\n\r\nexport const STATUS_AWARDED = 'awarded'\r\nexport const STATUS_DEV_IN_PROGRESS = 'dev-in-progress'\r\nexport const STATUS_DEV_COMPLETED = 'dev-completed'\r\nexport const STATUS_ISSUE_FIXING = 'issue-fixing'\r\nexport const STATUS_TEST_COMPLETED = 'test-completed'\r\nexport const STATUS_STABLE = 'stable'\r\nexport const STATUS_RELEASED = 'released'\r\n\r\nexport const STATUS_PLAN_REQUESTED = 'plan-requested'\r\nexport const STATUS_COMPLETED = 'completed'\r\nexport const STATUS_UNREPORTED = 'un-reported'\r\nexport const STATUS_UNPLANNED = 'unplanned'\r\n\r\nexport const TYPE_DEVELOPMENT = 'development'\r\nexport const TYPE_TESTING = 'testing'\r\nexport const TYPE_REVIEW = 'review'\r\nexport const TYPE_MANAGEMENT = 'management'\r\nexport const TYPE_COMPANY = 'company'\r\n\r\n// operations\r\nexport const OPERATION_ADDITION = 'addition'\r\nexport const OPERATION_SUBTRACTION = 'subtraction'\r\nexport const OPERATION_SUBTRACTION_AND_ADDITION = 'subtraction-and-addition'\r\nexport const OPERATION_CREATE = 'create'\r\nexport const OPERATION_UPDATE = 'update'\r\nexport const OPERATION_DELETE = 'delete'\r\n\r\n//warning related\r\nexport const WARNING_TYPE_RELEASE = 'release'\r\nexport const WARNING_TYPE_RELEASE_PLAN = 'release_plan'\r\nexport const WARNING_TYPE_TASK_PLAN = 'task_plan'\r\nexport const WARNING_UNPLANNED = 'unplanned'\r\nexport const WARNING_TOO_MANY_HOURS = 'too_many_hours'\r\nexport const WARNING_EMPLOYEE_ON_LEAVE = 'employee_on_leave'\r\nexport const WARNING_EMPLOYEE_ASK_FOR_LEAVE = 'employee_ask_for_leave'\r\nexport const WARNING_RELEASE_DATE_MISSED_1 = 'release_date_missed_1'\r\nexport const WARNING_RELEASE_DATE_MISSED_2 = 'release_date_missed_2'\r\nexport const WARNING_RELEASE_DATE_MISSED_3 = 'release_date_missed_3'\r\nexport const WARNING_RELEASE_DATE_MISSED_4 = 'release_date_missed_4'\r\nexport const WARNING_PLANNED_BEYOND_RELEASE_DATE = 'planned_beyond_release_date'\r\nexport const WARNING_LESS_PLANNED_HOURS = 'less_planned_hours'\r\nexport const WARNING_MORE_PLANNED_HOURS = 'more_planned_hours'\r\nexport const WARNING_MORE_REPORTED_HOURS_1 = 'more_reported_hours_1'\r\nexport const WARNING_MORE_REPORTED_HOURS_2 = 'more_reported_hours_2'\r\nexport const WARNING_MORE_REPORTED_HOURS_3 = 'more_reported_hours_3'\r\nexport const WARNING_MORE_REPORTED_HOURS_4 = 'more_reported_hours_4'\r\nexport const WARNING_HAS_UNREPORTED_DAYS = 'has_unreported_days'\r\nexport const WARNING_UNREPORTED = 'unreported'\r\nexport const WARNING_PENDING_ON_END_DATE = 'pending_on_end_date'\r\nexport const WARNING_COMPLETED_BEFORE_END_DATE = 'completed_before_end_date'\r\n\r\n/*\r\n  'estimated' - There can be any number of iterations with this iteration type. Whenever any estimation\r\n  is added in new release or added to current release a new iteration of these type would be added\r\n  with all the tasks in estimation linked to iteration created.\r\n*/\r\n\r\nexport const ITERATION_TYPE_ESTIMATED = 'estimated' // Iterations which are added from estimation process\r\n/*\r\n 'planned' - At the moment there would only be one iteration with this iteration_type which would be\r\n created when release is created.\r\n All the tasks that were added from release interface would be added against this iteration\r\n All such tasks would have estimated hours. These tasks would have all the functionality (warning generation,\r\n progress calculation etc) that tasks added against iteration of type 'estimated'.\r\n\r\n Only difference these tasks would have the way they can be added into system. These tasks would be added\r\n from release interface by manager/leader. Tasks added in 'estimated' iteration however are added from\r\n estimations created by negotiator/estimator.\r\n\r\n Another difference is that these tasks would be added directly against release without the need for\r\n manager/leader to consulting each other (giving ease of addition but compromising the need of getting\r\n approval of other party). Can be useful in some cases.\r\n */\r\n\r\nexport const ITERATION_TYPE_PLANNED = 'planned'\r\n\r\n/*\r\n At the moment there would only be one iteration with the iteration_type 'unplanned', this\r\n iteration would be created when release is created.\r\n All the unplanned work reported through reporting interface would be linked to this iteration. All tasks\r\n added against this iteration would not have any part in progress calculation but they would become part\r\n of billing interface.\r\n\r\n*/\r\nexport const ITERATION_TYPE_UNPLANNED = 'unplanned'\r\nexport const ITERATION_TYPE_LIST_WITH_NAME = [{name: ITERATION_TYPE_PLANNED}, {name: ITERATION_TYPE_UNPLANNED}]\r\n\r\n\r\nexport const ALL_WARNING_NAME_ARRAY = [\r\n    WARNING_UNPLANNED,\r\n    WARNING_TOO_MANY_HOURS,\r\n    WARNING_EMPLOYEE_ON_LEAVE,\r\n    WARNING_EMPLOYEE_ASK_FOR_LEAVE,\r\n    WARNING_RELEASE_DATE_MISSED_1,\r\n    WARNING_RELEASE_DATE_MISSED_2,\r\n    WARNING_RELEASE_DATE_MISSED_3,\r\n    WARNING_RELEASE_DATE_MISSED_4,\r\n    WARNING_PLANNED_BEYOND_RELEASE_DATE,\r\n    WARNING_LESS_PLANNED_HOURS,\r\n    WARNING_MORE_PLANNED_HOURS,\r\n    WARNING_MORE_REPORTED_HOURS_1, // When (reportedHours > estimatedHours)\r\n    WARNING_MORE_REPORTED_HOURS_2, // When (reportedHours > (1.5) * estimatedHours)\r\n    WARNING_MORE_REPORTED_HOURS_3, //When (reportedHours > 2 * estimatedHours)\r\n    WARNING_MORE_REPORTED_HOURS_4, // When (reportedHours > 4 * estimatedHours)\r\n    WARNING_HAS_UNREPORTED_DAYS,\r\n    WARNING_UNREPORTED,\r\n    WARNING_PENDING_ON_END_DATE,\r\n    WARNING_COMPLETED_BEFORE_END_DATE,\r\n]\r\n\r\n\r\n//Designation\r\nexport const DESIGNATION_SOFTWARE_ENGINEER = \"Software Engineer\"\r\nexport const DESIGNATION_SOFTWARE_TRAINEE = \"Software Trainee\"\r\nexport const DESIGNATION_SENIOR_SW_ENGINEER = \"Sr. Software Engineer\"\r\nexport const DESIGNATION_MODULE_LEAD = \"Module Lead\"\r\nexport const DESIGNATION_TEAM_LEAD = \"Team Lead\"\r\nexport const DESIGNATION_MANAGER = \"Manager\"\r\nexport const DESIGNATION_OWNER = \"Owner\"\r\n\r\n//reasons\r\nexport const REASON_GENERAL_DELAY = \"general-delay\"\r\nexport const REASON_EMPLOYEE_ON_LEAVE = \"employee-on-leave\"\r\nexport const REASON_INCOMPLETE_DEPENDENCY = \"incomplete-dependency\"\r\nexport const REASON_NO_GUIDANCE_PROVIDED = \"no-guidance-provided\"\r\nexport const REASON_RESEARCH_WORK = \"research-work\"\r\nexport const REASON_UNFAMILIAR_TECHNOLOGY = \"unfamiliar-technology\"\r\n\r\n\r\n// Holiday Reason\r\n\r\nexport const HOLIDAY_REASON_EMERGENCY = \"Emergency\"\r\nexport const HOLIDAY_REASON_PUBLIC_HOLIDAY = \"Public Holiday\"\r\nexport const HOLIDAY_REASON_NATIONAL_DAY = \"National Day\"\r\nexport const HOLIDAY_REASON_GAZETTED_HOLIDAYS = \"Gazetted Holidays\"\r\nexport const HOLIDAY_TYPE_LIST_WITH_NAME = [\r\n    {name: HOLIDAY_REASON_EMERGENCY},\r\n    {name: HOLIDAY_REASON_PUBLIC_HOLIDAY},\r\n    {name: HOLIDAY_REASON_NATIONAL_DAY},\r\n    {name: HOLIDAY_REASON_GAZETTED_HOLIDAYS}]\r\n\r\n\r\nexport const HOLIDAY_TYPE_LIST = [\r\n    HOLIDAY_REASON_EMERGENCY,\r\n    HOLIDAY_REASON_PUBLIC_HOLIDAY,\r\n    HOLIDAY_REASON_NATIONAL_DAY,\r\n    HOLIDAY_REASON_GAZETTED_HOLIDAYS\r\n]\r\nexport const REASON_MEDICAL = \"medical\"\r\nexport const REASON_PERSONAL = \"personal\"\r\nexport const REASON_OCCASION = \"occasion\"\r\nexport const REASON_FESTIVAL = \"festival\"\r\n\r\n// reporting final status\r\nexport const REPORT_UNREPORTED = \"un-reported\"\r\nexport const REPORT_COMPLETED = \"completed\"\r\nexport const REPORT_PENDING = \"pending\"\r\n\r\n\r\n// Date Formate and Time Zone\r\nexport const DEFAULT_DATE_FORMAT = 'DD-MM-YYYY'\r\nexport const DATE_FORMAT = 'YYYY-MM-DD'\r\nexport const DATE_TIME_FORMAT = 'YYYY-MM-DD hh:mm A'\r\nexport const DATE_TIME_24HOUR_FORMAT = 'YYYY-MM-DD HH:mm'\r\nexport const DATE_AND_DAY_SHOW_FORMAT = 'dddd YYYY-MMMM-DD '\r\nexport const DATE_DAY_AND_TIME_SHOW_FORMAT = 'dddd YYYY-MMMM-DD  hh:mm '\r\nexport const DATE_TIME_SHOW_FORMAT = 'dddd YYYY-MMMM-DD  hh:mm '\r\nexport const DATE_TIME_SHOW_FORMAT_WITH_AM_PM = 'dddd YYYY-MMMM-DD  hh:mm A'\r\nexport const TIME_FORMAT = 'hh:mm A'\r\nexport const TIME_FORMAT_24_HOURS = 'HH:mm'\r\nexport const DATE_AND_TIME_FORMAT = 'LLL'\r\nexport const DATE_MONTH_FORMAT = 'MMMM Do'\r\nexport const DATE_HALF_WEAK_MONTH_FORMAT = 'ddd'\r\nexport const DATE_DISPLAY_FORMAT = 'DD/MM/YYYY'\r\n\r\n\r\n// Time Zones\r\n// !!! NEVER CHANGE DEFAULT TIME ZONE AS ALL THE DATABASE CALCULATIONS ARE BASED ON THIS !!!\r\n\r\n// !!! NEVER CHANGE DEFAULT TIME ZONE AS ALL THE DATABASE CALCULATIONS ARE BASED ON THIS !!!\r\nexport const UTC_TIMEZONE = 'UTC'\r\nexport const DEFAULT_TIMEZONE = 'UTC'\r\nexport const INDIAN_TIMEZONE = 'Asia/Calcutta'\r\n//Comment Types\r\n\r\nexport const TYPE_CLARIFICATION = 'Need Clarification'\r\nexport const TYPE_BLOCKING = 'Blocking Issue'\r\nexport const TYPE_WAITING = 'Waiting for Changes'\r\nexport const TYPE_REPORT_COMMENT = 'Report Comment'\r\nexport const TYPE_INFORMATION = 'For Information'\r\n\r\n\r\nexport const COMMENT_EMERGENCY = 'Emergency'\r\nexport const COMMENT_CRITICAL = 'Critical'\r\nexport const COMMENT_URGENT = 'Urgent'\r\nexport const COMMENT_REPORTING = 'Reporting'\r\nexport const COMMENT_FYI_ONLY = 'FYI Only'\r\n\r\n//Dialog Names\r\nexport const DIALOG_ESTIMATION_REQUEST_REVIEW = 'dialog-request-review'\r\nexport const RELEASE_DASHBOARD_TAB = 'RELEASE_DASHBOARD_TAB'\r\nexport const RELEASE_WARNINGS_TAB = 'RELEASE_WARNINGS_TAB'\r\nexport const RELEASE_TASK_PLANS_TAB = 'RELEASE_TASK_PLANS_TAB'\r\nexport const RELEASE_REPORT_TAB = 'RELEASE_REPORT_TAB'\r\nexport const RELEASE_PLAN_TAB = 'RELEASE_PLAN_TAB'\r\n\r\n\r\nexport const Months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\nexport const MONTHS_WITH_MONTH_NUMBER = [\r\n    {\r\n        name: \"January\",\r\n        number: 0\r\n    }, {\r\n        name: \"February\",\r\n        number: 1\r\n    }, {\r\n        name: \"March\",\r\n        number: 2\r\n    }, {\r\n        name: \"April\",\r\n        number: 3\r\n    }, {\r\n        name: \"May\",\r\n        number: 4\r\n    }, {\r\n        name: \"June\",\r\n        number: 5\r\n    }, {\r\n        name: \"July\",\r\n        number: 6\r\n    }, {\r\n        name: \"August\",\r\n        number: 7\r\n    }, {\r\n        name: \"September\",\r\n        number: 8\r\n    }, {\r\n        name: \"October\",\r\n        number: 9\r\n    }, {\r\n        name: \"November\",\r\n        number: 10\r\n    }, {\r\n        name: \"December\",\r\n        number: 11\r\n    }]\r\n\r\n// Attendance\r\n\r\nexport const MINIMUM_HALF_DAY_MINUTE = 4 * 60\r\nexport const MINIMUM_FULL_DAY_MINUTE = 7 * 60\r\nexport const HALF_DAY = 'halfDay'\r\nexport const FULL_DAY = 'fullDay'\r\nexport const ARRIVED = 'arrived'\r\nexport const ABSENT = 'absent'\r\n\r\n\r\n// Events\r\nexport const MOMENT_MINUTES = 'm'\r\nexport const MOMENT_HOURS = 'H'\r\nexport const MOMENT_DAYS = 'd'\r\nexport const MOMENT_WEEKS = 'w'\r\nexport const MOMENT_MONTHS = 'M'\r\nexport const MOMENT_QUARTERS = 'Q'\r\nexport const MOMENT_YEARS = 'y'\r\n\r\nexport const EVENT_ONETIME = 'onetime'\r\nexport const EVENT_RECURRING = 'recurring'\r\n\r\nexport const EVENT_SCHEDULED = 'scheduled'\r\nexport const EVENT_RUNNING = 'running'\r\nexport const EVENT_COMPLETED = 'completed'\r\nexport const EVENT_FAILED = 'failed'\r\n\r\nexport const EVENT_INTERVAL = 1000 * 300\r\n\r\nexport const MODE_DEVELOPMENT = \"development\"\r\nexport const MODE_PRODUCTION = \"production\"\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/serverconstants.js\n// module id = Uq5S\n// module chunks = 0","import {connect} from 'react-redux'\r\nimport {CalendarTaskPage} from \"../../components\"\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return (\r\n        {\r\n            taskSelected: (event) => {\r\n                return dispatch(A.getTaskAndProjectDetailsForCalendarFromServer(event._id))\r\n            },\r\n\r\n            showTaskDetailPage: () => {\r\n                return dispatch(A.showComponentHideOthers(COC.CALENDAR_TASK_DETAIL_PAGE))\r\n            },\r\n\r\n            changeViewAndDate: (view, date) => {\r\n                dispatch(A.changeNavigationView(view, date))\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        events: state.calendar.events,\r\n        selectedView: state.calendar.selectedView,\r\n        selectedDate: state.calendar.selectedDate\r\n    }\r\n}\r\n\r\nconst CalendarTaskPageContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CalendarTaskPage)\r\n\r\nexport default CalendarTaskPageContainer\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/CalendarTaskPageContainer.js","import {connect} from 'react-redux'\r\nimport {EstimationFeatures} from \"../../components\"\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    features: state.estimation.features,\r\n    expandedFeatureID: state.estimation.expandedFeatureID,\r\n    expandedTaskID: state.estimation.expandedTaskID,\r\n    filter: state.estimation.filter\r\n})\r\n\r\nconst EstimationFeaturesContainer = connect(\r\n    mapStateToProps\r\n)(EstimationFeatures)\r\n\r\nexport default EstimationFeaturesContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/sections/EstimationFeaturesContainer.js","import * as AC from './actionConsts'\r\n\r\n\r\nexport const selectRepository = (repository) => ({\r\n    type: AC.SELECT_REPOSITORY,\r\n    repository: repository\r\n})\r\n\r\nexport const selectTaskFromRepository = (task) => ({\r\n    type: AC.SELECT_TASK_FROM_REPOSITORY,\r\n    task: task\r\n})\r\n\r\nexport const selectFeatureFromRepository = (feature) => ({\r\n    type: AC.SELECT_FEATURE_FROM_REPOSITORY,\r\n    feature: feature\r\n})\r\n\r\nexport const getRepositoryFromServer = (technologies, type, searchText) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/repositories/search', {\r\n                method: 'post',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\"technologies\": technologies, \"type\": type, \"searchText\": searchText})\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(selectRepository(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/actions/repositoryAction.js","import React, {Component} from 'react'\r\nimport ContentSection from './ContentSection'\r\nimport {\r\n    AttendanceSettingFormContainer,\r\n    CalendarTaskDetailPageContainer,\r\n    CalendarTaskPageContainer,\r\n    ClientListContainer,\r\n    EstimationDetailContainer,\r\n    EstimationListContainer,\r\n    ProjectListContainer,\r\n    ModuleListContainer,\r\n    LeaveListContainer,\r\n    ReleaseListContainer,\r\n    ReleasePlanSectionContainer,\r\n    ReleaseTaskPlanningPageContainer,\r\n    ReportingTaskDetailPageContainer,\r\n    ReportingTaskPageContainer,\r\n    TechnologyListContainer,\r\n    UserProfileFormContainer,\r\n    LeaveDetailPageContainer,\r\n    DashboardSectionContainer,\r\n    TaskReportDetailPageContainer\r\n} from \"../../containers\"\r\nimport * as COC from '../componentConsts'\r\nimport * as A from '../../actions'\r\nimport {\r\n    ClientFormDialog,\r\n    EstimationFeatureDialog,\r\n    EstimationFilterDialog,\r\n    EstimationInitiateDialog,\r\n    EstimationProjectAwardDialog,\r\n    EstimationSuggestFeatureDialog,\r\n    EstimationSuggestTaskDialog,\r\n    EstimationTaskDialog,\r\n    LeaveRequestFormDialog,\r\n    MoveTaskInFeatureFormDialog,\r\n    ProjectFormDialog,\r\n    ModuleFormDialog,\r\n    ReleaseMoveTaskPlanFormDialog,\r\n    ReleaseTaskPlanningFormDialog,\r\n    RepositoryFeatureDetailDialog,\r\n    RepositoryTaskDetailDialog,\r\n    TechnologyFormDialog,\r\n    LeaveApproveDialog,\r\n    LeaveRejectDialog,\r\n    UpdateReleaseDatesFormDialog,\r\n    EstimationAddToReleaseDialog,\r\n    ReleasePlanAddToReleaseDialog,\r\n    TaskShiftDialog,\r\n    ReportTaskDescriptionFormDialog,\r\n    CreateReleaseDialog\r\n\r\n} from \"../index\"\r\nimport {Route} from 'react-router-dom'\r\nimport * as logger from '../../clientLogger'\r\n\r\nclass ContentMain extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        logger.debug(logger.CONTENT_MAIN_LIFECYCLE, 'constructor() called: ', props)\r\n        // All the routes that should be configured based on permissions this user has\r\n        let routes = []\r\n\r\n\r\n        routes.push({\r\n            url: \"/dashboard\",\r\n            render: (props) => {\r\n                return <ContentSection>\r\n                    <DashboardSectionContainer name={COC.DASHBOARD_SECTION} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.DASHBOARD_SECTION))\r\n                        }\r\n                    }/>\r\n                </ContentSection>\r\n            }\r\n        })\r\n\r\n        routes.push({\r\n            url: \"/client\",\r\n            render: (props) => {\r\n                logger.debug(logger.CONTENT_MAIN_RENDER, \"/client: props:\", props)\r\n                return <ContentSection>\r\n                    <ClientFormDialog name={COC.CLIENT_FORM_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.CLIENT_FORM_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <ClientListContainer name={COC.CLIENT_LIST}/>\r\n                </ContentSection>\r\n            }\r\n        })\r\n\r\n        routes.push({\r\n            url: \"/projects\",\r\n            render: (props) => {\r\n                logger.debug(logger.CONTENT_MAIN_RENDER, \"/projects: props:\", props)\r\n                return <ContentSection>\r\n                    <ProjectFormDialog name={COC.PROJECT_FORM_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.PROJECT_FORM_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <ProjectListContainer name={COC.PROJECT_LIST}/>\r\n                </ContentSection>\r\n\r\n\r\n            }\r\n        })\r\n\r\n        routes.push({\r\n            url: \"/modules\",\r\n            render: (props) => {\r\n                logger.debug(logger.CONTENT_MAIN_RENDER, \"/modules: props:\", props)\r\n                return <ContentSection>\r\n                    <ModuleFormDialog name={COC.MODULE_FORM_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.MODULE_FORM_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <ModuleListContainer name={COC.MODULE_LIST}/>\r\n                </ContentSection>\r\n\r\n\r\n            }\r\n        })\r\n        routes.push({\r\n            url: \"/technology\",\r\n            render: (props) => {\r\n\r\n                logger.debug(logger.CONTENT_MAIN_RENDER, \"/technology: props:\", props)\r\n                return <ContentSection>\r\n                    <TechnologyFormDialog name={COC.TECHNOLOGY_FORM_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.TECHNOLOGY_FORM_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <TechnologyListContainer name={COC.TECHNOLOGIES_LIST}/>\r\n                </ContentSection>\r\n\r\n\r\n            }\r\n        })\r\n\r\n        routes.push({\r\n            url: \"/estimation\",\r\n            render: (props) => {\r\n                logger.debug(logger.CONTENT_MAIN_RENDER, \"/estimation: props:\", props)\r\n                return <ContentSection>\r\n                    <EstimationInitiateDialog name={COC.ESTIMATION_INITIATE_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.ESTIMATION_INITIATE_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <EstimationListContainer name={COC.ESTIMATION_LIST}/>\r\n                </ContentSection>\r\n            }\r\n        })\r\n\r\n        routes.push({\r\n            url: \"/estimation-detail\",\r\n            render: (props) => {\r\n                logger.debug(logger.CONTENT_MAIN_RENDER, \"/estimation-detail: props:\", props)\r\n                return <ContentSection>\r\n                    <EstimationInitiateDialog name={COC.ESTIMATION_INITIATE_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.ESTIMATION_INITIATE_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <EstimationTaskDialog name={COC.ESTIMATION_TASK_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.ESTIMATION_TASK_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <EstimationFeatureDialog name={COC.ESTIMATION_FEATURE_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.ESTIMATION_FEATURE_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <MoveTaskInFeatureFormDialog name={COC.MOVE_TASK_TO_FEATURE_FORM_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.MOVE_TASK_TO_FEATURE_FORM_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <EstimationSuggestTaskDialog name={COC.ESTIMATION_SUGGEST_TASK_FORM_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.ESTIMATION_SUGGEST_TASK_FORM_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <EstimationSuggestFeatureDialog name={COC.ESTIMATION_SUGGEST_FEATURE_FORM_DIALOG} show={true}\r\n                                                    close={\r\n                                                        () => {\r\n                                                            this.props.dispatch(A.hideComponent(COC.ESTIMATION_SUGGEST_FEATURE_FORM_DIALOG))\r\n                                                        }\r\n                                                    }/>\r\n                    <RepositoryTaskDetailDialog name={COC.REPOSITORY_TASK_DETAIL_DIALOG} show={true}\r\n                                                close={\r\n                                                    () => {\r\n                                                        this.props.dispatch(A.hideComponent(COC.REPOSITORY_TASK_DETAIL_DIALOG))\r\n                                                    }\r\n                                                }/>\r\n                    <RepositoryFeatureDetailDialog name={COC.REPOSITORY_FEATURE_DETAIL_DIALOG} show={true}\r\n                                                   close={\r\n                                                       () => {\r\n                                                           this.props.dispatch(A.hideComponent(COC.REPOSITORY_FEATURE_DETAIL_DIALOG))\r\n                                                       }\r\n                                                   }/>\r\n                    <EstimationDetailContainer name={COC.ESTIMATION_DETAIL_PAGE}/>\r\n\r\n                    <EstimationProjectAwardDialog name={COC.ESTIMATION_PROJECT_AWARD_FORM_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.ESTIMATION_PROJECT_AWARD_FORM_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <EstimationAddToReleaseDialog name={COC.ESTIMATION_ADD_TO_RELEASE_FORM_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.ESTIMATION_ADD_TO_RELEASE_FORM_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <EstimationFilterDialog name={COC.ESTIMATION_FILTER_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.ESTIMATION_FILTER_DIALOG))\r\n                        }\r\n                    }/>\r\n                </ContentSection>\r\n            }\r\n        })\r\n\r\n        routes.push({\r\n            url: \"/leave\",\r\n            render: (props) => {\r\n                logger.debug(logger.CONTENT_MAIN_RENDER, \"/leave: props:\", props)\r\n                return <ContentSection>\r\n                    <LeaveRequestFormDialog name={COC.LEAVE_REQUEST_FORM_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.LEAVE_REQUEST_FORM_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <LeaveApproveDialog name={COC.LEAVE_APPROVE_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.LEAVE_APPROVE_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <LeaveRejectDialog name={COC.LEAVE_REJECT_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.LEAVE_REJECT_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <LeaveListContainer name={COC.LEAVE_LIST}/>\r\n                </ContentSection>\r\n            }\r\n        })\r\n        routes.push({\r\n            url: \"/leave-detail\",\r\n            render: (props) => {\r\n                logger.debug(logger.CONTENT_MAIN_RENDER, \"/leave: props:\", props)\r\n                return <ContentSection>\r\n                    <LeaveDetailPageContainer name={COC.LEAVE_DETAIL_PAGE}/>\r\n                </ContentSection>\r\n            }\r\n        })\r\n\r\n        routes.push({\r\n            url: \"/attendance\",\r\n            render: (props) => {\r\n                logger.debug(logger.CONTENT_MAIN_RENDER, \"/attendance: props:\", props)\r\n                return <ContentSection>\r\n                    <AttendanceSettingFormContainer name={COC.ATTENDANCE_SETTING_FORM}/>\r\n                </ContentSection>\r\n\r\n            }\r\n        })\r\n\r\n        routes.push({\r\n            url: \"/release\",\r\n            render: (props) => {\r\n                logger.debug(logger.CONTENT_MAIN_RENDER, \"/release: props:\", props)\r\n                return <ContentSection>\r\n                    <ReleaseListContainer name={COC.RELEASE_LIST}/>\r\n                    <CreateReleaseDialog name={COC.CREATE_RELEASE_FORM_DIALOG} show={true}\r\n                                                   close={\r\n                                                       () => {\r\n                                                           this.props.dispatch(A.hideComponent(COC.CREATE_RELEASE_FORM_DIALOG))\r\n                                                       }\r\n                    }/>\r\n                </ContentSection>\r\n\r\n            }\r\n        })\r\n\r\n        routes.push({\r\n            url: \"/release-plan\",\r\n            render: (props) => {\r\n                logger.debug(logger.CONTENT_MAIN_RENDER, \"/release: props:\", props)\r\n                return <ContentSection>\r\n                    <ReleasePlanSectionContainer name={COC.RELEASE_PLAN_LIST}/>\r\n                    <UpdateReleaseDatesFormDialog name={COC.UPDATE_RELEASE_DATES_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.UPDATE_RELEASE_DATES_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <ReleasePlanAddToReleaseDialog name={COC.RELEASE_PLAN_ADD_TO_RELEASE_FORM_DIALOG} show={true}\r\n                                                   close={\r\n                                                       () => {\r\n                                                           this.props.dispatch(A.hideComponent(COC.RELEASE_PLAN_ADD_TO_RELEASE_FORM_DIALOG))\r\n                                                       }\r\n                                                   }/>\r\n                </ContentSection>\r\n\r\n            }\r\n        })\r\n\r\n        routes.push({\r\n            url: \"/release-task-planning\",\r\n            render: (props) => {\r\n                logger.debug(logger.CONTENT_MAIN_RENDER, \"/release: props:\", props)\r\n                return <ContentSection>\r\n                    <ReleaseTaskPlanningPageContainer name={COC.RELEASE_TASK_PLANNING_PAGE}/>\r\n                    <TaskShiftDialog name={COC.TASK_SHIFT_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.TASK_SHIFT_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <ReleaseTaskPlanningFormDialog name={COC.RELEASE_TASK_PLANNING_FORM_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.RELEASE_TASK_PLANNING_FORM_DIALOG))\r\n                        }\r\n                    }/>\r\n                    <ReleaseMoveTaskPlanFormDialog name={COC.MOVE_TASK_PLAN_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.MOVE_TASK_PLAN_DIALOG))\r\n                        }\r\n                    }/>\r\n                </ContentSection>\r\n\r\n            }\r\n        })\r\n        routes.push({\r\n            url: \"/task-report-detail\",\r\n            render: (props) => {\r\n                return <ContentSection>\r\n                    <TaskReportDetailPageContainer name={COC.TASK_REPORT_DETAIL_PAGE}/>\r\n                </ContentSection>\r\n\r\n            }\r\n        })\r\n\r\n        routes.push({\r\n            url: \"/calendar\",\r\n            render: (props) => {\r\n                return <ContentSection>\r\n                    <CalendarTaskPageContainer name={COC.CALENDAR_TASK_PAGE}/>\r\n                </ContentSection>\r\n\r\n            }\r\n        })\r\n        routes.push({\r\n            url: \"/calendar-task-detail\",\r\n            render: (props) => {\r\n                return <ContentSection>\r\n                    <CalendarTaskDetailPageContainer name={COC.CALENDAR_TASK_DETAIL_PAGE}/>\r\n                </ContentSection>\r\n\r\n            }\r\n        })\r\n\r\n        routes.push({\r\n            url: \"/reporting\",\r\n            render: (props) => {\r\n                return <ContentSection>\r\n                    <ReportingTaskPageContainer name={COC.REPORTING_TASK_PAGE}/>\r\n                    <ReportTaskDescriptionFormDialog name={COC.REPORT_TASK_DESCRIPTION_DIALOG} show={true} close={\r\n                        () => {\r\n                            this.props.dispatch(A.hideComponent(COC.REPORT_TASK_DESCRIPTION_DIALOG))\r\n                        }\r\n                    }/>\r\n                </ContentSection>\r\n\r\n            }\r\n        })\r\n\r\n        routes.push({\r\n            url: \"/reporting-task-detail\",\r\n            render: (props) => {\r\n                return <ContentSection>\r\n                    <ReportingTaskDetailPageContainer name={COC.REPORTING_TASK_DETAIL_PAGE}/>\r\n                </ContentSection>\r\n\r\n            }\r\n        })\r\n\r\n        routes.push({\r\n            url: \"/edit-profile\",\r\n            render: (props) => {\r\n                logger.debug(logger.CONTENT_MAIN_RENDER, \"/edit-profile: props:\", props)\r\n                return <ContentSection>\r\n                    <UserProfileFormContainer name={COC.USER_PROFILE_FORM}\r\n                    />\r\n                </ContentSection>\r\n\r\n            }\r\n        })\r\n\r\n        this.state = {\r\n            routes: routes\r\n        }\r\n    }\r\n\r\n    render() {\r\n        logger.debug(logger.CONTENT_MAIN_RENDER, this.props)\r\n        return <div>\r\n            {\r\n                this.state.routes.length > 0 &&\r\n                <Route key={\"app_home_route\"} dispatch={this.props.dispatch} exact path={this.props.match.url}\r\n                       render={this.state.routes[0].render}/>\r\n            }\r\n            {\r\n                this.state.routes.map((route, idx) => <Route key={\"app_route\" + idx}\r\n                                                             dispatch={this.props.dispatch}\r\n                                                             path={this.props.match.url + route.url}\r\n                                                             render={route.render}/>)\r\n\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default ContentMain\n\n\n// WEBPACK FOOTER //\n// ./client/components/sections/ContentMain.js","import {connect} from 'react-redux'\r\nimport {EstimationAddToReleaseForm} from \"../../components\"\r\nimport * as logger from '../../clientLogger'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        return dispatch(A.addToReleaseOnServer(values)).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success(\"Added To Release\")\r\n                // hide dialog\r\n                dispatch(A.hideComponent(COC.ESTIMATION_ADD_TO_RELEASE_FORM_DIALOG))\r\n            } else {\r\n                NotificationManager.error(\"Add To Release Failed\")\r\n            }\r\n        })\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    allAvailableReleases: state.release.allAvailableReleases\r\n})\r\n\r\nconst EstimationAddToReleaseFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EstimationAddToReleaseForm)\r\n\r\nexport default EstimationAddToReleaseFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/EstimationAddToReleaseFormContainer.js","import React from 'react'\r\nimport {EstimationTask} from \"../\"\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nlet EstimationTasks = (props) => {\r\n    // tasks array should not be passed to task as it keeps changes and will cause re-render\r\n    let childProps = Object.assign({}, props, {\r\n        tasks: undefined\r\n    })\r\n\r\n    const {changedByNegotiator, changedByEstimator, permissionRequested, addedFromRepository, addedByNegotiator, addedByEstimator, hasError} = props.filter\r\n    const {expandedTaskID} = props\r\n    return Array.isArray(props.tasks) && props.tasks.map((t, idx) => {\r\n            {\r\n                if (changedByNegotiator && changedByEstimator && permissionRequested && addedFromRepository && addedByNegotiator && addedByEstimator && hasError) {\r\n                    return (expandedTaskID === t._id) ?\r\n                        <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}\r\n                                        expanded={true}/> :\r\n                        <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n                } else {\r\n                    if (changedByNegotiator && t.negotiator && (t.negotiator.changeSuggested || t.negotiator.changedInThisIteration)) {\r\n                        return (expandedTaskID === t._id) ?\r\n                            <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}\r\n                                            expanded={true}/> :\r\n                            <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n                    } else if (changedByEstimator && t.estimator && (t.estimator.changedKeyInformation || t.estimator.changedInThisIteration)) {\r\n                        return (expandedTaskID === t._id) ?\r\n                            <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}\r\n                                            expanded={true}/> :\r\n                            <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n                    } else if (permissionRequested && ((t.estimator && t.estimator.removalRequested) || (t.estimator && t.estimator.changeRequested))) {\r\n                        return (expandedTaskID === t._id) ?\r\n                            <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}\r\n                                            expanded={true}/> :\r\n                            <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n                    } else if (addedFromRepository && t.repo && !t.repo.addedFromThisEstimation) {\r\n                        return (expandedTaskID === t._id) ?\r\n                            <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}\r\n                                            expanded={true}/> :\r\n                            <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n                    } else if (addedByNegotiator && t.addedInThisIteration && t.owner == SC.OWNER_NEGOTIATOR) {\r\n                        return (expandedTaskID === t._id) ?\r\n                            <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}\r\n                                            expanded={true}/> :\r\n                            <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n                    } else if (addedByEstimator && t.addedInThisIteration && t.owner == SC.OWNER_ESTIMATOR) {\r\n                        return (expandedTaskID === t._id) ?\r\n                            <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}\r\n                                            expanded={true}/> :\r\n                            <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n                    } else if (hasError && t.hasError) {\r\n                        return (expandedTaskID === t._id) ?\r\n                            <EstimationTask task={t} index={idx} key={\"task\" + idx} {...childProps}\r\n                                            expanded={true}/> :\r\n                            <EstimationTask task={t} index={idx} key={\"task\" + idx} {...childProps}/>\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    )\r\n}\r\n\r\nexport default EstimationTasks\r\n\r\n\r\n{/*\r\n\r\n        {\r\n\r\n            if (estimator && changeRequested && repository && grantPermission && suggestions && negotiator) {\r\n                // by default show all\r\n                return\r\n            }\r\n            else {\r\n                if (estimator || changeRequested || repository || grantPermission || suggestions || negotiator) {\r\n                    if (loggedInUserRole == SC.ROLE_ESTIMATOR) {\r\n                        //when owner of task is estimator\r\n                        if (estimator) {\r\n                            if (t.owner === SC.OWNER_ESTIMATOR)\r\n                                return (expandedTaskID === t._id) ?\r\n                                    <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}\r\n                                                    expanded=\"true\"/> :\r\n                                    <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n\r\n                        }\r\n\r\n                        //when negotiator ask for suggestion\r\n                        if (suggestions) {\r\n                            if (t.negotiator.changedInThisIteration && t.negotiator.changeSuggested) {\r\n                                return (expandedTaskID === t._id) ?\r\n                                    <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}\r\n                                                    expanded=\"true\"/> :\r\n                                    <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n                            }\r\n                        }\r\n\r\n                        //when negotiator grant the permission\r\n                        if (grantPermission) {\r\n                            if (t.negotiator.changedInThisIteration && t.negotiator.changeGranted) {\r\n                                return (expandedTaskID === t._id) ?\r\n                                    <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}\r\n                                                    expanded=\"true\"/> :\r\n                                    <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n                            }\r\n                        }\r\n\r\n                        //added from repository\r\n                        if (repository) {\r\n                            if (t.repo)\r\n                                if (!t.repo.addedFromThisEstimation) {\r\n                                    return (expandedTaskID === t._id) ?\r\n                                        <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}\r\n                                                        expanded=\"true\"/> :\r\n                                        <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n                                }\r\n                        }\r\n\r\n                    }\r\n                    else {\r\n                        if (loggedInUserRole == SC.ROLE_NEGOTIATOR) {\r\n\r\n                            //task owner is negotiator\r\n                            if (negotiator) {\r\n                                if (t.owner === SC.OWNER_NEGOTIATOR)\r\n                                    return (expandedTaskID === t._id) ?\r\n                                        <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}\r\n                                                        expanded=\"true\"/> :\r\n                                        <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n\r\n                            }\r\n\r\n                            //when estimator asked for change request on task\r\n                            if (changeRequested) {\r\n                                if (t.estimator.changedInThisIteration) {\r\n                                    if (t.estimator.changeRequested || t.estimator.removalRequested) {\r\n                                        return (expandedTaskID === t._id) ?\r\n                                            <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}\r\n                                                            expanded=\"true\"/> :\r\n                                            <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                            if (repository) {\r\n                                if (t.repo)\r\n                                    if (!t.repo.addedFromThisEstimation) {\r\n                                        return (expandedTaskID === t._id) ?\r\n                                            <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}\r\n                                                            expanded=\"true\"/> :\r\n                                            <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n                                    }\r\n                            }\r\n\r\n                            if (suggestions) {\r\n                                if (t.estimator.changedKeyInformation && t.estimator.changedInThisIteration) {\r\n                                    return (expandedTaskID === t._id) ?\r\n                                        <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}\r\n                                                        expanded=\"true\"/> :\r\n                                        <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n                                }\r\n                            }\r\n                        } else {\r\n                            return (expandedTaskID === t._id) ?\r\n                                <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}\r\n                                                expanded=\"true\"/> :\r\n                                <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n                        }\r\n                    }\r\n                } else {\r\n                    // when all are false show all\r\n                    return (expandedTaskID === t._id) ?\r\n                        <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps} expanded=\"true\"/> :\r\n                        <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...childProps}  />\r\n                }\r\n            }\r\n\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n*/\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/components/sections/EstimationTasks.js","import {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {EstimationDetail} from \"../../components\"\r\nimport * as A from '../../actions'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as EC from '../../../server/errorcodes'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {initialize} from 'redux-form'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    showAddTaskForm: (estimation) => {\r\n        dispatch(A.showComponent(COC.ESTIMATION_TASK_DIALOG))\r\n        // initialize\r\n        dispatch(initialize('estimation-task', {\r\n            estimation: {\r\n                _id: estimation._id\r\n            },\r\n            type: SC.TYPE_DEVELOPMENT\r\n        }))\r\n    },\r\n    showAddFeatureForm: (estimation) => {\r\n        dispatch(A.showComponent(COC.ESTIMATION_FEATURE_DIALOG))\r\n        // initialize\r\n        dispatch(initialize('estimation-feature', {\r\n            estimation: {\r\n                _id: estimation._id\r\n            }\r\n        }))\r\n    },\r\n\r\n    showProjectAwardForm: (estimation) => {\r\n        dispatch(A.getUsersWithRoleCategoryFromServer())\r\n        dispatch(A.showComponent(COC.ESTIMATION_PROJECT_AWARD_FORM_DIALOG))\r\n        // initialize\r\n        dispatch(initialize('estimation-project-award', {\r\n            estimation: {\r\n                _id: estimation._id\r\n            }\r\n        }))\r\n    },\r\n\r\n\r\n    sendEstimationRequest: (estimation) => {\r\n        return dispatch(A.requestEstimationOnServer(estimation._id)).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success(\"Estimation requested successfully\")\r\n            } else {\r\n                if (json.code === EC.INVALID_OPERATION)\r\n                    NotificationManager.error(\"Estimation already requested\")\r\n                else\r\n                    NotificationManager.error(\"Unknown error occurred\")\r\n            }\r\n        })\r\n    },\r\n\r\n    sendReviewRequest: (estimation) => {\r\n        return dispatch(A.requestReviewOnServer(estimation._id)).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success(\"Review requested successfully\")\r\n            } else {\r\n                if (json.code === EC.INVALID_OPERATION)\r\n                    NotificationManager.error(\"Review already requested\")\r\n                else\r\n                    NotificationManager.error(\"Unknown error occurred\")\r\n            }\r\n        })\r\n    },\r\n    hasErrorInEstimation: (estimation) => {\r\n        return dispatch(A.checkHasErrorInEstimationOnServer(estimation._id))\r\n    },\r\n\r\n\r\n    sendChangeRequest: (estimation) => {\r\n        return dispatch(A.requestChangeOnServer(estimation._id)).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success(\"Review requested successfully\")\r\n            } else {\r\n                if (json.code === EC.INVALID_OPERATION)\r\n                    NotificationManager.error(\"Change already requested\")\r\n                else\r\n                    NotificationManager.error(\"Unknown error occurred\")\r\n            }\r\n        })\r\n    },\r\n\r\n    onTaskDelete: (taskID) => dispatch(A.estimationTaskDelete(taskID)),\r\n\r\n    estimationFilterForm: () => {\r\n        dispatch(A.showComponent(COC.ESTIMATION_FILTER_DIALOG))\r\n        /*\r\n        dispatch(initialize('Estimation-filter', {\r\n            changedByNegotiator: true,\r\n            changedByEstimator: true,\r\n            permissionRequested: true,\r\n            addedFromRepository: true,\r\n            addedByNegotiator: true,\r\n            addedByEstimator: true,\r\n            hasError: true\r\n        }))\r\n        */\r\n\r\n    },\r\n    editEstimationInitiateForm: (estimation) => {\r\n        dispatch(A.getAllProjectsFromServer())\r\n        dispatch(A.getAllUsersFromServer())\r\n        dispatch(A.getAllTechnologiesFromServer())\r\n        dispatch(A.getAllDevelopmentTypesFromServer())\r\n        dispatch(A.showComponent(COC.ESTIMATION_INITIATE_DIALOG))\r\n        dispatch(initialize('estimation-initiate', estimation))\r\n    },\r\n\r\n    estimationGoBack: (event) => {\r\n        dispatch(A.getAllEstimationsFromServer(SC.ALL, SC.ALL)),\r\n            dispatch(A.showComponentHideOthers(COC.ESTIMATION_LIST))\r\n    },\r\n\r\n    estimationApprove: (estimation) => dispatch(A.approveEstimationOnServer(estimation._id)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success(\"Estimation approved successfully\")\r\n        } else {\r\n            if (json.code === EC.STILL_PENDING_TASKS_AND_FEATURE_ERROR)\r\n                NotificationManager.error(\"Estimation has some pending request\")\r\n            else\r\n                NotificationManager.error(\"Estimation approve failed\")\r\n        }\r\n    }),\r\n\r\n    reopenEstimation: (estimation) => dispatch(A.reopenEstimationOnServer(estimation._id)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success(\"Estimation Reopen successfully\")\r\n        }\r\n        else {\r\n            NotificationManager.error(\"Estimation not reopened\")\r\n        }\r\n    }),\r\n    refreshEstimation: (estimation) => dispatch(A.getEstimationFromServer(estimation._id)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success(\"Estimation refreshed successfully\")\r\n        }\r\n\r\n        return json\r\n    }),\r\n    deleteEstimation: (estimation) => dispatch(A.deleteEstimationOnServer(estimation._id)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success(\"Estimation Deleted successfully\")\r\n        }\r\n        else {\r\n            NotificationManager.error(\"Estimation Deletion failed\")\r\n        }\r\n        return json\r\n    }),\r\n\r\n    showAddToReleaseForm: (estimation) => {\r\n        dispatch(A.getAllReleasesToAddEstimationFromServer(estimation._id))\r\n        dispatch(A.showComponent(COC.ESTIMATION_ADD_TO_RELEASE_FORM_DIALOG))\r\n        // initialize\r\n        dispatch(initialize('estimation-add-to-release', {\r\n            estimation: {\r\n                _id: estimation._id\r\n            }\r\n        }))\r\n    },\r\n\r\n\r\n})\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    userRoleInThisEstimation: state.estimation && state.estimation.selected.loggedInUserRole ? state.estimation.selected.loggedInUserRole : null,\r\n    estimation: state.estimation.selected\r\n\r\n})\r\n\r\nconst EstimationDetailContainer = withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EstimationDetail))\r\n\r\nexport default EstimationDetailContainer\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/EstimationDetailContainer.js","import {connect} from 'react-redux'\r\nimport {RoleForm} from \"../../components\"\r\nimport {change, formValueSelector, getFormSyncErrors, initialize, SubmissionError} from 'redux-form'\r\nimport * as COC from \"../../components/componentConsts\"\r\nimport * as EC from \"../../../server/errorcodes\"\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as A from \"../../actions\"\r\n\r\n\r\nlet selector = formValueSelector('role')\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (formValues) => {\r\n        if (!formValues._id) {\r\n            return dispatch(A.addRoleOnServer(formValues)).then(response => {\r\n                if (response.success) {\r\n                    NotificationManager.success(\"Role added successfully\")\r\n                    /*\r\n                    dispatch(reset('role'))\r\n                    dispatch(reset('role-permission'))\r\n                    */\r\n                    dispatch(A.showComponentHideOthers(COC.ROLE_LIST))\r\n\r\n                } else {\r\n                    NotificationManager.error(\"Role addition failed\")\r\n                    if (response.code && response.code == EC.ALREADY_EXISTS) {\r\n                        // role already exists throw SubmissionError to show appropriate error\r\n                        throw new SubmissionError({name: 'Role already exists'})\r\n                    }\r\n                }\r\n            })\r\n        } else {\r\n            // Role is edited\r\n            return dispatch(A.editRoleOnServer(formValues)).then(response => {\r\n                if (response.success) {\r\n                    NotificationManager.success(\"Role edited successfully\")\r\n                    dispatch(A.showComponentHideOthers(COC.ROLE_LIST))\r\n                } else {\r\n                    NotificationManager.error(\"Role edit failed\")\r\n                    throw new SubmissionError({name: 'Role already exists'})\r\n                }\r\n            })\r\n        }\r\n    },\r\n    showRoleList: () => dispatch(A.showComponentHideOthers(COC.ROLE_LIST)),\r\n    editPermission: (permission, idx) => {\r\n        dispatch(change('role', 'selectedPermission', permission))\r\n        dispatch(initialize('role-permission', permission))\r\n        dispatch(change('role-permission', 'selectedIdx', idx))\r\n\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let syncErrors = getFormSyncErrors('role')(state)\r\n    let permissionsAdded = selector(state, 'permissions')\r\n    let selectedPermission = selector(state, 'selectedPermission')\r\n    let permissionOptions = state.permission.all\r\n    if (Array.isArray(permissionsAdded) && permissionsAdded.length > 0) {\r\n        permissionOptions = permissionOptions.filter(p => permissionsAdded.findIndex(p1 => p1._id == p._id) == -1)\r\n    }\r\n\r\n    if (selectedPermission) {\r\n        // Add this selected permission with permission options this is done while editing permission\r\n        permissionOptions = [selectedPermission, ...permissionOptions]\r\n    }\r\n\r\n    return {\r\n        permissions: state.permission.all,\r\n        permissionOptions,\r\n        permissionFormValues: selector(state, 'permission', 'configurable', 'enabled'),\r\n        permissionsAdded,\r\n        roleSyncErrors: syncErrors,\r\n        selectedPermission\r\n    }\r\n}\r\n\r\nconst RoleFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(RoleForm)\r\n\r\nexport default RoleFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/RoleFormContainer.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport Dialog from 'react-bootstrap-dialog'\r\n\r\nclass AdminRoleList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    editCellButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\"glyphicon glyphicon-pencil pull-left btn btn-custom\" type=\"button\"\r\n                        onClick={() => this.props.editPermissionsOfRole(row)}>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    formatPermission(permissions, row) {\r\n        if (permissions && permissions.length > 0) {\r\n            // Only permissions that are enabled would be visible here\r\n            return permissions.filter(p => p.enabled && p.configurable).map(p => p.name).join(\", \")\r\n        }\r\n        else\r\n            return ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-10\">\r\n                    <Dialog ref={(el) => {\r\n                        this.dialog = el\r\n                    }}/>\r\n                    <BootstrapTable options={this.options} data={this.props.roles} striped={true}\r\n                                    hoveNr={true}>\r\n                        <TableHeaderColumn isKey dataField='_id' hidden={true}>ID</TableHeaderColumn>\r\n\r\n                        <TableHeaderColumn width=\"26%\" dataField=\"name\"\r\n                        >Roles</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"46%\" dataField=\"permissions\" dataSort={true}\r\n                                           dataFormat={this.formatPermission}>Permissions</TableHeaderColumn>\r\n\r\n                        <TableHeaderColumn width=\"8%\" dataField='button' dataFormat={this.editCellButton.bind(this)}><i\r\n                            className=\"fa fa-pencil\"></i></TableHeaderColumn>\r\n\r\n                    </BootstrapTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminRoleList\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/AdminRoleList.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {MoveTaskInFeatureFormContainer} from \"../../containers\"\r\n\r\nconst MoveTaskInFeatureFormDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Move task in feature</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <MoveTaskInFeatureFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default MoveTaskInFeatureFormDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/MoveTaskInFeatureFormDialog.js","import * as AC from \"./actionConsts\"\r\n\r\n\r\nexport const addAllRoles = (roles) => ({\r\n        type: AC.ADD_ROLES,\r\n        roles: roles\r\n})\r\n\r\nexport const addRole = (role) => ({\r\n    type: AC.ADD_ROLE,\r\n    role: role\r\n})\r\n\r\nexport const editRole = (role) => ({\r\n    type: AC.EDIT_ROLE,\r\n    role: role\r\n})\r\n\r\nexport const deleteRole = (role) => ({\r\n    type: AC.DELETE_ROLE,\r\n    role: role\r\n})\r\n\r\nexport const adminEditingRole = (role) => ({\r\n    type: AC.ADMIN_EDITING_ROLE,\r\n    role: role\r\n})\r\n\r\nexport const addRoleOnServer = (formInput) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/roles', {\r\n            method: 'post',\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(formInput)\r\n        }).then(\r\n            response => response.json()\r\n        ).then(json => {\r\n            if (json.success) {\r\n                dispatch(addRole(json.data))\r\n            } else {\r\n            }\r\n            return json\r\n        })\r\n    }\r\n}\r\n\r\nexport const editRoleOnServer = (formInput) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/roles', {\r\n            method: 'put',\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(formInput)\r\n        }).then(\r\n            response => response.json()\r\n        ).then(json => {\r\n            if (json.success) {\r\n                dispatch(editRole(json.data))\r\n            }\r\n            return json\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteRoleOnServer = (roleID) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/roles/' + roleID, {\r\n            method: 'delete',\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(\r\n            response => response.json()\r\n        ).then(json => {\r\n            if (json.success) {\r\n                dispatch(deleteRole(json.data))\r\n            }\r\n            return json\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getAllRolesFromServer = () => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/roles', {\r\n            method: 'get',\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(\r\n            response => response.json()\r\n        ).then(json => {\r\n            if (json.success) {\r\n                dispatch(addAllRoles(json.data))\r\n            }\r\n            return json\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/actions/roleAction.js","import {connect} from 'react-redux'\r\nimport {HolidayList} from \"../../components\"\r\nimport * as A from \"../../actions\"\r\nimport * as COC from \"../../components/componentConsts\";\r\nimport {initialize, SubmissionError} from 'redux-form'\r\nimport {NotificationManager} from \"react-notifications\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    editHoliday: (holiday) => {\r\n        dispatch(A.showComponentHideOthers(COC.HOLIDAY_FORM)),\r\n            dispatch(initialize('holiday-form', holiday))\r\n    },\r\n\r\n    deleteHoliday: (holiday) => dispatch(A.deleteHolidayOnServer(holiday.dateString)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success('Holiday Deleted Successfully')\r\n        } else {\r\n            NotificationManager.error('Holiday Not Deleted!')\r\n            throw new SubmissionError({Holidays: \"Holiday Deletion Failed\"})\r\n        }\r\n    }),\r\n\r\n    showHolidayForm: () => dispatch(A.showComponentHideOthers(COC.HOLIDAY_FORM)),\r\n    getHolidaysOfYear: (year) => {\r\n        dispatch(A.getAllHolidaysOfYearFromServer(year))\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loggedInUser: state.user.loggedIn,\r\n        holidays: state.holiday.all,\r\n        allYears: state.holiday.allYears.sort(function (a, b) {\r\n            a = Number(a)\r\n            b = Number(b)\r\n            return a < b ? -1 : a > b ? 1 : 0\r\n        })\r\n\r\n    }\r\n}\r\n\r\nconst HolidayListContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(HolidayList)\r\n\r\nexport default HolidayListContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/HolidayListContainer.js","// Login\r\nexport {default as LoginForm} from './forms/LoginForm'\r\n\r\n//Roles And Permission\r\nexport {default as PermissionForm} from './forms/PermissionForm'\r\nexport {default as RoleForm} from './forms/RoleForm'\r\nexport {default as PermissionList} from './lists/PermissionList'\r\nexport {default as RoleList} from './lists/RoleList'\r\n\r\n//User\r\nexport {default as UserForm} from './forms/UserForm'\r\nexport {default as UserList} from './lists/UserList'\r\nexport {default as UserProfileForm} from './forms/UserProfileForm'\r\nexport {default as AdminUserList} from './lists/AdminUserList'\r\nexport {default as AdminUserForm} from './forms/AdminUserForm'\r\nexport {default as AdminRoleForm} from './forms/AdminRoleForm'\r\nexport {default as AdminRoleList} from './lists/AdminRoleList'\r\nexport {default as EmployeeSettingForm} from './forms/EmployeeSettingForm'\r\n\r\n\r\n//Common Dialoge\r\nexport {default as ConfirmationDialog} from './dialogs/ConfirmationDialog'\r\n\r\n\r\n// Estimation Forms\r\nexport {default as EstimationInitiateForm} from './forms/EstimationInitiateForm'\r\nexport {default as EstimationTaskForm} from './forms/EstimationTaskForm'\r\nexport {default as EstimationFeatureForm} from './forms/EstimationFeatureForm'\r\nexport {default as MoveTaskInFeatureForm} from './forms/MoveTaskInFeatureForm'\r\nexport {default as EstimationSuggestTaskForm} from './forms/EstimationSuggestTaskForm'\r\nexport {default as EstimationSuggestFeatureForm} from './forms/EstimationSuggestFeatureForm'\r\nexport {default as EstimationProjectAwardForm} from './forms/EstimationProjectAwardForm'\r\nexport {default as EstimationAddToReleaseForm} from './forms/EstimationAddToReleaseForm'\r\nexport {default as ReportTaskDescriptionForm} from './forms/ReportTaskDescriptionForm'\r\n\r\n// Release Forms\r\nexport {default as CreateReleaseForm} from './forms/CreateReleaseForm'\r\n\r\n// Estimation Page\r\n\r\nexport {default as EstimationList} from './lists/EstimationList'\r\nexport {default as EstimationTask} from './sections/EstimationTask'\r\nexport {default as EstimationTasks} from './sections/EstimationTasks'\r\nexport {default as EstimationFeature} from './sections/EstimationFeature'\r\nexport {default as EstimationFeatures} from './sections/EstimationFeatures'\r\nexport {default as DashboardSection} from './sections/DashboardSection'\r\nexport {default as ReleaseDashboardSection} from './sections/ReleaseDashboardSection'\r\nexport {default as EstimationDetail} from './pages/EstimationDetail'\r\n\r\n\r\n//Estimation Dialog and form\r\nexport {default as EstimationTaskDialog} from './dialogs/EstimationTaskDialog'\r\nexport {default as EstimationFeatureDialog} from './dialogs/EstimationFeatureDialog'\r\nexport {default as EstimationInitiateDialog} from './dialogs/EstimationInitiateDialog'\r\nexport {default as MoveTaskInFeatureFormDialog} from './dialogs/MoveTaskInFeatureFormDialog'\r\nexport {default as EstimationSuggestTaskDialog} from './dialogs/EstimationSuggestTaskDialog'\r\nexport {default as EstimationSuggestFeatureDialog} from './dialogs/EstimationSuggestFeatureDialog'\r\nexport {default as EstimationProjectAwardDialog} from './dialogs/EstimationProjectAwardDialog'\r\nexport {default as EstimationAddToReleaseDialog} from './dialogs/EstimationAddToReleaseDialog'\r\nexport {default as AttendenceSettingForm} from './forms/AttendanceSettingForm'\r\nexport {default as EstimationFilterDialog} from './dialogs/EstimationFilterDialog'\r\nexport {default as EstimationFilterForm} from './forms/EstimationFilterForm'\r\nexport {default as ReportTaskDescriptionFormDialog} from './dialogs/ReportTaskDescriptionFormDialog'\r\nexport {default as CreateReleaseDialog} from './dialogs/CreateReleaseDialog'\r\n\r\n\r\n//ProjectDialog\r\nexport {default as ProjectFormDialog} from './dialogs/ProjectFormDialog'\r\nexport {default as ProjectForm} from './forms/ProjectForm'\r\n\r\n//ModuleDialog\r\nexport {default as ModuleFormDialog} from './dialogs/ModuleFormDialog'\r\nexport {default as ModuleForm} from './forms/ModuleForm'\r\n\r\n\r\n//client\r\nexport {default as ClientFormDialog} from './dialogs/ClientFormDialog'\r\nexport {default as ClientList} from './lists/ClientList'\r\nexport {default as ClientForm} from './forms/ClientForm'\r\n\r\n\r\n//leave\r\nexport {default as LeaveRequestFormDialog} from './dialogs/LeaveRequestFormDialog'\r\nexport {default as LeaveSettingForm} from './forms/LeaveSettingForm'\r\nexport {default as LeaveApproveDialog} from './dialogs/LeaveApproveDialog'\r\nexport {default as LeaveRejectDialog} from './dialogs/LeaveRejectDialog'\r\nexport {default as LeaveApprovelResonForm} from './forms/LeaveApprovalReasonForm'\r\nexport {default as LeaveRequestForm} from './forms/LeaveRequestForm'\r\nexport {default as LeaveList} from './lists/LeaveList'\r\nexport {default as LeaveDetailPage} from './pages/LeaveDetailPage'\r\n//Raise Leave\r\n\r\n\r\n//technology RelatedForm\r\nexport {default as TechnologyFormDialog} from './dialogs/TechnologyFormDialog'\r\nexport {default as TechnologyForm} from './forms/TechnologyForm'\r\nexport {default as TechnologyList} from './lists/TechnologyList'\r\n\r\n// Repository page\r\n\r\nexport {default as RepositorySearch} from './pages/RepositorySearch'\r\nexport {default as RepositoryTaskDetailDialog} from './dialogs/RepositoryTaskDetailDialog'\r\nexport {default as  RepositoryTaskDetailPage} from './pages/RepositoryTaskDetailPage'\r\nexport {default as  RepositoryFeatureDetailPage} from './pages/RepositoryFeatureDetailPage'\r\nexport {default as  RepositoryFeatureDetailDialog} from './dialogs/RepositoryFeatureDetailDialog'\r\n\r\n//Release List\r\nexport {default as TaskPlanList} from './lists/TaskPlanList'\r\nexport {default as ReleaseList} from './lists/ReleaseList'\r\nexport {default as ReleasePlanList} from './lists/ReleasePlanList'\r\n\r\n//Release Forms\r\nexport {default as ReleaseDeveloperScheduleForm} from './forms/ReleaseDeveloperScheduleForm'\r\nexport {default as ReleaseTaskPlanningShiftForm} from './forms/ReleaseTaskPlanningShiftForm'\r\nexport {default as ReleaseDeveloperFilterForm} from './forms/ReleaseDeveloperFilterForm'\r\nexport {default as ReleaseTaskPlanningForm} from './forms/ReleaseTaskPlanningForm'\r\nexport {default as ReleaseMoveTaskPlanForm} from './forms/ReleaseMoveTaskPlanForm'\r\nexport {default as UpdateReleaseDatesForm} from './forms/UpdateReleaseDatesForm'\r\nexport {default as ReleasePlanAddToReleaseForm} from './forms/ReleasePlanAddToReleaseForm'\r\nexport {default as ReleaseTaskPlanningFormDialog} from './dialogs/ReleaseTaskPlanningFormDialog'\r\nexport {default as ReleaseMoveTaskPlanFormDialog} from './dialogs/ReleaseMoveTaskPlanFormDialog'\r\nexport {default as UpdateReleaseDatesFormDialog} from './dialogs/UpdateReleaseDatesFormDialog'\r\nexport {default as ReleasePlanAddToReleaseDialog} from './dialogs/ReleasePlanAddToReleaseDialog'\r\nexport {default as TaskShiftDialog} from './dialogs/TaskShiftDialog'\r\n//Release Pages\r\nexport {default as ReleaseDevelopersSchedules} from './pages/ReleaseDevelopersSchedules'\r\nexport {default as ReleaseTaskPlanningPage} from './pages/ReleaseTaskPlanningPage'\r\nexport {default as ReleasePlanSection} from './sections/ReleasePlanSection'\r\n\r\n\r\n//Calendar Page\r\nexport {default as CalendarTaskDetailPage} from './pages/CalendarTaskDetailPage'\r\nexport {default as CalendarTaskPage} from './pages/CalendarTaskPage'\r\n\r\n//Reporting\r\nexport {default as TaskReportDetailPage} from './pages/TaskReportDetailPage'\r\nexport {default as TaskReportList} from './lists/TaskReportList'\r\nexport {default as ReportingCommentForm} from './forms/ReportingCommentForm'\r\nexport {default as ReportingDateNavBar} from './forms/ReportingDateNavBar'\r\nexport {default as ReportingTaskPage} from './pages/ReportingTaskPage'\r\nexport {default as ReportingTaskDetailPage} from './pages/ReportingTaskDetailPage'\r\n\r\n// Warnings\r\nexport {default as WarningList} from './lists/WarningList'\r\n\r\n// Holiday\r\nexport {default as HolidayForm} from './forms/HolidayForm'\r\nexport {default as HolidayList} from './lists/HolidayList'\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/index.js","import {connect} from 'react-redux'\r\nimport * as A from '../../actions'\r\nimport {TaskPlanList} from \"../../components\"\r\nimport * as COC from '../../components/componentConsts'\r\nimport {withRouter} from 'react-router-dom'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    getAllTaskPlans: (release) => dispatch(A.getAllTaskPlansOfThisReleaseFromServer(release._id))\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    taskPlans: state.release.taskPlans\r\n})\r\n\r\nconst TaskPlanListContainer = withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TaskPlanList))\r\n\r\nexport default TaskPlanListContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/TaskPlanListContainer.js","import React from 'react'\r\nimport * as A from \"../../actions\";\r\nimport * as COC from \"../componentConsts\";\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nconst SidebarSideSection = (props) => <div className=\"sidebarSideSection\">\r\n    <ul className=\"list-unstyled\">\r\n        <li><a href=\"\"><i className=\"fa fa-th-large\"></i></a></li>\r\n        <li><a href=\"\"><i className=\"fa fa-bell-o\"></i></a></li>\r\n        <li><a href=\"\"><i className=\"fa fa-clock-o\"></i></a></li>\r\n    </ul>\r\n    <ul className=\"list-unstyled bottom-option\">\r\n        <li><a href=\"\"><i className=\"fa fa-cog\"></i></a></li>\r\n        <li className=\"sub-menu-parent\" tab-index=\"0\"><a href=\"\"><i className=\"fa fa-user-o\"></i></a>\r\n            <ul className=\"sub-menu\">\r\n                <i className=\"down-arrow\"></i>\r\n                <li><Link to=\"/app-home/edit-profile\" onClick={() => {\r\n                    props.dispatch(A.showComponent(COC.USER_PROFILE_FORM))\r\n                }}>Edit Profile</Link></li>\r\n                <li><a href=\"/logout\">Logout</a></li>\r\n\r\n            </ul>\r\n        </li>\r\n    </ul>\r\n</div>\r\n\r\nexport default connect()(SidebarSideSection)\n\n\n// WEBPACK FOOTER //\n// ./client/components/sections/SidebarSideSection.js","import * as AC from './actionConsts'\r\n\r\nexport const addWarnings = (warnings) => ({\r\n    type: AC.ADD_WARNINGS,\r\n    warnings: warnings\r\n})\r\n\r\nexport const getAllWarningsOfThisReleaseFromServer = (warningType, releaseID) => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/warning/release/' + releaseID + '/warningName/' + warningType, {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addWarnings(json.data))\r\n                }\r\n                return json\r\n            })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/actions/warningAction.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport Dialog from 'react-bootstrap-dialog'\r\nimport {CREATE_USER, DELETE_USER, EDIT_USER} from \"../../clientconstants\"\r\n\r\nclass UserList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    editCellButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\"glyphicon glyphicon-pencil pull-left btn btn-custom\" type=\"button\"\r\n                        onClick={() => this.props.editUser(row)}>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    deleteCellButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\"glyphicon glyphicon-trash pull-left btn btn-custom\" type=\"button\"\r\n                        onClick={() => {\r\n                            this.dialog.show({\r\n                                title: \"Delete User\",\r\n                                body: \"\",\r\n                                actions: [\r\n                                    Dialog.DefaultAction('Delete', () => {\r\n                                        this.props.deleteUser(row._id)\r\n                                    }, 'btn-custom'),\r\n                                    Dialog.DefaultAction('Close', () => {\r\n                                        this.dialog.hide()\r\n                                    }, 'btn-custom')\r\n                                ],\r\n                                bsSize: 'small',\r\n                                onHide: (dialog) => {\r\n                                    this.dialog.hide()\r\n                                }\r\n                            })\r\n                        }}>\r\n            </button>\r\n        )\r\n    }\r\n\r\n\r\n    formatRole(roles, row) {\r\n        if (roles && roles.length > 0)\r\n            return roles.map(role => role.name).join(\", \")\r\n        else\r\n            return ''\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-10\">\r\n                    <Dialog ref={(el) => {\r\n                        this.dialog = el\r\n                    }}/>\r\n\r\n                    {this.props.loggedInUser.permissions.includes(CREATE_USER) &&\r\n                    <button className=\"btn btn-default btn-submit addBtn\" onClick={() => this.props.showUserForm()}>\r\n                        Create\r\n                        User\r\n                    </button>\r\n                    }\r\n\r\n                    <BootstrapTable options={this.options} data={this.props.users} striped={true}\r\n                                    hoveNr={true}>\r\n                        <TableHeaderColumn isKey dataField='_id' hidden={true}>ID</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"20%\" dataField=\"firstName\" dataSort={true}>First\r\n                            Name</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"20%\" dataField=\"lastName\">Last Name</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"26%\" dataField=\"roles\"\r\n                                           dataFormat={this.formatRole}>Roles</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"22%\" dataField=\"email\">Email</TableHeaderColumn>\r\n                        {this.props.loggedInUser.permissions.includes(EDIT_USER) &&\r\n                        <TableHeaderColumn width=\"8%\" dataField='button' dataFormat={this.editCellButton.bind(this)}><i\r\n                            className=\"fa fa-pencil\"></i></TableHeaderColumn>}\r\n                        {this.props.loggedInUser.permissions.includes(DELETE_USER) &&\r\n                        <TableHeaderColumn width=\"5%\" dataField='button'\r\n                                           dataFormat={this.deleteCellButton.bind(this)}><i className=\"fa fa-trash\"></i>\r\n                        </TableHeaderColumn>}\r\n\r\n                    </BootstrapTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserList\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/UserList.js","import {connect} from 'react-redux'\r\nimport * as A from '../../actions'\r\nimport {ReleaseList} from \"../../components\"\r\nimport * as COC from '../../components/componentConsts'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    changeReleaseStatus: (status) => dispatch(A.getAllReleasesFromServer(status)),\r\n    releaseSelected: (release) => {\r\n        dispatch(A.getReleaseFromServer(release._id)).then(json => {\r\n            if (json.success) {\r\n                dispatch(A.showComponentHideOthers(COC.RELEASE_PLAN_LIST))\r\n            }\r\n        })\r\n        //dispatch(A.getReleasePlansFromServer(release._id, SC.ALL, SC.ALL))\r\n\r\n\r\n    },\r\n    showCreateReleaseDialog: () => {\r\n        dispatch(A.getAllProjectsFromServer())\r\n        dispatch(A.getAllModulesFromServer())\r\n        dispatch(A.getUsersWithRoleCategoryFromServer())\r\n        dispatch(A.getAllTechnologiesFromServer())\r\n        dispatch(A.getAllDevelopmentTypesFromServer())\r\n        dispatch(A.showComponent(COC.CREATE_RELEASE_FORM_DIALOG))\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    releases: state.release.all\r\n})\r\n\r\nconst ReleaseListContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReleaseList)\r\n\r\nexport default ReleaseListContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/ReleaseListContainer.js","import {connect} from 'react-redux'\r\nimport {EstimationTasks} from \"../../components\"\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    tasks: state.estimation.tasks,\r\n    expandedTaskID: state.estimation.expandedTaskID,\r\n    filter: state.estimation.filter\r\n\r\n})\r\n\r\n\r\nconst EstimationTasksContainer = connect(\r\n    mapStateToProps\r\n)(EstimationTasks)\r\n\r\nexport default EstimationTasksContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/sections/EstimationTasksContainer.js","import {connect} from 'react-redux'\r\nimport {CalendarTaskDetailPage} from \"../../components\"\r\nimport * as A from '../../actions/index'\r\nimport * as COC from '../../components/componentConsts'\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    calenderGoBack: (event) => dispatch(A.showComponentHideOthers(COC.CALENDAR_TASK_PAGE))\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    taskPlan: state.calendar.calendarTaskDetail.taskPlan,\r\n    release: state.calendar.calendarTaskDetail.release,\r\n    releasePlan: state.calendar.calendarTaskDetail.releasePlan,\r\n    taskPlans: state.calendar.calendarTaskDetail.taskPlans,\r\n\r\n})\r\n\r\nconst CalendarTaskDetailPageContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CalendarTaskDetailPage)\r\n\r\nexport default CalendarTaskDetailPageContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/CalendarTaskDetailPageContainer.js","export const ALREADY_EXISTS = 'ALREADY_EXISTS'\r\nexport const NOT_EXISTS = 'NOT_EXISTS'\r\nexport const NOT_FOUND = 'NOT_FOUND'\r\nexport const EMAIL_ALREADY_USED = 'EMAIL_ALREADY_USED'\r\nexport const ACCESS_DENIED = 'ACCESS_DENIED'\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED'\r\nexport const IDENTIFIER_MISSING = 'IDENTIFIER_MISSING'\r\nexport const UNEXPECTED_ERROR = 'UNEXPECTED_ERROR'\r\nexport const PASSWORD_NOT_MATCHED = 'PASSWORD_NOT_MATCHED'\r\nexport const API_VALIDATION_FAILED = 'API_VALIDATION_FAILED'\r\nexport const BAD_ARGUMENTS = 'BAD_ARGUMENTS'\r\nexport const INVALID_USER = 'INVALID_USER'\r\nexport const INVALID_OPERATION = 'INVALID_OPERATION'\r\nexport const UNIMPLEMENTED_SO_FAR = 'UNIMPLEMENTED_SO_FAR'\r\nexport const INVALID_STAGE_OPERATION = 'INVALID_STAGE_OPERATION'\r\n\r\n//task and feature approval error codes\r\nexport const TASK_APPROVAL_ERROR = 'TASK_APPROVAL_ERROR'\r\nexport const FEATURE_APPROVAL_ERROR = 'FEATURE_APPROVAL_ERROR'\r\nexport const FEATURE_DETAIL_ERROR = 'FEATURE_DETAIL_ERROR'\r\nexport const TASK_APPROVAL_FEATURE_ERROR = 'TASK_APPROVAL_FEATURE_ERROR'\r\nexport const MOVE_TASK_IN_FEATURE_ERROR = 'MOVE_TASK_IN_FEATURE_ERROR'\r\nexport const TASK_FROM_REPOSITORY_ERROR = 'TASK_FROM_REPOSITORY_ERROR'\r\nexport const FEATURE_FROM_REPOSITORY_ERROR = 'FEATURE_FROM_REPOSITORY_ERROR'\r\nexport const STILL_PENDING_TASKS_AND_FEATURE_ERROR = 'STILL_PENDING_TASKS_AND_FEATURE_ERROR'\r\nexport const STILL_PENDING_TASKS_ERROR = 'STILL_PENDING_TASKS_ERROR'\r\nexport const NO_TASKS_ERROR = 'NO_TASKS_ERROR'\r\nexport const NO_ESTIMATED_HOUR_ERROR = 'NO_ESTIMATED_HOUR_ERROR'\r\nexport const TIME_OVER_FOR_RE_REPORTING = 'TIME_OVER_FOR_RE_REPORTING'\r\nexport const HAS_UNREPORTED_TASKS = 'HAS_UNREPORTED_TASKS'\r\nexport const REPORT_STATUS_NOT_ALLOWED = 'REPORT_STATUS_NOT_ALLOWED'\r\nexport const TIME_OVER = 'TIME_OVER'\r\nexport const ALREADY_REPORTED = 'ALREADY_REPORTED'\r\nexport const NOT_ALLOWED_TO_ADD_EXTRA_EMPLOYEE = 'NOT_ALLOWED_TO_ADD_EXTRA_EMPLOYEE'\r\nexport const DATA_INCONSISTENT = 'DATA_INCONSISTENT'\r\nexport const SERVER_ERROR = 'SERVER_ERROR'\r\nexport const CANT_PLAN = 'CANT_PLAN'\r\nexport const BEYOND_TODAY = 'BEYOND_TODAY'\r\nexport const DIFFERENT_PROJECT = 'DIFFERENT_PROJECT'\r\nexport const CANT_REOPEN = 'CANT_REOPEN'\r\nexport const INSUFFICIENT_WORKING_DAYS = 'INSUFFICIENT_WORKING_DAYS'\r\n\r\n\r\n// HTML CODES\r\nexport const HTTP_OK = 200\r\nexport const HTTP_CREATED = 201\r\nexport const HTTP_ACCEPTED = 202\r\nexport const HTTP_NO_CONTENT = 204\r\n\r\nexport const HTTP_BAD_REQUEST = 400\r\nexport const HTTP_UNAUTHORIZED = 401\r\nexport const HTTP_FORBIDDEN = 403\r\nexport const HTTP_NOT_FOUND = 404\r\n\r\nexport const HTTP_SERVER_ERROR = 500\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/errorcodes.js\n// module id = c5MU\n// module chunks = 0","import {required} from \"./validation\"\r\nimport React from 'react'\r\nimport {renderSelect} from \"./fields\"\r\nimport {Field, reduxForm} from 'redux-form'\r\n\r\n\r\nlet MoveTaskInFeatureForm = (props) => {\r\n    const {handleSubmit, pristine, submitting, reset, features} = props\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-9\">\r\n\r\n                <Field name=\"_id\" component=\"input\" type=\"hidden\"/>\r\n                <Field name=\"featureID\" component={renderSelect} label={\"Feature :\"} options={features}\r\n                       valueField=\"_id\"\r\n                       validate={[required]}\r\n                       displayField=\"estimator.name\"\r\n                       optionalDisplayField=\"negotiator.name\"\r\n                />\r\n\r\n                <button type=\"submit\" disabled={pristine || submitting} className=\"btn customBtn moveInBtnSpace\">\r\n                    Submit\r\n                </button>\r\n                <button type=\"button\" disabled={pristine || submitting} className=\"btn customBtn\" onClick={reset}>\r\n                    Reset\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nMoveTaskInFeatureForm = reduxForm({\r\n    form: 'move-task-in-feature'\r\n})(MoveTaskInFeatureForm)\r\n\r\nexport default MoveTaskInFeatureForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/MoveTaskInFeatureForm.js","import {connect} from 'react-redux'\r\nimport {ReleasePlanAddToReleaseForm} from \"../../components\"\r\nimport * as logger from '../../clientLogger'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        console.log(\"values\",values)\r\n        if (values.iteration_type === SC.ITERATION_TYPE_PLANNED) {\r\n            values.estimatedHours = Number(values.estimatedHours)\r\n            values.estimatedBilledHours = parseInt(values.estimatedBilledHours)\r\n            dispatch(A.releasePlanPlannedAddToReleaseOnServer(values)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success(\"Added  Planned To ReleasePlan\")\r\n                    // hide dialog\r\n                    dispatch(A.hideComponent(COC.RELEASE_PLAN_ADD_TO_RELEASE_FORM_DIALOG))\r\n                }\r\n                dispatch(A.getReleasePlansFromServer(values.release._id, SC.ALL, SC.ALL))\r\n            })\r\n        }\r\n        else {\r\n            dispatch(A.releasePlanUnplannedAddToReleaseOnServer(values)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success(\"Added Unplanned To Release\")\r\n                    // hide dialog\r\n                    dispatch(A.hideComponent(COC.RELEASE_PLAN_ADD_TO_RELEASE_FORM_DIALOG))\r\n                }\r\n                dispatch(A.getReleasePlansFromServer(values.release._id, SC.ALL, SC.ALL))\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    release: state.release.selectedRelease,\r\n    releasePlans: state.release.releasePlans,\r\n    iterations: SC.ITERATION_TYPE_LIST_WITH_NAME,\r\n})\r\n\r\nconst ReleasePlanAddToReleaseFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReleasePlanAddToReleaseForm)\r\n\r\nexport default ReleasePlanAddToReleaseFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/ReleasePlanAddToReleaseFormContainer.js","import * as AC from \"./actionConsts\"\r\n\r\n\r\nexport const addAllYears = (years) => ({\r\n    type: AC.ADD_ALL_YEARS,\r\n    years: years\r\n})\r\n\r\nexport const deleteHoliday = (holidayDateString) => ({\r\n    type: AC.DELETE_HOLIDAY,\r\n    holidayDateString: holidayDateString\r\n})\r\n\r\nexport const addAllHolidays = (holidays) => ({\r\n    type: AC.ADD_HOLIDAYS,\r\n    holidays: holidays\r\n})\r\n\r\nexport const addHoliday = (holiday) => ({\r\n    type: AC.ADD_HOLIDAY,\r\n    holiday: holiday\r\n})\r\n\r\nexport const updateHoliday = (holiday) => ({\r\n    type: AC.UPDATE_HOLIDAY,\r\n    holiday: holiday\r\n})\r\n\r\n\r\nexport const getAllHolidayYearsFromServer = () => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/holiday/years',\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(addAllYears(json.data))\r\n\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const getAllHolidaysOfYearFromServer = (year) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/holiday/holidays/' + year + '/year',\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(addAllHolidays(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const addHolidayOnServer = (formInput) => {\r\n    console.log(\"inside action\", formInput)\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/holiday/',\r\n            {\r\n                method: \"post\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(getAllHolidaysOfYearFromServer(json.data.calendarYear))\r\n                    dispatch(getAllHolidayYearsFromServer())\r\n                }\r\n                return json\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteHolidayOnServer = (holidayDateString) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/holiday/' + holidayDateString,\r\n            {\r\n                method: \"delete\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    return dispatch(getAllHolidaysOfYearFromServer(json.data.calendarYear))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const updateHolidayOnServer = (formInput) => {\r\n    console.log(\"formInput\", formInput)\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/holiday',\r\n            {\r\n                method: \"put\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(getAllHolidaysOfYearFromServer(json.data.calendarYear))\r\n                    if (json.data.yearChange) {\r\n                        dispatch(getAllHolidayYearsFromServer())\r\n                    }\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/actions/holidayAction.js","import {connect} from 'react-redux'\r\nimport {ReleaseTaskPlanningPage} from '../../components'\r\nimport {initialize} from 'redux-form'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as EC from '../../../server/errorcodes'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n\r\n    showTaskPlanningCreationForm: (releasePlan, workCalendarEmployeeID) => {\r\n        dispatch(initialize(\"task-planning\", {\r\n            release: releasePlan.release,\r\n            task: releasePlan.task,\r\n            releasePlan: {\r\n                _id: releasePlan._id,\r\n            },\r\n            projectUsersOnly: true,\r\n            workCalendarEmployeeID\r\n\r\n        }))\r\n        dispatch(A.showComponent(COC.RELEASE_TASK_PLANNING_FORM_DIALOG))\r\n    },\r\n\r\n    planTask: (taskPlanning) => dispatch(A.addTaskPlanningOnServer(taskPlanning)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success(\"Task Planning Added\")\r\n        }\r\n        else\r\n            NotificationManager.error(json.message)\r\n    }),\r\n\r\n    deleteTaskPlanningRow: (plan, workCalendarEmployeeID) => dispatch(A.deleteTaskPlanningFromServer(plan._id)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success(\"Task Planning Deleted\")\r\n            if (workCalendarEmployeeID && plan.employee._id.toString() == workCalendarEmployeeID.toString())\r\n                dispatch(A.getEmployeeWorkCalendarFromServer(workCalendarEmployeeID))\r\n        }\r\n        else {\r\n            NotificationManager.error(json.message)\r\n        }\r\n    }),\r\n    reopenTask: (task) => {\r\n        dispatch(A.reopenTaskPlanOnServer(task._id))\r\n\r\n    },\r\n    openMoveTaskPlanForm: (releasePlan, workCalendarEmployeeID) => {\r\n        releasePlan.workCalendarEmployeeID = workCalendarEmployeeID\r\n        dispatch(initialize(\"move-task-planning\", releasePlan))\r\n        dispatch(A.showComponent(COC.MOVE_TASK_PLAN_DIALOG))\r\n\r\n    },\r\n    planTaskFilter: (taskPlanFilter) => dispatch(A.addTaskPlanningFiltersOnServer(taskPlanFilter)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success(\"Task Planning Added\")\r\n        }\r\n        else NotificationManager.error(\"Task Planning Failed\")\r\n    }),\r\n\r\n    ReleaseTaskGoBack: (release) => {\r\n        dispatch(A.getReleaseFromServer(release._id)).then(json => {\r\n            if (json.success) {\r\n                dispatch(A.showComponentHideOthers(COC.RELEASE_PLAN_LIST))\r\n            }\r\n        })\r\n        dispatch(A.getReleasePlansFromServer(release._id, SC.ALL, SC.ALL))\r\n    },\r\n    expandDescription: (flag) => dispatch(A.expandDescription(flag)),\r\n    refreshSelectedTaskPlan: (releasePlan, role) => {\r\n        dispatch(A.getReleasePlanDetailsFromServer(releasePlan._id)).then(json => {\r\n            if (json.success) {\r\n                dispatch(A.showComponentHideOthers(COC.RELEASE_TASK_PLANNING_PAGE))\r\n            }\r\n        })\r\n        dispatch(A.getAllTaskPlannedFromServer(releasePlan._id))\r\n        if (role === SC.ROLE_MANAGER) {\r\n            // get all developers from user list when user role in this release is manager\r\n            dispatch(A.getAllDeveloperFromServer())\r\n        } else if (role === SC.ROLE_LEADER) {\r\n            // get project developers from user list when user role in this release is leader\r\n            dispatch(A.getReleaseDevelopersFromServer(releasePlan._id))\r\n        }\r\n    },\r\n})\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    release: state.release.selectedRelease,\r\n    releasePlan: state.release.selectedReleasePlan,\r\n    taskPlans: state.release.taskPlans,\r\n    developerPlans: state.release.developerPlans,\r\n    expanded: state.release.expanded,\r\n    workCalendarEmployeeID: state.employee.workCalendar.employees && state.employee.workCalendar.employees.length ? state.employee.workCalendar.employees[0]._id : undefined\r\n})\r\n\r\nconst ReleaseTaskPlanningPageContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReleaseTaskPlanningPage)\r\n\r\nexport default ReleaseTaskPlanningPageContainer\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/ReleaseTaskPlanningPageContainer.js","import {connect} from 'react-redux'\r\nimport {ReportingTaskDetailPage} from '../../components/index'\r\nimport * as A from '../../actions/index'\r\nimport * as COC from '../../components/componentConsts'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport * as U from '../../../server/utils'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    ReportingGoBack: (event) => {\r\n        dispatch(A.getReportingTasksForDate(SC.ALL, U.getNowStringInIndia(), SC.ITERATION_TYPE_PLANNED, SC.ALL))\r\n        dispatch(A.setReleaseID(SC.ALL))\r\n        dispatch(A.setReportDate(U.getNowStringInIndia()))\r\n        dispatch(A.setReportedStatus(SC.ALL))\r\n        dispatch(A.showComponentHideOthers(COC.REPORTING_TASK_PAGE))\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    taskPlan: state.report.reportTaskDetail.taskPlan,\r\n    release: state.report.reportTaskDetail.release,\r\n    releasePlan: state.report.reportTaskDetail.releasePlan,\r\n    taskPlans: state.report.reportTaskDetail.taskPlans\r\n})\r\n\r\nconst ReportingTaskDetailPageContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReportingTaskDetailPage)\r\n\r\nexport default ReportingTaskDetailPageContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/ReportingTaskDetailPageContainer.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport moment from 'moment'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nclass ReleaseList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.options = {\r\n            onRowClick: this.onRowClick.bind(this)\r\n        }\r\n    }\r\n\r\n    onRowClick(row) {\r\n        this.props.history.push(\"/app-home/release-plan\")\r\n        this.props.releaseSelected(row)\r\n\r\n    }\r\n\r\n    formatCreatedDate(row) {\r\n        if (row) {\r\n            return moment(row).format(\"DD-MM-YYYY\")\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatProjectName(project, row, enumObject, rowIndex) {\r\n        let releaseName = \"\"\r\n        if (project && project.name)\r\n            releaseName = project.name\r\n        if (row && row.name)\r\n            releaseName = releaseName + ' (' + row.name + ')'\r\n        return releaseName\r\n    }\r\n\r\n    formatManager(row) {\r\n        if (row) {\r\n            return row.firstName + ' ' + row.lastName\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatLeader(row) {\r\n        if (row) {\r\n            return row.firstName + ' ' + row.lastName\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatEstimatedHours(column, row) {\r\n        if (row.plannedStats) {\r\n            return row.plannedStats.sumEstimatedHours\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatReportedHours(column, row) {\r\n        if (row.plannedStats) {\r\n            return row.plannedStats.sumReportedHours\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatProgress(column, row) {\r\n        if (row.plannedStats) {\r\n            return row.plannedStats.progress + '%'\r\n        }\r\n        return '0%'\r\n    }\r\n\r\n    formatStartDate(column, row) {\r\n        if (row.iterations[0]) {\r\n            return moment(row.iterations[0].devStartDate).format(\"DD-MM-YYYY\")\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatEndDate(column, row) {\r\n        if (row.iterations[0]) {\r\n            return moment(row.iterations[0].devEndDate).format(\"DD-MM-YYYY\")\r\n        }\r\n        return ''\r\n    }\r\n\r\n\r\n    formatReleaseDate(column, row) {\r\n        if (row.iterations[0]) {\r\n            return moment(row.iterations[0].clientReleaseDate).format(\"DD-MM-YYYY\")\r\n        }\r\n        return ''\r\n    }\r\n\r\n    render() {\r\n        const {releases} = this.props\r\n        return ([\r\n                <div key={\"release-search\"} className=\"col-md-12 release-options\">\r\n                    <button type=\"button\" className=\"col-md-2 btn customBtn\" onClick={\r\n                        () => {\r\n                            this.props.showCreateReleaseDialog()\r\n                        }}>Create Release\r\n                    </button>\r\n                    <div className=\"search-btn-container\">\r\n                        <select className=\"col-md-4 form-control\" title=\"Select Status\"\r\n                                onChange={(status) =>\r\n                                    this.props.changeReleaseStatus(status.target.value)\r\n                                }>\r\n                            <option value={SC.ALL}>All Status</option>\r\n\r\n                            <option value={SC.STATUS_PLAN_REQUESTED}>{SC.STATUS_PLAN_REQUESTED}</option>\r\n                            <option value={SC.STATUS_DEV_IN_PROGRESS}>{SC.STATUS_DEV_IN_PROGRESS}</option>\r\n                            <option value={SC.STATUS_DEV_COMPLETED}>{SC.STATUS_DEV_COMPLETED}</option>\r\n                            <option value={SC.STATUS_RELEASED}>{SC.STATUS_RELEASED}</option>\r\n                            <option value={SC.STATUS_ISSUE_FIXING}>{SC.STATUS_ISSUE_FIXING}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>,\r\n                <div key={\"release-table\"} className=\"col-md-12\">\r\n                    <div className=\"estimation release-plan-table\">\r\n                        <BootstrapTable options={this.options} data={releases}\r\n                                        multiColumnSearch={true}\r\n                                        search={false}\r\n                                        striped={true}\r\n                                        hover={true}>\r\n                            <TableHeaderColumn columnTitle isKey dataField='_id' hidden={true}>\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn width=\"12%\" dataField='project'\r\n                                               dataFormat={this.formatProjectName.bind(this)} dataAlign={\"center\"}>\r\n                                Project\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='manager'\r\n                                               dataFormat={this.formatManager.bind(this)} dataAlign={\"center\"}>\r\n                                Manager\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='leader'\r\n                                               dataFormat={this.formatLeader.bind(this)} dataAlign={\"center\"}>\r\n                                Leader\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='iterations[0]'\r\n                                               dataFormat={this.formatEstimatedHours.bind(this)} dataAlign={\"center\"}>\r\n                                Estimated Hours\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='iterations[0]'\r\n                                               dataFormat={this.formatReportedHours.bind(this)} dataAlign={\"center\"}>\r\n                                Reported Hours\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='iterations[0]'\r\n                                               dataFormat={this.formatProgress.bind(this)} dataAlign={\"center\"}>\r\n                                Progress\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='iterations[0]'\r\n                                               dataFormat={this.formatStartDate.bind(this)} dataAlign={\"center\"}>\r\n                                Start Date\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='iterations[0]'\r\n                                               dataFormat={this.formatEndDate.bind(this)} dataAlign={\"center\"}>\r\n                                End Date\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='iterations[0]'\r\n                                               dataFormat={this.formatReleaseDate.bind(this)} dataAlign={\"center\"}>\r\n                                Release Date\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn columnTitle dataField='status' dataAlign={\"center\"}>\r\n                                Status\r\n                            </TableHeaderColumn>\r\n                        </BootstrapTable>\r\n                    </div>\r\n                </div>]\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ReleaseList)\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/ReleaseList.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport {withRouter} from 'react-router-dom'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport * as U from '../../../server/utils'\r\nimport moment from 'moment'\r\nimport {\r\n    TaskPlanListContainer,\r\n    ReleasePlanListContainer,\r\n    WarningListContainer,\r\n    TaskReportListContainer,\r\n    ReleaseDashboardSectionContainer\r\n} from '../../containers'\r\n\r\nclass ReleasePlanSection extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.options = {\r\n            onRowClick: this.onRowClick.bind(this)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"ReleasePlanSection-> componentDidMount() called\")\r\n    }\r\n\r\n    onRowClick(row) {\r\n        this.props.history.push(\"/app-home/release-task-planning\")\r\n        this.props.releasePlanSelected(row, this.props.release.rolesInThisRelease)\r\n    }\r\n\r\n    render() {\r\n        let team = 0\r\n        const {release, releasePlans, loggedInUser, selectedTab} = this.props\r\n\r\n        return (\r\n\r\n            <div key=\"estimation_list\" className=\"clearfix\">\r\n\r\n                <div className=\"col-md-12 releaseHeader\">\r\n                    <div className=\" col-md-1 backarrow\" title=\"Go Back\">\r\n                        <button className=\"btn-link\" onClick={() => {\r\n                            this.props.history.push(\"/app-home/release\")\r\n                            this.props.ReleaseProjectGoBack(release)\r\n                        }}><i className=\"glyphicon glyphicon-arrow-left\"></i></button>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                        <div className=\"releaseTitle\">\r\n                            <span\r\n                                title={release && release.project && release.project.name ? release.project.name : ''}>Project Name</span>\r\n                        </div>\r\n                        <div className=\"releasecontent\">\r\n                            <p>{release && release.project && release.project.name ? release.project.name + ' (' + release.name + ')' : ''}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className={loggedInUser && U.userHasRole(loggedInUser, SC.ROLE_MANAGER) ? \"col-md-1\" : \"col-md-2\"}>\r\n                        <div className=\"releaseTitle\">\r\n                            <span\r\n                                title={release && release.devStartDate ? moment(release.devStartDate).format(\"DD-MM-YYYY\") : ''}>Start Date</span>\r\n                        </div>\r\n                        <div className=\"releasecontent\">\r\n                            <p>{release && release && release.devStartDate ? moment(release.devStartDate).format(\"DD-MM-YYYY\") : ''}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className={loggedInUser && U.userHasRole(loggedInUser, SC.ROLE_MANAGER) ? \"col-md-1\" : \"col-md-2\"}>\r\n                        <div className=\"releaseTitle\">\r\n                            <span\r\n                                title={release && release.devEndDate ? moment(release.devEndDate).format(\"DD-MM-YYYY\") : ''}>End Date</span>\r\n                        </div>\r\n                        <div className=\"releasecontent\">\r\n                            <p>{release && release.devEndDate ? moment(release.devEndDate).format(\"DD-MM-YYYY\") : ''}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <div className=\"releaseTitle\">\r\n                            <span\r\n                                title={release && release.clientReleaseDate ? moment(release.clientReleaseDate).format(\"DD-MM-YYYY\") : ''}>Release Date</span>\r\n                        </div>\r\n                        <div className=\"releasecontent\">\r\n                            <p>{release && release.clientReleaseDate ? moment(release.clientReleaseDate).format(\"DD-MM-YYYY\") : ''}</p>\r\n                        </div>\r\n                    </div>\r\n                    {loggedInUser && loggedInUser._id && release.manager._id && loggedInUser._id.toString() === release.manager._id.toString() ?\r\n                        <div className=\"col-md-2\">\r\n                            <button className=\" btn btn-custom customBtn \" type=\"button\"\r\n                                    onClick={() => {\r\n                                        this.props.openUpdateReleaseDatesForm(release)\r\n                                    }}>Update Dates\r\n                            </button>\r\n                        </div> : null\r\n                    }\r\n\r\n                    <div className=\" col-md-2 releasefileoption\">\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><a href=\"#\"> <i className=\"fa fa-file-pdf-o\"></i></a></li>\r\n                            <li><a href=\"#\"> <i className=\"fa fa-file-word-o\"></i></a></li>\r\n                            <li><a href=\"#\"> <i className=\" fa fa-file-excel-o\"></i></a></li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"col-md-2 pad \">\r\n                            <div className=\"releaseTeamManager\"><span>Manager</span>\r\n                            </div>\r\n                            <div className=\"estimationuser tooltip\"><span>M</span>\r\n                                <p className=\"tooltiptext\">{release && release.manager && release.manager.firstName ? release.manager.firstName : ''}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-2 pad \">\r\n                            <div className=\"releaseTeamLeader\"><span> Leader</span>\r\n                            </div>\r\n                            <div className=\"estimationuser tooltip\"><span>L</span>\r\n                                <p className=\"tooltiptext\">{release && release.leader && release.leader.firstName ? release.leader.firstName : ''}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-5 pad \">\r\n                            <div className=\"releaseTeam\"><span>Team</span>\r\n                            </div>\r\n                            {\r\n                                release && release.team && Array.isArray(release.team) && release.team.length ? release.team.map((teamMember, index) =>\r\n                                    <div key={\"teamMember\" + index} className=\"estimationuser tooltip\">\r\n                                        <span>T{index + 1}</span>\r\n                                        <p className=\"tooltiptext\">{teamMember ? teamMember.name : ''}</p>\r\n                                    </div>) : <span></span>\r\n                            }\r\n\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"col-md-6  releaseClock  releaseProjectPlannedHours\">\r\n                                <i className=\"fa fa-clock-o \"\r\n                                   title=\"Estimated Hours\"></i><b>{release.plannedStats ? release.plannedStats.sumEstimatedHours : ''}\r\n                                Hrs</b>\r\n                            </div>\r\n                            <div className=\"col-md-6  releaseClock releasePlannedHrs releaseProjectPlannedHours\">\r\n                                <i className=\"fa fa-clock-o \"\r\n                                   title=\"Planned Hours\"></i><b>{release.plannedStats ? release.plannedStats.sumPlannedHours : ''}\r\n                                Hrs</b>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-md-12 pad\">\r\n                        <div className=\"container pad\">\r\n                            <ul className=\"nav nav-tabs\">\r\n                                <li className={selectedTab === SC.RELEASE_DASHBOARD_TAB ? 'active' : ''}>\r\n                                    <a\r\n                                        data-toggle=\"tab\"\r\n                                        className={selectedTab === SC.RELEASE_DASHBOARD_TAB ? \"btn  btn-link btn-size\" : \"btn  btn-link btn-size\"}\r\n                                        onClick={() => {\r\n                                            this.props.tabSelected(SC.RELEASE_DASHBOARD_TAB)\r\n                                        }}>Dashboard\r\n                                    </a>\r\n                                </li>\r\n                                <li className={selectedTab === SC.RELEASE_PLAN_TAB ? 'active' : ''}>\r\n                                    <a\r\n                                        data-toggle=\"tab\"\r\n                                        className={selectedTab === SC.RELEASE_PLAN_TAB ? \"btn  btn-link btn-size\" : \"btn  btn-link btn-size\"}\r\n                                        onClick={() => {\r\n                                            this.props.tabSelected(SC.RELEASE_PLAN_TAB)\r\n                                        }}>Release Plans\r\n                                    </a>\r\n                                </li>\r\n                                <li className={selectedTab === SC.RELEASE_WARNINGS_TAB ? 'active' : ''}>\r\n                                    <a\r\n                                        data-toggle=\"tab\"\r\n                                        className={selectedTab === SC.RELEASE_WARNINGS_TAB ? \"btn  btn-link btn-size\" : \"btn  btn-link btn-size\"}\r\n                                        onClick={() => {\r\n                                            this.props.tabSelected(SC.RELEASE_WARNINGS_TAB)\r\n                                        }}>Warnings\r\n                                    </a>\r\n                                </li>\r\n                                <li className={selectedTab === SC.RELEASE_TASK_PLANS_TAB ? 'active' : ''}>\r\n                                    <a\r\n                                        data-toggle=\"tab\"\r\n                                        className={selectedTab === SC.RELEASE_TASK_PLANS_TAB ? \"btn btn-link btn-size \" : \"btn btn-link btn-size \"}\r\n                                        onClick={() => {\r\n                                            this.props.tabSelected(SC.RELEASE_TASK_PLANS_TAB)\r\n                                        }}>Task Plans\r\n                                    </a>\r\n                                </li>\r\n                                <li className={selectedTab === SC.RELEASE_REPORT_TAB ? 'active' : ''}>\r\n                                    <a\r\n                                        data-toggle=\"tab\"\r\n                                        className={selectedTab === SC.RELEASE_REPORT_TAB ? \"btn btn-link btn-size \" : \"btn btn-link btn-size \"}\r\n                                        onClick={() => {\r\n                                            this.props.tabSelected(SC.RELEASE_REPORT_TAB)\r\n                                        }}>Task Report\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {selectedTab === SC.RELEASE_DASHBOARD_TAB && <ReleaseDashboardSectionContainer release={release}/>}\r\n                {selectedTab === SC.RELEASE_PLAN_TAB && <ReleasePlanListContainer release={release}/>}\r\n                {selectedTab === SC.RELEASE_WARNINGS_TAB && <WarningListContainer release={release}/>}\r\n                {selectedTab === SC.RELEASE_TASK_PLANS_TAB && <TaskPlanListContainer release={release}/>}\r\n                {selectedTab === SC.RELEASE_REPORT_TAB && <TaskReportListContainer release={release}/>}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ReleasePlanSection)\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/sections/ReleasePlanSection.js","import React, {Component} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {renderText} from './fields'\r\nimport {required} from \"./validation\"\r\nimport * as logger from '../../clientLogger'\r\n\r\nlet ClientForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting} = props;\r\n    logger.debug(logger.CLIENT_FORM_RENDER, props)\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <Field name=\"name\" placeholder={\"Name of client\"} component={renderText}\r\n                       label={\"Client Name:\"} validate={[required]}/>\r\n\r\n                <button type=\"submit\" disabled={pristine || submitting} className=\"btn customBtn\">Submit</button>\r\n            </div>\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nClientForm = reduxForm({\r\n    form: 'client'\r\n})(ClientForm)\r\n\r\nexport default ClientForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/ClientForm.js","import React from 'react'\r\nimport {Timeline, TimelineEvent} from 'react-event-timeline'\r\nimport momentTZ from 'moment-timezone'\r\nimport moment from 'moment'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {ReportingCommentFormContainer} from \"../../containers\";\r\nimport {BootstrapTable, TableHeaderColumn} from \"react-bootstrap-table\";\r\n\r\nclass TaskReportDetailPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.commentListPageOptions = {\r\n            sizePerPageList: [{\r\n                text: '4', value: 4\r\n            }],\r\n            sizePerPage: 4,  // which size per page you want to locate as default\r\n        }\r\n\r\n        this.taskListPageOptions = {\r\n            sizePerPageList: [{\r\n                text: '4', value: 4\r\n            }],\r\n            sizePerPage: 4,  // which size per page you want to locate as default\r\n        }\r\n    }\r\n\r\n    formatDeveloperName(employee) {\r\n        if (employee)\r\n            return employee.name\r\n        return ''\r\n    }\r\n\r\n    formatPlanDate(date) {\r\n        console.log('date found as ', date)\r\n        return momentTZ(date).utc().format('DD MMM,YY')\r\n    }\r\n\r\n    formatReportStatus(report) {\r\n\r\n        if (report && report.status)\r\n            return report.status\r\n        return ''\r\n    }\r\n\r\n    formatTaskDescription(task) {\r\n\r\n        if (task)\r\n            return task.description\r\n        return ''\r\n    }\r\n\r\n    assignedTasksRowClass(row) {\r\n        return row._id.toString() == this.props.taskPlan._id.toString() ? 'td-row-completed' : 'td-row-unreported'\r\n    }\r\n\r\n    render() {\r\n        const {taskPlan, release, releasePlan, taskPlans} = this.props\r\n\r\n        return (\r\n\r\n            <Timeline>\r\n                <span>\r\n                    <button className=\"btn-link calArrow\" style={{marginLeft: '-3%'}}\r\n                            onClick={() => {\r\n                                this.props.history.push(\"/app-home/release-plan\")\r\n                                this.props.ReportGoBack()\r\n                            }}>\r\n                        <i className=\"glyphicon glyphicon-arrow-left\"></i></button>\r\n                </span>\r\n\r\n                <TimelineEvent title={'Task Name :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    {taskPlan && taskPlan.task && taskPlan.task.name ? taskPlan.task.name : ''}\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent title={'Developer Name :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    {taskPlan && taskPlan.employee && taskPlan.employee.name ? taskPlan.employee.name : ''}\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent title={'Task Planning (' + taskPlan.employee.name + ')'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    <div className=\"DeveloperTasksTable\">\r\n                        <BootstrapTable\r\n                            data={taskPlans}\r\n                            striped={true}\r\n                            hover={true}\r\n                            options={this.taskListPageOptions}\r\n                            trClassName={this.assignedTasksRowClass.bind(this)}\r\n                            pagination\r\n                            height={\"202px\"}>\r\n                            <TableHeaderColumn columnTitle isKey dataField='_id' hidden={true}>\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn width={\"15%\"} columnTitle dataField='planningDate'\r\n                                               dataFormat={this.formatPlanDate.bind(this)}>Planned Date\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn width={\"75%\"} columnTitle tdStyle={{whiteSpace: 'normal'}}\r\n                                               dataField='description'>Tasks\r\n                                Description\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn width={\"15%\"} columnTitle dataField='report'\r\n                                               dataFormat={this.formatReportStatus.bind(this)}>Reported Status\r\n                            </TableHeaderColumn>\r\n                        </BootstrapTable>\r\n                    </div>\r\n                </TimelineEvent>\r\n\r\n\r\n                <TimelineEvent title={'Comments :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    <ReportingCommentFormContainer/>\r\n                    {\r\n                        <div className=\"ReportingCommentTable\">\r\n\r\n                            <BootstrapTable data={releasePlan.comments}\r\n                                            striped={true}\r\n                                            hover={true}\r\n                                            options={this.commentListPageOptions}\r\n                                            pagination\r\n                                            height={\"302px\"}>\r\n                                <TableHeaderColumn columnTitle isKey dataField='_id' hidden={true}>\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn width=\"12%\" columnTitle dataField=\"dateInIndia\">\r\n                                    Date/Time\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn width=\"38%\" columnTitle dataField='comment'\r\n                                >Comment\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn width=\"10%\" columnTitle dataField=\"commentType\"\r\n                                                   dataSort={true}>\r\n                                    Comment Type</TableHeaderColumn>\r\n                                <TableHeaderColumn width=\"10%\" columnTitle dataField=\"name\">\r\n                                    Commented By</TableHeaderColumn>\r\n\r\n                            </BootstrapTable>\r\n                        </div>\r\n\r\n                    }\r\n\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent title={'Task Day Report Details :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    <p className=\"description\">  {taskPlan && taskPlan.report && taskPlan.report.description ? taskPlan.report.description : ''}</p>\r\n                </TimelineEvent>\r\n\r\n\r\n                <TimelineEvent title={'Task Day Requirement :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    <p className=\"description\">  {taskPlan && taskPlan.description ? taskPlan.description : ''}</p>\r\n                </TimelineEvent>\r\n\r\n\r\n                <TimelineEvent title={'Task Description :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    <p className=\"description\"> {releasePlan && releasePlan.task && releasePlan.task.description ? releasePlan.task.description : ''}</p>\r\n                </TimelineEvent>\r\n\r\n\r\n                <TimelineEvent style={{fontSize: '20px'}}\r\n                               title={'Project Name :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}>\r\n\r\n                    {release && release.project && release.project.name ? release.project.name : ''}\r\n                </TimelineEvent>\r\n\r\n\r\n                < TimelineEvent style={{fontSize: '20px'}}\r\n                                title={'Project Description :'}\r\n                                icon={<i\r\n                                    className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}>\r\n                    <p className=\"description\">{releasePlan && releasePlan.estimationDescription ? releasePlan.estimationDescription : ''}</p>\r\n                </TimelineEvent>\r\n\r\n            </Timeline>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(TaskReportDetailPage);\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/pages/TaskReportDetailPage.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {ClientFormContainer} from \"../../containers\"\r\n\r\nconst ClientFormDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Add Client</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <ClientFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default ClientFormDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/ClientFormDialog.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {EstimationInitiateFormContainer} from \"../../containers\"\r\n\r\nconst EstimationInitiateDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Initiate Estimation</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <EstimationInitiateFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default EstimationInitiateDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/EstimationInitiateDialog.js","import {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport React from 'react'\r\nimport {required} from './validation'\r\nimport {renderText, renderTextArea} from './fields'\r\nimport * as logger from '../../clientLogger'\r\nimport {connect} from \"react-redux\";\r\n\r\nlet EstimationFeatureForm = (props) => {\r\n    logger.debug(logger.ESTIMATION_FEATURE_FORM_RENDER, props)\r\n    const {_id, reset, pristine, submitting, handleSubmit} = props\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n\r\n            <Field name=\"estimation._id\" component=\"input\" type=\"hidden\"/>\r\n            <Field name=\"_id\" component=\"input\" type=\"hidden\"/>\r\n\r\n            <div className=\"col-md-6\">\r\n                <Field name=\"name\" component={renderText} label={\"Feature Name:\"} validate={[required]}/>\r\n            </div>\r\n\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <Field name=\"description\" component={renderTextArea} label=\"Feature Description:\"\r\n                       validate={[required]} rows=\"10\"/>\r\n            </div>\r\n\r\n        </div>\r\n        <div className=\"row initiatEstimation\">\r\n            <div className=\"col-md-6 text-center\">\r\n                <button type=\"submit\" disabled={pristine || submitting}\r\n                        className=\"btn customBtn\">\r\n                    {_id ? \"Update\" : \"Submit\"}\r\n                </button>\r\n            </div>\r\n            <div className=\"col-md-6 text-center\">\r\n                <button type=\"button\" disabled={pristine || submitting} className=\"btn customBtn\" onClick={reset}>\r\n                    Reset\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nEstimationFeatureForm = reduxForm({\r\n    form: 'estimation-feature'\r\n})(EstimationFeatureForm)\r\n\r\nconst selector = formValueSelector('estimation-feature')\r\n\r\nEstimationFeatureForm = connect(\r\n    state => {\r\n        const _id = selector(state, '_id')\r\n        return {\r\n            _id\r\n        }\r\n    }\r\n)(EstimationFeatureForm)\r\n\r\n\r\nexport default EstimationFeatureForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/EstimationFeatureForm.js","import * as A from \"../../actions\";\r\nimport * as COC from \"../../components/componentConsts\";\r\nimport {connect} from \"react-redux\";\r\nimport ProjectList from \"../../components/lists/ProjectList\";\r\nimport {initialize, SubmissionError} from \"redux-form\";\r\nimport {NotificationManager} from \"react-notifications\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    showPorjectEditForm: (project) => {\r\n        dispatch(A.showComponent(COC.PROJECT_FORM_DIALOG)),\r\n        dispatch(initialize('project', project))},\r\n    showProjectCreationForm: () => {\r\n        dispatch(A.showComponent(COC.PROJECT_FORM_DIALOG))\r\n    },\r\n    deleteProject: (projectID) => dispatch(A.deleteProjectOnServer(projectID)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success('Project Removed Successfully')\r\n        } else {\r\n            NotificationManager.error('Project Not removed!')\r\n            throw new SubmissionError({projects: \"Project Removal Failed\"})\r\n        }\r\n    }),\r\n\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loggedInUser: state.user.loggedIn,\r\n        projects: state.project.all\r\n    }\r\n}\r\n\r\nconst ProjectListContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ProjectList)\r\n\r\nexport default ProjectListContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/ProjectListContainer.js","import React, {Component} from 'react'\r\nimport {WithContext as ReactTags} from 'react-tag-input';\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nclass RepositorySearch extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedValue: SC.ALL,\r\n            type: [SC.ALL, 'Feature', 'Task'],\r\n            tags: [],\r\n            suggestions: this.props.estimation && this.props.estimation.technologies ? this.props.estimation.technologies.map(f => f.name) : [],\r\n            searchText: ''\r\n        };\r\n        this.props.estimation.technologies.map((f, i) => {\r\n            this.state.tags.push({\r\n                id: this.state.tags.length + 1,\r\n                text: f.name\r\n            });\r\n        })\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleAddition = this.handleAddition.bind(this);\r\n        this.handleDrag = this.handleDrag.bind(this);\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.searchText = this.searchText.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.editView && this.props.getAllRepositoryData(this.props.estimation.technologies)\r\n    }\r\n\r\n\r\n    handleSelectChange(e) {\r\n        this.setState({selectedValue: e.target.value});\r\n    }\r\n\r\n    handleDelete(i) {\r\n        let tags = this.state.tags;\r\n        tags.splice(i, 1);\r\n        this.setState({tags: tags});\r\n    }\r\n\r\n    handleAddition(tag) {\r\n        let tags = this.state.tags;\r\n        if (!(tags.findIndex(f => f.text.toLowerCase() === tag.toLowerCase()) != -1)) {\r\n            tags.push({\r\n                id: tags.length + 1,\r\n                text: tag\r\n            });\r\n            this.setState({tags: tags});\r\n        }\r\n    }\r\n\r\n    handleDrag(tag, currPos, newPos) {\r\n        let tags = this.state.tags;\r\n\r\n        // mutate array\r\n        tags.splice(currPos, 1);\r\n        tags.splice(newPos, 0, tag);\r\n\r\n        // re-render\r\n        this.setState({tags: tags});\r\n    }\r\n\r\n    searchText(searchText) {\r\n        this.setState({searchText: searchText.target.value});\r\n    }\r\n\r\n    render() {\r\n        const {tags, suggestions} = this.state;\r\n        const {editView, repository} = this.props\r\n        return (\r\n            <div>\r\n                <div className=\"col-md-12 RepositoryHeading RepositorySideHeight\">\r\n\r\n                    <div className=\"row\">\r\n                        {editView ?\r\n                            <div className=\"col-md-6 searchText\">\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Search Features/Tasks\"\r\n                                       onChange={this.searchText}/>\r\n                            </div> : <div className=\"col-md-6 searchText\">\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Search Features/Tasks\"\r\n                                       onChange={this.searchText} disabled/>\r\n                            </div>}\r\n                        {editView ?\r\n                            <div className=\"col-md-4 dropdownoptionRepo\">\r\n                                <select className=\"form-control div-hover\"\r\n\r\n                                        onChange={this.handleSelectChange}>\r\n                                    {\r\n                                        this.state.type.map((item, key) =>\r\n                                            <option value={item} key={key}>{item}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div> :\r\n                            <div className=\"col-md-4 dropdownoptionRepo\">\r\n                                <select className=\"form-control div-hover\"\r\n\r\n                                        onChange={this.handleSelectChange} disabled>\r\n                                    {\r\n                                        this.state.type.map((item, key) =>\r\n                                            <option value={item} key={key}>{item}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>}\r\n\r\n\r\n                        <div className=\"col-md-2 repoArrow\">\r\n\r\n                            <h5><img key=\"he_requested_delete\" className={editView ? \"div-hover\" : \"div-disable\"}\r\n                                     src=\"/images/go_button.png\"\r\n                                     onClick={() => {\r\n                                         if (editView)\r\n                                             this.props.fetchRepositoryBasedOnDiffCriteria(this.state.tags, this.state.selectedValue, this.state.searchText)\r\n                                     }}/></h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-12\">\r\n                    <ReactTags\r\n                        classNames=\r\n                            {{\r\n                                tags: 'tagsClass',\r\n                                tagInput: 'tagInputClass',\r\n                                tagInputField: 'tagInputFieldClass',\r\n                                selected: 'selectedClass',\r\n                                tag: 'tagClass technologytagNew',\r\n                                remove: 'removeClass',\r\n                                suggestions: 'suggestionsClass',\r\n                                activeSuggestion: 'activeSuggestionClass'\r\n                            }}\r\n                        tags={tags}\r\n                        suggestions={suggestions}\r\n                        autofocus={false}\r\n                        placeholder=\"Repository\"\r\n                        handleDelete={this.handleDelete}\r\n                        handleAddition={this.handleAddition}\r\n                        handleDrag={this.handleDrag}/>\r\n                </div>\r\n                {editView ?\r\n                    <div className=\"col-md-12 Repo-padding\">\r\n\r\n                        {\r\n                            Array.isArray(repository) && repository.map((f, i) =>\r\n                                (f.isFeature) ?\r\n                                    <div key={\"feature\" + f._id} className=\"repository repositoryFeature div-hover\">\r\n                                        <div className=\"RepositoryHeading repotext\" key={i} onClick={() => {\r\n                                            this.props.showFeatureDetailPage(f)\r\n                                        }}>\r\n                                            <div>\r\n                                                <div className=\"repositoryFeatureLable repotext\"></div>\r\n                                                <h5>Feature: {f.name}</h5><i\r\n                                                className=\"glyphicon glyphicon-option-vertical pull-right\"></i><span\r\n                                                className=\"pull-right\">{f.estimatedHours ? '(' + task.estimatedHours + ' HRS)' : '(00 HRS)'} </span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"RepositoryContent\">\r\n                                            <p>{f.description}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    <div key={\"task\" + f._id} className=\"repository repositoryTask\">\r\n                                        <div className=\"RepositoryHeading repotext div-hover\" key={i} onClick={() => {\r\n                                            this.props.showTaskDetailPage(f)\r\n                                        }}>\r\n                                            <div>\r\n                                                <div className=\"repositoryTaskLable repotext\"></div>\r\n                                                <h5>Task: {f.name}</h5><i\r\n                                                className=\"glyphicon glyphicon-option-vertical pull-right\"></i><span\r\n                                                className=\"pull-right\">{f.estimatedHours ? '(' + task.estimatedHours + ' HRS)' : '(00 HRS)'} </span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"RepositoryContent\">\r\n                                            <p>{f.description}</p>\r\n                                        </div>\r\n                                    </div>\r\n                            )\r\n                        }\r\n                    </div> : null\r\n\r\n                }\r\n\r\n            </div>)\r\n    }\r\n\r\n}\r\n\r\nexport default RepositorySearch\n\n\n// WEBPACK FOOTER //\n// ./client/components/pages/RepositorySearch.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {ConfirmationDialog} from \"../index\";\r\nimport * as CM from \"../../clientMsg\"\r\n\r\nclass TechnologyList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showTechnologyDeletionDialog: false,\r\n            addRow: null\r\n        }\r\n\r\n    }\r\n\r\n    onClose() {\r\n        this.setState({showTechnologyDeletionDialog: false})\r\n    }\r\n\r\n    OkConfirmationForDeletingTechnology() {\r\n        this.setState({showTechnologyDeletionDialog: false})\r\n        this.props.deleteTechnology(this.state.addRow)\r\n    }\r\n\r\n    viewDeleteButton(cell, row, enumObject, rowIndex) {\r\n\r\n\r\n        return (<button className=\" btn btn-custom\" type=\"button\" onClick={() => {\r\n                this.setState({showTechnologyDeletionDialog: true}),\r\n                    this.setState({addRow: row._id})\r\n            }}>\r\n                <i className=\"fa fa-trash\"></i>\r\n            </button>\r\n        )\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>{this.state.showTechnologyDeletionDialog &&\r\n            <ConfirmationDialog show={true} onConfirm={this.OkConfirmationForDeletingTechnology.bind(this)}\r\n                                title={CM.DELETE_TECHNOLOGY} onClose={this.onClose.bind(this)}\r\n                                body={CM.DELETE_TECHNOLOGY_BODY}/>\r\n            }\r\n\r\n                <div key=\"technology_list\" className=\"clearfix\">\r\n\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"col-md-12 pad\">\r\n\r\n                            <div className=\"col-md-12\">\r\n                                <button className=\"btn customBtn\"\r\n                                        onClick={() => this.props.showTechnologyAdditionForm()}>Add Technology\r\n                                </button>\r\n\r\n                                <div className=\"estimation\">\r\n\r\n                                    <BootstrapTable options={this.options} data={this.props.technologies}\r\n                                                    striped={true}\r\n                                                    hover={true}>\r\n                                        <TableHeaderColumn columnTitle isKey dataField='_id'\r\n                                                           hidden={true}>ID</TableHeaderColumn>\r\n                                        <TableHeaderColumn columnTitle dataField='name'>Technology\r\n                                            Name</TableHeaderColumn>\r\n\r\n                                        <TableHeaderColumn width=\"30%\" dataField='button'\r\n                                                           dataFormat={this.viewDeleteButton.bind(this)}>Delete\r\n                                        </TableHeaderColumn>\r\n\r\n                                    </BootstrapTable>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(TechnologyList)\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/TechnologyList.js","import {connect} from 'react-redux'\r\nimport {ReportTaskDescriptionForm} from \"../../components\"\r\nimport * as logger from '../../clientLogger'\r\nimport * as A from \"../../actions\"\r\nimport {addClientOnServer, editClientOnServer} from \"../../actions\"\r\nimport {formValueSelector, SubmissionError} from \"redux-form\";\r\nimport * as EC from \"../../../server/errorcodes\";\r\nimport {NotificationManager} from \"react-notifications\";\r\nimport * as COC from \"../../components/componentConsts\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (reportData) => {\r\n        console.log(\"report task description \", reportData)\r\n\r\n        dispatch(A.reportTaskToServer(reportData)).then((json) => {\r\n            if (json.success) {\r\n                NotificationManager.success('Task report submitted.')\r\n                dispatch(A.taskReported(json.data.taskPlan))\r\n                dispatch(A.hideComponent(COC.REPORT_TASK_DESCRIPTION_DIALOG))\r\n            } else\r\n                NotificationManager.error(json.message)\r\n            return json\r\n        })\r\n    }\r\n})\r\n\r\nconst selector = formValueSelector('report-task-description')\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    taskName: selector(state, 'taskName'),\r\n    status: selector(state, 'status')\r\n})\r\n\r\nconst ReportTaskDescriptionFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReportTaskDescriptionForm)\r\n\r\nexport default ReportTaskDescriptionFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/ReportTaskDescriptionFormContainer.js","import {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport React from 'react'\r\nimport {required} from './validation'\r\nimport {renderMultiSelect, renderSelect, renderTextArea} from './fields'\r\nimport * as logger from '../../clientLogger'\r\nimport {connect} from 'react-redux'\r\n\r\nlet EstimationInitiateForm = (props) => {\r\n    logger.debug(logger.ESTIMATION_INITIATE_FORM_RENDER, props)\r\n    const {reset, pristine, submitting, handleSubmit} = props\r\n    const {_id, project, module, projects, modules, estimators, developmentTypes, technologies} = props\r\n    let projectModules = project && project._id ? modules.filter(m => m.project._id.toString() === project._id.toString()) : modules\r\n    let moduleProjects = []\r\n    if (module && module._id && (!project || !project._id)) {\r\n        let selectedModule = modules.find(m => m._id.toString() === module._id.toString())\r\n        moduleProjects = projects.filter(p => p._id.toString() === selectedModule.project._id.toString())\r\n    } else {\r\n        moduleProjects = projects\r\n    }\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <Field name=\"_id\" component=\"input\" className=\"form-control\" type=\"hidden\"></Field>\r\n                <Field name=\"project._id\" component={renderSelect} label={\"Project:\"} options={moduleProjects}\r\n                       validate={[required]}/>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <Field name=\"module._id\" component={renderSelect} label={\"Module:\"} options={projectModules}\r\n                       displayField={\"firstName\"}/>\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <Field name=\"estimator._id\" component={renderSelect} label={\"Estimator:\"} options={estimators}\r\n                       displayField={\"firstName\"} validate={[required]}/>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <Field name=\"developmentType._id\" component={renderSelect} label={\"Development Type:\"}\r\n                       options={developmentTypes}\r\n                       displayField={\"name\"} validate={[required]}/>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <Field name=\"technologies\" component={renderMultiSelect} label=\"technologies:\"\r\n                       data={technologies}/>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <Field name=\"description\" component={renderTextArea} label=\"Description:\" validate={[required]}\r\n                       rows=\"10\"/>\r\n            </div>\r\n        </div>\r\n        <div className=\"row initiatEstimation\">\r\n            <div className=\"col-md-6 text-center\">\r\n                <button type=\"submit\" disabled={pristine || submitting}\r\n                        className=\"btn customBtn\">\r\n                    {(!_id && \"Submit\") || (_id && \"Update\")}\r\n                </button>\r\n            </div>\r\n            <div className=\"col-md-6 text-center\">\r\n                <button type=\"button\" disabled={pristine || submitting} className=\"btn customBtn\" onClick={reset}>\r\n                    Reset\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nEstimationInitiateForm = reduxForm({\r\n    form: 'estimation-initiate'\r\n})(EstimationInitiateForm)\r\n\r\nconst selector = formValueSelector('estimation-initiate')\r\n\r\nEstimationInitiateForm = connect(\r\n    state => {\r\n        const _id = selector(state, '_id')\r\n        const project = selector(state, 'project')\r\n        const module = selector(state, 'module')\r\n        return {\r\n            _id,\r\n            project,\r\n            module\r\n        }\r\n    }\r\n)(EstimationInitiateForm)\r\n\r\nexport default EstimationInitiateForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/EstimationInitiateForm.js","import React from 'react'\r\nimport {Timeline, TimelineEvent} from 'react-event-timeline'\r\nimport moment from 'moment'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {BootstrapTable, TableHeaderColumn} from \"react-bootstrap-table\";\r\nimport momentTZ from \"moment-timezone\";\r\n\r\nclass CalendarTaskDetailPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.commentListPageOptions = {\r\n            sizePerPageList: [{\r\n                text: '4', value: 4\r\n            }],\r\n            sizePerPage: 4,  // which size per page you want to locate as default\r\n        }\r\n\r\n        this.taskListPageOptions = {\r\n            sizePerPageList: [{\r\n                text: '4', value: 4\r\n            }],\r\n            sizePerPage: 4,  // which size per page you want to locate as default\r\n        }\r\n    }\r\n\r\n    assignedTasksRowClass(row) {\r\n        return row._id.toString() == this.props.taskPlan._id.toString() ? 'td-row-completed' : 'td-row-unreported'\r\n    }\r\n\r\n    formatPlanDate(date) {\r\n        console.log('date found as ', date)\r\n        return momentTZ(date).utc().format('DD MMM,YY')\r\n    }\r\n\r\n    formatPlannedHours(planning) {\r\n        if (planning && planning.plannedHours)\r\n            return planning.plannedHours\r\n        return ''\r\n    }\r\n\r\n    formatReportedHours(report) {\r\n        if (report && report.reportedHours)\r\n            return report.reportedHours\r\n        return ''\r\n    }\r\n\r\n    formatReportStatus(report) {\r\n\r\n        if (report && report.status)\r\n            return report.status\r\n        return SC.STATUS_UNREPORTED\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {taskPlan, release, releasePlan, taskPlans} = this.props\r\n        return (\r\n\r\n            <Timeline>\r\n                <span>\r\n                    <button className=\"btn-link calArrow\" style={{marginLeft: '-3%'}}\r\n                            onClick={() => {\r\n                                this.props.history.push(\"/app-home/calendar\")\r\n                                this.props.calenderGoBack()\r\n                            }}>\r\n                        <i className=\"glyphicon glyphicon-arrow-left\"></i></button>\r\n                </span>\r\n\r\n                <TimelineEvent title={'Task Name :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    {taskPlan && taskPlan.task && taskPlan.task.name ? taskPlan.task.name : ''}\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent title={'Work Assigned to You for this Task:'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    <div className=\"DeveloperTasksTable\">\r\n                        <BootstrapTable\r\n                            data={taskPlans}\r\n                            striped={true}\r\n                            hover={true}\r\n                            options={this.taskListPageOptions}\r\n                            pagination\r\n                            trClassName={this.assignedTasksRowClass.bind(this)}\r\n                            height={\"202px\"}>\r\n                            <TableHeaderColumn columnTitle isKey dataField='_id' hidden={true}>\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn width={\"15%\"} columnTitle dataField='planningDate'\r\n                                               dataFormat={this.formatPlanDate.bind(this)}>Planned Date\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn width={\"45%\"} columnTitle dataField='description'>Tasks\r\n                                Description\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn width={\"15%\"} columnTitle dataField='planning'\r\n                                               dataFormat={this.formatPlannedHours.bind(this)}>Planned Hours\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn width={\"15%\"} columnTitle dataField='report'\r\n                                               dataFormat={this.formatReportedHours.bind(this)}>Reported Hours\r\n                            </TableHeaderColumn>\r\n                            <TableHeaderColumn width={\"15%\"} columnTitle dataField='report'\r\n                                               dataFormat={this.formatReportStatus.bind(this)}>Reported Status\r\n                            </TableHeaderColumn>\r\n                        </BootstrapTable>\r\n\r\n\r\n                    </div>\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent title={'Comments :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    {\r\n                        <div className=\"ReportingCommentTable\">\r\n\r\n                            <BootstrapTable data={releasePlan.comments}\r\n                                            striped={true}\r\n                                            hover={true}\r\n                                            options={this.commentListPageOptions}\r\n                                            pagination\r\n                                            height={\"200px\"}>\r\n                                <TableHeaderColumn width=\"12%\" columnTitle dataField=\"dateInIndia\">\r\n                                    Date/Time\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn columnTitle isKey dataField='_id' hidden={true}>\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn width=\"38%\" columnTitle dataField='comment'\r\n                                >Comment\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn width=\"10%\" columnTitle dataField=\"commentType\"\r\n                                                   dataSort={true}>\r\n                                    Comment Type</TableHeaderColumn>\r\n                                <TableHeaderColumn width=\"10%\" columnTitle dataField=\"name\">\r\n                                    Commented By</TableHeaderColumn>\r\n\r\n                            </BootstrapTable>\r\n                        </div>\r\n\r\n                    }\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent title={'Task Day Report Details :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    <p className=\"description\">  {taskPlan && taskPlan.report && taskPlan.report.description ? taskPlan.report.description : ''}</p>\r\n                </TimelineEvent>\r\n\r\n\r\n                <TimelineEvent title={'Task Day Requirement :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    <p className=\"description\">  {taskPlan && taskPlan.description ? taskPlan.description : ''}</p>\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent title={'Task Description :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}\r\n                               style={{fontSize: '20px'}}>\r\n                    <p className=\"description\"> {releasePlan && releasePlan.task && releasePlan.task.description ? releasePlan.task.description : ''}</p>\r\n                </TimelineEvent>\r\n\r\n\r\n                <TimelineEvent style={{fontSize: '20px'}}\r\n                               title={'Project Name :'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}>\r\n\r\n                    {release && release.project && release.project.name ? release.project.name : ''}\r\n                </TimelineEvent>\r\n\r\n\r\n                < TimelineEvent style={{fontSize: '20px'}}\r\n                                title={'Project Description :'}\r\n                                icon={<i\r\n                                    className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}>\r\n                    <p className=\"description\">{releasePlan && releasePlan.estimationDescription ? releasePlan.estimationDescription : ''}</p>\r\n                </TimelineEvent>\r\n\r\n\r\n\r\n\r\n            </Timeline>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(CalendarTaskDetailPage);\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/pages/CalendarTaskDetailPage.js","import {Field, Form, reduxForm} from 'redux-form'\r\nimport React from 'react'\r\nimport {email, required} from './validation'\r\nimport {renderLoginField} from \"./fields\";\r\n\r\nlet LoginForm = (props) => {\r\n    const {handleSubmit, errorMsg} = props\r\n    return <div>\r\n        <div className=\"col-md-12 loginsection\">\r\n            <div className=\"col-md-5 login_img \">\r\n                <h1>WELCOME TO</h1>\r\n                <p>Lorem ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\r\n                    industry's standard dummy text ever since the 1500s.</p>\r\n\r\n            </div>\r\n            <div className=\"col-md-7 loginform\">\r\n                <header>LOGIN TO <span><b>NNXT</b></span> DASHBOARD</header>\r\n                <p className=\"text-center\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex risus,\r\n                    pharetra et efficitur non,\r\n                    tristique ac elit.</p>\r\n                <Form onSubmit={handleSubmit}>\r\n                    {errorMsg &&\r\n                    <div style={{width: \"100%\", textAlign: \"center\"}}>\r\n                        <span className=\"validation-error\"\r\n                              style={{fontSize: '20px'}}>{errorMsg}</span>\r\n                    </div>}\r\n                    <Field name=\"username\" component={renderLoginField} label=\"Username :\"\r\n                           validate={[required, email]}/>\r\n                    <Field style={{marginBottom: \"7px\"}} name=\"password\" component={renderLoginField} type=\"password\"\r\n                           label=\"Password :\" validate={[required]}/>\r\n                    <br/>\r\n                    <div className=\"col-md-12\">\r\n                        <span className=\"pull-right\"> <a href=\"#\"><u>Forgot password ?</u></a><br/></span>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <button type=\"submit\" className=\"btn  login-btn\">Submit\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-md-12\"><label className=\"signupoption\">Do you have an account ? <a href=\"#\"><u>\r\n                        Sign Up</u></a></label></div>\r\n\r\n                    <footer className=\"text-center\">  &copy; Copyright all rights reserved. <strong> Aripra Infotech Pvt\r\n                        Ltd</strong></footer>\r\n                </Form>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nLoginForm = reduxForm({\r\n    form: \"LoginForm\"\r\n})(LoginForm)\r\n\r\nexport default LoginForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/LoginForm.js","import {connect} from 'react-redux'\r\nimport {AdminUserForm} from \"../../components\"\r\nimport {addUserOnServer, editUserOnServer} from \"../../actions\"\r\nimport {showComponentHideOthers} from \"../../actions/appAction\";\r\nimport * as COC from \"../../components/componentConsts\";\r\nimport * as EC from \"../../../server/errorcodes\";\r\nimport {NotificationManager} from \"react-notifications\";\r\nimport {formValueSelector, SubmissionError} from \"redux-form\";\r\n\r\nlet selector = formValueSelector('role')\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n\r\n    onSubmit: (values) => {\r\n        if (!values._id) {\r\n            return dispatch(addUserOnServer(values)).then(response => {\r\n                if (response.success) {\r\n                    dispatch(showComponentHideOthers(COC.ADMIN_USER_LIST))\r\n                    NotificationManager.success('User Added Successfully')\r\n                } else {\r\n                    NotificationManager.error('User Added Failed');\r\n                    if (json.code && json.code == EC.ALREADY_EXISTS) {\r\n                        // role already exists throw SubmissionError to show appropriate error\r\n                        throw new SubmissionError({email: 'Email already exists'})\r\n                    }\r\n                    throw new SubmissionError({users: \"User Already Exists\"})\r\n                }\r\n            })\r\n        } else {\r\n            // Role is edited\r\n            return dispatch(editUserOnServer(values)).then(response => {\r\n                if (response.success) {\r\n                    dispatch(showComponentHideOthers(COC.ADMIN_USER_LIST))\r\n                    NotificationManager.success('User Updated Successfully')\r\n                } else {\r\n                    NotificationManager.error('User Updated Failed');\r\n                    if (json.code && json.code == EC.EMAIL_ALREADY_USED) {\r\n                        throw new SubmissionError({email: 'Email already exists'})\r\n                        // role already exists throw SubmissionError to show appropriate error\r\n                    }\r\n                    else if (json.code && json.code == EC.PASSWORD_NOT_MATCHED) {\r\n                        throw new SubmissionError({password: 'Password not matched'})\r\n                    }\r\n                    throw new SubmissionError({users: \"User edit failed!\"})\r\n                }\r\n            })\r\n        }\r\n    },\r\n    showAdminUserList: () => dispatch(showComponentHideOthers(ADMIN_USER_LIST))\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    roles: state.role.all\r\n\r\n    // roles:state.users.roles\r\n})\r\n\r\nconst UserFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AdminUserForm)\r\n\r\nexport default UserFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/AdminUserFormContainer.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {TechnologyFormContainer} from \"../../containers\"\r\n\r\nconst technologyFormDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Add Technology</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <TechnologyFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default technologyFormDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/TechnologyFormDialog.js","import React, {Component} from 'react'\r\n\r\n\r\nconst TabSection = (props) => (\r\n    <section className=\"clearfix tab-parent\">\r\n        {\r\n            React.Children.map(props.children, (child, i) => {\r\n                // Only return that element that is part of visible component\r\n                if (props.visibleComponents.findIndex(name => name === child.props.name) != -1)\r\n                    return child\r\n                else\r\n                    return null\r\n            })\r\n        }\r\n    </section>\r\n)\r\n\r\nexport default TabSection\n\n\n// WEBPACK FOOTER //\n// ./client/components/sections/TabSection.js","import React, {Component} from 'react'\r\nimport {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport {renderDateTimePickerString, renderDateTimeStringShow, renderField, renderSelect} from './fields'\r\nimport {required} from \"./validation\"\r\nimport moment from 'moment'\r\nimport momentLocalizer from 'react-widgets-moment'\r\nimport {connect} from 'react-redux'\r\nimport * as SC from \"../../../server/serverconstants\";\r\n\r\nmoment.locale('en')\r\nmomentLocalizer()\r\nlet UpdateReleaseDatesForm = (props) => {\r\n    const {\r\n        handleSubmit, submitting, pristine, reset, release, change,\r\n        updatedDevStartDate, updatedDevEndDate, updatedClientReleaseDate\r\n    } = props\r\n\r\n    let startMoment = moment(updatedDevStartDate, SC.DATE_FORMAT)\r\n    let endMoment = moment(updatedDevEndDate, SC.DATE_FORMAT)\r\n    let clientMoment = moment(updatedClientReleaseDate, SC.DATE_FORMAT)\r\n\r\n    let iterations = release.iterations.filter(i => i.type === SC.ITERATION_TYPE_ESTIMATED || i.type === SC.ITERATION_TYPE_PLANNED)\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n\r\n        <div className=\"col-md-8\">\r\n\r\n            <Field name=\"_id\" component=\"input\" type=\"hidden\"/>\r\n\r\n            <div className=\"col-md-10 col-md-offset-1\">\r\n                <Field name=\"iteration._id\" component={renderSelect} label={\"Iteration :\"} options={iterations}\r\n                       validate={[required]} onChange={(event, newValue, oldValue) => {\r\n                    let iteration = release.iterations.find(i => i._id.toString() == newValue)\r\n                    const devStartDate = moment(iteration.devStartDate).format(SC.DATE_FORMAT)\r\n                    const devEndDate = moment(iteration.devEndDate).format(SC.DATE_FORMAT)\r\n                    const clientReleaseDate = moment(iteration.clientReleaseDate).format(SC.DATE_FORMAT)\r\n                    change(\"updatedDevStartDate\", devStartDate)\r\n                    change(\"updatedDevEndDate\", devEndDate)\r\n                    change(\"updatedClientReleaseDate\", clientReleaseDate)\r\n                }}/>\r\n            </div>\r\n\r\n            <div className=\"col-md-10 col-md-offset-1\">\r\n                <Field name=\"updatedDevStartDate\"\r\n                       placeholder={\"Date\"}\r\n                       component={renderDateTimePickerString}\r\n                       showTime={false}\r\n                       label={\"Dev Start Date :\"}\r\n                       max={endMoment.toDate()}\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"col-md-10 col-md-offset-1\">\r\n                <Field name=\"updatedDevEndDate\"\r\n                       placeholder={\"Date\"}\r\n                       component={renderDateTimePickerString}\r\n                       showTime={false}\r\n                       min={startMoment.toDate()}\r\n                       max={clientMoment.toDate()}\r\n                       label={\"Dev Release Date:\"}\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"col-md-10 col-md-offset-1\">\r\n                <Field name=\"updatedClientReleaseDate\"\r\n                       placeholder={\"Date\"}\r\n                       component={renderDateTimePickerString}\r\n                       showTime={false}\r\n                       label={\"Client Release Date :\"}\r\n                       validate={[required]}\r\n                       min={endMoment.toDate()}\r\n                       dropUp={true}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"col-md-12\">\r\n            <div className=\"col-md-4\">\r\n                <button type=\"submit\" className=\"btn customBtn\" disabled={submitting || pristine}>\r\n                    Update Release\r\n                </button>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n                <button type=\"button\" className=\"btn customBtn\" disabled={submitting || pristine} onClick={reset}>\r\n                    Reset\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </form>\r\n}\r\n\r\nUpdateReleaseDatesForm = reduxForm({\r\n    form: 'update-release-dates'\r\n})(UpdateReleaseDatesForm)\r\n\r\nconst selector = formValueSelector('update-release-dates')\r\n\r\nUpdateReleaseDatesForm = connect(\r\n    state => {\r\n        const {updatedDevStartDate, updatedDevEndDate, updatedClientReleaseDate} = selector(state, 'updatedDevStartDate', 'updatedDevEndDate', 'updatedClientReleaseDate')\r\n        return {\r\n            updatedDevStartDate,\r\n            updatedDevEndDate,\r\n            updatedClientReleaseDate\r\n        }\r\n    }\r\n)(UpdateReleaseDatesForm)\r\n\r\nexport default UpdateReleaseDatesForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/UpdateReleaseDatesForm.js","import {connect} from 'react-redux'\r\nimport * as A from '../../actions'\r\nimport {TaskReportList} from \"../../components\"\r\nimport * as COC from '../../components/componentConsts'\r\nimport {withRouter} from 'react-router-dom'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    taskPlanSelected: (taskPlan) => dispatch(A.getDataForReportTaskDetailPageFromServer(taskPlan._id)),\r\n    showTaskDetailPage: () => {\r\n        dispatch(A.showComponentHideOthers(COC.TASK_REPORT_DETAIL_PAGE))\r\n    },\r\n    getAllTaskReports: (release) => {\r\n        //dispatch(A.getAllTaskPlansOfThisReleaseFromServer(release._id))\r\n        dispatch(A.getTaskReportsReleasePlanPage(release._id))\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    reports: state.report.releasesReports\r\n})\r\n\r\nconst TaskReportListContainer = withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TaskReportList))\r\n\r\nexport default TaskReportListContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/TaskReportListContainer.js","import {connect} from 'react-redux'\r\nimport * as A from '../../actions'\r\nimport {ReleasePlanList} from '../../components'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {withRouter} from 'react-router-dom'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport {initialize} from 'redux-form'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    releasePlanSelected: (releasePlan, roles) => {\r\n        dispatch(A.getReleasePlanDetailsFromServer(releasePlan._id)).then(json => {\r\n            if (json.success) {\r\n                dispatch(A.showComponentHideOthers(COC.RELEASE_TASK_PLANNING_PAGE))\r\n            }\r\n            return json\r\n        })\r\n        dispatch(A.getAllTaskPlannedFromServer(releasePlan._id))\r\n        if (roles.indexOf(SC.ROLE_MANAGER) > -1) {\r\n            // get all developers from user list when user role in this release is manager\r\n            dispatch(A.getAllDeveloperFromServer())\r\n        } else if (roles.indexOf(SC.ROLE_LEADER) > -1) {\r\n            // get project developers from user list when user role in this release is leader\r\n            dispatch(A.getReleaseDevelopersFromServer(releasePlan._id))\r\n        }\r\n    },\r\n\r\n    changeReleaseFlag: (release, status, flag) => dispatch(A.getReleasePlansFromServer(release._id, status, flag)),\r\n    changeReleaseStatus: (release, status, flag) => dispatch(A.getReleasePlansFromServer(release._id, status, flag)),\r\n    showAddToReleasePlanForm: (release) => {\r\n        dispatch(A.showComponent(COC.RELEASE_PLAN_ADD_TO_RELEASE_FORM_DIALOG))\r\n        // initialize\r\n        dispatch(initialize('release-plan-add-to-release', {\r\n            release: {\r\n                _id: release._id\r\n            },\r\n            iteration_type: SC.ITERATION_TYPE_PLANNED,\r\n            type: SC.TYPE_DEVELOPMENT\r\n        }))\r\n    },\r\n    getAllReleasePlans: (release) => dispatch(A.getReleasePlansFromServer(release._id, SC.ALL, SC.ALL))\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    release: state.release.selectedRelease,\r\n    releasePlans: state.release.releasePlans\r\n})\r\n\r\nconst ReleasePlanListContainer = withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReleasePlanList))\r\n\r\nexport default ReleasePlanListContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/ReleasePlanListContainer.js","//title String of dialog box\r\nexport const DELETE_TASK = 'Delete Task'\r\nexport const DELETE_FEATURE = 'Delete feature'\r\nexport const DELETE_PROJECT = 'Delete project'\r\nexport const DELETE_MODULE = 'Delete module'\r\nexport const DELETE_TECHNOLOGY = 'Delete technology'\r\nexport const DELETE_CLIENT = 'Delete client'\r\n\r\n//body String of dialog box\r\nexport const DELETE_TASK_BODY = 'You are about to delete Task. Are you sure you want to delete this Task,Please confirm !'\r\nexport const DELETE_FEATURE_BODY = 'You are about to delete feature. Are you sure you want to delete this feature,Please confirm !'\r\nexport const DELETE_PROJECT_BODY = 'You are about to delete project. Are you sure you want to delete this project,Please confirm !'\r\nexport const DELETE_MODULE_BODY = 'You are about to delete module. Are you sure you want to delete this module,Please confirm !'\r\nexport const DELETE_TECHNOLOGY_BODY = 'You are about to delete technology. Are you sure you want to delete this technology,Please confirm !'\r\nexport const DELETE_CLIENT_BODY = 'You are about to delete client. Are you sure you want to delete this client,Please confirm !'\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/clientMsg.js","import React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nconst ContentSection = (props) => (\r\n    <section className=\"content-section\">\r\n        {\r\n            React.Children.map(props.children, (child, i) => {\r\n                if (props.visibleComponents.findIndex(name => name === child.props.name) != -1)\r\n                    return child\r\n                else\r\n                    return null\r\n\r\n            })\r\n        }\r\n    </section>\r\n)\r\n\r\nexport default connect((state) => ({\r\n    visibleComponents: state.app.visibleComponents\r\n}))(ContentSection)\n\n\n// WEBPACK FOOTER //\n// ./client/components/sections/ContentSection.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {EstimationProjectAwardFormContainer} from \"../../containers\"\r\n\r\nconst EstimationProjectAwardDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Create Release</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <EstimationProjectAwardFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default EstimationProjectAwardDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/EstimationProjectAwardDialog.js","import {connect} from 'react-redux'\r\nimport {RepositoryTaskDetailPage} from '../../components'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as EC from '../../../server/errorcodes'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    addTask: (EstimationId, taskId) => dispatch(A.addTaskFromRepositoryToEstimationOnServer(EstimationId, taskId)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success(\"Task Added\")\r\n            // hide dialog\r\n            dispatch(A.hideComponent(COC.REPOSITORY_TASK_DETAIL_DIALOG))\r\n        } else {\r\n            if (json.code == EC.ALREADY_EXISTS)\r\n                NotificationManager.error(\"Task Already Added \")\r\n            else NotificationManager.error(\"Task Addition Failed\")\r\n        }\r\n    }),\r\n    copyTask: (EstimationId, taskId) => dispatch(A.copyTaskFromRepositoryToEstimationOnServer(EstimationId, taskId)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success(\"Task Copied\")\r\n            // hide dialog\r\n            dispatch(A.hideComponent(COC.REPOSITORY_TASK_DETAIL_DIALOG))\r\n        } else\r\n            NotificationManager.error(\"Task Copy Failed\")\r\n\r\n    })\r\n})\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    task: state.repository.task,\r\n    estimationId: state.estimation.selected && state.estimation.selected._id ? state.estimation.selected._id : undefined\r\n})\r\n\r\nconst RepositoryTaskDetailPageContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(RepositoryTaskDetailPage)\r\n\r\nexport default RepositoryTaskDetailPageContainer\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/containers/pages/RepositoryTaskDetailPageContainer.js","import * as AC from \"../actions/actionConsts\"\r\n\r\nlet initialState = {\r\n    all: [],\r\n    task: {},\r\n    feature: {}\r\n}\r\n\r\nconst repositoryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AC.SELECT_REPOSITORY:\r\n            return Object.assign({}, state, {all: action.repository})\r\n\r\n        case AC.SELECT_TASK_FROM_REPOSITORY:\r\n            return Object.assign({}, state, {task: action.task})\r\n\r\n        case AC.SELECT_FEATURE_FROM_REPOSITORY:\r\n            return Object.assign({}, state, {feature: action.feature})\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default repositoryReducer\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/repositoryReducer.js","import {connect} from 'react-redux'\r\nimport {EstimationFilterForm} from \"../../components\"\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport {initialize} from 'redux-form'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (formValues) => {\r\n        dispatch(A.addFilteredEstimation(formValues))\r\n        dispatch(A.hideComponent(COC.ESTIMATION_FILTER_DIALOG))\r\n    },\r\n    selectAllFilter: () => {\r\n        //dispatch(A.hideComponent(COC.ESTIMATION_FILTER_DIALOG))\r\n        //dispatch(A.selectAllFilterFromEstimation())\r\n        dispatch(initialize('Estimation-filter', {\r\n            changedByNegotiator: true,\r\n            changedByEstimator: true,\r\n            permissionRequested: true,\r\n            addedFromRepository: true,\r\n            addedByNegotiator: true,\r\n            addedByEstimator: true,\r\n            hasError: true\r\n        }))\r\n    },\r\n    clearFilter: () => {\r\n        //dispatch(A.hideComponent(COC.ESTIMATION_FILTER_DIALOG))\r\n        //dispatch(A.clearFilterFromEstimation())\r\n        dispatch(initialize('Estimation-filter', {\r\n            changedByNegotiator: false,\r\n            changedByEstimator: false,\r\n            permissionRequested: false,\r\n            addedFromRepository: false,\r\n            addedByNegotiator: false,\r\n            addedByEstimator: false,\r\n            hasError: false\r\n        }))\r\n    },\r\n    newChangedFilter: (status) => {\r\n\r\n        if(status == SC.STATUS_ESTIMATION_REQUESTED || status == SC.STATUS_CHANGE_REQUESTED){\r\n            // Estimation is editable for estimator\r\n            dispatch(initialize('Estimation-filter', {\r\n                changedByNegotiator: true,\r\n                changedByEstimator: false,\r\n                permissionRequested: false,\r\n                addedFromRepository: false,\r\n                addedByNegotiator: true,\r\n                addedByEstimator: false,\r\n                hasError: false\r\n            }))\r\n        } else {\r\n            // Estimation is editable for negotiator\r\n            dispatch(initialize('Estimation-filter', {\r\n                changedByNegotiator: false,\r\n                changedByEstimator: true,\r\n                permissionRequested: true,\r\n                addedFromRepository: false,\r\n                addedByNegotiator: false,\r\n                addedByEstimator: true,\r\n                hasError: false\r\n            }))\r\n        }\r\n\r\n\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    estimation: state.estimation.selected,\r\n    initialValues: {\r\n        \"changedByNegotiator\": state.estimation.filter.changedByNegotiator,\r\n        \"changedByEstimator\": state.estimation.filter.changedByEstimator,\r\n        \"permissionRequested\": state.estimation.filter.permissionRequested,\r\n        \"addedFromRepository\": state.estimation.filter.addedFromRepository,\r\n        \"addedByNegotiator\": state.estimation.filter.addedByNegotiator,\r\n        \"addedByEstimator\": state.estimation.filter.addedByEstimator,\r\n        \"hasError\": state.estimation.filter.hasError\r\n\r\n    }\r\n\r\n})\r\n\r\nconst EstimationFilterFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EstimationFilterForm)\r\n\r\nexport default EstimationFilterFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/EstimationFilterFormContainer.js","import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        return <nav key=\"headerNav\" className=\"navbar navbar-default\">\r\n            <div className=\"container\">\r\n                <div className=\"navbar-header\"><Link className=\"navbar-brand\" to=\"/\"></Link>\r\n                    <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\"\r\n                            aria-expanded=\"false\"><span\r\n                        className=\"sr-only\">Toggle navigation</span> <span className=\"icon-bar\"></span> <span\r\n                        className=\"icon-bar\"></span> <span className=\"icon-bar\"></span></button>\r\n                </div>\r\n                <div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n                    <div className=\"navbar-right\">\r\n\r\n                        {this.props.loggedInUser ?\r\n                            <span className=\"pull-right user-icon\">\r\n                                <div className=\"dropdown\" key={'1'}>\r\n                                        <span className=\"dropdown-toggle hoverTooltip span-hover\"\r\n                                              type=\"button\" data-toggle=\"dropdown\"><i className=\"fa fa-user\"><i\r\n                                            className=\"fa fa-caret-down\"></i></i>\r\n                                        </span>\r\n                                            <ul className=\"dropdown-menu\">\r\n                                                <li key={12}>\r\n                                                    <a href={'/logout'}><i\r\n                                                        className=\"fa fa-sign-out\"></i> Logout</a>\r\n                                                </li>\r\n                                            </ul>\r\n                                </div>\r\n                            </span> : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    }\r\n\r\n}\r\n\r\nexport default Header\n\n\n// WEBPACK FOOTER //\n// ./client/components/sections/Header.js","import * as AC from \"./actionConsts\"\r\nimport {addProjects, deleteProject, editProject} from \"./projectAction\";\r\n\r\n\r\nexport const addModules = (modules) => ({\r\n    type: AC.ADD_MODULES,\r\n    modules: modules\r\n})\r\n\r\nexport const addModule = (module) => ({\r\n    type: AC.ADD_MODULE,\r\n    module: module\r\n})\r\n\r\n\r\nexport const editModule = (module) => ({\r\n    type: AC.EDIT_MODULE,\r\n    module: module\r\n})\r\n\r\n\r\nexport const deleteModule = (moduleID) => ({\r\n    type: AC.DELETE_MODULE,\r\n    moduleID: moduleID\r\n})\r\n\r\n\r\n\r\nexport const getAllModulesFromServer = () => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/modules', {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addModules(json.data))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const addModuleOnServer = (formInput) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/modules',\r\n            {\r\n                method: \"post\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n            if (json.success) {\r\n                dispatch(addModule(json.data))\r\n\r\n\r\n            }\r\n            return json\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const editModuleOnServer = (module) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/modules',\r\n            {\r\n                method: \"put\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(module)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n            if (json.success) {\r\n                dispatch(editModule(json.data))\r\n            }\r\n            return json\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteModuleOnServer = (moduleID) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/modules/' + moduleID,\r\n            {\r\n                method: \"delete\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n            if (json.success) {\r\n                dispatch(deleteModule(moduleID))\r\n            }\r\n            return json\r\n        })\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/actions/moduleAction.js","import React from 'react';\r\nimport {hydrate} from 'react-dom'\r\nimport AppRouterContainer from './containers/AppRouterContainer'\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {Provider} from 'react-redux'\r\nimport {createStore, applyMiddleware} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport reducers from './reducers'\r\n\r\nlet store = createStore(reducers, __PRELOADED_STATE__, applyMiddleware(thunkMiddleware, logger))\r\n//let store = createStore(reducers, __PRELOADED_STATE__, applyMiddleware(thunkMiddleware))\r\nconst App = props =>\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <AppRouterContainer/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n\r\n\r\nwindow.onload = () => {\r\n    hydrate(\r\n        <App/>,\r\n        document.getElementById('root')\r\n    )\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/client.js","import React, {Component} from 'react'\r\nimport {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport {renderField} from './fields'\r\nimport {number, required} from \"./validation\";\r\nimport {connect} from 'react-redux'\r\n\r\nclass EmployeeSettingForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {handleSubmit, pristine, submitting, _id} = this.props;\r\n        return (\r\n            <form key=\"EmployeeSettingForm\" onSubmit={this.props.handleSubmit}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n\r\n                        <Field name=\"_id\" component=\"input\" type=\"hidden\"/>\r\n                        <Field name=\"minPlannedHours\" label=\"Min Planned Hours:\" component={renderField}\r\n                               validate={[required, number]}/>\r\n                        <Field name=\"maxPlannedHours\" label=\"Max Planned Hours:\" component={renderField}\r\n                               validate={[required, number]}/>\r\n                        <Field name=\"free\" label=\"Free:\" component={renderField} validate={[required]}/>\r\n                        <Field name=\"relativelyFree\" label=\"Relatively Free:\" component={renderField}\r\n                               validate={[required, number]}/>\r\n                        <Field name=\"someWhatBusy\" label=\"Somewhat Busy:\" component={renderField}\r\n                               validate={[required, number]}/>\r\n                        <Field name=\"busy\" label=\"Busy:\" component={renderField} validate={[required, number]}/>\r\n                        <Field name=\"superBusy\" label=\"Super Busy:\" component={renderField}\r\n                               validate={[required, number]}/>\r\n                        <button type=\"submit\"\r\n                                disabled={pristine || submitting}\r\n                                className=\"btn btn-submit\">{(!this.props._id && \"Create\") || (this.props._id && \"Update\")}\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nEmployeeSettingForm = reduxForm({\r\n    form: 'employee-setting'\r\n})(EmployeeSettingForm)\r\n\r\nconst selector = formValueSelector('employee-setting')\r\n\r\nEmployeeSettingForm = connect(\r\n    state => {\r\n        const _id = selector(state, '_id')\r\n        return {_id}\r\n\r\n    }\r\n)(EmployeeSettingForm)\r\n\r\nexport default EmployeeSettingForm\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/EmployeeSettingForm.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {LeaveApprovalReasonFormContainer} from \"../../containers\"\r\n\r\nconst LeaveRejectDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Leave Reject</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <h4>Are you sure you want to <b> Reject </b>this leave. Please confirm!\r\n            </h4>\r\n            <LeaveApprovalReasonFormContainer isApproved={false}/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default LeaveRejectDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/LeaveRejectDialog.js","import {connect} from 'react-redux'\r\nimport * as A from '../../actions'\r\nimport {WarningList} from \"../../components\"\r\nimport * as COC from '../../components/componentConsts'\r\nimport {withRouter} from 'react-router-dom'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    fetchWarningOnFlags: (warningType, release) => dispatch(A.getAllWarningsOfThisReleaseFromServer(warningType, release._id)),\r\n    getAllWarnings: (release) => dispatch(A.getAllWarningsOfThisReleaseFromServer(SC.ALL, release._id))\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    warnings: state.warning.all,\r\n    release: state.release.selectedRelease\r\n})\r\n\r\nconst WarningListContainer = withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(WarningList))\r\n\r\nexport default WarningListContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/WarningListContainer.js","import {connect} from 'react-redux'\r\nimport {UserList} from \"../../components\"\r\nimport * as A from \"../../actions\"\r\nimport * as COC from \"../../components/componentConsts\";\r\nimport {initialize, SubmissionError} from 'redux-form'\r\nimport {NotificationManager} from \"react-notifications\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    editUser: (user) => {\r\n        dispatch(A.showComponentHideOthers(COC.USER_FORM)),\r\n            dispatch(initialize('user', user))\r\n    },\r\n    deleteUser: (userId) => dispatch(A.deleteUserOnServer(userId)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success('User Deleted Successfully')\r\n        } else {\r\n            NotificationManager.error('User Not Deleted!')\r\n            throw new SubmissionError({users: \"User Deletion Failed\"})\r\n        }\r\n    }),\r\n    showUserForm: () => dispatch(A.showComponentHideOthers(COC.USER_FORM))\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loggedInUser: state.user.loggedIn,\r\n        users: state.user.all\r\n    }\r\n}\r\n\r\nconst UserListContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UserList)\r\n\r\nexport default UserListContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/UserListContainer.js","import {connect} from 'react-redux'\r\nimport {ProjectForm} from \"../../components\"\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as EC from \"../../../server/errorcodes\";\r\nimport {SubmissionError} from \"redux-form\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        if (!values._id) {\r\n            return dispatch(A.addProjectOnServer(values)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success('Project Added Successfully')\r\n                    dispatch(A.hideComponent(COC.PROJECT_FORM_DIALOG))\r\n\r\n                } else {\r\n                    NotificationManager.error('Project Not Added!')\r\n                    if (json.code == EC.ALREADY_EXISTS)\r\n                        throw new SubmissionError({name: \"Project Already Exists\"})\r\n                }\r\n                return json\r\n            })\r\n        } else {\r\n            return dispatch(A.editProjectOnServer(values)).then(response => {\r\n                if (response.success) {\r\n                    dispatch(A.hideComponent(COC.PROJECT_FORM_DIALOG)),\r\n                        NotificationManager.success('Project Updated Successfully')\r\n                } else {\r\n                    NotificationManager.error('Project Updated Failed');\r\n                    if (response.code == EC.ALREADY_EXISTS)\r\n                        throw new SubmissionError({name: \"Project Already Exists\"})\r\n                }\r\n                return json\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    clients: state.client.all,\r\n    projects: state.project.all,\r\n\r\n})\r\n\r\nconst ProjectInitiateFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ProjectForm)\r\n\r\nexport default ProjectInitiateFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/ProjectFormContainer.js","import {connect} from 'react-redux'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {EstimationList} from \"../../components\"\r\nimport * as logger from '../../clientLogger'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    showEstimationInitiateForm: () => {\r\n        dispatch(A.getAllProjectsFromServer())\r\n        dispatch(A.getAllModulesFromServer())\r\n        dispatch(A.getAllUsersFromServer())\r\n        dispatch(A.getAllTechnologiesFromServer())\r\n        dispatch(A.getAllDevelopmentTypesFromServer())\r\n        dispatch(A.showComponent(COC.ESTIMATION_INITIATE_DIALOG))\r\n    },\r\n    estimationSelected: (estimation) => {\r\n        logger.debug(logger.ESTIMATION_LIST_CONNECT, \"estimation:\", estimation)\r\n        return dispatch(A.getEstimationFromServer(estimation._id)).then(json => {\r\n            dispatch(A.showComponentHideOthers(COC.ESTIMATION_DETAIL_PAGE))\r\n        })\r\n    },\r\n    getAllEstimations: (projectID, status) => {\r\n        dispatch(A.getAllEstimationsFromServer(projectID, status))\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loggedInUser: state.user.loggedIn,\r\n        estimations: state.estimation.all,\r\n        projects: state.project.all\r\n    }\r\n}\r\n\r\nconst EstimationListContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EstimationList)\r\n\r\nexport default EstimationListContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/EstimationListContainer.js","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport * as logger from '../../clientLogger'\r\nimport _ from 'lodash'\r\nimport {EstimationTask} from \"../\"\r\nimport {connect} from 'react-redux'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport {initialize} from 'redux-form'\r\nimport * as EC from \"../../../server/errorcodes\";\r\nimport {ConfirmationDialog} from \"../index\";\r\nimport * as CM from \"../../clientMsg\"\r\n\r\n\r\nclass EstimationFeature extends React.PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showFeatureDeletionDialog: false,\r\n            showTaskDeletionRequestedDialog: false,\r\n            featureDeletion: undefined\r\n        }\r\n\r\n    }\r\n\r\n    onClose() {\r\n        this.setState({showFeatureDeletionDialog: false})\r\n        this.setState({showTaskDeletionRequestedDialog: false})\r\n\r\n    }\r\n\r\n    onConfirmFeatureDelete() {\r\n        this.setState({showFeatureDeletionDialog: false})\r\n        this.props.deleteFeature(this.state.featureDeletion);\r\n    }\r\n\r\n    onConfirmTaskDeleteRequest() {\r\n        this.setState({showTaskDeletionRequestedDialog: false})\r\n        this.props.deleteFeature(this.props.feature)\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const {feature, loggedInUserRole, estimationStatus, index, expanded, expandedTaskID, editView} = this.props\r\n\r\n        let buttons = [];\r\n\r\n        logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'logged in user is ', loggedInUserRole)\r\n        logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'task owner ', feature.owner)\r\n        logger.debug(logger.ESTIMATION_FEATURE_RENDER, this.props)\r\n\r\n        if (loggedInUserRole == SC.ROLE_NEGOTIATOR) {\r\n\r\n\r\n            /**\r\n             * Negotiator would always be able to edit any task (would be considered as suggestions), first button hence would always be edit\r\n             * He would also be able to delete any task\r\n             */\r\n\r\n\r\n            //condition for feature approval\r\n            if (feature.status === SC.STATUS_PENDING && _.includes([SC.STATUS_REVIEW_REQUESTED, SC.STATUS_INITIATED, SC.STATUS_ESTIMATION_REQUESTED, SC.STATUS_CHANGE_REQUESTED], estimationStatus)) {\r\n\r\n                if (feature.canApprove) {\r\n                    buttons.push(editView ?\r\n                        <img className=\"div-hover\" key=\"approve\" src=\"/images/approve.png\" title=\"Approve\"\r\n                             onClick={() => {\r\n                                 this.props.approveFeature(feature)\r\n                             }}/> :\r\n                        <img key=\"approve_disable\" src=\"/images/approve_disable.png\" title=\"Approve\"/>)\r\n                }\r\n\r\n                if (feature.negotiator.changeSuggested || (feature.addedInThisIteration && feature.owner == SC.OWNER_NEGOTIATOR)) {\r\n                    /*first button*/\r\n                    // As negotiator has requested change, means he has added/changed his suggestions during this iteration, show appropriate suggestion button\r\n                    buttons.push(editView && feature.repo && feature.repo.addedFromThisEstimation ?\r\n                        <img className=\"div-hover\" key=\"suggestion_outgoing\" src=\"/images/suggestion_outgoing.png\"\r\n                             title=\"Suggestion-Outgoing\"\r\n                             onClick={() => {\r\n                                 this.props.showFeatureSuggestionForm(feature, loggedInUserRole)\r\n                             }}/> :\r\n                        <img key=\"suggestion_outgoing_disable\" src=\"/images/suggestion_outgoing_disable.png\"\r\n                             title=\"Suggestion-Outgoing\"/>)\r\n                } else if (feature.estimator.changedKeyInformation || (feature.addedInThisIteration && feature.owner == SC.OWNER_ESTIMATOR)) {\r\n\r\n                    // Estimator has changed key information in previous iteration, so show that to negotiator\r\n                    buttons.push(editView && feature.repo && feature.repo.addedFromThisEstimation ?\r\n                        <img className=\"div-hover\" key=\"suggestion_incoming\" src=\"/images/suggestion_incoming.png\"\r\n                             title=\"Suggestion-Incoming\"\r\n                             onClick={() => {\r\n                                 this.props.showFeatureSuggestionForm(feature, loggedInUserRole)\r\n                             }}/> :\r\n                        <img key=\"suggestion_incoming_disable\" src=\"/images/suggestion_incoming_disable.png\"\r\n                             title=\"Suggestion-Incoming\"/>)\r\n                }\r\n                else {\r\n                    buttons.push(editView && feature.repo && feature.repo.addedFromThisEstimation ?\r\n                        <img className=\"div-hover\" key=\"suggestion\" src=\"/images/suggestion.png\" title=\"Suggestion\"\r\n                             onClick={() => {\r\n                                 this.props.showFeatureSuggestionForm(feature, loggedInUserRole)\r\n                             }}/> :\r\n                        <img key=\"suggestion_disable\" src=\"/images/suggestion_disable.png\" title=\"Suggestion\"/>)\r\n                }\r\n\r\n\r\n                /*second button*/\r\n                //requested delete permission by estimator to negotiator\r\n                if (feature.estimator.removalRequested) {\r\n                    // Estimator has requested removal\r\n                    buttons.push(editView ?\r\n                        <img className=\"div-hover\" key=\"he_requested_delete\" src=\"/images/he_requested_delete.png\"\r\n                             title=\"Delete-Requested\"\r\n                             onClick={() => {\r\n                                 this.setState({showTaskDeletionRequestedDialog: true})\r\n                             }}/> :\r\n                        <img key=\"he_requested_delete_disable\" src=\"/images/he_requested_delete_disable.png\"\r\n                             title=\"Delete-Requested\"/>)\r\n                } else {\r\n                    buttons.push(editView ?\r\n                        <img className=\"div-hover\" key=\"delete\" src=\"/images/delete.png\" title=\"Delete\"\r\n                             onClick={() => {\r\n                                 this.setState({showFeatureDeletionDialog: true})\r\n                                 this.setState({featureDeletion: feature})\r\n                                 //this.props.deleteFeature(feature)\r\n                             }}/> :\r\n                        <img key=\"delete_disable\" src=\"/images/delete_disable.png\" title=\"Delete\"/>)\r\n                }\r\n\r\n            } else if (feature.status === SC.STATUS_APPROVED && feature.estimator && feature.estimator.changeRequested) {\r\n                /*Single button*/\r\n\r\n                if (feature.negotiator.changeGranted) {\r\n                    // estimator has requested Reopen which negotiator has granted\r\n                    buttons.push(editView ?\r\n                        <img className=\"div-hover\" key=\"granted_reopen\" src=\"/images/reopen_granted.png\"\r\n                             title=\"Reopen-Granted\"\r\n                             onClick={() => {\r\n                                 this.props.toggleGrantEdit(feature)\r\n                             }}/> :\r\n                        <img key=\"granted_reopen_disable\" src=\"/images/reopen_granted_disable.png\"\r\n                             title=\"Reopen-Granted\"/>)\r\n                } else {\r\n                    // estimator has requested change but negotiator has not granted it till now\r\n                    logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'changeRequested/not granted, heRequestedEditFeature')\r\n                    buttons.push(editView ?\r\n                        <img className=\"div-hover\" key=\"he_requested_reopen\" src=\"/images/he_requested_reopen.png\"\r\n                             title=\"Reopen-Requested\"\r\n                             onClick={() => {\r\n                                 this.props.toggleGrantEdit(feature)\r\n                             }}/> :\r\n                        <img key=\"he_requested_reopen_disable\" src=\"/images/he_requested_reopen_disable.png\"\r\n                             title=\"Reopen-Requested\"/>)\r\n                }\r\n            }\r\n            else {\r\n                buttons.push(editView ?\r\n                    <img className=\"div-hover\" key=\"reopen\" src=\"/images/reopen.png\" title=\"Reopen\"\r\n                         onClick={() => {\r\n                             this.props.reOpenFeature(feature)\r\n                         }}/> :\r\n                    <img key=\"reopen_disable\" src=\"/images/reopen_disable.png\" title=\"Reopen\"/>)\r\n\r\n            }\r\n        }\r\n        else if (loggedInUserRole == SC.ROLE_ESTIMATOR) {\r\n\r\n            /**\r\n             * First button show to estimator would always be edit or its variations\r\n             **/\r\n            if (feature.status === SC.STATUS_PENDING && _.includes([SC.STATUS_REVIEW_REQUESTED, SC.STATUS_ESTIMATION_REQUESTED, SC.STATUS_CHANGE_REQUESTED], estimationStatus)) {\r\n                //First Button\r\n\r\n\r\n                if (feature.addedInThisIteration && !feature.estimator.changedKeyInformation) {\r\n                    if (feature.owner == SC.OWNER_ESTIMATOR) {\r\n                        // Show direct edit and delete button if estimator currently added that feature\r\n                        buttons.push(editView && feature.repo && feature.repo.addedFromThisEstimation ?\r\n                            <img className=\"div-hover\" key=\"edit\" src=\"/images/edit.png\" title=\"Edit\"\r\n                                 onClick={() => {\r\n                                     this.props.showEditFeatureForm(feature)\r\n                                 }}/> :\r\n                            <img key=\"edit_disable\" src=\"/images/edit_disable.png\" title=\"Edit\"/>)\r\n\r\n                        buttons.push(editView ?\r\n                            <img className=\"div-hover\" key=\"delete\" src=\"/images/delete.png\" title=\"Delete\"\r\n                                 onClick={() => {\r\n                                     this.setState({showFeatureDeletionDialog: true})\r\n                                     this.setState({featureDeletion: feature})\r\n                                 }}/> :\r\n                            <img key=\"delete_disable\" src=\"/images/delete_disable.png\" title=\"Delete\"/>)\r\n                    } else if (feature.owner == SC.OWNER_NEGOTIATOR) {\r\n                        // Show Suggestion button if negotiator currently added that feature\r\n                        buttons.push(editView && feature.repo && feature.repo.addedFromThisEstimation ?\r\n                            <img className=\"div-hover\" key=\"suggestion_incoming\"\r\n                                 src=\"/images/suggestion_incoming.png\" title=\"Suggestion-Incoming\"\r\n                                 onClick={() => {\r\n                                     this.props.showFeatureSuggestionForm(feature, loggedInUserRole)\r\n                                 }}/> :\r\n                            <img key=\"suggestion_incoming_disable\" src=\"/images/suggestion_incoming_disable.png\"\r\n                                 title=\"Suggestion-Incoming\"/>)\r\n\r\n                    }\r\n                } else if (feature.estimator.changedKeyInformation) {\r\n                    // Estimator has changed key information so show estimator icon to notify that\r\n                    buttons.push(editView && feature.repo && feature.repo.addedFromThisEstimation ?\r\n                        <img className=\"div-hover\" key=\"suggestion_outgoing\" src=\"/images/suggestion_outgoing.png\"\r\n                             title=\"Suggestion-Outgoing\"\r\n                             onClick={() => {\r\n                                 this.props.showFeatureSuggestionForm(feature, loggedInUserRole)\r\n                             }}/> :\r\n                        <img key=\"suggestion_outgoing_disable\" src=\"/images/suggestion_outgoing_disable.png\"\r\n                             title=\"Suggestion-Outgoing\"/>)\r\n                } else if (feature.negotiator.changeSuggested) {\r\n                    logger.debug(logger.ESTIMATION_FEATURE_BUTTONS, 'negotiator requested change, he_requested_edit button')\r\n                    // Negotiator has requested change\r\n\r\n                    buttons.push(editView && feature.repo && feature.repo.addedFromThisEstimation ?\r\n                        <img className=\"div-hover\" key=\"suggestion_incoming\"\r\n                             src=\"/images/suggestion_incoming.png\" title=\"Suggestion-Incoming\"\r\n                             onClick={() => {\r\n                                 this.props.showFeatureSuggestionForm(feature, loggedInUserRole)\r\n                             }}/> :\r\n                        <img key=\"suggestion_incoming_disable\" src=\"/images/suggestion_incoming_disable.png\"\r\n                             title=\"Suggestion-Incoming\"/>)\r\n                } else {\r\n                    buttons.push(editView && feature.repo && feature.repo.addedFromThisEstimation ?\r\n                        <img className=\"div-hover\" key=\"suggestion\" src=\"/images/suggestion.png\" title=\"Suggestion\"\r\n                             onClick={() => {\r\n                                 this.props.showFeatureSuggestionForm(feature, loggedInUserRole)\r\n                             }}/> :\r\n                        <img key=\"suggestion_disable\" src=\"/images/suggestion_disable.png\" title=\"Suggestion\"/>)\r\n                }\r\n\r\n\r\n                if (!feature.addedInThisIteration || feature.owner != SC.OWNER_ESTIMATOR) {\r\n                    if (feature.estimator.removalRequested) {\r\n                        // Estimator has requested removal\r\n                        buttons.push(editView ?\r\n                            <img className=\"div-hover\" key=\"requested_delete\" src=\"/images/requested_delete.png\"\r\n                                 title=\"Delete-Requested\"\r\n                                 onClick={() => {\r\n                                     this.props.toggleDeleteRequest(feature)\r\n                                 }}/> :\r\n                            <img key=\"requested_delete_disable\" src=\"/images/requested_delete_disable.png\"\r\n                                 title=\"Delete-Requested\"/>)\r\n                    } else {\r\n                        // Estimator can request removal\r\n                        buttons.push(editView ?\r\n                            <img className=\"div-hover\" key=\"request_delete\" src=\"/images/request_delete.png\"\r\n                                 title=\"Delete-Request\"\r\n                                 onClick={() => {\r\n                                     this.props.toggleDeleteRequest(feature)\r\n                                 }}/> : <img key=\"request_delete_disable\" src=\"/images/request_delete_disable.png\"\r\n                                             title=\"Delete-Request\"/>)\r\n                    }\r\n                }\r\n\r\n            } else if (feature.status === SC.STATUS_APPROVED) {\r\n                if (feature.estimator.changeRequested) {\r\n                    if (feature.negotiator.changeGranted) {\r\n                        // estimator has requested change which negotiator has granted\r\n                        logger.debug(logger.ESTIMATION_FEATURE_BUTTONS, 'changeRequested/changeGranted, he_granted_edit')\r\n                        buttons.push(editView ?\r\n                            <img className=\"div-hover\" key=\"he_granted_reopen\" src=\"/images/he_granted_reopen.png\"\r\n                                 title=\"Reopen-Granted\"\r\n                                 onClick={() => {\r\n                                     this.props.showEditFeatureForm(feature)\r\n                                 }}/> :\r\n                            <img key=\"he_granted_reopen_disable\" src=\"/images/he_granted_reopen_disable.png\"\r\n                                 title=\"Reopen-Granted\"/>)\r\n                    } else {\r\n                        // estimator has requested change but negotiator has not granted it till now\r\n                        buttons.push(editView ?\r\n                            <img className=\"div-hover\" key=\"requested_reopen\" src=\"/images/reopen_requested.png\"\r\n                                 title=\"Reopen-Requested\"\r\n                                 onClick={() => {\r\n                                     this.props.toggleEditRequest(feature)\r\n                                 }}/> :\r\n                            <img key=\"requested_reopen_disable\" src=\"/images/reopen_requested_disable.png\"\r\n                                 title=\"Reopen-Requested\"/>)\r\n                    }\r\n                } else {\r\n                    buttons.push(editView ?\r\n                        <img className=\"div-hover\" key=\"request_reopen\" src=\"/images/reopen_request.png\"\r\n                             title=\"Reopen-Request\"\r\n                             onClick={() => {\r\n                                 this.props.toggleEditRequest(feature)\r\n                             }}/> :\r\n                        <img key=\"request_reopen_disable\" src=\"/images/reopen_request_disable.png\"\r\n                             title=\"Reopen-Request\"/>)\r\n                }\r\n            }\r\n        }\r\n\r\n        return <div className={expanded ? 'feature-expanded' : 'feature'}>\r\n            <div className=\"col-md-12 pad\">\r\n                <div className=\"col-md-9\">\r\n                    <div\r\n                        className={feature.estimator && feature.estimator.name ? \"col-md-11 div-hover \" : \"col-md-11 div-hover infoHighliter\"}\r\n                        onClick={() => {\r\n                            this.props.expandFeature(feature._id)\r\n                        }}>\r\n                        <h4 title={feature.estimator && feature.estimator.name ? feature.estimator.name : \"Feature is not having name by estimator\"}>{feature.estimator.name ? feature.estimator.name : feature.negotiator.name}</h4>\r\n\r\n                    </div>\r\n                    {feature.status === SC.STATUS_PENDING && feature.hasError == true ?\r\n                        <div className=\"col-md-1\">\r\n\r\n                            <img key=\"exclaimation\" className=\"errorClass div-hover\" src=\"/images/exclamation.png\"\r\n                                 title={feature.estimator && feature.estimator.name ? feature.estimator.description ? feature.estimator.estimatedHours ? feature.tasks && feature.tasks ? \"Any task of this feature is not approved/ Some changes is done in this iteration\" : \"Feature is not having any task\" : \"Feature is not having estimated hours by estimator\" : \"Feature is not having description by estimator\" : \"Feature is not having name by estimator\"}\r\n                            ></img>\r\n                        </div> : null}\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"col-md-3\">\r\n                    <div>\r\n                        {\r\n                            this.state.showTaskDeletionRequestedDialog &&\r\n                            <ConfirmationDialog show={true} onConfirm={this.onConfirmTaskDeleteRequest.bind(this)}\r\n                                                title={CM.DELETE_TASK} onClose={this.onClose.bind(this)}\r\n                                                body={CM.DELETE_TASK_BODY}/>\r\n                        }\r\n                        {this.state.showFeatureDeletionDialog &&\r\n                        <ConfirmationDialog show={true} onConfirm={this.onConfirmFeatureDelete.bind(this)}\r\n                                            title={CM.DELETE_FEATURE} onClose={this.onClose.bind(this)}\r\n                                            body={CM.DELETE_FEATURE_BODY}/>\r\n                        }\r\n\r\n                        {feature.owner == SC.OWNER_ESTIMATOR && feature.addedInThisIteration &&\r\n                        <div className=\"flagStrip\">\r\n                            <img key=\"estimator_new_flag\" src=\"/images/estimator_new_flag.png\"\r\n                                 title=\"Added by Estimator\"></img>\r\n                        </div>}\r\n\r\n                        {feature.owner == SC.OWNER_NEGOTIATOR && feature.addedInThisIteration &&\r\n                        <div className=\"flagStrip\">\r\n                            <img key=\"negotiator_new_flag\" src=\"/images/negotiator_new_flag.png\"\r\n                                 title=\"Added by Negotiator\"></img>\r\n                        </div>}\r\n\r\n                        {feature.estimator.changedInThisIteration && <div className=\"flagStrip\">\r\n                            <img key=\"estimator_edit_flag\" src=\"/images/estimator_edit_flag.png\"\r\n                                 title=\"Edited by Estimator\"></img>\r\n                        </div>}\r\n\r\n                        {feature.negotiator.changedInThisIteration && <div className=\"flagStrip\">\r\n                            <img key=\"negotiator_edit_flag\" src=\"/images/negotiator_edit_flag.png\"\r\n                                 title=\"Edited by Negotiator\"></img>\r\n                        </div>}\r\n                        {feature.estimator && feature.estimator.requestedInThisIteration && (feature.estimator.changeRequested || feature.estimator.removalRequested) &&\r\n                        <div className=\"flagStrip\">\r\n                            <img key=\"request_flag\" src=\"/images/request_flag.png\"\r\n                                 title=\"Requested by Estimator\"></img>\r\n                        </div>}\r\n\r\n                        {feature.status === SC.STATUS_APPROVED &&\r\n                        <div className=\"flagStrip\">\r\n                            <img key=\"approved_flag\" src=\"/images/approved_flag.png\"\r\n                                 title=\"Approved\"/>\r\n                        </div>}\r\n\r\n                        {feature.repo && !feature.repo.addedFromThisEstimation &&\r\n                        <div className=\"flagStrip\">\r\n                            <img key=\"repo_flag\" src=\"/images/repo_flag.png\" title=\"From Repository\"></img>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div\r\n                className={feature.estimator.description ? \"col-md-12 short-description  div-hover\" : \"col-md-12 short-description infoHighliter\"}\r\n                onClick={() => {\r\n                    this.props.expandFeature(feature._id)\r\n                }}>\r\n                <p title={feature.estimator.description ? feature.estimator.description : \"Feature is not having description by estimator\"}>{feature.estimator.description ? feature.estimator.description : feature.negotiator.description}</p>\r\n            </div>\r\n            {\r\n                <div\r\n                    className={feature.estimator && feature.estimator.estimatedHours ? \"col-md-3 \" : \"col-md-3 infoHighliter\"}>\r\n                    <h4 title={feature.estimator && feature.estimator.estimatedHours ? feature.estimator.estimatedHours : \"Feature is not having task inside it hence no Estimated Hours \"}>\r\n                        Estimated:</h4>\r\n                    <h4>&nbsp;{typeof(feature.estimator.estimatedHours) == 'number' ? feature.estimator.estimatedHours + ' Hrs' : ''}</h4>\r\n                </div>\r\n            }\r\n            <div className=\"col-md-3\">\r\n                <h4 title={feature.negotiator.estimatedHours ? feature.negotiator.estimatedHours : \"feature is not having task inside it hence no Suggested Hours\"}>\r\n                    Suggested:</h4>\r\n                <h4>&nbsp;{typeof(feature.negotiator.estimatedHours) == 'number' ? feature.negotiator.estimatedHours + ' Hrs' : ''}</h4>\r\n            </div>\r\n\r\n            <div className=\"col-md-6 text-right estimationActions\">\r\n                {buttons}\r\n            </div>\r\n            {expanded && <div className=\"col-md-11 col-md-offset-1\">\r\n                {\r\n                    Array.isArray(feature.tasks) && feature.tasks.length > 0 &&\r\n                    feature.tasks.map((t, idx) => (expandedTaskID && expandedTaskID === t._id) ?\r\n                        <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...{\r\n                            fromRepoWithFeature: feature.repo && !feature.repo.addedFromThisEstimation ? true : false,\r\n                            estimationStatus,\r\n                            loggedInUserRole,\r\n                            editView\r\n                        }}\r\n                                        expanded={true}/> :\r\n                        <EstimationTask task={t} index={idx} key={\"task\" + idx}  {...{\r\n                            fromRepoWithFeature: feature.repo && !feature.repo.addedFromThisEstimation ? true : false,\r\n                            estimationStatus,\r\n                            loggedInUserRole,\r\n                            editView\r\n                        }} />)\r\n                }\r\n            </div>\r\n            }\r\n\r\n\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nEstimationFeature\r\n    .propTypes = {\r\n    feature: PropTypes.object.isRequired,\r\n    loggedInUserRole: PropTypes.string.isRequired,\r\n    estimationStatus: PropTypes.string.isRequired,\r\n    expanded: PropTypes.bool\r\n}\r\n\r\nEstimationFeature\r\n    .defaultProps = {\r\n    expanded: false,\r\n    editView: false\r\n}\r\n\r\n\r\nEstimationFeature = connect(null, (dispatch, ownProps) => ({\r\n\r\n        showEditFeatureForm: (values) => {\r\n            // would always be called by estimator\r\n            dispatch(A.showComponent(COC.ESTIMATION_FEATURE_DIALOG))\r\n            // initialize\r\n            let feature = {}\r\n            feature.estimation = values.estimation\r\n            feature._id = values._id\r\n            feature.name = values.estimator.name\r\n            feature.description = values.estimator.description\r\n            dispatch(initialize('estimation-feature', feature))\r\n        },\r\n\r\n\r\n        showFeatureSuggestionForm: (values, loggedInUserRole) => {\r\n            // Can be called by both estimator and negotiator\r\n            let feature = {\r\n                loggedInUserRole: loggedInUserRole,\r\n                readOnly: {}\r\n            }\r\n            feature._id = values._id\r\n            feature.estimation = values.estimation\r\n            if (loggedInUserRole == SC.ROLE_NEGOTIATOR) {\r\n                /* Since negotiator is logged in, he would see details of negotiator section in editable form and details of estimator section in read only form  */\r\n                feature.name = values.negotiator.name\r\n                feature.description = values.negotiator.description\r\n\r\n                feature.readOnly.name = values.estimator.name\r\n                feature.readOnly.description = values.estimator.description\r\n\r\n            } else if (loggedInUserRole == SC.ROLE_ESTIMATOR) {\r\n                /* Since estimator is logged in, he would see details of  estimator section in editable form  */\r\n                feature.name = values.estimator.name\r\n                feature.description = values.estimator.description\r\n\r\n                feature.readOnly.name = values.negotiator.name\r\n                feature.readOnly.description = values.negotiator.description\r\n\r\n            }\r\n            dispatch(initialize(\"estimation-suggest-feature\", feature))\r\n            dispatch(A.showComponent(COC.ESTIMATION_SUGGEST_FEATURE_FORM_DIALOG))\r\n\r\n        },\r\n\r\n\r\n        deleteFeature: (feature) => {\r\n            return dispatch(A.deleteFeatureByEstimatorOnServer(feature.estimation._id, feature._id)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success(\"Feature Deleted successfully\")\r\n                }\r\n                else if (json.code && json.code == EC.INVALID_USER) {\r\n                    NotificationManager.error(\"Feature Deletion Failed You are not owner of this feature !\")\r\n                } else if (json.code && json.code == EC.ACCESS_DENIED) {\r\n                    NotificationManager.error(\"You are not allowed to delete this feature !\")\r\n                }\r\n                else\r\n                    NotificationManager.error(\"Feature Deletion Failed !\")\r\n\r\n            })\r\n        },\r\n\r\n\r\n        toggleEditRequest: (values) => {\r\n            return dispatch(A.requestForFeatureEditPermissionOnServer(values._id)).then(json => {\r\n                if (json.success) {\r\n\r\n                    if (json.data && json.data.estimator && json.data.estimator.changeRequested)\r\n                        NotificationManager.success(\"Reopen request on Feature raised...\")\r\n                    else\r\n                        NotificationManager.success(\"Reopen request on Feature cleared...\")\r\n                } else {\r\n                    NotificationManager.error(\"Unknown error occurred\")\r\n                }\r\n            })\r\n\r\n        },\r\n\r\n\r\n        toggleGrantEdit: (values) => {\r\n            return dispatch(A.grantEditPermissionOfFeatureOnServer(values._id)).then(json => {\r\n                if (json.success) {\r\n                    if (json.data && json.data.negotiator && json.data.negotiator.changeGranted)\r\n                        NotificationManager.success(\"Reopen permission on Feature granted...\")\r\n                    else\r\n                        NotificationManager.success(\"Reopen permission on Feature not granted...\")\r\n                }\r\n                else {\r\n                    NotificationManager.error('Permission Grant Failed')\r\n                }\r\n            })\r\n        },\r\n\r\n        toggleDeleteRequest: (values) => {\r\n            return dispatch(A.requestForFeatureDeletePermissionOnServer(values._id)).then(json => {\r\n                if (json.success) {\r\n                    if (json.data && json.data.estimator && json.data.estimator.removalRequested)\r\n                        NotificationManager.success(\"Delete request on Feature raised...\")\r\n                    else\r\n                        NotificationManager.success(\"Delete request on Feature cleared...\")\r\n                } else {\r\n                    if (json.code == EC.INVALID_OPERATION)\r\n                        NotificationManager.error(\"Feature Delete already requested\")\r\n                    else\r\n                        NotificationManager.error(\"Unknown error occurred\")\r\n                }\r\n            })\r\n        },\r\n        reOpenFeature: (values) => {\r\n            return dispatch(A.reOpenFeatureOnServer(values._id)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success(\"Feature ReOpen\")\r\n                }\r\n                else {\r\n                    NotificationManager.error('Feature  Not ReOpen')\r\n                }\r\n\r\n            })\r\n        },\r\n        approveFeature: (values) => {\r\n            return dispatch(A.approveFeatureByNegotiatorOnServer(values._id)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success(\"Feature Approved ...\")\r\n                }\r\n                else {\r\n                    if (json.code == EC.TASK_APPROVAL_ERROR) {\r\n                        NotificationManager.error('First All the task of feature should be approved')\r\n                    } else if (json.code == EC.FEATURE_APPROVAL_ERROR) {\r\n                        NotificationManager.error('First details of feature should be filled on estimator')\r\n                    }\r\n                    else {\r\n                        NotificationManager.error('Feature Not Approved')\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            })\r\n        },\r\n        expandFeature: (featureID) => {\r\n            dispatch(A.expandFeature(featureID))\r\n        }\r\n\r\n    })\r\n)(EstimationFeature)\r\n\r\nexport default EstimationFeature\n\n\n// WEBPACK FOOTER //\n// ./client/components/sections/EstimationFeature.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport {withRouter} from 'react-router-dom'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport {NotificationManager} from 'react-notifications'\r\n\r\nclass ReleasePlanList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.options = {\r\n            onRowClick: this.onRowClick.bind(this),\r\n            sizePerPageList: [{\r\n                text: '6', value: 6\r\n            }, {\r\n                text: '10', value: 10\r\n            }, {\r\n                text: '20', value: 20\r\n            }, {\r\n                text: '50', value: 50\r\n            }],\r\n            sizePerPage: 6,  // which size per page you want to locate as default\r\n\r\n        }\r\n        this.state = {\r\n            status: SC.ALL,\r\n            flag: SC.ALL\r\n        }\r\n        this.onFlagChange = this.onFlagChange.bind(this)\r\n        this.onStatusChange = this.onStatusChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllReleasePlans(this.props.release)\r\n    }\r\n\r\n    onFlagChange(flag) {\r\n        this.setState({flag: flag})\r\n        this.props.changeReleaseFlag(this.props.release, this.state.status, flag)\r\n    }\r\n\r\n    onStatusChange(status) {\r\n        this.setState({status: status})\r\n        this.props.changeReleaseStatus(this.props.release, status, this.state.flag)\r\n    }\r\n\r\n    onRowClick(row) {\r\n        console.log(\"row\", row)\r\n        if (row.release.iteration.iterationType === SC.ITERATION_TYPE_UNPLANNED) {\r\n            NotificationManager.error(\"Cannot add tasks to 'unplanned' release plans\")\r\n        }\r\n        else {\r\n            this.props.history.push(\"/app-home/release-task-planning\")\r\n            this.props.releasePlanSelected(row, this.props.release.rolesInThisRelease)\r\n        }\r\n\r\n    }\r\n\r\n    formatEstimatedHours(task) {\r\n        if (task)\r\n            return task.estimatedHours\r\n        return 0\r\n    }\r\n\r\n    formatPlannedHours(planning) {\r\n        if (planning)\r\n            return planning.plannedHours\r\n        return 0\r\n    }\r\n\r\n    formatReportedHours(report) {\r\n        if (report)\r\n            return report.reportedHours\r\n        return 0\r\n    }\r\n\r\n    formatReportedStatus(report) {\r\n        if (report)\r\n            return report.finalStatus\r\n        return 'unplanned'\r\n    }\r\n\r\n\r\n    formatTaskName(task, row) {\r\n\r\n        if (task) {\r\n            if (row.release.iteration.iterationType == SC.ITERATION_TYPE_PLANNED)\r\n                return <span style={{color: '#4172c1'}}>{task.name}</span>\r\n            else if (row.release.iteration.iterationType == SC.ITERATION_TYPE_UNPLANNED)\r\n                return <span style={{color: '#e52d8c'}}>{task.name}</span>\r\n            else\r\n                return <span>{task.name}</span>\r\n        }\r\n\r\n        return ''\r\n    }\r\n\r\n    formatProgress(report) {\r\n        if (report)\r\n            return report.progress + '%'\r\n        return ''\r\n    }\r\n\r\n\r\n    formatFlags(flags) {\r\n        let flagImageArray = []\r\n        flagImageArray = flags && flags.length ? flags.map((flag, idx) => {\r\n            if (flag === SC.WARNING_UNPLANNED)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"unplanned\" + idx} src=\"/images/unplanned.png\"\r\n                            title=\"Unplanned\"/>\r\n            else if (flag === SC.WARNING_TOO_MANY_HOURS)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"too_many_hours\" + idx}\r\n                            src=\"/images/too_many_hours.png\"\r\n                            title=\"Too Many Hours\"/>\r\n            else if (flag === SC.WARNING_EMPLOYEE_ON_LEAVE)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"employee-on-leave\" + idx}\r\n                            src=\"/images/employee_on_leave.png\"\r\n                            title=\"Employee On Leave\"/>\r\n            else if (flag === SC.WARNING_RELEASE_DATE_MISSED_1)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"release_date_missed_1\" + idx}\r\n                            src=\"/images/release_date_missed_1.png\"\r\n                            title=\"Release Date Missed 1\"/>\r\n            else if (flag === SC.WARNING_RELEASE_DATE_MISSED_2)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"release_date_missed_2\" + idx}\r\n                            src=\"/images/release_date_missed_2.png\"\r\n                            title=\"Release Date Missed 2\"/>\r\n            else if (flag === SC.WARNING_RELEASE_DATE_MISSED_3)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"release_date_missed_3\" + idx}\r\n                            src=\"/images/release_date_missed_3.png\"\r\n                            title=\"Release Date Missed 3\"/>\r\n            else if (flag === SC.WARNING_RELEASE_DATE_MISSED_4)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"release_date_missed_4\" + idx}\r\n                            src=\"/images/release_date_missed_4.png\"\r\n                            title=\"Release Date Missed 4\"/>\r\n            else if (flag === SC.WARNING_PLANNED_BEYOND_RELEASE_DATE)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"planned_beyond_release_date\" + idx}\r\n                            src=\"/images/planned_beyond_release_date.png\"\r\n                            title=\"Planned Beyond Release Date\"/>\r\n            else if (flag === SC.WARNING_LESS_PLANNED_HOURS)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"less_planned_hours\" + idx}\r\n                            src=\"/images/less_planned_hours.png\"\r\n                            title=\"Less Planned Hours\"/>\r\n            else if (flag === SC.WARNING_MORE_PLANNED_HOURS)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"more_planned_hours\" + idx}\r\n                            src=\"/images/more_planned_hours.png\"\r\n                            title=\"More Planned Hours\"/>\r\n            else if (flag === SC.WARNING_MORE_REPORTED_HOURS_1)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"more_reported_hours_1\" + idx}\r\n                            src=\"/images/more_reported_hours_1.png\"\r\n                            title=\"More Reported Hours 1\"/>\r\n            else if (flag === SC.WARNING_MORE_REPORTED_HOURS_2)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"more_reported_hours_2\" + idx}\r\n                            src=\"/images/more_reported_hours_2.png\"\r\n                            title=\"More Reported Hours 2\"/>\r\n            else if (flag === SC.WARNING_MORE_REPORTED_HOURS_3)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"more_reported_hours_3\" + idx}\r\n                            src=\"/images/more_reported_hours_3.png\"\r\n                            title=\"More Reported Hours 3\"/>\r\n            else if (flag === SC.WARNING_MORE_REPORTED_HOURS_4)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"more_reported_hours_4\" + idx}\r\n                            src=\"/images/more_reported_hours_4.png\"\r\n                            title=\"More Reported Hours 4\"/>\r\n            else if (flag === SC.WARNING_HAS_UNREPORTED_DAYS)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"has-unreported-days\" + idx}\r\n                            src=\"/images/has_unreported_days.png\"\r\n                            title=\"Has Unreported Days\"/>\r\n            else if (flag === SC.WARNING_UNREPORTED)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"unreported\" + idx}\r\n                            src=\"/images/unreported.png\"\r\n                            title=\"Unreported\"/>\r\n            else if (flag === SC.WARNING_PENDING_ON_END_DATE)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"pending-on-enddate\" + idx}\r\n                            src=\"/images/pending-on-enddate.png\"\r\n                            title=\"Pending On Enddate\"/>\r\n            else if (flag === SC.WARNING_COMPLETED_BEFORE_END_DATE)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"completed-before-enddate\" + idx}\r\n                            src=\"/images/completed_before_enddate.png\"\r\n                            title=\"Completed Before Enddate\"/>\r\n            else if (flag === SC.WARNING_EMPLOYEE_ASK_FOR_LEAVE)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"employee-ask-for-leave\"}\r\n                            src=\"/images/employee-ask-for-leave.png\"\r\n                            title=\"Employee Ask For Leave\"/>\r\n            else return ''\r\n        }) : null\r\n        return <span>{flagImageArray}</span>\r\n\r\n    }\r\n\r\n    render() {\r\n        let team = 0\r\n        const {release, releasePlans} = this.props\r\n        return ([\r\n                <div key={\"release-plan-search\"} className=\"col-md-12 release-options\">\r\n                    <button type=\"button\" className=\"col-md-2 btn customBtn\" onClick={\r\n                        () => {\r\n                            this.props.showAddToReleasePlanForm(release)\r\n                        }}>Add Task\r\n                    </button>\r\n                    <div className=\"search-btn-container\">\r\n                        <select className=\"form-control\" title=\"Select Flag\" onChange={(flag) =>\r\n                            this.onFlagChange(flag.target.value)\r\n                        }>\r\n                            <option value={SC.ALL}>All Flags</option>\r\n                            {SC.ALL_WARNING_NAME_ARRAY.map((warning, idx) => <option\r\n                                key={warning + idx} value={warning}>{warning}</option>)}\r\n\r\n                        </select>\r\n                    </div>\r\n                    {/*\r\n                        <div className=\"col-md-4 search-dropdown\">\r\n                            <select className=\"form-control\" title=\"Select Status\"\r\n                                    onChange={(status) => this.onStatusChange(status.target.value)}>\r\n                                <option value={SC.ALL}>All Status</option>\r\n                                <option value={SC.STATUS_UNPLANNED}>{SC.STATUS_UNPLANNED}</option>\r\n                                <option value={SC.STATUS_PENDING}>{SC.STATUS_PENDING}</option>\r\n                                <option value={SC.STATUS_DEV_IN_PROGRESS}>{SC.STATUS_DEV_IN_PROGRESS}</option>\r\n                                <option value={SC.STATUS_DEV_COMPLETED}>{SC.STATUS_DEV_COMPLETED}</option>\r\n                                <option value={SC.STATUS_RELEASED}>{SC.STATUS_RELEASED}</option>\r\n                                <option value={SC.STATUS_ISSUE_FIXING}>{SC.STATUS_ISSUE_FIXING}</option>\r\n                                <option value={SC.STATUS_OVER}>{SC.STATUS_OVER}</option>\r\n\r\n                            </select>\r\n                        </div>\r\n                    */}\r\n                </div>\r\n                ,\r\n                <div key={\"releaseplan-table\"} className=\"col-md-12 estimation release-plan-table\">\r\n                    <BootstrapTable options={this.options} data={releasePlans}\r\n                                    multiColumnSearch={true}\r\n                                    search={false}\r\n                                    striped={true}\r\n                                    pagination\r\n                                    hover={true}\r\n                                    height={\"300px\"}>\r\n                        <TableHeaderColumn columnTitle isKey dataField='_id'\r\n                                           hidden={true}>ID</TableHeaderColumn>\r\n\r\n                        <TableHeaderColumn width=\"20%\" columnTitle dataField='task'\r\n                                           dataFormat={this.formatTaskName.bind(this)}>Task\r\n                            Name</TableHeaderColumn>\r\n\r\n                        <TableHeaderColumn width=\"12%\" columnTitle dataField='report'\r\n                                           dataFormat={this.formatProgress.bind(this)}\r\n                                           dataAlign={\"right\"}>Progress</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"20%\" dataField='flags'\r\n                                           dataFormat={this.formatFlags.bind(this)}>\r\n                            Flag</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"12%\" columnTitle dataField='task'\r\n                                           dataFormat={this.formatEstimatedHours.bind(this)} dataAlign={\"right\"}>Estimated\r\n                            Hours</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"12%\" columnTitle dataField='planning'\r\n                                           dataFormat={this.formatPlannedHours.bind(this)} dataAlign={\"right\"}>Planned\r\n                            Hours</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"12%\" columnTitle dataField='report'\r\n                                           dataFormat={this.formatReportedHours.bind(this)} dataAlign={\"right\"}>Reported\r\n                            Hours</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"12%\" columnTitle dataField='report'\r\n                                           dataFormat={this.formatReportedStatus.bind(this)} dataAlign={\"center\"}>Status\r\n                        </TableHeaderColumn>\r\n\r\n                    </BootstrapTable>\r\n\r\n                </div>\r\n            ]\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ReleasePlanList)\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/ReleasePlanList.js","import {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport React from 'react'\r\nimport {required} from './validation'\r\nimport {renderText, renderTextArea} from './fields'\r\nimport * as logger from '../../clientLogger'\r\nimport {connect} from \"react-redux\";\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nlet EstimationSuggestFeatureForm = (props) => {\r\n    logger.debug(logger.ESTIMATION_TASK_FORM_RENDER, props)\r\n    const {pristine, submitting, reset, change} = props\r\n    const {estimation, readOnly} = props\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div className=\"col-md-12\">\r\n            <div className=\"col-md-5\">\r\n                <div className=\"col-md-1\">\r\n                    {estimation.loggedInUserRole == SC.ROLE_NEGOTIATOR ?\r\n                        <img key=\"estimator\" className=\"suggestionUser div-hover\" src=\"/images/estimator.png\"\r\n                             title=\"Estimator End\"/> :\r\n                        estimation.loggedInUserRole == SC.ROLE_ESTIMATOR ?\r\n                            <img key=\"negotiator\" className=\"suggestionUser div-hover\" src=\"/images/negotiator.png\"\r\n                                 title=\"Negotiator End\"/> : null\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-11\">\r\n                    {estimation.loggedInUserRole == SC.ROLE_NEGOTIATOR ?\r\n                        <h4 className=\"estimatorClr\">Estimator</h4> :\r\n                        estimation.loggedInUserRole == SC.ROLE_ESTIMATOR ?\r\n                            <h4 className=\"negotiatorClr\">Negotiator</h4> : null\r\n                    }\r\n\r\n                    <div className=\"row\">\r\n\r\n                        <Field name=\"estimation._id\" component=\"input\" type=\"hidden\"/>\r\n                        <Field name=\"_id\" component=\"input\" type=\"hidden\"/>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <Field name=\"readOnly.name\"\r\n                                   readOnly={true}\r\n                                   component={renderText}\r\n                                   label={\"Feature Name:\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <Field name=\"readOnly.description\"\r\n                                   readOnly={true}\r\n                                   component={renderTextArea}\r\n                                   rows=\"10\"\r\n                                   label=\"Feature Description:\"\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div className=\"col-md-2 \">\r\n                <button type=\"button\" className=\"suggestCopy btn-link\"\r\n                        title=\"Copy Feature Details\"\r\n                        onClick={() => {\r\n                            change(\"name\", readOnly.name)\r\n                            change(\"description\", readOnly.description)\r\n                        }}><i className=\"glyphicon glyphicon-arrow-right\"></i></button>\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n                <div className=\"col-md-1\">\r\n                    {estimation.loggedInUserRole == SC.ROLE_ESTIMATOR ?\r\n                        <img key=\"estimator\" className=\"suggestionUser div-hover\" src=\"/images/estimator.png\"\r\n                             title=\"Estimator End\"/> :\r\n                        estimation.loggedInUserRole == SC.ROLE_NEGOTIATOR ?\r\n                            <img key=\"negotiator\" className=\"suggestionUser div-hover\" src=\"/images/negotiator.png\"\r\n                                 title=\"Negotiator End\"/> : null\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-11\">\r\n                    {estimation.loggedInUserRole == SC.ROLE_ESTIMATOR ?\r\n                        <h4 className=\"estimatorClr\">{estimation.loggedInUserRole}</h4> :\r\n                        estimation.loggedInUserRole == SC.ROLE_NEGOTIATOR ?\r\n                            <h4 className=\"negotiatorClr\">{estimation.loggedInUserRole}</h4> : null\r\n                    }\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <Field\r\n                                name=\"name\"\r\n                                component={renderText}\r\n                                label={\"Feature Name:\"}\r\n                                validate={required}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <Field\r\n                                name=\"description\"\r\n                                component={renderTextArea}\r\n                                label=\"Feature Description:\"\r\n                                rows=\"10\"\r\n                                validate={required}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div className=\"row initiatEstimation\">\r\n                <div className=\"col-md-6 text-center\">\r\n                    <button type=\"submit\" disabled={pristine || submitting} className=\"btn customBtn\">Save</button>\r\n                </div>\r\n                <div className=\"col-md-6 text-center\">\r\n                    <button type=\"button\" disabled={pristine || submitting} className=\"btn customBtn\" onClick={reset}>\r\n                        Reset\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nEstimationSuggestFeatureForm = reduxForm({\r\n    form: 'estimation-suggest-feature'\r\n})(EstimationSuggestFeatureForm)\r\n\r\nconst selector = formValueSelector('estimation-suggest-feature')\r\n\r\nEstimationSuggestFeatureForm = connect(\r\n    state => {\r\n        const loggedInUserRole = selector(state, 'loggedInUserRole')\r\n        const readOnly = {\r\n            name: selector(state, 'readOnly.name'),\r\n            description: selector(state, 'readOnly.description')\r\n        }\r\n        return {\r\n            loggedInUserRole,\r\n            readOnly\r\n        }\r\n    }\r\n)(EstimationSuggestFeatureForm)\r\n\r\n\r\nexport default EstimationSuggestFeatureForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/EstimationSuggestFeatureForm.js","import {connect} from 'react-redux'\r\nimport {MoveTaskInFeatureForm} from \"../../components\"\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as EC from \"../../../server/errorcodes\";\r\nimport * as SC from \"../../../server/serverconstants\";\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (formValues) => {\r\n        return dispatch(A.moveTaskIntoFeatureOnServer(formValues._id, formValues.featureID)).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success('Task Moved Successfully')\r\n                dispatch(A.hideComponent(COC.MOVE_TASK_TO_FEATURE_FORM_DIALOG))\r\n            } else {\r\n                if (json.code == EC.MOVE_TASK_IN_FEATURE_ERROR) {\r\n                    NotificationManager.error('Task cant be moved as feature selected is approved')\r\n                } else {\r\n                    NotificationManager.error('Process Failed')\r\n                }\r\n\r\n            }\r\n            return json\r\n        })\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let features = []\r\n    if (state.estimation && state.estimation.features && Array.isArray(state.estimation.features) && state.estimation.features.length) {\r\n        features = state.estimation.features.filter(f => f.status != SC.STATUS_APPROVED && (f.repo && f.repo.addedFromThisEstimation == true) || f.repo == undefined)\r\n    }\r\n    return {\r\n        features\r\n    }\r\n\r\n}\r\n\r\nconst MoveTaskInFeatureFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MoveTaskInFeatureForm)\r\n\r\nexport default MoveTaskInFeatureFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/MoveTaskInFeatureFormContainer.js","import React, {Component} from 'react'\r\nimport moment from 'moment'\r\nimport {Timeline, TimelineEvent} from 'react-event-timeline'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport _ from 'lodash'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass LeaveDetailPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        const {leave} = this.props\r\n        let approval = leave && leave.status && ( leave.status === SC.LEAVE_STATUS_APPROVED || leave.status === SC.LEAVE_STATUS_CANCELLED )\r\n        return (\r\n            <Timeline>\r\n                <span>\r\n                    <button className=\"btn-link calArrow\" style={{marginLeft: '-3%'}}\r\n                            onClick={() => {\r\n                                this.props.history.push('/app-home/leave')\r\n                                this.props.leaveGoBack()\r\n                            }}>\r\n                        <i className=\"glyphicon glyphicon-arrow-left\"></i></button>\r\n                </span>\r\n                <TimelineEvent style={{fontSize: '20px'}}\r\n                               title={'Created Date:'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}>\r\n\r\n                    {leave && leave.created ? moment(leave.created).format(\"DD-MM-YYYY hh:mm:ss\") : ''}\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent style={{fontSize: '20px'}}\r\n                               title={'Start Date:'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}>\r\n\r\n                    {leave && leave.startDateString && !_.isEmpty(leave.startDateString) ? leave.startDateString : ''}\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent style={{fontSize: '20px'}}\r\n                               title={'End Date:'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}>\r\n\r\n                    {leave && leave.endDateString && !_.isEmpty(leave.endDateString) ? leave.endDateString : ''}\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent style={{fontSize: '20px'}}\r\n                               title={'Total Leave Days:'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}>\r\n\r\n                    {leave && leave.numberOfLeaveDays ? leave.numberOfLeaveDays : ''}\r\n                </TimelineEvent>\r\n\r\n\r\n                <TimelineEvent style={{fontSize: '20px'}}\r\n                               title={'Leave Day Type:'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}>\r\n                    {leave && leave.dayType ? leave.dayType : ''}\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent style={leave.status === SC.LEAVE_STATUS_APPROVED ? {\r\n                    color: \"green\",\r\n                    fontSize: '20px'\r\n                } : leave.status === SC.LEAVE_STATUS_CANCELLED ? {color: \"red\", fontSize: '20px'} : {fontSize: '20px'}}\r\n                               title={'Leave Status:'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}>\r\n\r\n                    {leave && leave.status ? leave.status : ''}\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent style={{fontSize: '20px'}}\r\n                               title={'Leave Raised By:'}\r\n                               icon={<i className=\"glyphicon glyphicon-user calendar_icon\"></i>}>\r\n\r\n                    {leave && leave.user && leave.user.firstName ? leave.user.firstName + \" \" + leave.user.lastName : ''}\r\n                </TimelineEvent>\r\n\r\n                <TimelineEvent style={{fontSize: '20px'}}\r\n                               title={'Leave Type:'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}>\r\n\r\n                    {leave && leave.leaveType && leave.leaveType.name ? leave.leaveType.name : ''}\r\n                </TimelineEvent>\r\n\r\n\r\n                <TimelineEvent style={{fontSize: '20px'}}\r\n                               title={'Leave Description:'}\r\n                               icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}>\r\n\r\n                    {leave && leave.description ? leave.description : ''}\r\n                </TimelineEvent>\r\n                {approval ?\r\n                    <TimelineEvent title={'Leave Approval :'}\r\n                                   icon={<i className=\"glyphicon glyphicon-user calendar_icon\"></i>}\r\n                                   style={{fontSize: '20px'}}>\r\n                        <Timeline>\r\n                            <TimelineEvent style={{fontSize: '20px'}}\r\n                                           title={leave.status === SC.LEAVE_STATUS_APPROVED ? 'APPROVED BY:' : \"REJECTED BY:\"}\r\n                                           icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}>\r\n\r\n                                {leave && leave.approver && leave.approver.name ? leave.approver.name : ''}\r\n                            </TimelineEvent>\r\n                            <TimelineEvent style={{fontSize: '20px'}}\r\n                                           title={'REASON:'}\r\n                                           icon={<i className=\"glyphicon glyphicon-tasks calendar_icon\"></i>}>\r\n\r\n                                {leave && leave.approver && leave.approver.reason ? leave.approver.reason : ''}\r\n                            </TimelineEvent>\r\n                        </Timeline>\r\n                    </TimelineEvent> : <span></span>\r\n                }\r\n\r\n            </Timeline>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(LeaveDetailPage)\n\n\n// WEBPACK FOOTER //\n// ./client/components/pages/LeaveDetailPage.js","import {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport React from 'react'\r\nimport {number, required} from './validation'\r\nimport {renderSelect, renderText, renderTextArea} from './fields'\r\nimport * as logger from '../../clientLogger'\r\nimport * as CC from '../../clientconstants'\r\nimport {connect} from \"react-redux\";\r\n\r\nlet EstimationTaskForm = (props) => {\r\n    logger.debug(logger.ESTIMATION_TASK_FORM_RENDER, props)\r\n    const {_id, pristine, submitting, reset, features, handleSubmit, isFromRepo} = props\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n\r\n            <Field name=\"estimation._id\" component=\"input\" type=\"hidden\"/>\r\n            <Field name=\"_id\" component=\"input\" type=\"hidden\"/>\r\n\r\n            <div className=\"col-md-6\">\r\n                <Field name=\"name\" readOnly={isFromRepo} component={renderText} label={\"Task Name:\"}\r\n                       validate={[required]}/>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <Field name=\"estimatedHours\" component={renderText} label={\"Estimated Hours:\"}\r\n                       validate={[required, number]}/>\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <Field name=\"description\" readOnly={isFromRepo} component={renderTextArea} label=\"Task Description:\"\r\n                       validate={[required]}\r\n                       rows=\"10\"/>\r\n            </div>\r\n\r\n        </div>\r\n        {/* User would not be able to update feature during update operation, he would have to move task to feature or move out of it*/}\r\n        {!_id &&\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <Field name=\"feature._id\" readOnly={isFromRepo} component={renderSelect} label={\"Feature:\"}\r\n                       options={features}\r\n                       valueField=\"_id\"\r\n                       displayField=\"estimator.name\"\r\n                       optionalDisplayField=\"negotiator.name\"\r\n                />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <Field name=\"type\" component={renderSelect} label={\"Type:\"} options={[\r\n                    {_id: CC.TYPE_DEVELOPMENT, name: CC.TYPE_DEVELOPMENT},\r\n                    {_id: CC.TYPE_MANAGEMENT, name: CC.TYPE_MANAGEMENT},\r\n                    {_id: CC.TYPE_REVIEW, name: CC.TYPE_REVIEW},\r\n                    {_id: CC.TYPE_TESTING, name: CC.TYPE_TESTING}\r\n                ]}\r\n                       showNoneOption={false}\r\n\r\n                />\r\n            </div>\r\n        </div>\r\n        }\r\n        <div className=\"row initiatEstimation\">\r\n            <div className=\"col-md-6 text-center\">\r\n                <button type=\"submit\" disabled={pristine || submitting}\r\n                        className=\"btn customBtn\">{_id ? \"Update\" : \"Submit\"}\r\n                </button>\r\n            </div>\r\n            <div className=\"col-md-6 text-center\">\r\n                <button type=\"button\" disabled={pristine || submitting} className=\"btn customBtn\" onClick={reset}>\r\n                    Reset\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nEstimationTaskForm = reduxForm({\r\n    form: 'estimation-task'\r\n})(EstimationTaskForm)\r\n\r\nconst selector = formValueSelector('estimation-task')\r\n\r\nEstimationTaskForm = connect(\r\n    state => {\r\n        const {_id, isFromRepo} = selector(state, '_id', 'isFromRepo')\r\n        return {\r\n            _id,\r\n            isFromRepo\r\n        }\r\n    }\r\n)(EstimationTaskForm)\r\n\r\n\r\nexport default EstimationTaskForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/EstimationTaskForm.js","import * as AC from \"../actions/actionConsts\";\r\n\r\nlet initialState = {\r\n    workCalendar: {}\r\n}\r\n\r\nlet employeeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AC.ADD_WORK_CALENDAR:\r\n            return Object.assign({}, state, {\r\n                workCalendar: action.calendar\r\n            })\r\n        case AC.RELEASE_PLAN_SELECTED:\r\n            // clear past work calendar as user selected release plan again\r\n            return Object.assign({}, state, {\r\n                workCalendar: {}\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default employeeReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/employeeReducer.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {EstimationTaskFormContainer} from \"../../containers\"\r\n\r\nconst EstimationTaskDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Add Task to Estimation</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <EstimationTaskFormContainer/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default EstimationTaskDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/EstimationTaskDialog.js","import * as A from \"../../actions\";\r\nimport * as COC from \"../../components/componentConsts\";\r\nimport * as logger from \"../../clientLogger\";\r\nimport {connect} from \"react-redux\";\r\nimport {TechnologyList} from \"../../components\";\r\nimport {NotificationManager} from \"react-notifications\";\r\nimport {SubmissionError} from \"redux-form\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    showTechnologyAdditionForm: () => {\r\n        logger.debug(logger.TECHNOLOGY_FORM_CONNECT, \"onSubmit:values:\")\r\n        dispatch(A.showComponent(COC.TECHNOLOGY_FORM_DIALOG))\r\n    },\r\n    deleteTechnology: (TechnologyID) => dispatch(A.deleteTechnologyOnServer(TechnologyID)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success('Technology Removed Successfully')\r\n        } else {\r\n            NotificationManager.error('Technology Not removed!')\r\n            throw new SubmissionError({Technologies: \"Technology Removal Failed\"})\r\n        }\r\n    }),\r\n\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loggedInUser: state.user.loggedIn,\r\n        technologies: state.technology.all\r\n    }\r\n}\r\n\r\nconst TechnologyListContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TechnologyList)\r\n\r\nexport default TechnologyListContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/TechnologyListContainer.js","import * as AC from '../actions/actionConsts'\r\n\r\nlet initialState = {\r\n    showLoader: false, // used to show/hide loader gif\r\n    ssrFlag: false, // used for server side rendering\r\n    visibleComponents: [], // which components should be visible in a particular tab,\r\n    allReleases: [],\r\n    selectedReleaseID: undefined\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case AC.SHOW_LOADER:\r\n            return Object.assign({}, state, {\r\n                showLoader: true\r\n            })\r\n        case AC.HIDE_LOADER:\r\n            return Object.assign({}, state, {\r\n                showLoader: false\r\n            })\r\n        case AC.SHOW_COMPONENT_HIDE_OTHER:\r\n            return Object.assign({}, state, {\r\n                visibleComponents: [action.name]\r\n            })\r\n        case AC.SHOW_COMPONENT:\r\n            return Object.assign({}, state, {\r\n                visibleComponents: [...state.visibleComponents, action.name]\r\n            })\r\n        case AC.HIDE_COMPONENT:\r\n            return Object.assign({}, state, {\r\n                visibleComponents: state.visibleComponents.filter(name => name !== action.name)\r\n            })\r\n        case AC.ADD_SSR_FLAG:\r\n            let newState = Object.assign({}, state, {\r\n                ssrFlag: true\r\n            })\r\n            console.log(\"new state is \", newState)\r\n            return newState\r\n        case AC.CLEAR_SSR_FLAG:\r\n            return Object.assign({}, state, {\r\n                ssrFlag: false\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default appReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/appReducer.js","import * as SC from \"../server/serverconstants\"\r\nimport * as CC from \"./clientconstants\"\r\n\r\n/*\r\nLOG LEVEL\r\nDEBUG - Would print all log statements (debug, info, warn, error)\r\nINFO - Would ignore DEBUG logs\r\nWARN - Would print log statements warn and error\r\nERROR - error log statements would be printed\r\n */\r\n\r\n\r\n/*\r\n Setting trace number to any number would ensure that only those logs are printed that have that number as first parameter\r\n If trace number is set only those log statement would be printed that have that trace number (ir-respective of its type debug, info etc)\r\n Set trace number as undefined to print log statement based on its type and not by its number\r\n*/\r\n\r\nexport const TABS_CHANGE_TAB = 'Tabs->changeTab():'\r\nexport const TABS_LIFE_CYCLE = 'Tabs->lc():'\r\nexport const TABS_RENDER = 'Tabs->render():'\r\n\r\nexport const USER_FORM_RENDER = 'UserForm->render():'\r\n\r\nexport const PERMISSION_FORM_RENDER = 'PermissionForm->render():'\r\nexport const PERMISSION_FORM_LIFECYCLE = 'PermissionForm->lc():'\r\nexport const PERMISSION_FORM_CONNECT = 'PermissionForm->connect():'\r\nexport const PERMISSION_LIST_RENDER = 'PermissionList->render():'\r\nexport const PERMISSION_LIST_LIFECYCLE = 'PermissionList->lc():'\r\nexport const PERMISSION_LIST_CONNECT = 'PermissionList->connect():'\r\nexport const PERMISSION_THUNK = 'Permission->thunk():'\r\n\r\nexport const CLIENT_FORM_RENDER = 'ClientForm->render():'\r\nexport const CLIENT_FORM_CONNECT = 'ClientForm->connect():'\r\n\r\nexport const CONTENT_MAIN_RENDER = 'ContentMain->render():'\r\nexport const CONTENT_MAIN_LIFECYCLE = 'ContentMain->lc():'\r\n\r\nexport const USER_PROFILE_FORM_CONNECT = 'UserProfileForm->connect():'\r\nexport const ESTIMATION_INITIATE_FORM_SUBMIT = 'EstimationInitiateForm->submit():'\r\nexport const ESTIMATION_INITIATE_FORM_RENDER = 'EstimationInitiateForm->render():'\r\n\r\nexport const ESTIMATION_TASK_FORM_SUBMIT = 'EstimationTaskForm->submit():'\r\nexport const ESTIMATION_TASK_FORM_RENDER = 'EstimationTaskForm->render():'\r\nexport const ESTIMATION_FEATURE_FORM_RENDER = 'EstimationFeatureForm->render():'\r\nexport const ESTIMATION_FEATURE_FORM_SUBMIT = 'EstimationFeatureForm->submit():'\r\nexport const ESTIMATION_SUGGEST_FEATURE_FORM_SUBMIT = 'EstimationSuggestFeatureForm->submit():'\r\nexport const ESTIMATION_PROJECT_AWARD_FORM_RENDER = 'EstimationProjectAwardForm->render():'\r\nexport const ESTIMATION_PROJECT_AWARD_FORM_SUBMIT = 'EstimationProjectAwardForm->submit():'\r\n\r\nexport const ESTIMATION_LIST_CONNECT = \"EstimationList->connect():\"\r\n\r\nexport const TECHNOLOGY_FORM_RENDER = 'TechnologyForm->render():'\r\nexport const TECHNOLOGY_FORM_CONNECT = 'TechnologyForm->connect():'\r\nexport const TECHNOLOGY_FORM_LIFECYCLE = 'TechnologyForm->lc():'\r\n\r\nexport const PROJECT_FORM_RENDER = 'ProjectForm->render():'\r\nexport const PROJECT_FORM_CONNECT = 'ProjectForm->connect():'\r\n\r\nexport const ESTIMATION_DETAIL_RENDER = 'EstimationDetail->render():'\r\nexport const ESTIMATION_TASK_RENDER = 'EstimationTask->render():'\r\nexport const ESTIMATION_TASK_LIFECYCLE = 'EstimationTask->lc():'\r\nexport const ESTIMATION_TASK_BUTTONS = 'EstimationTask->buttons:'\r\nexport const ESTIMATION_FEATURE_RENDER = 'EstimationFeature->render():'\r\nexport const ESTIMATION_FEATURE_BUTTONS = 'EstimationFeature->buttons:'\r\nexport const ESTIMATION_FEATURE_DETAIL_RENDER = 'EstimationFeatureDetail->render():'\r\n\r\nexport const ATTENDENCE_SETTING_FORM_RENDER = 'AttendenceForm->render():'\r\nexport const ATTENDENCE_SETTING_FORM_CONNECT = 'AttendenceForm->connect():'\r\n\r\nlet traceCodes = [ESTIMATION_TASK_RENDER, ESTIMATION_FEATURE_RENDER, ESTIMATION_FEATURE_DETAIL_RENDER]\r\n//let traceCodes = undefined\r\nlet logLevel = CC.DEBUG_LEVEL\r\n\r\nif (process.env.NODE_ENV == SC.PROD_ENV) {\r\n    traceCodes = undefined\r\n    logLevel = CC.ERROR_LEVEL\r\n}\r\n\r\nconst debug = (...params) => {\r\n    if (logLevel === CC.DEBUG_LEVEL) {\r\n        if (traceCodes && traceCodes.indexOf(params[0]) != -1)\r\n            console.log(\"DEBUG:\", ...params)\r\n        else if (!traceCodes) {\r\n            console.log(\"DEBUG:\", ...params)\r\n        }\r\n    }\r\n}\r\n\r\nlet info = (...params) => {\r\n    if (logLevel === CC.DEBUG_LEVEL || logLevel === CC.INFO_LEVEL) {\r\n        if (traceCodes && traceCodes.indexOf(params[0]) != -1)\r\n            console.log(\"INFO:\", ...params)\r\n        else if (!traceCodes) {\r\n            console.log(\"INFO:\", ...params)\r\n        }\r\n    }\r\n}\r\n\r\nlet warn = (...params) => {\r\n    if (logLevel === CC.DEBUG_LEVEL || logLevel === CC.INFO_LEVEL || logLevel === CC.WARNING_LEVEL) {\r\n        if (traceCodes && traceCodes.indexOf(params[0]) != -1)\r\n            console.log(\"WARN:\", ...params)\r\n        else if (!traceCodes) {\r\n            console.log(\"WARN:\", ...params)\r\n        }\r\n    }\r\n}\r\n\r\nlet error = (...params) => {\r\n    if (logLevel === CC.DEBUG_LEVEL || logLevel === CC.INFO_LEVEL || logLevel === CC.WARNING_LEVEL || logLevel === CC.ERROR_LEVEL) {\r\n        if (traceCodes && traceCodes.indexOf(params[0]) != -1)\r\n            console.log(\"ERROR:\", ...params)\r\n        else if (!traceCodes) {\r\n            console.log(\"ERROR:\", ...params)\r\n        }\r\n    }\r\n}\r\n\r\nexport {debug, warn, info, error}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/clientLogger.js","import * as AC from './actionConsts'\r\n\r\nexport const showComponentHideOthers = name => ({\r\n    type: AC.SHOW_COMPONENT_HIDE_OTHER,\r\n    name: name\r\n})\r\n\r\nexport const showComponent = name => ({\r\n    type: AC.SHOW_COMPONENT,\r\n    name: name\r\n})\r\n\r\nexport const hideComponent = name => ({\r\n    type: AC.HIDE_COMPONENT,\r\n    name: name\r\n})\r\n\r\nexport const addSSRFlag = () => ({\r\n    type: AC.ADD_SSR_FLAG\r\n})\r\n\r\nexport const clearSSRFlag = () => ({\r\n    type: AC.CLEAR_SSR_FLAG\r\n})\r\n\r\n\r\nexport const showLoader = () => ({\r\n    type: AC.SHOW_LOADER\r\n})\r\n\r\nexport const hideLoader = () => ({\r\n    type: AC.HIDE_LOADER\r\n})\n\n\n// WEBPACK FOOTER //\n// ./client/actions/appAction.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {ConfirmationDialog} from \"../index\";\r\nimport * as CM from \"../../clientMsg\"\r\n\r\nclass ClientList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showClientDeletionDialog: false,\r\n            addRow: null\r\n        }\r\n\r\n    }\r\n\r\n    onClose() {\r\n        this.setState({showClientDeletionDialog: false})\r\n    }\r\n\r\n    OkConfirmationForDeletingClient() {\r\n        this.setState({showClientDeletionDialog: false})\r\n        this.props.deleteClient(this.state.addRow)\r\n    }\r\n\r\n    viewDeleteButton(cell, row, enumObject, rowIndex) {\r\n\r\n\r\n        return (<button className=\" btn btn-custom \" type=\"button\" onClick={() => {\r\n                this.setState({showClientDeletionDialog: true}),\r\n                    this.setState({addRow: row._id})\r\n            }}>\r\n                <i className=\"fa fa-trash\"></i>\r\n            </button>\r\n        )\r\n\r\n    }\r\n\r\n    viewEditButton(cell, row, enumObject, rowIndex) {\r\n\r\n\r\n        return (<button className=\" btn btn-custom\" type=\"button\" onClick={() => {\r\n                this.props.showClientEditForm(row)\r\n\r\n            }}>\r\n                <i className=\"fa fa-pencil\"></i>\r\n            </button>\r\n\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>{this.state.showClientDeletionDialog &&\r\n            <ConfirmationDialog show={true} onConfirm={this.OkConfirmationForDeletingClient.bind(this)}\r\n                                title={CM.DELETE_CLIENT} onClose={this.onClose.bind(this)}\r\n                                body={CM.DELETE_CLIENT_BODY}/>\r\n            }\r\n                <div key=\"client_list\" className=\"clearfix\">\r\n\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"col-md-12 pad\">\r\n\r\n                            <div className=\"col-md-12\">\r\n                                <button className=\"btn customBtn\"\r\n                                        onClick={() => this.props.showClientCreationForm()}>Create Client\r\n                                </button>\r\n\r\n                                <div className=\"estimation\">\r\n\r\n                                    <BootstrapTable options={this.options} data={this.props.clients}\r\n                                                    striped={true}\r\n                                                    hover={true}>\r\n                                        <TableHeaderColumn columnTitle isKey dataField='_id'\r\n                                                           hidden={true}>ID</TableHeaderColumn>\r\n                                        <TableHeaderColumn columnTitle dataField='name'>Client Name</TableHeaderColumn>\r\n                                        <TableHeaderColumn width=\"15%\" dataField='editButton'\r\n                                                           dataFormat={this.viewEditButton.bind(this)}>Edit Client\r\n                                        </TableHeaderColumn>\r\n                                        <TableHeaderColumn width=\"15%\" dataField='deleteButton'\r\n                                                           dataFormat={this.viewDeleteButton.bind(this)}>Delete Client\r\n                                        </TableHeaderColumn>\r\n\r\n                                    </BootstrapTable>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ClientList)\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/ClientList.js","import {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport React, {Component} from 'react'\r\nimport {renderText, renderTextArea, renderSelect} from './fields'\r\nimport {number, required} from \"./validation\"\r\nimport moment from 'moment'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport momentLocalizer from 'react-widgets-moment'\r\nimport _ from 'lodash'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport * as CC from \"../../clientconstants\";\r\n\r\nmoment.locale('en')\r\nmomentLocalizer()\r\n\r\nclass ReleasePlanAddToReleaseForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n        const {pristine, submitting, change, reset} = this.props\r\n        const {release, releasePlans, iterations, iteration_type} = this.props\r\n        console.log(\"iteration_type\", iteration_type)\r\n        return (<form onSubmit={this.props.handleSubmit}>\r\n                <div className=\"row\">\r\n\r\n                    <Field name=\"estimation._id\" component=\"input\" type=\"hidden\"/>\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"col-md-6\">\r\n                            <Field name=\"iteration_type\"\r\n                                   component={renderSelect}\r\n                                   className={\"form-control SelectReleasePlanAddToRelease\"}\r\n                                   label=\"Select Iteration type:\"\r\n                                   options={iterations}\r\n                                   displayField={\"name\"}\r\n                                   valueField={\"name\"}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Field name=\"type\" component={renderSelect} label={\"Type:\"} options={[\r\n                                {_id: CC.TYPE_DEVELOPMENT, name: CC.TYPE_DEVELOPMENT},\r\n                                {_id: CC.TYPE_MANAGEMENT, name: CC.TYPE_MANAGEMENT},\r\n                                {_id: CC.TYPE_REVIEW, name: CC.TYPE_REVIEW},\r\n                                {_id: CC.TYPE_TESTING, name: CC.TYPE_TESTING}\r\n                            ]}\r\n                                   showNoneOption={false}\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"col-md-12\">\r\n                        {iteration_type === SC.ITERATION_TYPE_PLANNED && <div className=\"col-md-6\">\r\n                            <Field name=\"estimatedBilledHours\" component={renderText} label={\"Negotiated Billed Hours:\"}\r\n                                   validate={[required, number]}/>\r\n                        </div>}\r\n\r\n                        {iteration_type === SC.ITERATION_TYPE_PLANNED && <div className=\"col-md-6\">\r\n                            <Field name=\"estimatedHours\" component={renderText}\r\n                                   validate={[required, number]}\r\n                                   label={\"Estimated Hours:\"}/>\r\n                        </div>}\r\n\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"col-md-12\">\r\n                            <Field name=\"name\" component={renderText} label={\"Name:\"} validate={[required]}/>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"col-md-12\">\r\n                            <Field name=\"description\" component={renderTextArea} label=\"Description:\"\r\n                                   validate={[required]} rows=\"10\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row initiatEstimation\">\r\n                    <div className=\"col-md-6 text-center\">\r\n                        <button type=\"submit\" disabled={pristine || submitting} className=\"btn customBtn\">Submit\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-md-6 text-center\">\r\n                        <button type=\"button\" disabled={pristine || submitting} onClick={reset}\r\n                                className=\"btn customBtn\">\r\n                            Reset\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nReleasePlanAddToReleaseForm = reduxForm({\r\n    form: 'release-plan-add-to-release'\r\n})(ReleasePlanAddToReleaseForm)\r\n\r\nconst selector = formValueSelector('release-plan-add-to-release')\r\n\r\nReleasePlanAddToReleaseForm = connect(\r\n    state => {\r\n        const iteration_type = selector(state, 'iteration_type')\r\n        return {\r\n            iteration_type\r\n        }\r\n    }\r\n)(ReleasePlanAddToReleaseForm)\r\n\r\nexport default withRouter(ReleasePlanAddToReleaseForm)\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/ReleasePlanAddToReleaseForm.js","import * as AC from \"../actions/actionConsts\"\r\n\r\nlet initialState = {\r\n    all: [],\r\n    selected: {}\r\n}\r\n\r\nconst permissionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AC.ADD_PERMISSIONS:\r\n            return Object.assign({}, state, {all: action.permissions})\r\n        case AC.ADD_PERMISSION:\r\n            return Object.assign({}, state, {all: [...state.all, action.permission]})\r\n        case AC.EDIT_PERMISSION:\r\n            return Object.assign({}, state, {all: state.all.map(item => item._id == action.permission._id ? action.permission : item)})\r\n        case AC.DELETE_PERMISSION:\r\n            return Object.assign({}, state, {all: state.all.filter(item => item._id !== action.PermissionID)})\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default permissionReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/permissionReducer.js","import {Modal, ModalBody, ModalHeader} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport {LeaveApprovalReasonFormContainer} from \"../../containers\"\r\n\r\nconst LeaveApproveDialog = (props) => {\r\n    return <Modal className=\"estimationModal\" show={props.show} onHide={props.close}>\r\n        <ModalHeader closeButton>\r\n            <div className=\"clearfix ModalHeading\">\r\n                <div className=\"col-md-1 ModalSideLabel\"></div>\r\n                <h3>Leave Approve</h3>\r\n            </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <h4>Are you sure you want to <span>Approve </span>this leave. Please confirm!</h4>\r\n            <LeaveApprovalReasonFormContainer isApproved={true}/>\r\n        </ModalBody>\r\n    </Modal>\r\n}\r\n\r\nexport default LeaveApproveDialog\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/LeaveApproveDialog.js","import * as AC from \"./actionConsts\";\r\n\r\nexport const addDevelopmentTypes = (developmentTypes) => ({\r\n    type: AC.ADD_DEVELOPMENT_TYPES,\r\n    developmentTypes: developmentTypes\r\n})\r\n\r\nexport const addDevelopmentType = (developmentType) => ({\r\n    type: AC.ADD_DEVELOPMENT_TYPE,\r\n    developmentType: developmentType\r\n})\r\n\r\nexport const deleteDevelopmentType = (developmentTypeID) => ({\r\n    type: AC.DELETE_DEVELOPMENT_TYPE,\r\n    developmentTypeID: developmentTypeID\r\n})\r\n\r\nexport const getAllDevelopmentTypesFromServer = () => {\r\n    return (dispatch) => {\r\n        return fetch('/api/developmentTypes', {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addDevelopmentTypes(json.data))\r\n                }\r\n            })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/actions/developmentTypeAction.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport Dialog from 'react-bootstrap-dialog'\r\nimport {CREATE_USER, DELETE_USER, EDIT_USER} from \"../../clientconstants\"\r\n\r\nclass HolidayList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    editCellButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\"glyphicon glyphicon-pencil pull-left btn btn-custom\" type=\"button\"\r\n                        onClick={() => this.props.editHoliday(row)}>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    deleteCellButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\"glyphicon glyphicon-trash pull-left btn btn-custom\" type=\"button\"\r\n                        onClick={() => {\r\n                            this.props.deleteHoliday(row)\r\n                        }}>\r\n            </button>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        const {allYears, holidays} = this.props\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-10\">\r\n                    <button className=\"btn btn-default btn-submit addBtn\" onClick={() => this.props.showHolidayForm()}>\r\n                        Create Holiday\r\n                    </button>\r\n                    <div className=\"tab\">\r\n                        {allYears.map((y, index) =>\r\n                            <span key={\"year\" + index} onClick={() => {\r\n                                this.props.getHolidaysOfYear(y)\r\n\r\n                            }}>{y}</span>\r\n                        )}\r\n                    </div>\r\n\r\n\r\n                    <BootstrapTable options={this.options} data={holidays} striped={true}\r\n                                    hoveNr={true}>\r\n                        <TableHeaderColumn isKey dataField='_id' hidden={true}>ID</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"26%\" dataField=\"dateString\">Date</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"20%\" dataField=\"holidayName\" dataSort={true}>Holiday\r\n                            Name</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"20%\" dataField=\"description\"\r\n                                           dataSort={true}>Description</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"20%\" dataField=\"holidayType\" dataSort={true}>Holiday\r\n                            Type</TableHeaderColumn>\r\n\r\n                        <TableHeaderColumn width=\"8%\" dataField='button' dataFormat={this.editCellButton.bind(this)}><i\r\n                            className=\"fa fa-pencil\"></i></TableHeaderColumn>\r\n\r\n                        <TableHeaderColumn width=\"5%\" dataField='button'\r\n                                           dataFormat={this.deleteCellButton.bind(this)}><i className=\"fa fa-trash\"></i>\r\n                        </TableHeaderColumn>\r\n\r\n                    </BootstrapTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HolidayList\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/HolidayList.js","import * as AC from \"./actionConsts\"\r\n\r\n\r\nexport const addAttendanceSetting = (attendanceSetting) => ({\r\n    type: AC.ADD_UPDATE_ATTENDANCE_SETTING,\r\n    attendanceSetting: attendanceSetting\r\n})\r\n\r\n\r\nexport const addAttendanceSettingOnServer = (formInput) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/attendance/attendance-settings',\r\n            {\r\n                method: \"post\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success && json.data) {\r\n                    dispatch(addAttendanceSetting(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const getAttendanceSettingFromServer = () => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/attendance/attendance-settings',\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success && json.data) {\r\n                    dispatch(initialize('attendance-setting', json.data))\r\n                    dispatch(addAttendanceSetting(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/actions/AttendanceSettingAction.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport moment from 'moment'\r\nimport {ReportingDateNavBarContainer} from '../../containers'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport {ReportTaskDescriptionFormDialog} from \"..\";\r\nimport * as COC from \"../componentConsts\";\r\nimport * as A from \"../../actions\";\r\n\r\n\r\nclass ReportingTaskPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.onReportedStatusChange = this.onReportedStatusChange.bind(this)\r\n        this.onReleaseSelect = this.onReleaseSelect.bind(this)\r\n        this.state = {\r\n            showDescriptionDialog: false\r\n        }\r\n    }\r\n\r\n    rowClassNameFormat(row, rowIdx) {\r\n        console.log(\"rowClassNameFormat called \" + row.rowDataChanged)\r\n        return row.rowDataChanged ? 'td-row-changed' : row.report.status === SC.STATUS_COMPLETED ? 'td-row-completed' : row.report.status === SC.STATUS_PENDING ? 'td-row-pending' : 'td-row-unreported';\r\n    }\r\n\r\n    formatManager(row) {\r\n        if (row) {\r\n            return row.firstName + ' ' + row.lastName\r\n        }\r\n        return ''\r\n\r\n    }\r\n\r\n    formatLeader(row) {\r\n        if (row) {\r\n            return row.firstName + ' ' + row.lastName\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatTask(cell, row) {\r\n        if (row.task && row.task.name)\r\n            return row.task.name\r\n        return ''\r\n    }\r\n\r\n    formatPlannedHours(cell, row) {\r\n        if (row.planning && row.planning.plannedHours)\r\n            return row.planning.plannedHours\r\n        return ''\r\n    }\r\n\r\n    formatReportStatus(report) {\r\n\r\n        if (report && report.status)\r\n            return report.status\r\n        return SC.STATUS_UNREPORTED\r\n    }\r\n\r\n    formatReportedHours(cell, row) {\r\n        if (cell)\r\n            return cell\r\n        else if (row.report && row.report.reportedHours) {\r\n            row.reportedHours = row.report.reportedHours\r\n            return row.report.reportedHours\r\n        }\r\n        return 0\r\n    }\r\n\r\n    viewEditButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\" btn btn-custom\" type=\"button\" onClick={() => {\r\n                console.log('edit')\r\n            }}>\r\n                <i className=\"fa fa-pencil\"></i>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    viewCompleteButton(cell, row) {\r\n        return <button className=\" btn btn-custom \" type=\"button\" style={{padding: '0px', border: '0'}} onClick={() => {\r\n            if (row.reportedHours == null) {\r\n                NotificationManager.error('Please select worked hours!')\r\n            } else {\r\n                row.rowDataChanged = false\r\n                row.status = SC.STATUS_COMPLETED\r\n                this.props.reportTask(row, this.props.dateOfReport, this.props.iterationType)\r\n\r\n            }\r\n        }}>\r\n            <img src=\"/images/completed.png\"/>\r\n        </button>\r\n    }\r\n\r\n    viewPendingButton(cell, row) {\r\n        return <button className=\" btn btn-custom \" type=\"button\" style={{padding: '0px', border: '0'}} onClick={() => {\r\n            if (row.reportedHours == null) {\r\n                NotificationManager.error('Please select worked hours!')\r\n            } else {\r\n                row.rowDataChanged = false\r\n\r\n                row.status = SC.STATUS_PENDING\r\n                this.props.reportTask(row, this.props.dateOfReport, this.props.iterationType)\r\n            }\r\n        }}>\r\n            <img src=\"/images/pending.png\"/>\r\n        </button>\r\n    }\r\n\r\n    viewReportButton(cell, row) {\r\n        return <button className=\" btn btn-custom \" type=\"button\" style={{padding: '0px', border: '0'}} onClick={() => {\r\n            if (row.reportedHours == null) {\r\n                NotificationManager.error('Please select worked hours!')\r\n            } else {\r\n                row.rowDataChanged = false\r\n\r\n                row.status = SC.STATUS_PENDING\r\n                this.props.reportTask(row, this.props.dateOfReport, this.props.iterationType)\r\n            }\r\n        }}>\r\n            <img src=\"/images/report.png\"/>\r\n        </button>\r\n    }\r\n\r\n    viewDetailButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\" btn btn-custom \" type=\"button\" onClick={() => {\r\n                this.props.taskPlanSelected(row).then(json => {\r\n                    if (json.success) {\r\n                        this.props.history.push('/app-home/reporting-task-detail')\r\n                        this.props.showTaskDetailPage()\r\n                    }\r\n                    return json\r\n                })\r\n            }}>\r\n                <i className=\"fa fa-eye\"></i>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    onReportedStatusChange(status) {\r\n        this.props.setReportedStatus(this.props.releaseID, this.props.dateOfReport, this.props.iterationType, status)\r\n    }\r\n\r\n    onReleaseSelect(releaseID) {\r\n        this.props.setReleaseID(releaseID, this.props.dateOfReport, this.props.iterationType, this.props.reportedStatus)\r\n    }\r\n\r\n    onIterationTypeChange(type) {\r\n        this.props.setIterationType(this.props.releaseID, this.props.dateOfReport, type, this.props.reportedStatus)\r\n    }\r\n\r\n    onBeforeSaveCell(row, cellName, cellValue) {\r\n        console.log(\"onBeforeSaveCell called \", cellName, cellValue)\r\n    }\r\n\r\n    onAfterSaveCell(row, cellName, cellValue) {\r\n        console.log(\"onAfterSaveCell called \", cellName, cellValue, row.rowDataChanged)\r\n        row.rowDataChanged = true\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {allReleases, releases, reportedStatus, releaseID, iterationType} = this.props\r\n        const cellEditProp = {\r\n            mode: 'click',\r\n            blurToSave: true,\r\n            beforeSaveCell: this.onBeforeSaveCell,\r\n            afterSaveCell: this.onAfterSaveCell\r\n        }\r\n        console.log(\"releases\", releases)\r\n        return (\r\n            <div key=\"estimation_list\" className=\"clearfix\">\r\n\r\n                <div className=\"col-md-12\">\r\n                    <ReportingDateNavBarContainer reportedStatus={reportedStatus} releaseID={releases}/>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"col-md-12 releaseOption releaseDetailSearchContent\">\r\n                        <div className=\"col-md-4 \">\r\n                            <div>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    title=\"Select Type\"\r\n                                    value={iterationType}\r\n                                    onChange={(type) => this.onIterationTypeChange(type.target.value)}>\r\n                                    <option key={SC.ITERATION_TYPE_PLANNED}\r\n                                            value={SC.ITERATION_TYPE_PLANNED}>{SC.ITERATION_TYPE_PLANNED}</option>\r\n                                    <option key={SC.ITERATION_TYPE_UNPLANNED}\r\n                                            value={SC.ITERATION_TYPE_UNPLANNED}>{SC.ITERATION_TYPE_UNPLANNED}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-4 \">\r\n                            <div>\r\n                                <select\r\n                                    value={releaseID}\r\n                                    className=\"form-control\"\r\n                                    title=\"Select Flag\"\r\n                                    onChange={(project) =>\r\n                                        this.onReleaseSelect(project.target.value)\r\n                                    }>\r\n\r\n                                    <option key={SC.ALL} value={SC.ALL}>All Project</option>\r\n                                    {\r\n                                        allReleases && allReleases.length ? allReleases.map((release, idx) =>\r\n                                            <option\r\n                                                key={idx}\r\n                                                value={release._id}>\r\n                                                {release.project.name} ({release.name})\r\n                                            </option>) : null\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    title=\"Select Status\"\r\n                                    value={reportedStatus}\r\n                                    onChange={(status) => this.onReportedStatusChange(status.target.value)}>\r\n                                    <option key={SC.ALL} value={SC.ALL}>All Task Status</option>\r\n                                    <option key={SC.REPORT_UNREPORTED}\r\n                                            value={SC.REPORT_UNREPORTED}>{SC.REPORT_UNREPORTED}</option>\r\n                                    <option key={SC.REPORT_PENDING}\r\n                                            value={SC.REPORT_PENDING}>{SC.REPORT_PENDING}</option>\r\n                                    <option key={SC.REPORT_COMPLETED}\r\n                                            value={SC.REPORT_COMPLETED}>{SC.REPORT_COMPLETED}</option>\r\n\r\n\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"estimation reporting\">\r\n                    {\r\n                        iterationType == SC.ITERATION_TYPE_PLANNED && releases && releases.length ? releases.map((release, idx) =>\r\n                            <div key={release._id}>\r\n                                <BootstrapTable options={this.options}\r\n                                                data={release && release.tasks && release.tasks.length > 0 ? release.tasks : []}\r\n                                                striped={true}\r\n                                                hover={true}\r\n                                                trClassName={this.rowClassNameFormat.bind(this)}\r\n                                                cellEdit={cellEditProp}>\r\n\r\n                                    <TableHeaderColumn columnTitle isKey dataField='_id' hidden={true}>\r\n                                    </TableHeaderColumn>\r\n                                    <TableHeaderColumn row='0' colSpan='6'\r\n                                                       dataAlign=\"center\">{release.releaseName}</TableHeaderColumn>\r\n\r\n                                    <TableHeaderColumn row='1' editable={false} width=\"10%\" columnTitle={'View Detail'}\r\n                                                       dataField='detailButton'\r\n                                                       dataFormat={this.viewDetailButton.bind(this)} dataAlign=\"center\">View\r\n                                        Detail\r\n                                    </TableHeaderColumn>\r\n                                    <TableHeaderColumn row='1' editable={false} width=\"20%\" columnTitle dataField=\"task\"\r\n                                                       dataFormat={this.formatTask}\r\n                                                       dataSort={true} dataAlign=\"center\">\r\n                                        Task Name</TableHeaderColumn>\r\n                                    <TableHeaderColumn row='1' width=\"12%\" columnTitle dataField=\"planning\"\r\n                                                       dataFormat={this.formatPlannedHours} editable={false}\r\n                                                       dataAlign=\"center\"\r\n                                    > planned hours</TableHeaderColumn>\r\n                                    <TableHeaderColumn row='1' width=\"15%\" columnTitle dataField=\"reportedHours\"\r\n                                                       dataFormat={this.formatReportedHours}\r\n                                                       editable={{\r\n                                                           type: 'select',\r\n                                                           options: {\r\n                                                               values: ['0', '0.5', '1', '1.5', '2', '2.5', '3', '3.5', '4', '4.5', '5', '5.5', '6', '6.5', '7', '7.5', '8', '8.5', '9', '9.5', '10', '10.5', '11', '11.5', '12']\r\n                                                           }\r\n                                                       }}\r\n                                                       dataAlign=\"center\"\r\n                                    >Worked Hours</TableHeaderColumn>\r\n                                    <TableHeaderColumn row='1' editable={false} width=\"7%\"\r\n                                                       columnTitle={'Reported Status'}\r\n                                                       dataField=\"report\"\r\n                                                       dataFormat={this.formatReportStatus.bind(this)}\r\n                                                       dataAlign=\"center\">Status\r\n                                    </TableHeaderColumn>\r\n                                    <TableHeaderColumn row='1' editable={false} width=\"7%\"\r\n                                                       columnTitle={'Mark as Complete'}\r\n                                                       dataField=\"Complete\"\r\n                                                       dataAlign=\"center\"\r\n                                                       dataFormat={this.viewCompleteButton.bind(this)}>Complete\r\n                                    </TableHeaderColumn>\r\n                                    <TableHeaderColumn row='1' editable={false} width=\"7%\"\r\n                                                       columnTitle={'Mark as Pending'}\r\n                                                       dataField=\"Pending\"\r\n                                                       dataAlign=\"center\"\r\n                                                       dataFormat={this.viewPendingButton.bind(this)}>Pending\r\n                                    </TableHeaderColumn>\r\n                                </BootstrapTable>\r\n\r\n                            </div>\r\n                        ) : iterationType == SC.ITERATION_TYPE_UNPLANNED && releases && releases.length ? releases.map((release, idx) =>\r\n                            <div key={release._id}>\r\n                                <BootstrapTable options={this.options}\r\n                                                data={release && release.tasks && release.tasks.length > 0 ? release.tasks : []}\r\n                                                striped={true}\r\n                                                hover={true}\r\n                                                trClassName={this.rowClassNameFormat.bind(this)}\r\n                                                cellEdit={cellEditProp}>\r\n\r\n                                    <TableHeaderColumn columnTitle isKey dataField='_id' hidden={true}>\r\n                                    </TableHeaderColumn>\r\n                                    <TableHeaderColumn row='0' colSpan='7'\r\n                                                       dataAlign=\"center\">{release.releaseName}</TableHeaderColumn>\r\n\r\n                                    <TableHeaderColumn row='1' editable={false} width=\"20%\" columnTitle={'View Detail'}\r\n                                                       dataField='detailButton'\r\n                                                       dataFormat={this.viewDetailButton.bind(this)}\r\n                                                       dataAlign=\"center\"\r\n                                    >View Detail\r\n                                    </TableHeaderColumn>\r\n                                    <TableHeaderColumn row='1' editable={false} width=\"40%\" columnTitle dataField=\"task\"\r\n                                                       dataFormat={this.formatTask}\r\n                                                       dataSort={true} dataAlign=\"center\">\r\n                                        Task Name</TableHeaderColumn>\r\n                                    <TableHeaderColumn row='1' width=\"20%\" columnTitle dataField=\"reportedHours\"\r\n                                                       dataFormat={this.formatReportedHours}\r\n                                                       editable={{\r\n                                                           type: 'select',\r\n                                                           options: {\r\n                                                               values: ['0', '0.5', '1', '1.5', '2', '2.5', '3', '3.5', '4', '4.5', '5', '5.5', '6', '6.5', '7', '7.5', '8', '8.5', '9', '9.5', '10', '10.5', '11', '11.5', '12']\r\n                                                           }\r\n                                                       }}\r\n                                                       dataAlign=\"center\"\r\n                                    >Worked Hours</TableHeaderColumn>\r\n                                    <TableHeaderColumn row='1' editable={false} width=\"20%\"\r\n                                                       columnTitle={'Report Hours'}\r\n                                                       dataField=\"Report\"\r\n                                                       dataAlign=\"center\"\r\n                                                       dataFormat={this.viewReportButton.bind(this)}>Report\r\n                                    </TableHeaderColumn>\r\n                                </BootstrapTable>\r\n\r\n                            </div>\r\n                        ) : <label> No tasks found for reporting </label>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ReportingTaskPage)\n\n\n// WEBPACK FOOTER //\n// ./client/components/pages/ReportingTaskPage.js","import React, {Component} from 'react'\r\nimport {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport {renderField} from './fields'\r\nimport {number, required} from \"./validation\";\r\nimport {connect} from 'react-redux'\r\n\r\nclass LeaveSettingForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {handleSubmit, pristine, submitting, _id} = this.props;\r\n        return (\r\n            <form key=\"LeaveSettingForm\" onSubmit={this.props.handleSubmit}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n\r\n                        <Field name=\"_id\" component=\"input\" type=\"hidden\"/>\r\n                        <Field name=\"casualLeaves\" label=\"Casual Leaves:\" component={renderField}\r\n                               validate={[required, number]}/>\r\n                        <Field name=\"paidLeaves\" label=\"Paid Leaves:\" component={renderField}\r\n                               validate={[required, number]}/>\r\n                        <Field name=\"maternityLeaves\" label=\"Maternity Leaves:\" component={renderField}\r\n                               validate={[required]}/>\r\n                        <Field name=\"paternityLeaves\" label=\"Paternity Leaves:\" component={renderField}\r\n                               validate={[required, number]}/>\r\n                        <Field name=\"specialLeaves\" label=\"Special Leaves:\" component={renderField}\r\n                               validate={[required, number]}/>\r\n                        <button type=\"submit\"\r\n                                disabled={pristine || submitting}\r\n                                className=\"btn btn-submit\">{(!this.props._id && \"Create\") || (this.props._id && \"Update\")}\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nLeaveSettingForm = reduxForm({\r\n    form: 'leave-setting'\r\n})(LeaveSettingForm)\r\n\r\nconst selector = formValueSelector('leave-setting')\r\n\r\nLeaveSettingForm = connect(\r\n    state => {\r\n        const _id = selector(state, '_id')\r\n        return {_id}\r\n\r\n    }\r\n)(LeaveSettingForm)\r\n\r\nexport default LeaveSettingForm\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/LeaveSettingForm.js","import React, {Component} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {renderField, renderMultiSelect} from './fields'\r\nimport {required} from \"./validation\";\r\n\r\nclass AdminUserForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {handleSubmit, pristine, reset, submitting} = this.props;\r\n        return [\r\n            <div key=\"AdminUserFormBackButton\">\r\n                <button type=\"button\"\r\n                        onClick={() => this.props.showAdminUserList()}>\r\n                    <i className=\"glyphicon glyphicon-arrow-left\"></i>\r\n                </button>\r\n            </div>,\r\n            <form key=\"AdminUserForm\" onSubmit={this.props.handleSubmit}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <Field name=\"firstName\" label=\"First Name:\" component={renderField} type=\"text\"/>\r\n                        <Field name=\"lastName\" label=\"Last Name:\" component={renderField} type=\"text\"/>\r\n                        <Field\r\n                            name=\"roles\"\r\n                            component={renderMultiSelect} label=\"Roles:\"\r\n                            data={this.props.roles} validate={[required]} valueField=\"_id\" textField=\"name\"/>\r\n                        <Field name=\"email\" label=\"Email:\" component={renderField} type=\"email\"/>\r\n                        <Field name=\"password\" label=\"Password:\" component={renderField} type=\"password\"/>\r\n                        <button type=\"submit\"\r\n                                disabled={pristine || submitting}\r\n                                className=\"btn btn-submit\"> {(!this.props._id && \"Add\") || (this.props._id && \"Update\")}\r\n                        </button>\r\n\r\n                        <button type=\"button\" disabled={pristine || submitting} className=\"btn squareButton\"\r\n                                onClick={reset}>Reset\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        ]\r\n\r\n    }\r\n}\r\n\r\nAdminUserForm = reduxForm({\r\n    form: 'admin-user'\r\n})(AdminUserForm)\r\n\r\nexport default AdminUserForm\r\n// {(!this.props._id && \"Add\") || (this.props._id && \"Update\")}\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/AdminUserForm.js","import {Button, Modal, ModalBody, ModalFooter, ModalHeader, ModalTitle} from 'react-bootstrap'\r\nimport React from 'react'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nconst ConfirmationRequestReviewDialog = (props) => {\r\n    const {show, onClose, body,hasError, title} = props\r\n    return <Modal show={show} onHide={onClose}>\r\n        {<ModalHeader\r\n            className={hasError ? \" confirmationDialogReviewRequestHasError \" : \"confirmationDialogReviewRequestNoError\"}>\r\n            <ModalTitle>{title ? title : 'Confirm Operation'}</ModalTitle>\r\n            {hasError ? <img key=\"exclaimation\" className=\" errorClass confirmationDialogErrorImg\"\r\n                             src=\"/images/exclamation.png\" title=\"Error Detected\"/> : null}\r\n        </ModalHeader>\r\n        }\r\n        {<ModalBody\r\n            className={hasError ? \"confirmationDialogBodyHasError \" : \"confirmationDialogBodyNoError\"}>\r\n            {body ? body : 'Please confirm or cancel operation'}\r\n        </ModalBody>\r\n        }\r\n        {\r\n            <ModalFooter\r\n                className={hasError ? \"confirmationDialogFooterHasError \" : \"confirmationDialogFooterNoError\"}>\r\n                <Button onClick={props.onClose}>Cancel</Button>\r\n                <Button onClick={props.onConfirm}>Confirm</Button>\r\n            </ModalFooter>\r\n        }\r\n    </Modal>\r\n}\r\n\r\n\r\nconst defaultConfirmationDialog = (props) => {\r\n    const {show, onClose,body, hasError, title} = props\r\n    return <Modal show={show} onHide={onClose}>\r\n        {\r\n            <ModalHeader>\r\n                <ModalTitle>{title ? title : 'Confirm Operation'}</ModalTitle>\r\n            </ModalHeader>\r\n        }\r\n        {\r\n            <ModalBody>\r\n                {body ? body : 'Please confirm or cancel operation'}\r\n            </ModalBody>\r\n        }\r\n        {\r\n            <ModalFooter>\r\n                <Button onClick={props.onClose}>Cancel</Button>\r\n                <Button onClick={props.onConfirm}>Confirm</Button>\r\n            </ModalFooter>\r\n        }\r\n    </Modal>\r\n}\r\n\r\nconst ConfirmationDialog = (props) => {\r\n    const {dialogName} = props\r\n    switch (dialogName) {\r\n        case SC.DIALOG_ESTIMATION_REQUEST_REVIEW:\r\n            return ConfirmationRequestReviewDialog(props)\r\n        default:\r\n            return defaultConfirmationDialog(props)\r\n    }\r\n\r\n}\r\n\r\nexport const NewConfirmationDialog = (props) => {\r\n    const {show, onClose,body, title, children} = props\r\n    return <Modal show={show} onHide={onClose}>\r\n        {\r\n            <ModalHeader>\r\n                <ModalTitle>{title ? title : 'Confirm Operation'}</ModalTitle>\r\n            </ModalHeader>\r\n        }\r\n        {\r\n            <ModalBody>\r\n                {children}\r\n            </ModalBody>\r\n        }\r\n        {\r\n            <ModalFooter>\r\n                <Button onClick={props.onClose}>Cancel</Button>\r\n                <Button onClick={props.onConfirm}>Confirm</Button>\r\n            </ModalFooter>\r\n        }\r\n    </Modal>\r\n}\r\n\r\n\r\n\r\n\r\nexport default ConfirmationDialog\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialogs/ConfirmationDialog.js","import React from 'react'\r\nimport {arrayInsert, arrayPush, arrayRemove, change, Field, Form, reduxForm, reset} from 'redux-form'\r\nimport {renderCheckBox, renderSelect, renderText} from \"./fields\"\r\nimport {required} from \"./validation\"\r\nimport {connect} from 'react-redux'\r\n\r\nlet PermissionRow = (props) => {\r\n    if (props.permission) {\r\n        return <tr>\r\n            <td>{props.permission.name}</td>\r\n            <td>{props.permission.configurable ? 'true' : 'false'}</td>\r\n            <td>{props.permission.enabled ? 'true' : 'false'}</td>\r\n            <td>\r\n                <button className=\"glyphicon glyphicon-pencil pull-left btn btn-custom\" type=\"button\"\r\n                        onClick={() => {\r\n                            props.editPermission(props.permission, props.idx)\r\n\r\n                        }}>\r\n                </button>\r\n            </td>\r\n            <td>\r\n                <button className=\"glyphicon glyphicon-trash pull-left btn btn-custom\" type=\"button\"\r\n                        onClick={() => {\r\n                            props.removePermission('permissions', props.idx)\r\n                        }}>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    }\r\n\r\n    return undefined\r\n\r\n\r\n}\r\n\r\nlet PermissionForm = (props) => {\r\n    return <Form onSubmit={props.handleSubmit}>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <Field name=\"_id\" component={renderSelect} options={props.options}\r\n                       displayField=\"name\" valueField=\"_id\" label=\"Permissions:\" validate={[required]} onChange={\r\n                    (event, newValue, oldValue) => {\r\n                        props.change('name', props.permissions.find(p => p._id == newValue).name)\r\n                    }\r\n                }/>\r\n            </div>\r\n\r\n            <div style={{\"paddingTop\": \"25px\"}}>\r\n                <div className=\"col-md-2\">\r\n                    <Field name=\"configurable\" component={renderCheckBox} type=\"checkbox\" label=\"Configurable\"/>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                    <Field name=\"enabled\" component={renderCheckBox} type=\"checkbox\" label=\"Enabled\"/>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                    <button type=\"button\" className=\"btn btn-submit\" onClick={() => {\r\n                        props.submit()\r\n                    }}>{props.selectedPermission ? 'Edit' : 'Add'}\r\n                    </button>\r\n                    <button style={{\"marginLeft\": \"5px\"}} type=\"button\" onClick={() => {\r\n                        props.initialize({})\r\n                        props.changeFuncParent('selectedPermission', null)\r\n                    }} className=\"btn btn-submit\">Reset\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Form>\r\n}\r\n\r\nPermissionForm = reduxForm({\r\n    form: 'role-permission'\r\n})(PermissionForm)\r\n\r\nPermissionForm = connect(state => ({}),\r\n    dispatch => ({\r\n        onSubmit: (values) => {\r\n            if (typeof(values.selectedIdx) != 'undefined') {\r\n                // permission was edited\r\n                dispatch(arrayRemove('role', 'permissions', values.selectedIdx))\r\n                dispatch(arrayInsert('role', 'permissions', values.selectedIdx, values))\r\n            } else {\r\n                dispatch(arrayPush('role', 'permissions', values))\r\n            }\r\n\r\n            dispatch(change('role', 'selectedPermission', null))\r\n            dispatch(reset('role-permission'))\r\n        }\r\n    })\r\n)(PermissionForm)\r\n\r\n\r\nlet RoleForm = (props) => {\r\n    const {roleSyncErrors, change, push, touch, array, untouch, submit, reset} = props\r\n    const {permissions, permissionFormValues, permissionsAdded} = props\r\n    return [\r\n        <div key=\"RoleFormBackButton\">\r\n            <button type=\"button\"\r\n                    onClick={() => props.showRoleList()}>\r\n                <i className=\"glyphicon glyphicon-arrow-left\"></i>\r\n            </button>\r\n        </div>,\r\n        <Form key=\"RoleForm\" onSubmit={props.handleSubmit}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <Field name=\"name\" placeholder={\"Role name\"} component={renderText}\r\n                           label={\"Role:\"} validate={[required]}/>\r\n                </div>\r\n            </div>\r\n            <PermissionForm key=\"RolePermissionForm\" options={props.permissionOptions} permissions={props.permissions}\r\n                            selectedPermission={props.selectedPermission} changeFuncParent={props.change}/>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Permission Name</th>\r\n                            <th>Configurable</th>\r\n                            <th>Enabled</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {Array.isArray(permissionsAdded) && permissionsAdded.length > 0 ?\r\n                            permissionsAdded.map((p, idx) => <PermissionRow key={\"permissionrow_\" + idx}\r\n                                                                            permission={p} idx={idx}\r\n                                                                            removePermission={props.array.remove}\r\n                                                                            editPermission={props.editPermission}\r\n                            />) : undefined\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            {/*<FieldArray component={renderPermissionComponent} {...props} name=\"permissions\"/>*/}\r\n            <div className=\"row\" key=\"RoleFormSubmission\">\r\n                <div className=\"col-md-6\">\r\n                    <button type=\"button\" onClick={() => {\r\n                        submit()\r\n                    }} className=\"btn btn-submit\">Submit\r\n                    </button>\r\n                    <button style={{\"marginLeft\": \"5px\"}} type=\"button\" onClick={() => {\r\n                        reset()\r\n                    }} className=\"btn btn-submit\">Reset\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Form>]\r\n}\r\n\r\nRoleForm = reduxForm({\r\n    form: 'role'\r\n})(RoleForm)\r\n\r\nexport default RoleForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/RoleForm.js","import React, {Component} from 'react'\r\nimport {Field, formValueSelector, reduxForm} from 'redux-form'\r\nimport {renderField, renderTextArea, renderSelect, renderDateTimePickerString} from './fields'\r\nimport {required, number} from \"./validation\";\r\nimport {connect} from 'react-redux'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nclass HolidayForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {handleSubmit, pristine, submitting, reset, _id} = this.props;\r\n        return [\r\n            <div key=\"HolidayFormBackButton\">\r\n                <button type=\"button\"\r\n                        onClick={() => this.props.showHolidayList()}>\r\n                    <i className=\"glyphicon glyphicon-arrow-left\"></i>\r\n                </button>\r\n            </div>,\r\n            <form key=\"HolidayForm\" onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n\r\n                        <Field name=\"_id\" component=\"input\" type=\"hidden\"/>\r\n\r\n                        <Field name=\"dateString\" placeholder={\"holiday Date :\"}\r\n                               component={renderDateTimePickerString}\r\n                               showTime={false}\r\n                               label={\"Holiday Date :\"} validate={[required]}/>\r\n\r\n                        <Field name=\"holidayName\" label=\"Holiday Name:\" component={renderField}\r\n                               validate={[required]}/>\r\n\r\n                        <Field name=\"holidayType\" label=\"Holiday Type:\" component={renderSelect}\r\n                               validate={[required]}\r\n                               options={SC.HOLIDAY_TYPE_LIST_WITH_NAME}/>\r\n\r\n                        <Field width=\"80%\" name=\"description\" validate={[required]} component={renderTextArea}\r\n                               label=\"Description:\"/>\r\n\r\n                        <div>\r\n                            <button type=\"submit\"\r\n                                    className=\"btn btn-submit\">\r\n                                {(!_id && \"Add\") || (_id && \"Update\")}\r\n                            </button>\r\n                            <button type=\"button\"\r\n                                    disabled={pristine || submitting}\r\n                                    className=\"btn btn-submit\" onClick={reset}>Reset\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        ]\r\n    }\r\n}\r\n\r\nHolidayForm = reduxForm({\r\n    form: 'holiday-form'\r\n})(HolidayForm)\r\n\r\nconst selector = formValueSelector('holiday-form')\r\n\r\nHolidayForm = connect(\r\n    state => {\r\n        const _id = selector(state, '_id')\r\n        return {\r\n            _id\r\n        }\r\n    }\r\n)(HolidayForm)\r\nexport default HolidayForm\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/HolidayForm.js","import * as A from \"../../actions\";\r\nimport * as COC from \"../../components/componentConsts\";\r\nimport {connect} from \"react-redux\";\r\nimport ModuleList from \"../../components/lists/ModuleList\";\r\nimport {initialize, SubmissionError} from \"redux-form\";\r\nimport {NotificationManager} from \"react-notifications\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    showModuleEditForm: (module) => {\r\n        dispatch(A.showComponent(COC.MODULE_FORM_DIALOG)),\r\n            dispatch(initialize('module', module))\r\n    },\r\n    showModuleCreationForm: () => {\r\n        dispatch(A.showComponent(COC.MODULE_FORM_DIALOG))\r\n    },\r\n    deleteModule: (moduleID) => dispatch(A.deleteModuleOnServer(moduleID)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success('Module Removed Successfully')\r\n        } else {\r\n            NotificationManager.error('Module Not removed!')\r\n            throw new SubmissionError({modules: \"Module Removal Failed\"})\r\n        }\r\n    }),\r\n\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loggedInUser: state.user.loggedIn,\r\n        modules: state.module.all\r\n    }\r\n}\r\n\r\nconst ProjectListContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ModuleList)\r\n\r\nexport default ProjectListContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/ModuleListContainer.js","import {connect} from 'react-redux'\r\nimport {UpdateReleaseDatesForm} from \"../../components\"\r\nimport * as COC from '../../components/componentConsts'\r\nimport * as A from '../../actions'\r\nimport {NotificationManager} from \"react-notifications\"\r\nimport * as SC from \"../../../server/serverconstants\";\r\nimport moment from \"moment\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (releaseData) => {\r\n        console.log(\"release dates data is \", releaseData)\r\n        return dispatch(A.changeReleaseDateOfIteration(releaseData)).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success(\"Release dates updated\")\r\n                dispatch(A.hideComponent(COC.UPDATE_RELEASE_DATES_DIALOG))\r\n                dispatch(A.getReleaseForDashboard(releaseData._id)).then(() => {\r\n                    let m = moment()\r\n                    dispatch(A.getReleaseDayPlannings(releaseData._id, m.month(), m.year(), true))\r\n                })\r\n            }\r\n            else NotificationManager.error(\"Release dates update failed !\")\r\n\r\n            return json\r\n        })\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    release: state.release.selectedRelease\r\n})\r\n\r\nconst UpdateReleaseDatesFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UpdateReleaseDatesForm)\r\n\r\nexport default UpdateReleaseDatesFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/UpdateReleaseDatesFormContainer.js","import {connect} from 'react-redux'\r\nimport PermissionForm from \"../../components/forms/PermissionForm\"\r\nimport * as COC from \"../../components/componentConsts\";\r\nimport {NotificationManager} from 'react-notifications'\r\nimport {SubmissionError} from 'redux-form'\r\nimport * as EC from \"../../../server/errorcodes\";\r\nimport * as A from \"../../actions\"\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        if (!values._id)\r\n            return dispatch(A.addPermissionOnServer(values)).then(json => {\r\n                    if (json.success) {\r\n                        dispatch(A.showComponentHideOthers(COC.PERMISSION_LIST))\r\n                        NotificationManager.success('Permission Added!')\r\n                    } else {\r\n                        NotificationManager.error('Permission Not Added!')\r\n                        if (json.code == EC.ALREADY_EXISTS)\r\n                            throw new SubmissionError({name: \"Permission Already Exists\"})\r\n                    }\r\n                    return json\r\n                }\r\n            )\r\n\r\n        else\r\n            return dispatch(A.editPermissionOnServer(values)).then(json => {\r\n                    if (json.success) {\r\n                        dispatch(A.showComponentHideOthers(COC.PERMISSION_LIST))\r\n                        NotificationManager.success('Permission Edited Successfully')\r\n                    } else {\r\n                        NotificationManager.error('Permission Edit Failed!')\r\n                        if (json.code == EC.ALREADY_EXISTS)\r\n                            throw new SubmissionError({name: \"Permission Already Exists\"})\r\n                    }\r\n                    return json\r\n                }\r\n            )\r\n    },\r\n    showPermissionList: () => dispatch(A.showComponentHideOthers(COC.PERMISSION_LIST))\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({})\r\n\r\nconst PermissionFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PermissionForm)\r\n\r\nexport default PermissionFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/PermissionFormContainer.js","import {connect} from 'react-redux'\r\nimport {initialize} from 'redux-form'\r\nimport * as A from \"../../actions\"\r\nimport {UserProfileForm} from \"../../components\"\r\nimport * as logger from '../../clientLogger'\r\nimport {NotificationManager} from \"react-notifications\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        return dispatch(A.updateUserSettingsOnServer(values)).then(json => {\r\n            if (json.success) {\r\n                dispatch(initialize('user-profile', json.data))\r\n                NotificationManager.success('User Profile Updated Successfully')\r\n            }\r\n            else {\r\n                NotificationManager.error('User Profile Update Failed');\r\n            }\r\n        }),\r\n            logger.debug(logger.USER_PROFILE_FORM_CONNECT, \"onSubmit():\", values)\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    loggedInUser: state.user.loggedIn,\r\n    initialValues: {\r\n\r\n        \"_id\": state.user.loggedIn._id,\r\n        \"firstName\": state.user.loggedIn.firstName,\r\n        \"lastName\": state.user.loggedIn.lastName,\r\n        \"email\": state.user.loggedIn.email,\r\n        \"phone\": state.user.loggedIn.phone,\r\n        \"address\": state.user.loggedIn.address,\r\n        \"dob\": state.user.loggedIn.dob,\r\n        \"designation\": state.user.loggedIn.designation,\r\n        \"employeeCode\": state.user.loggedIn.employeeCode,\r\n        \"dateJoined\": state.user.loggedIn.dateJoined,\r\n\r\n\r\n    }\r\n\r\n})\r\n\r\nconst UserProfileFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UserProfileForm)\r\n\r\nexport default UserProfileFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/UserProfileFormContainer.js","import {connect} from 'react-redux'\r\nimport {HolidayForm} from \"../../components\"\r\nimport * as A from '../../actions'\r\nimport * as EC from \"../../../server/errorcodes\";\r\nimport * as SC from \"../../../server/serverconstants\";\r\nimport {NotificationManager} from \"react-notifications\";\r\nimport {SubmissionError} from \"redux-form\";\r\nimport * as COC from \"../../components/componentConsts\";\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (holiday) => {\r\n        if (!holiday._id) {\r\n            return dispatch(A.addHolidayOnServer(holiday)).then(json => {\r\n                if (json.success) {\r\n                    dispatch(A.showComponentHideOthers(COC.HOLIDAY_LIST))\r\n                    NotificationManager.success('Holiday Added Successfully')\r\n                } else {\r\n                    NotificationManager.error('Holiday Not Added!')\r\n                    if (json.code == EC.ALREADY_EXISTS)\r\n                        throw new SubmissionError({name: \"Holiday Already Exists\"})\r\n                }\r\n                return json\r\n            })\r\n        }\r\n        else {\r\n            return dispatch(A.updateHolidayOnServer(holiday)).then((json) => {\r\n                    if (json.success) {\r\n                        dispatch(A.showComponentHideOthers(COC.HOLIDAY_LIST))\r\n                        NotificationManager.success('Holiday Updated Successful');\r\n                    } else {\r\n                        NotificationManager.error('Holiday Updated Failed')\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    },\r\n    showHolidayList: () => dispatch(A.showComponentHideOthers(COC.HOLIDAY_LIST))\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        holidays: state.leave.all,\r\n        MONTHS_WITH_MONTH_NUMBER: SC.MONTHS_WITH_MONTH_NUMBER,\r\n        HOLIDAY_TYPE_LIST: SC.HOLIDAY_TYPE_LIST_WITH_NAME\r\n    }\r\n}\r\n\r\nconst HolidayFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(HolidayForm)\r\n\r\nexport default HolidayFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/HolidayFormContainer.js","import {connect} from 'react-redux'\r\nimport AppRouter from '../components/AppRouter'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.user.isAuthenticated,\r\n    isSuperAdmin: state.user.isSuperAdmin,\r\n    isAdmin: state.user.isAdmin,\r\n    loggedInUser: state.user.loggedIn\r\n})\r\n\r\nconst AppRouterContainer = withRouter(connect(\r\n    mapStateToProps\r\n)(AppRouter))\r\n\r\nexport default AppRouterContainer\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/containers/AppRouterContainer.js","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {ConfirmationDialog} from \"../index\";\r\nimport * as logger from '../../clientLogger'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport * as CM from \"../../clientMsg\"\r\nimport _ from 'lodash'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {connect} from 'react-redux'\r\nimport {initialize} from 'redux-form'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as EC from \"../../../server/errorcodes\";\r\n\r\nclass EstimationTask extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showTaskDeletionDialog: false,\r\n            showTaskDeletionRequestedDialog: false,\r\n            taskDeletion: undefined\r\n        }\r\n\r\n    }\r\n\r\n    onClose() {\r\n        this.setState({showTaskDeletionDialog: false})\r\n        this.setState({showTaskDeletionRequestedDialog: false})\r\n    }\r\n\r\n    onConfirmTaskDelete() {\r\n        this.setState({showTaskDeletionDialog: false})\r\n        this.props.deleteTask(this.state.taskDeletion);\r\n    }\r\n\r\n    onConfirmTaskDeleteRequest() {\r\n        this.setState({showTaskDeletionRequestedDialog: false})\r\n        this.props.deleteTask(this.props.task)\r\n\r\n    }\r\n\r\n    render() {\r\n        const {task, loggedInUserRole, estimationStatus, expanded, isFeatureTask, fromRepoWithFeature, editView} = this.props\r\n        let buttons = [];\r\n\r\n        logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'logged in user is ', loggedInUserRole)\r\n        logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'task owner ', task.owner)\r\n        logger.debug(logger.ESTIMATION_TASK_RENDER, this.props)\r\n\r\n\r\n        if (loggedInUserRole == SC.ROLE_NEGOTIATOR) {\r\n\r\n            //condition for task approval\r\n\r\n            if (task.status === SC.STATUS_PENDING && _.includes([SC.STATUS_REVIEW_REQUESTED, SC.STATUS_INITIATED, SC.STATUS_ESTIMATION_REQUESTED, SC.STATUS_CHANGE_REQUESTED], estimationStatus)) {\r\n\r\n                if (task.canApprove) {\r\n                    buttons.push(editView ?\r\n                        <img className=\"div-hover\" key=\"approve\" src=\"/images/approve.png\" title=\"Approve\"\r\n                             onClick={() => {\r\n                                 this.props.approveTask(task)\r\n                             }}/> :\r\n                        <img key=\"approve_disable\" src=\"/images/approve_disable.png\" title=\"Approve\"/>)\r\n                }\r\n\r\n\r\n                // First button shown to negotiator would be suggestion button (kind of edit button)\r\n                if (task.negotiator.changeSuggested || (task.addedInThisIteration && task.owner == SC.OWNER_NEGOTIATOR)) {\r\n                    // Negotiator has suggested changes in this iteration so show that to negotiator,\r\n                    buttons.push(editView ?\r\n                        <img className=\"div-hover\" key=\"suggestion_outgoing\" src=\"/images/suggestion_outgoing.png\"\r\n                             title=\"Suggestions made by You\"\r\n                             onClick={() => {\r\n                                 this.props.openTaskSuggestionForm(task, loggedInUserRole)\r\n                             }}/> :\r\n                        <img key=\"suggestion_outgoing_disable\" src=\"/images/suggestion_outgoing_disable.png\"\r\n                             title=\"Suggestion made by You\"/>)\r\n                } else if (task.estimator.changedKeyInformation || (task.addedInThisIteration && task.owner === SC.OWNER_ESTIMATOR)) {\r\n                    // Estimator has changed key information in previous iteration, so show that to negotiator\r\n                    buttons.push(editView ?\r\n                        <img className=\"div-hover\" key=\"suggestion_incoming\" src=\"/images/suggestion_incoming.png\"\r\n                             title=\"Suggestion made by Estimator \"\r\n                             onClick={() => {\r\n                                 this.props.openTaskSuggestionForm(task, loggedInUserRole)\r\n                             }}/> :\r\n                        <img key=\"suggestion_incoming_disable\" src=\"/images/suggestion_incoming_disable.png\"\r\n                             title=\"Suggestion made by Estimator\"/>)\r\n                } else {\r\n                    // Show normal suggestion button\r\n                    buttons.push(editView ?\r\n                        <img className=\"div-hover\" key=\"suggestion\" src=\"/images/suggestion.png\" title=\"Suggestion\"\r\n                             onClick={() => {\r\n                                 this.props.openTaskSuggestionForm(task, loggedInUserRole)\r\n                             }}/> :\r\n                        <img key=\"suggestion_disable\" src=\"/images/suggestion_disable.png\" title=\"Suggestion\"/>)\r\n                }\r\n\r\n                // Second button shown to negotiator would be related to removal request (by estimator)/ delete button\r\n                if (task.estimator.removalRequested) {\r\n                    // Estimator has requested removal, negotiator will directly delete task if he wants to\r\n                    buttons.push(editView && (!fromRepoWithFeature) ?\r\n                        <img className=\"div-hover\" key=\"he_requested_delete\" src=\"/images/he_requested_delete.png\"\r\n                             title=\"Delete requested by Estimator\"\r\n                             onClick={() => {\r\n                                 this.setState({showTaskDeletionRequestedDialog: true})\r\n\r\n                             }}/> :\r\n                        <img key=\"he_requested_delete_disable\" src=\"/images/he_requested_delete_disable.png\"\r\n                             title=\"Delete requested by Estimator\"/>)\r\n\r\n                } else {\r\n                    // Negotiator can delete any task during its review without getting permission from estimator\r\n                    buttons.push(editView && (!fromRepoWithFeature) ?\r\n                        <img className=\"div-hover\" key=\"delete\" src=\"/images/delete.png\" title=\"Delete\"\r\n                             onClick={() => {\r\n                                 this.setState({showTaskDeletionDialog: true})\r\n                                 this.setState({taskDeletion: task})\r\n                                 //this.props.deleteTask(task)\r\n                             }}/> :\r\n                        <img key=\"delete_disable\" src=\"/images/delete_disable.png\" title=\"Delete\"/>)\r\n                }\r\n\r\n            }\r\n\r\n\r\n            // If status is approved\r\n            if (task.status === SC.STATUS_APPROVED) {\r\n                // Single button shown to Negotiator would be related to Reopen requests (by estimator)/Reopen granted (by negotiator)\r\n                if (task.estimator.changeRequested) {\r\n                    if (task.negotiator.changeGranted) {\r\n                        // estimator has requested Reopen which negotiator has granted\r\n                        logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'changeRequested/changeGranted, he_granted_Reopen')\r\n                        buttons.push(editView ?\r\n                            <img className=\"div-hover\" key=\"granted_reopen\" src=\"/images/reopen_granted.png\"\r\n                                 title=\"Reopen-Granted\"\r\n                                 onClick={() => {\r\n                                     this.props.toggleGrantEdit(task)\r\n                                 }}/> :\r\n                            <img key=\"granted_reopen_disable\" src=\"/images/reopen_granted_disable.png\"\r\n                                 title=\"Reopen-Granted\"/>)\r\n                    } else {\r\n                        // estimator has requested Reopen but negotiator has not granted it till now\r\n                        logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'changeRequested/not granted, requested_edit')\r\n                        buttons.push(editView ?\r\n                            <img className=\"div-hover\" key=\"he_requested_reopen\" src=\"/images/he_requested_reopen.png\"\r\n                                 title=\"Reopen requested by Estimator\"\r\n                                 onClick={() => {\r\n                                     this.props.toggleGrantEdit(task)\r\n                                 }}/> :\r\n                            <img key=\"he_requested_reopen_disable\" src=\"/images/he_requested_reopen_disable.png\"\r\n                                 title=\"Reopen requested by Estimator\"/>)\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    buttons.push(editView ?\r\n                        <img className=\"div-hover\" key=\"reopen\" src=\"/images/reopen.png\" title=\"Reopen\"\r\n                             onClick={() => {\r\n                                 this.props.reOpenTask(task)\r\n                             }}/> :\r\n                        <img key=\"reopen_disable\" src=\"/images/reopen_disable.png\" title=\"Reopen\"/>)\r\n\r\n                }\r\n            }\r\n\r\n\r\n        } else if (loggedInUserRole === SC.ROLE_ESTIMATOR) {\r\n            if (task.addedInThisIteration && task.owner === SC.OWNER_ESTIMATOR) {\r\n                // As estimator has added this task in this iteration only, he/she would be able to edit/delete it without any restrictions\r\n                buttons.push(editView ?\r\n                    <img className=\"div-hover\" key=\"edit\" src=\"/images/edit.png\" title=\"Edit\"\r\n                         onClick={() => {\r\n                             this.props.editTask(task, loggedInUserRole)\r\n                         }}/> :\r\n                    <img key=\"edit_disable\" src=\"/images/edit_disable.png\" title=\"Edit\"/>)\r\n                buttons.push(editView && (!fromRepoWithFeature) ?\r\n                    <img className=\"div-hover\" key=\"delete\" src=\"/images/delete.png\" title=\"Delete\"\r\n                         onClick={() => {\r\n                             this.setState({showTaskDeletionDialog: true})\r\n                             this.setState({taskDeletion: task})\r\n                             //this.props.deleteTask(task)\r\n                         }}/> :\r\n                    <img key=\"delete_disable\" src=\"/images/delete_disable.png\" title=\"Delete\"/>)\r\n\r\n            } else {\r\n                if (task.status === SC.STATUS_PENDING) {\r\n                    if (task.estimator.changedKeyInformation || (task.addedInThisIteration && task.owner == SC.OWNER_ESTIMATOR)) {\r\n                        // Estimator has changed key information so show estimator icon to notify that\r\n                        buttons.push(editView ?\r\n                            <img className=\"div-hover\" key=\"suggestion_outgoing\" src=\"/images/suggestion_outgoing.png\"\r\n                                 title=\"Suggestion made by You\"\r\n                                 onClick={() => {\r\n                                     this.props.openTaskSuggestionForm(task, loggedInUserRole)\r\n                                 }}/> :\r\n                            <img key=\"suggestion_outgoing_disable\" src=\"/images/suggestion_outgoing_disable.png\"\r\n                                 title=\"Suggestion made by You\"/>)\r\n                    } else if (task.negotiator.changeSuggested || (task.addedInThisIteration && task.owner == SC.OWNER_NEGOTIATOR)) {\r\n                        // Negotiator has suggested changes in previous iteration so show that\r\n                        buttons.push(editView ?\r\n                            <img className=\"div-hover\" key=\"suggestion_incoming\" src=\"/images/suggestion_incoming.png\"\r\n                                 title=\"Suggestions by Negotiator\"\r\n                                 onClick={() => {\r\n                                     this.props.openTaskSuggestionForm(task, loggedInUserRole)\r\n                                 }}/> :\r\n                            <img key=\"suggestion_incoming_disable\" src=\"/images/suggestion_incoming_disable.png\"\r\n                                 title=\"Suggestions by Negotiator\"/>)\r\n                    }\r\n                    else {\r\n                        // Negotiator has not suggested any changes in this iteration so show that\r\n                        buttons.push(editView && !task.negotiator.changeSuggested ?\r\n                            <img className=\"div-hover\" key=\"suggestion\" src=\"/images/suggestion.png\"\r\n                                 title=\"suggestion\"\r\n                                 onClick={() => {\r\n                                     this.props.openTaskSuggestionForm(task, loggedInUserRole)\r\n                                 }}/> :\r\n                            <img key=\"suggestion_disable\" src=\"/images/suggestion_disable.png\"\r\n                                 title=\"Suggestion\"/>)\r\n                    }\r\n\r\n                    // Second button is related to removal request\r\n\r\n                    if (task.estimator.removalRequested) {\r\n                        // Estimator has requested removal\r\n                        buttons.push(editView && (!fromRepoWithFeature) ?\r\n                            <img className=\"div-hover\" key=\"requested_delete\" src=\"/images/requested_delete.png\"\r\n                                 title=\"Delete requested by You\"\r\n                                 onClick={() => {\r\n                                     this.props.toggleDeleteRequest(task)\r\n                                 }}/> :\r\n                            <img key=\"requested_delete_disable\" src=\"/images/requested_delete_disable.png\"\r\n                                 title=\"Delete requested by You\"/>)\r\n                    } else {\r\n                        // Estimator can request removal\r\n                        buttons.push(editView && (!fromRepoWithFeature) ?\r\n                            <img className=\"div-hover\" key=\"request_delete\" src=\"/images/request_delete.png\"\r\n                                 title=\"Request delete\"\r\n                                 onClick={() => {\r\n                                     this.props.toggleDeleteRequest(task)\r\n                                 }}/> :\r\n                            <img key=\"request_delete_disable\" src=\"/images/request_delete_disable.png\"\r\n                                 title=\"Request delete\"/>)\r\n                    }\r\n\r\n\r\n                }\r\n                else if (task.status === SC.STATUS_APPROVED) {\r\n                    // As task is approved by negotiator hence he has no direct permission to edit/delete task so estimator has to raise re-open request\r\n                    /**\r\n                     * Single button shown to estimator would be related to Reopen request/grants\r\n                     */\r\n                    if (task.estimator.changeRequested) {\r\n                        if (task.negotiator.changeGranted) {\r\n                            // estimator has requested change which negotiator has granted\r\n                            logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'changeRequested/changeGranted, he_granted_re_open')\r\n                            buttons.push(editView ?\r\n                                <img className=\"div-hover\" key=\"he_granted_reopen\" src=\"/images/he_granted_reopen.png\"\r\n                                     title=\"Reopen-Granted\"\r\n                                     onClick={() => {\r\n                                         //Re-Open\r\n                                         this.props.editTask(task)\r\n                                     }}/> :\r\n                                <img key=\"he_granted_reopen_disable\" src=\"/images/he_granted_reopen_disable.png\"\r\n                                     title=\"Reopen-Granted\"/>)\r\n                        } else {\r\n                            // estimator has requested change but negotiator has not granted it till now\r\n                            logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'changeRequested/not granted, requested_re_open')\r\n                            buttons.push(editView ?\r\n                                <img className=\"div-hover\" key=\"requested_reopen\" src=\"/images/reopen_requested.png\"\r\n                                     title=\"Reopen requested by Estimator\"\r\n                                     onClick={() => {\r\n                                         this.props.toggleEditRequest(task)\r\n                                     }}/> :\r\n                                <img key=\"requested_reopen_disable\" src=\"/images/reopen_requested_disable.png\"\r\n                                     title=\"Reopen requested by Estimator\"/>)\r\n                        }\r\n                    } else {\r\n                        //request for reopen by estimator on approved task\r\n                        // Estimator can request Reopen\r\n                        buttons.push(editView ?\r\n                            <img className=\"div-hover\" key=\"request_reopen\" src=\"/images/reopen_request.png\"\r\n                                 title=\"Request re-open\"\r\n                                 onClick={() => {\r\n                                     this.props.toggleEditRequest(task)\r\n                                 }}/> :\r\n                            <img key=\"request_reopen_disable\" src=\"/images/reopen_request_disable.png\"\r\n                                 title=\"Request re-open\"/>)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        if (loggedInUserRole === SC.ROLE_NEGOTIATOR && task.status === SC.STATUS_PENDING && _.includes([SC.STATUS_INITIATED, SC.STATUS_REVIEW_REQUESTED], estimationStatus) ||\r\n            loggedInUserRole === SC.ROLE_ESTIMATOR && task.status === SC.STATUS_PENDING && _.includes([SC.STATUS_ESTIMATION_REQUESTED, SC.STATUS_CHANGE_REQUESTED], estimationStatus)) {\r\n\r\n\r\n            if (editView && (!fromRepoWithFeature)) {\r\n                if (task.feature && task.feature._id) {\r\n                    // This task is part of some feature so add move out of feature button\r\n                    buttons.push(\r\n                        <img className=\"div-hover\" key=\"move_out_of_feature\" src=\"/images/move_outof_feature.png\"\r\n                             title=\"Move out of feature\"\r\n                             onClick={() => this.props.moveTaskOutOfFeature(task)}/>)\r\n                } else {\r\n                    buttons.push(<img className=\"div-hover\" key=\"move_to_feature\" src=\"/images/move_to_feature.png\"\r\n                                      title=\"Move to feature\"\r\n                                      onClick={() => this.props.moveToFeature(task)}\r\n                    />)\r\n                }\r\n            }\r\n            else {\r\n                if (task.feature && task.feature._id) {\r\n                    buttons.push(<img key=\"move_out_of_feature\" src=\"/images/move_outof_feature_disable.png\"\r\n                                      title=\"Move out of feature\"/>)\r\n                } else {\r\n                    buttons.push(<img key=\"move_to_feature\" src=\"/images/move_to_feature_disable.png\"\r\n                                      title=\"Move to feature\"/>)\r\n\r\n                }\r\n            }\r\n\r\n        } else {\r\n            if (task.feature && task.feature._id) {\r\n                buttons.push(<img key=\"move_out_of_feature\" src=\"/images/move_outof_feature_disable.png\"\r\n                                  title=\"Move out of feature\"/>)\r\n            } else {\r\n                buttons.push(<img key=\"move_to_feature\" src=\"/images/move_to_feature_disable.png\"\r\n                                  title=\"Move to feature\"/>)\r\n\r\n            }\r\n        }\r\n        return <div className={expanded ? 'task-expanded' : 'task'}>\r\n            <div className=\"col-md-9\">\r\n                <div\r\n                    className={task.estimator && task.estimator.name ? \"col-md-11  div-hover \" : \"col-md-11 infoHighliter\"}>\r\n                    <h4 title={task.estimator.name ? task.estimator.name : \"Estimated hours (By Estimator) is Mandatory for Task Approval\"}>{task.estimator.name ? task.estimator.name : task.negotiator.name}</h4>\r\n                </div>\r\n                {task.status === SC.STATUS_PENDING && task.hasError == true ? <div className=\"col-md-1\">\r\n\r\n                    <img key=\"exclaimation\" className=\" errorClass\" src=\"/images/exclamation.png\"\r\n                         title={task.estimator && task.estimator.name ? task.estimator.description ? task.estimator.estimatedHours ? \"Some changes is done in this iteration\" : \"Estimated hours (By Estimator) is Mandatory for Task Approval\" : \"Task Description (By Estimator) is Mandatory for Task Approval\" : \"Task Name (By Estimator) is Mandatory for Task Approval\"}\r\n                    ></img>\r\n                </div> : null}\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n\r\n                <div>\r\n                    {\r\n                        this.state.showTaskDeletionRequestedDialog &&\r\n                        <ConfirmationDialog show={true} onConfirm={this.onConfirmTaskDeleteRequest.bind(this)}\r\n                                            title={CM.DELETE_TASK} onClose={this.onClose.bind(this)}\r\n                                            body={CM.DELETE_TASK_BODY}/>\r\n                    }\r\n                    {this.state.showTaskDeletionDialog &&\r\n                    <ConfirmationDialog show={true} onConfirm={this.onConfirmTaskDelete.bind(this)}\r\n                                        title={CM.DELETE_TASK} onClose={this.onClose.bind(this)}\r\n                                        body={CM.DELETE_TASK_BODY}/>\r\n                    }\r\n                    {task.owner == SC.OWNER_ESTIMATOR && task.addedInThisIteration && <div className=\"flagStrip\">\r\n                        <img key=\"estimator_new_flag\" src=\"/images/estimator_new_flag.png\" title=\"Added by Estimator\"/>\r\n                    </div>}\r\n\r\n                    {task.owner == SC.OWNER_NEGOTIATOR && task.addedInThisIteration && <div className=\"flagStrip\">\r\n                        <img key=\"negotiator_new_flag\" src=\"/images/negotiator_new_flag.png\"\r\n                             title=\"Added by Negotiator\"/>\r\n                    </div>}\r\n\r\n                    {!task.repo.addedFromThisEstimation &&\r\n                    <div className=\"flagStrip\">\r\n                        <img key=\"repo_flag\" src=\"/images/repo_flag.png\" title=\"From Repository\"/>\r\n                    </div>\r\n                    }\r\n\r\n                    {task.estimator.changedInThisIteration && <div className=\"flagStrip\">\r\n                        <img key=\"estimator_edit_flag\" src=\"/images/estimator_edit_flag.png\"\r\n                             title=\"Edited by Estimator\"/>\r\n                    </div>}\r\n\r\n                    {task.negotiator.changedInThisIteration && <div className=\"flagStrip\">\r\n                        <img key=\"negotiator_edit_flag\" src=\"/images/negotiator_edit_flag.png\"\r\n                             title=\"Edited by Negotiator\"/>\r\n                    </div>}\r\n\r\n                    {task.status === SC.STATUS_APPROVED &&\r\n                    <div className=\"flagStrip\">\r\n                        <img key=\"approved_flag\" src=\"/images/approved_flag.png\"\r\n                             title=\"Approved\"/>\r\n                    </div>}\r\n                    {((task.negotiator.changedInThisIteration && task.negotiator.isMovedOutOfFeature) ||\r\n                        (task.estimator.changedInThisIteration && task.estimator.isMovedOutOfFeature))\r\n                    &&\r\n                    <div className=\"flagStrip\">\r\n                        <img key=\"move_out_flag\" src=\"/images/move_out_flag.png\" title=\"Moved Out From Feature\"/>\r\n                    </div>}\r\n\r\n                    {((task.negotiator.changedInThisIteration && task.negotiator.isMovedToFeature) ||\r\n                        (task.estimator.changedInThisIteration && task.estimator.isMovedToFeature))\r\n                    &&\r\n                    <div className=\"flagStrip\">\r\n                        <img key=\"move_in_flag\" src=\"/images/move_in_flag.png\" title=\"Moved Into Feature\"/>\r\n                    </div>}\r\n                </div>\r\n\r\n            </div>\r\n            <div\r\n                className={task.estimator.description ? \"col-md-12  div-hover short-description\" : \"col-md-12  div-hover short-description infoHighliter\"}\r\n                onClick={() => {\r\n                    if (task && task._id && task.feature && task.feature._id) {\r\n                        this.props.expandTaskAndFeature(task.feature._id, task._id)\r\n                    }\r\n                    else this.props.expandTask(task._id)\r\n                }}>\r\n                <p title={task.estimator.description ? task.estimator.description : \"Task is not having description by estimator\"}>{task.estimator.description ? task.estimator.description : task.negotiator.description}</p>\r\n            </div>\r\n\r\n            <div className={task.estimator && task.estimator.estimatedHours ? \"col-md-3\" : \"col-md-3 infoHighliter\"}>\r\n                <h4 title={task.estimator && task.estimator.estimatedHours ? task.estimator.estimatedHours : \"task is not having estimatedHours by estimator\"}>\r\n                    Estimated:</h4>\r\n                <h4>&nbsp;{typeof(task.estimator.estimatedHours) == 'number' ? task.estimator.estimatedHours + ' Hrs' : ''}</h4>\r\n            </div>\r\n\r\n            <div className=\"col-md-3\">\r\n                <h4 title={task.negotiator.estimatedHours ? task.negotiator.estimatedHours : \"Task is added by estimator hence no Suggested Hours\"}>\r\n                    Suggested:</h4>\r\n                <h4>&nbsp;{typeof(task.negotiator.estimatedHours) == 'number' ? task.negotiator.estimatedHours + ' Hrs' : ''}</h4>\r\n            </div>\r\n\r\n\r\n            <div className=\"col-md-6 text-right estimationActions\">\r\n                {buttons}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nEstimationTask.propTypes = {\r\n    task: PropTypes.object.isRequired,\r\n    loggedInUserRole: PropTypes.string.isRequired,\r\n    estimationStatus: PropTypes.string.isRequired,\r\n    expanded: PropTypes.bool,\r\n    isFeatureTask: PropTypes.bool\r\n}\r\n\r\nEstimationTask.defaultProps = {\r\n    expanded: false,\r\n    editView: false,\r\n    isFeatureTask: false,\r\n    fromRepoWithFeature: false\r\n}\r\n\r\nEstimationTask = connect(null, (dispatch, ownProps) => ({\r\n    toggleEditRequest: (values) => {\r\n        return dispatch(A.requestForTaskEditPermissionOnServer(values._id)).then(json => {\r\n            if (json.success) {\r\n\r\n                if (json.data && json.data.estimator && json.data.estimator.changeRequested)\r\n                    NotificationManager.success(\"Reopen request on Task raised...\")\r\n                else\r\n                    NotificationManager.success(\"Reopen request on Task cleared...\")\r\n            } else {\r\n                NotificationManager.error(\"Unknown error occurred\")\r\n            }\r\n        })\r\n    },\r\n    deleteTask: (values) => {\r\n        return dispatch(A.deleteEstimationTaskOnServer(values.estimation._id, values._id)).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success(\"Task Deleted successfully\")\r\n            } else if (json.code && json.code == EC.INVALID_USER) {\r\n                NotificationManager.error(\"Task Deletion Failed You are not owner of this task !\")\r\n            } else if (json.code && json.code == EC.ACCESS_DENIED) {\r\n                NotificationManager.error(\"You are not allowed to delete this task !\")\r\n            }\r\n            else\r\n                NotificationManager.error(\"Task Deletion Failed !\")\r\n\r\n        })\r\n    },\r\n    toggleDeleteRequest: (values) => {\r\n        return dispatch(A.requestForTaskDeletePermissionOnServer(values._id)).then(json => {\r\n            if (json.success) {\r\n                if (json.data && json.data.estimator && json.data.estimator.removalRequested)\r\n                    NotificationManager.success(\"Delete request on Task raised...\")\r\n                else\r\n                    NotificationManager.success(\"Delete request on Task cleared...\")\r\n            } else {\r\n                if (json.code == EC.INVALID_OPERATION)\r\n                    NotificationManager.error(\"Task Delete already requested\")\r\n                else\r\n                    NotificationManager.error(\"Unknown error occurred\")\r\n            }\r\n        })\r\n    },\r\n    editTask: (values, loggedInUserRole) => {\r\n\r\n        dispatch(A.showComponent(COC.ESTIMATION_TASK_DIALOG))\r\n        let task = {}\r\n        task._id = values._id\r\n        task.estimation = values.estimation\r\n        task.isFromRepo = values.repo && !values.repo.addedFromThisEstimation ? true : false\r\n        if (loggedInUserRole != SC.ROLE_NEGOTIATOR) {\r\n            task.name = values.estimator.name\r\n            task.description = values.estimator.description\r\n            task.estimatedHours = values.estimator.estimatedHours\r\n            task.type = values.type\r\n        }\r\n        else {\r\n            task.name = values.negotiator.name\r\n            task.description = values.negotiator.description\r\n            task.estimatedHours = values.negotiator.estimatedHours\r\n            task.type = values.type\r\n        }\r\n        task.feature = values.feature\r\n        task.technologies = values.technologies\r\n        dispatch(initialize(\"estimation-task\", task))\r\n    },\r\n    moveToFeature: (task) => {\r\n        dispatch(A.showComponent(COC.MOVE_TASK_TO_FEATURE_FORM_DIALOG))\r\n        dispatch(initialize(\"move-task-in-feature\", task))\r\n    },\r\n    moveTaskOutOfFeature: (task) => {\r\n        dispatch(A.moveTaskOutOfFeatureOnServer(task)).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success('Task moved out of feature Successfully')\r\n            } else {\r\n                NotificationManager.success('Some error occurred')\r\n            }\r\n\r\n        })\r\n        //dispatch(initialize(\"MoveTaskInFeatureForm\", task))\r\n    },\r\n    toggleGrantEdit: (values) => {\r\n        return dispatch(A.grantEditPermissionOfTaskOnServer(values._id)).then(json => {\r\n            if (json.success) {\r\n                if (json.data && json.data.negotiator && json.data.negotiator.changeGranted)\r\n                    NotificationManager.success(\"Reopen permission on task granted...\")\r\n                else\r\n                    NotificationManager.success(\"Reopen permission on task not granted...\")\r\n            }\r\n            else {\r\n                NotificationManager.error('Permission Grant Failed')\r\n            }\r\n\r\n        })\r\n    },\r\n    approveTask: (values) => {\r\n        return dispatch(A.approveTaskByNegotiatorOnServer(values._id)).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success(\"Task Approved ...\")\r\n\r\n            }\r\n            else {\r\n                if (json.code == EC.TASK_APPROVAL_ERROR) {\r\n                    NotificationManager.error('Task cant be approved as Estimator has demanded some changes')\r\n                }\r\n                else {\r\n\r\n                    NotificationManager.error('Task Not Approved')\r\n                }\r\n\r\n            }\r\n\r\n        })\r\n    },\r\n    openTaskSuggestionForm: (values, loggedInUserRole) => {\r\n        let task = {\r\n            loggedInUserRole: loggedInUserRole,\r\n            readOnly: {}\r\n        }\r\n        task.isFromRepo = values.repo && !values.repo.addedFromThisEstimation ? true : false\r\n        task._id = values._id\r\n        task.estimation = values.estimation\r\n        if (loggedInUserRole == SC.ROLE_NEGOTIATOR) {\r\n            /* Since negotiator is logged in, he would see details of negotiator section in editable form and details of estimator section in read only form  */\r\n            task.name = values.negotiator.name\r\n            task.description = values.negotiator.description\r\n            task.estimatedHours = values.negotiator.estimatedHours\r\n            task.type = values.type\r\n\r\n            task.readOnly.name = values.estimator.name\r\n            task.readOnly.description = values.estimator.description\r\n            task.readOnly.estimatedHours = values.estimator.estimatedHours\r\n\r\n        } else if (loggedInUserRole == SC.ROLE_ESTIMATOR) {\r\n            /* Since estimator is logged in, he would see details of  estimator section in editable form  */\r\n            task.name = values.estimator.name\r\n            task.description = values.estimator.description\r\n            task.estimatedHours = values.estimator.estimatedHours\r\n            task.type = values.type\r\n            task.readOnly.name = values.negotiator.name\r\n            task.readOnly.description = values.negotiator.description\r\n            task.readOnly.estimatedHours = values.negotiator.estimatedHours\r\n        }\r\n\r\n        dispatch(initialize(\"estimation-suggest-task\", task))\r\n        dispatch(A.showComponent(COC.ESTIMATION_SUGGEST_TASK_FORM_DIALOG))\r\n    },\r\n    reOpenTask: (values) => {\r\n        return dispatch(A.reOpenTaskOnServer(values._id)).then(json => {\r\n            if (json.success) {\r\n                NotificationManager.success(\"Task ReOpen\")\r\n            }\r\n            else {\r\n                NotificationManager.error('Task Not  ReOpen')\r\n            }\r\n\r\n        })\r\n    },\r\n\r\n    expandTask: (taskId) => {\r\n        dispatch(A.expandTask(taskId))\r\n    },\r\n    expandTaskAndFeature: (featureID, taskID) => {\r\n        dispatch(A.expandTaskAndFeature(featureID, taskID))\r\n    }\r\n}))(EstimationTask)\r\n\r\n\r\nexport default EstimationTask\n\n\n// WEBPACK FOOTER //\n// ./client/components/sections/EstimationTask.js","import {connect} from 'react-redux'\r\nimport {EstimationInitiateForm} from \"../../components\"\r\nimport * as logger from '../../clientLogger'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        logger.debug(logger.ESTIMATION_INITIATE_FORM_SUBMIT, \"values:\", values)\r\n        if (values._id) {\r\n            return dispatch(A.updateEstimationOnServer(values)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success(\"Estimation Updated Successfully\")\r\n                    // hide dialog\r\n                    dispatch(A.hideComponent(COC.ESTIMATION_INITIATE_DIALOG))\r\n                } else {\r\n                    NotificationManager.error(\"Estimation update Failed\")\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            return dispatch(A.initiateEstimationOnServer(values)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success(\"Estimation Initiated Successfully\")\r\n                    // hide dialog\r\n                    dispatch(A.hideComponent(COC.ESTIMATION_INITIATE_DIALOG))\r\n                } else {\r\n                    NotificationManager.error(\"Estimation Initiation Failed\")\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    estimators: state.user.all && Array.isArray(state.user.all) && state.user.all.length ? state.user.all.filter(user =>\r\n        state.user && state.user.loggedIn && state.user.loggedIn._id && user._id.toString() !== state.user.loggedIn._id.toString() && user.roles && user.roles.length ? user.roles.findIndex(r => r.name === SC.ROLE_ESTIMATOR) != -1 : false\r\n    ) : [],\r\n    projects: state.project.all,\r\n    technologies: state.technology.all,\r\n    developmentTypes: state.developmentType.all,\r\n    modules: state.module.all\r\n})\r\n\r\nconst EstimationInitiateFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EstimationInitiateForm)\r\n\r\nexport default EstimationInitiateFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/EstimationInitiateFormContainer.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport {withRouter} from 'react-router-dom'\r\nimport * as SC from '../../../server/serverconstants'\r\nimport moment from 'moment'\r\nimport {ReleaseTaskSearchFormContainer} from '../../containers'\r\n\r\nclass TaskPlanList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.options = {\r\n            sizePerPageList: [{\r\n                text: '6', value: 6\r\n            }, {\r\n                text: '10', value: 10\r\n            }, {\r\n                text: '20', value: 20\r\n            }, {\r\n                text: '50', value: 50\r\n            }],\r\n            sizePerPage: 6,  // which size per page you want to locate as default\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllTaskPlans(this.props.release)\r\n    }\r\n\r\n    formatDeveloperName(employee) {\r\n        if (employee)\r\n            return employee.name\r\n        return ''\r\n    }\r\n\r\n    formatTaskName(task, row) {\r\n        if (task) {\r\n            if (row.iterationType == SC.ITERATION_TYPE_PLANNED)\r\n                return <span style={{color: '#4172c1'}}>{task.name}</span>\r\n            else if (row.iterationType == SC.ITERATION_TYPE_UNPLANNED)\r\n                return <span style={{color: '#e52d8c'}}>{task.name}</span>\r\n            else\r\n                return <span>{task.name}</span>\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatPlannedHours(planning) {\r\n        console.log(\"Planning---------------\", planning)\r\n        if (planning)\r\n            return planning.plannedHours\r\n        return 0\r\n    }\r\n\r\n    formatPlannedDate(row) {\r\n        if (row) {\r\n            return moment(row).format(SC.DATE_DISPLAY_FORMAT)\r\n        }\r\n        return ''\r\n    }\r\n\r\n    formatReportedStatus(report) {\r\n        if (report)\r\n            return report.status\r\n        return ''\r\n    }\r\n\r\n    formatReportedHours(report) {\r\n        if (report)\r\n            return report.reportedHours\r\n        return 0\r\n    }\r\n\r\n    formatFlags(flags) {\r\n        let flagImageArray = []\r\n        flagImageArray = flags && flags.length ? flags.map((flag, idx) => {\r\n            if (flag === SC.WARNING_UNPLANNED)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"unplanned\" + idx} src=\"/images/unplanned.png\"\r\n                            title=\"Unplanned\"/>\r\n            else if (flag === SC.WARNING_TOO_MANY_HOURS)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"too_many_hours\" + idx}\r\n                            src=\"/images/too_many_hours.png\"\r\n                            title=\"Too Many Hours\"/>\r\n            else if (flag === SC.WARNING_EMPLOYEE_ON_LEAVE)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"employee-on-leave\" + idx}\r\n                            src=\"/images/employee_on_leave.png\"\r\n                            title=\"Employee On Leave\"/>\r\n            else if (flag === SC.WARNING_RELEASE_DATE_MISSED_1)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"release_date_missed_1\" + idx}\r\n                            src=\"/images/release_date_missed_1.png\"\r\n                            title=\"Release Date Missed 1\"/>\r\n            else if (flag === SC.WARNING_RELEASE_DATE_MISSED_2)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"release_date_missed_2\" + idx}\r\n                            src=\"/images/release_date_missed_2.png\"\r\n                            title=\"Release Date Missed 2\"/>\r\n            else if (flag === SC.WARNING_RELEASE_DATE_MISSED_3)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"release_date_missed_3\" + idx}\r\n                            src=\"/images/release_date_missed_3.png\"\r\n                            title=\"Release Date Missed 3\"/>\r\n            else if (flag === SC.WARNING_RELEASE_DATE_MISSED_4)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"release_date_missed_4\" + idx}\r\n                            src=\"/images/release_date_missed_4.png\"\r\n                            title=\"Release Date Missed 4\"/>\r\n            else if (flag === SC.WARNING_PLANNED_BEYOND_RELEASE_DATE)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"planned_beyond_release_date\" + idx}\r\n                            src=\"/images/planned_beyond_release_date.png\"\r\n                            title=\"Planned Beyond Release Date\"/>\r\n            else if (flag === SC.WARNING_LESS_PLANNED_HOURS)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"less_planned_hours\" + idx}\r\n                            src=\"/images/less_planned_hours.png\"\r\n                            title=\"Less Planned Hours\"/>\r\n            else if (flag === SC.WARNING_MORE_PLANNED_HOURS)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"more_planned_hours\" + idx}\r\n                            src=\"/images/more_planned_hours.png\"\r\n                            title=\"More Planned Hours\"/>\r\n            else if (flag === SC.WARNING_MORE_REPORTED_HOURS_1)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"more_reported_hours_1\" + idx}\r\n                            src=\"/images/more_reported_hours_1.png\"\r\n                            title=\"More Reported Hours 1\"/>\r\n            else if (flag === SC.WARNING_MORE_REPORTED_HOURS_2)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"more_reported_hours_2\" + idx}\r\n                            src=\"/images/more_reported_hours_2.png\"\r\n                            title=\"More Reported Hours 2\"/>\r\n            else if (flag === SC.WARNING_MORE_REPORTED_HOURS_3)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"more_reported_hours_3\" + idx}\r\n                            src=\"/images/more_reported_hours_3.png\"\r\n                            title=\"More Reported Hours 3\"/>\r\n            else if (flag === SC.WARNING_MORE_REPORTED_HOURS_4)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"more_reported_hours_4\" + idx}\r\n                            src=\"/images/more_reported_hours_4.png\"\r\n                            title=\"More Reported Hours 4\"/>\r\n            else if (flag === SC.WARNING_HAS_UNREPORTED_DAYS)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"has-unreported-days\" + idx}\r\n                            src=\"/images/has_unreported_days.png\"\r\n                            title=\"Has Unreported Days\"/>\r\n            else if (flag === SC.WARNING_UNREPORTED)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"unreported\" + idx}\r\n                            src=\"/images/unreported.png\"\r\n                            title=\"Unreported\"/>\r\n            else if (flag === SC.WARNING_PENDING_ON_END_DATE)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"pending-on-enddate\" + idx}\r\n                            src=\"/images/pending-on-enddate.png\"\r\n                            title=\"Pending On Enddate\"/>\r\n            else if (flag === SC.WARNING_COMPLETED_BEFORE_END_DATE)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"completed-before-enddate\" + idx}\r\n                            src=\"/images/completed_before_enddate.png\"\r\n                            title=\"Completed Before Enddate\"/>\r\n            else if (flag === SC.WARNING_EMPLOYEE_ASK_FOR_LEAVE)\r\n                return <img className=\"div-hover releasePlanFlagImg\" key={\"employee-ask-for-leave\"}\r\n                            src=\"/images/employee-ask-for-leave.png\"\r\n                            title=\"Employee Ask For Leave\"/>\r\n            else return ''\r\n        }) : null\r\n        return <span>{flagImageArray}</span>\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const {taskPlans} = this.props\r\n        console.log(\"taskPlans------------------\", taskPlans)\r\n\r\n        return (\r\n            <div className=\"col-md-12 estimation release-plan-table\">\r\n                <BootstrapTable options={this.options} data={taskPlans}\r\n                                multiColumnSearch={true}\r\n                                search={false}\r\n                                striped={true}\r\n                                pagination\r\n                                hover={true}\r\n                                height={\"300px\"}>\r\n                    <TableHeaderColumn columnTitle isKey dataField='_id'\r\n                                       hidden={true}>ID\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn width={\"20%\"}columnTitle dataField='task'\r\n                                       dataFormat={this.formatTaskName.bind(this)}>Tasks\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn width={\"20%\"} columnTitle dataField='employee'\r\n                                       dataFormat={this.formatDeveloperName.bind(this)}>Developer\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"18%\" dataField='flags'\r\n                                       dataFormat={this.formatFlags.bind(this)}>\r\n                        Flag</TableHeaderColumn>\r\n                    <TableHeaderColumn columnTitle width={\"12%\"} dataField='planningDate'\r\n                                       dataFormat={this.formatPlannedDate.bind(this)}>Planning\r\n                        Date\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn columnTitle width={\"10%\"} dataField='planning' dataFormat={this.formatPlannedHours.bind(this)}>Planned\r\n                        Hours\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"10%\" columnTitle dataField='report'\r\n                                       dataFormat={this.formatReportedHours.bind(this)} dataAlign={\"right\"}>Reported\r\n                        Hours</TableHeaderColumn>\r\n                    <TableHeaderColumn width=\"10%\" columnTitle dataField='report'\r\n                                       dataFormat={this.formatReportedStatus.bind(this)} dataAlign={\"center\"}>Status\r\n                    </TableHeaderColumn>\r\n\r\n                </BootstrapTable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(TaskPlanList)\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/TaskPlanList.js","import {connect} from 'react-redux'\r\nimport {EstimationFeatureForm} from \"../../components\"\r\nimport * as logger from '../../clientLogger'\r\nimport * as A from '../../actions'\r\nimport * as COC from '../../components/componentConsts'\r\nimport {NotificationManager} from 'react-notifications'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        if (values._id) {\r\n            logger.debug(logger.ESTIMATION_FEATURE_FORM_SUBMIT, \"values:\", values)\r\n            return dispatch(A.updateFeatureToEstimationOnServer(values)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success(\"Feature Updated\")\r\n                    // hide dialog\r\n                    dispatch(A.hideComponent(COC.ESTIMATION_FEATURE_DIALOG))\r\n                } else {\r\n                    NotificationManager.error(json.message)\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            logger.debug(logger.ESTIMATION_FEATURE_FORM_SUBMIT, \"values:\", values)\r\n            return dispatch(A.addFeatureToEstimationOnServer(values)).then(json => {\r\n                if (json.success) {\r\n                    NotificationManager.success(\"Feature Added\")\r\n                    // hide dialog\r\n                    dispatch(A.hideComponent(COC.ESTIMATION_FEATURE_DIALOG))\r\n                } else {\r\n                    NotificationManager.error(json.message)\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    estimation: state.estimation.selected\r\n})\r\n\r\nconst EstimationFeatureFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EstimationFeatureForm)\r\n\r\nexport default EstimationFeatureFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/EstimationFeatureFormContainer.js","import * as AC from \"../actions/actionConsts\"\r\n\r\nlet initialState = {\r\n    all: [],\r\n    selected: {}\r\n}\r\n\r\nlet projectReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AC.ADD_PROJECTS:\r\n            return Object.assign({}, state, {all: action.projects})\r\n        case AC.ADD_PROJECT:\r\n            return Object.assign({}, state, {all: [...state.all, action.project]})\r\n        case AC.EDIT_PROJECT:\r\n            return Object.assign({}, state, {all: state.all.map(item => item._id == action.project._id ? action.project : item)})\r\n        case AC.DELETE_PROJECT:\r\n            return Object.assign({}, state, {all: state.all.filter(item => item._id !== action.projectID)})\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default projectReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/projectReducer.js","import React, {Component} from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport Dialog from 'react-bootstrap-dialog'\r\nimport _ from 'lodash'\r\n\r\nclass RoleList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    editCellButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\"glyphicon glyphicon-pencil pull-left btn btn-custom\" type=\"button\"\r\n                        onClick={() => this.props.editRole(row, rowIndex)}>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    onClickCaseTypeDeleteSelected(cell, row, rowIndex) {\r\n\r\n    }\r\n\r\n\r\n    deleteCellButton(cell, row, enumObject, rowIndex) {\r\n        return (<button className=\"glyphicon glyphicon-trash pull-left btn btn-custom\" type=\"button\"\r\n                        onClick={() => {\r\n                            this.dialog.show({\r\n                                title: \"Delete Role\",\r\n                                body: \"\",\r\n                                actions: [\r\n                                    Dialog.DefaultAction('Delete', () => {\r\n                                        this.props.deleteRole(row._id)\r\n                                    }, 'btn-custom'),\r\n                                    Dialog.DefaultAction('Close', () => {\r\n                                        this.dialog.hide()\r\n                                    }, 'btn-custom')\r\n                                ],\r\n                                bsSize: 'small',\r\n                                onHide: (dialog) => {\r\n                                    this.dialog.hide()\r\n                                }\r\n                            })\r\n                        }}>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    formatPermissions(permissions, row, enumObject, rowIndex) {\r\n        if (Array.isArray(permissions) && permissions.length > 0)\r\n            return _.join(permissions.map(p => p.name), ', ')\r\n        return ''\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-10\">\r\n                    <Dialog ref={(el) => {\r\n                        this.dialog = el\r\n                    }}/>\r\n\r\n                    <button className=\"btn btn-default btn-submit addBtn\"\r\n                            onClick={() => this.props.showRoleForm()}>\r\n                        Add\r\n                        Role\r\n                    </button>\r\n\r\n                    <BootstrapTable options={this.options} data={this.props.roles}\r\n                                    striped={true}\r\n                                    hoveNr={true}>\r\n                        <TableHeaderColumn isKey dataField='_id' hidden={true}>ID</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"15%\" dataField='name'>Name</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='permissions'\r\n                                           dataFormat={this.formatPermissions.bind(this)}>Permissions</TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"8%\" dataField='button' dataFormat={this.editCellButton.bind(this)}><i\r\n                            className=\"fa fa-pencil\"></i></TableHeaderColumn>\r\n                        <TableHeaderColumn width=\"8%\" dataField='button'\r\n                                           dataFormat={this.deleteCellButton.bind(this)}><i\r\n                            className=\"fa fa-trash\"></i></TableHeaderColumn>\r\n                    </BootstrapTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoleList\n\n\n// WEBPACK FOOTER //\n// ./client/components/lists/RoleList.js","import {connect} from 'react-redux'\r\nimport {EmployeeSettingForm} from \"../../components\"\r\nimport {addEmployeeSettingOnServer, updateEmployeeSettingOnServer} from \"../../actions\"\r\nimport {NotificationManager} from \"react-notifications\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSubmit: (values) => {\r\n        if (!values._id) {\r\n            // converted data into number format\r\n            values.minPlannedHours = Number(values.minPlannedHours)\r\n            values.maxPlannedHours = Number(values.maxPlannedHours)\r\n            values.free = Number(values.free)\r\n            values.relativelyFree = Number(values.relativelyFree)\r\n            values.busy = Number(values.busy)\r\n            values.superBusy = Number(values.superBusy)\r\n            values.someWhatBusy = Number(values.someWhatBusy)\r\n            // Employee Setting is created\r\n            return dispatch(addEmployeeSettingOnServer(values)).then(response => {\r\n                if (response.success) {\r\n                    NotificationManager.success('Employee Setting Added Successfully')\r\n                } else {\r\n                    NotificationManager.error('Employee Setting Added Failed')\r\n                }\r\n            })\r\n        } else {\r\n            // Employee Setting is edited\r\n            // converted data into number format\r\n            values.minPlannedHours = Number(values.minPlannedHours)\r\n            values.maxPlannedHours = Number(values.maxPlannedHours)\r\n            values.free = Number(values.free)\r\n            values.relativelyFree = Number(values.relativelyFree)\r\n            values.busy = Number(values.busy)\r\n            values.someWhatBusy = Number(values.someWhatBusy)\r\n            values.superBusy = Number(values.superBusy)\r\n            return dispatch(updateEmployeeSettingOnServer(values)).then(response => {\r\n                if (response.success) {\r\n                    NotificationManager.success('Employee Setting Updated Successfully')\r\n                } else {\r\n                    NotificationManager.error('Employee Setting Updated Failed')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({})\r\n\r\nconst EmployeeSettingFormContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EmployeeSettingForm)\r\n\r\nexport default EmployeeSettingFormContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/forms/EmployeeSettingFormContainer.js","import * as A from \"../../actions\";\r\nimport * as COC from \"../../components/componentConsts\";\r\nimport {connect} from \"react-redux\";\r\nimport {LeaveList} from \"../../components\";\r\nimport {NotificationManager} from \"react-notifications\";\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    showRaiseLeaveForm: () => {\r\n        dispatch(A.showComponent(COC.LEAVE_REQUEST_FORM_DIALOG))\r\n    },\r\n\r\n    showLeaveDetails: (leave) => {\r\n        dispatch(A.leaveSelected(leave))\r\n        dispatch(A.showComponentHideOthers(COC.LEAVE_DETAIL_PAGE))\r\n    },\r\n\r\n    revokeLeave: (leave) => dispatch(A.deleteLeaveFromServer(leave._id)).then(json => {\r\n        if (json.success) {\r\n            NotificationManager.success('Leave deleted successfully')\r\n        } else {\r\n            NotificationManager.error('Leave deletion failed')\r\n        }\r\n        return json\r\n    }),\r\n\r\n    changeLeaveStatus: (status) => dispatch(A.getAllLeavesFromServer(status)),\r\n\r\n    approveLeave: (leave) => {\r\n        dispatch(A.leaveSelected(leave))\r\n        dispatch(A.showComponent(COC.LEAVE_APPROVE_DIALOG))\r\n    },\r\n\r\n    cancelLeave: (leave) => {\r\n        dispatch(A.leaveSelected(leave))\r\n        dispatch(A.showComponent(COC.LEAVE_REJECT_DIALOG))\r\n    }\r\n})\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    loggedInUser: state.user.loggedIn,\r\n    leaves: state.leave && state.leave.all && Array.isArray(state.leave.all) && state.leave.all.length ? state.leave.all : []\r\n})\r\n\r\nconst LeaveListContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LeaveList)\r\n\r\nexport default LeaveListContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/lists/LeaveListContainer.js","import moment from 'moment'\r\nimport * as AC from '../actions/actionConsts'\r\nimport * as SC from '../../server/serverconstants'\r\nimport _ from 'lodash'\r\n\r\nconst calendarPageReducer = (state = {\r\n    events: [],\r\n    selectedTaskPlan: {},\r\n    selectedRelease: {},\r\n    selectedReleasePlan: {},\r\n    defaultView: \"week\",\r\n    defaultDate: undefined,\r\n    selectedView: \"week\",\r\n    selectedDate: undefined,\r\n    calendarTaskDetail: {\r\n        taskPlan: {},\r\n        taskPlans: [],\r\n        release: {},\r\n        releasePlan: {}\r\n    }\r\n\r\n}, action) => {\r\n    switch (action.type) {\r\n\r\n        case AC.CHANGE_CALENDAR_NAVIGATION:\r\n            return Object.assign({}, state, {\r\n                selectedView: (action.view == null) ? state.defaultView : action.view,\r\n                selectedDate: (action.date == null) ? state.defaultDate : action.date\r\n            })\r\n\r\n        case AC.SET_CALENDAR_TASK_DETAILS:\r\n            return Object.assign({}, state, {\r\n                calendarTaskDetail: {\r\n                    taskPlan: action.detail.taskPlan,\r\n                    taskPlans: action.detail.taskPlans,\r\n                    release: action.detail.release,\r\n                    releasePlan: Object.assign({}, action.detail.releasePlan, {\r\n                        estimationDescription: action.detail.estimationDescription\r\n                    })\r\n                }\r\n            })\r\n\r\n        case AC.SHOW_USERS_TASKS:\r\n            /**\r\n             * We would have to modify start/end date of tasks in such a manner that tasks of same date are shown\r\n             * one after another. Since time is not added while adding plan we will consider that work would be started\r\n             * on 10 and there would be no gap between work. This is just to show tasks one after another, developer\r\n             * would be free to start/end tasks at any time of his choice through out the day\r\n             */\r\n\r\n            let tasks = []\r\n            if (action.tasks && action.tasks.length) {\r\n                // Iterate on tasks to group them by same date/same employee\r\n\r\n                let groupedTasks = _.groupBy(action.tasks, (t) => {\r\n                    return t.planningDateString + \"_\" + t.employee._id.toString()\r\n                })\r\n\r\n                _.forEach(groupedTasks, (tasksSameDaySameEmployee,key)=>{\r\n                    let startMoment = moment(tasksSameDaySameEmployee[0].planningDateString, SC.DATE_FORMAT)\r\n                    // We would start with 10 am\r\n                    startMoment.add(10, 'hours')\r\n                    tasksSameDaySameEmployee.forEach(ts=>{\r\n                        let endMoment = startMoment.clone().add(ts.planning.plannedHours, \"hours\")\r\n                        ts.start = startMoment.toDate()\r\n                        ts.end = endMoment.toDate()\r\n                        ts.title = ts.task.name\r\n                        tasks.push(ts)\r\n                        startMoment = endMoment.clone()\r\n                    })\r\n                })\r\n\r\n                console.log(\"Tasks calendar \", tasks)\r\n\r\n\r\n            }\r\n            return Object.assign({}, state, {\r\n                events: tasks,\r\n                selectedDate:moment().startOf('day').toDate()\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default calendarPageReducer;\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/calendarReducer.js","import {initialize} from 'redux-form'\r\nimport * as A from '../actions'\r\nimport * as AC from \"./actionConsts\"\r\n\r\n\r\nexport const addEmployeeSettingOnServer = (employeeSetting) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/employees/employee-setting',\r\n            {\r\n                method: \"post\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(employeeSetting)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(initialize(\"employee-setting\", json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const getEmployeeSettingFromServer = () => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/employees/employee-setting',\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(A.setEmployeeSettings(json.data))\r\n                    dispatch(initialize(\"employee-setting\", json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const updateEmployeeSettingOnServer = (employeeSetting) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/employees/employee-setting',\r\n            {\r\n                method: \"put\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, *!/!*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(employeeSetting)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(initialize(\"employee-setting\", json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const addWorkCalendar = (calendar) => ({\r\n    type: AC.ADD_WORK_CALENDAR,\r\n    calendar: calendar\r\n})\r\n\r\nexport const getEmployeeWorkCalendarFromServer = (employeeID, month, year) => {\r\n    console.log(\"inside getEmployeeWorkCalendarFromServer\")\r\n    return function (dispatch, getState) {\r\n\r\n        console.log(\"inside function of getEmployeeWorkCalendarFromServer\")\r\n\r\n        let state = getState()\r\n\r\n        console.log(\"state found as \", state)\r\n\r\n        if(month == undefined) {\r\n            month = state.employee.workCalendar.month\r\n        }\r\n        if(year == undefined)\r\n            year = state.employee.workCalendar.year\r\n\r\n        console.log(\"calling API [/api/employees/' + employeeID + /employee-schedule/\" + month + \"/year/\" + year)\r\n\r\n        return fetch('/api/employees/' + employeeID + \"/employee-schedule/\" + month + \"/year/\" + year,\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(addWorkCalendar(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/actions/employeeAction.js","import React, {Component} from 'react'\r\n\r\nclass RepositoryTaskDetailPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showHistory: false\r\n        }\r\n        this.showHistoryDetail = this.showHistoryDetail.bind(this);\r\n    }\r\n\r\n    showHistoryDetail() {\r\n        this.setState({showHistory: !this.state.showHistory})\r\n    }\r\n\r\n    render() {\r\n        const {task, estimationId} = this.props\r\n        const {showHistory} = this.state\r\n        return (\r\n            <div className=\"col-md-12\">\r\n                <div className=\"col-md-10\">\r\n                    <h3 className=\"repo-detail-header\">{task.name} </h3>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                    <h3 className=\"repo-detail-hour\">{task.estimatedHours ? '(' + task.estimatedHours + ')' : '(00)'} </h3>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <p className=\" repo-detail repositoryModalPara\">Task Description: {task.description} </p>\r\n                </div>\r\n                <div className=\"col-md-12 pad\">\r\n                    <div className=\"col-md-3\">\r\n                        <button className=\"customBtn\" type=\"button\" onClick={\r\n                            this.showHistoryDetail\r\n                        }>History\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-md-4 pad\">\r\n                        <button className=\"customBtn\" type=\"button\" onClick={() => {\r\n                            this.props.addTask(estimationId, task._id)\r\n                        }}>Add to Estimation\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-md-5\">\r\n                        <button type=\"button\" className=\"customBtn\" onClick={() => {\r\n                            this.props.copyTask(estimationId, task._id)\r\n                        }}>Copy To Estimation\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {showHistory &&\r\n                <div>{task.hasHistory ?\r\n                    <div>\r\n                        <lablel>under Construction</lablel>\r\n                    </div>\r\n                    :\r\n                    <lablel>No History available</lablel>\r\n\r\n                } </div>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RepositoryTaskDetailPage\n\n\n// WEBPACK FOOTER //\n// ./client/components/pages/RepositoryTaskDetailPage.js","import * as AC from \"../actions/actionConsts\"\r\nimport * as SC from \"../../server/serverconstants\";\r\n\r\n\r\nlet initialState = {\r\n    loggedIn: undefined, // contains details of logged in user (if any) else undefined\r\n    isAuthenticated: false,\r\n    authenticationFailed: false,\r\n    loginError: undefined,\r\n    all: [],\r\n    userWithRoleCategory: {\r\n        managers: [],\r\n        leaders: [],\r\n        team: []\r\n    },\r\n    selected: {},\r\n    allDevelopers: []\r\n}\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AC.ADD_USERS:\r\n            return Object.assign({}, state, {all: action.users})\r\n\r\n\r\n        case AC.ADD_USERS_WITH_ROLE_CATEGORY:\r\n            return Object.assign({}, state, {\r\n                userWithRoleCategory: {\r\n                    managers: action.users.managers,\r\n                    leaders: action.users.leaders,\r\n                    team: action.users.team\r\n                }\r\n            })\r\n\r\n\r\n        case AC.ADD_USERS_WITH_ROLE_DEVELOPER:\r\n            return Object.assign({}, state, {\r\n                userWithRoleCategory: Object.assign({}, state.userWithRoleCategory, {\r\n                    team: action.developers\r\n                })\r\n            })\r\n\r\n        case AC.ADD_DEVELOPERS_TO_STATE:\r\n            return Object.assign({}, state, {\r\n                allDevelopers: action.developers\r\n            })\r\n\r\n\r\n        case AC.ADD_USER:\r\n            return Object.assign({}, state, {all: [...state.all, action.user]})\r\n\r\n\r\n        case AC.EDIT_USER:\r\n            return Object.assign({}, state, {\r\n                all: state.all.map(item => item._id == action.user._id ? action.user : item)\r\n            })\r\n\r\n\r\n        case AC.DELETE_USER:\r\n            return Object.assign({}, state, {all: state.all.filter(item => item._id !== action.userID)})\r\n\r\n\r\n        case AC.ADD_LOGIN_USER:\r\n            if (action.user) {\r\n                let isSuperAdmin = false\r\n                let isAdmin = false\r\n                let isAppUser = false\r\n                if (action.user && Array.isArray(action.user.roles)) {\r\n                    if (action.user.roles.findIndex(r => r.name === SC.ROLE_SUPER_ADMIN) != -1)\r\n                        isSuperAdmin = true\r\n                    if (action.user.roles.findIndex(r => r.name === SC.ROLE_ADMIN) != -1)\r\n                        isAdmin = true\r\n                    if (action.user.roles.findIndex(r => r.name === SC.ROLE_APP_USER) != -1)\r\n                        isAppUser = true\r\n                }\r\n\r\n                return Object.assign({}, state, {\r\n                    loggedIn: Object.assign({}, action.user, {isSuperAdmin, isAdmin, isAppUser}),\r\n                    isAuthenticated: true,\r\n                    loginError: undefined\r\n                })\r\n            } else\r\n                return state\r\n\r\n\r\n        case AC.LOGIN_FAILED:\r\n            return Object.assign({}, state, {\r\n                isAuthenticated: false,\r\n                loginError: action.error\r\n            })\r\n\r\n\r\n        case AC.UPDATE_USER_PROFILE_STATE:\r\n            return Object.assign({}, state, {\r\n                loggedIn: (true) ?\r\n                    Object.assign({}, {\r\n                        firstName: action.user.firstName,\r\n                        lastName: action.user.lastName,\r\n                        phone: action.user.phone,\r\n                        email: action.user.email,\r\n                        address: action.user.address,\r\n                        dob: action.user.dob,\r\n                        dateJoined: action.user.dateJoined,\r\n                        designation: action.user.designation,\r\n                        employeeCode: action.user.employeeCode,\r\n                        roles: action.user.roles,\r\n                        permissions: state.loggedIn.permissions,\r\n                        roleNames: state.loggedIn.roleNames\r\n                    }) : state.user.loggedIn\r\n\r\n\r\n            })\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/userReducer.js","import * as AC from \"./actionConsts\"\r\n\r\n\r\nexport const addClient = (client) => ({\r\n    type: AC.ADD_CLIENT,\r\n    client: client\r\n})\r\nexport const addClients = (clients) => ({\r\n    type: AC.ADD_CLIENTS,\r\n    clients: clients\r\n})\r\nexport const deleteClient = (clientID) => ({\r\n    type: AC.DELETE_CLIENT,\r\n    clientID: clientID\r\n})\r\nexport const editClient = (client) => ({\r\n\r\n    type: AC.UPDATE_CLIENT,\r\n    client: client\r\n})\r\n\r\n\r\nexport const getAllClientsFromServer = () => {\r\n    return (dispatch, getState) => {\r\n        return fetch('/api/clients', {\r\n                method: 'get',\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => response.json()\r\n        ).then(\r\n            json => {\r\n                if (json.success) {\r\n                    dispatch(addClients(json.data))\r\n                }\r\n            })\r\n    }\r\n}\r\nexport const addClientOnServer = (formInput) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/clients',\r\n            {\r\n                method: \"post\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formInput)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(addClient(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const deleteClientOnServer = (clientID) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/clients/' + clientID,\r\n            {\r\n                method: \"delete\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'ap plication/json'\r\n                }\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    dispatch(deleteClient(clientID))\r\n                    // clear user form after update is successful\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\nexport const editClientOnServer = (client) => {\r\n    return function (dispatch, getState) {\r\n        return fetch('/api/clients',\r\n            {\r\n                method: \"put\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(client)\r\n            }\r\n        ).then(\r\n            response => {\r\n                return response.json()\r\n            }\r\n        ).then(json => {\r\n                if (json.success) {\r\n                    //console.log(\"Yor are now fatchning jason data\", json.data)\r\n                    dispatch(editClient(json.data))\r\n                }\r\n                return json\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/actions/clientAction.js","import React, {Component} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {renderMultiSelect, renderText} from './fields'\r\n\r\nclass AdminRoleForm extends Component {\r\n\r\n    render() {\r\n        const {handleSubmit, pristine, reset, submitting} = this.props;\r\n        return [\r\n            <div key=\"AdminRoleFormBackButton\">\r\n                <button type=\"button\"\r\n                        onClick={() => this.props.showRoleList()}>\r\n                    <i className=\"glyphicon glyphicon-arrow-left\"></i>\r\n                </button>\r\n            </div>,\r\n            <form key=\"AdminRoleForm\" onSubmit={handleSubmit}>\r\n\r\n                <Field name=\"name\" component={renderText} label=\"Roles:\" valueField=\"_id\" disabled={true}\r\n                       readOnly={true} textField=\"name\"/>\r\n                <Field name=\"permissions\" component={renderMultiSelect} label=\"permission:\"\r\n                       data={this.props.permissionOptions}\r\n                       valueField=\"_id\" textField=\"name\"/>\r\n                <div className={'col-md-12'}>\r\n                    <div className={'col-md-2'}>\r\n                        <button type=\"submit\" disabled={pristine || submitting} className=\"btn squareButton\">\r\n                            Update\r\n                        </button>\r\n                    </div>\r\n                    <div className={'col-md-2'}>\r\n                        <button type=\"button\" disabled={pristine || submitting} className=\"btn squareButton\"\r\n                                onClick={reset}>Reset\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        ]\r\n\r\n    }\r\n}\r\n\r\nAdminRoleForm = reduxForm({\r\n    form: 'admin-role-form'\r\n})(AdminRoleForm)\r\nexport default AdminRoleForm\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/AdminRoleForm.js","import React, {Component} from 'react'\r\nimport moment from 'moment'\r\nimport momentLocalizer from 'react-widgets-moment'\r\nimport momentTZ from 'moment-timezone'\r\nimport * as SC from '../../../server/serverconstants'\r\n\r\nmoment.locale('en')\r\nmomentLocalizer()\r\n\r\nclass ReleaseDevelopersSchedules extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployeeSettings()\r\n    }\r\n\r\n    calendarDateClicked(day, employee) {\r\n        this.props.showTaskShiftDialog(day.date, this.props.workCalendar.month, this.props.workCalendar.year, employee)\r\n    }\r\n\r\n    render() {\r\n        console.log(\"ReleaseDevelopers Schedule \", this.props)\r\n\r\n        let that = this;\r\n\r\n        const {workCalendar, employeeSetting, from} = this.props\r\n        let fromString = moment(from).format(SC.DATE_FORMAT)\r\n        let fromMoment = momentTZ.tz(fromString, SC.DATE_FORMAT, SC.UTC_TIMEZONE).hour(0).minute(0).second(0).millisecond(0)\r\n        let startMoment = momentTZ.tz(fromString, SC.DATE_FORMAT, SC.UTC_TIMEZONE).hour(0).minute(0).second(0).millisecond(0)\r\n        let toMoment = fromMoment.clone().add(6, 'days')\r\n        let weekArray = []\r\n        while (startMoment.isSameOrBefore(toMoment)) {\r\n            weekArray.push(startMoment.clone())\r\n            startMoment = startMoment.clone().add(1, 'days')\r\n        }\r\n\r\n\r\n        let employee;\r\n\r\n        if (workCalendar.employees && workCalendar.employees.length)\r\n            employee = workCalendar.employees[0]\r\n\r\n        if (!employee || !employee.schedule || !employee.schedule.length)\r\n            return <div></div>\r\n\r\n\r\n        return <div>\r\n            <div key={'schedule_1'}\r\n                 className=\"col-md-12 releaseSchedule\">\r\n                <div className=\"schCalendar releaseDevInfo\">\r\n                    <div className=\"releaseDevHeading\">\r\n                        <h5>{employee.name}</h5>\r\n                        <i className=\"glyphicon glyphicon-resize-full pull-right\"></i>\r\n                        <span\r\n                            className=\"pull-right\">{workCalendar.heading}</span>\r\n                    </div>\r\n\r\n                    <div className={\"schCalendarDates\"}>\r\n                        <div className=\"schCalendarDayRow\">\r\n                            <div key={'monday'} className=\"schCalendarCell\">\r\n                                <h5>Mon</h5>\r\n                            </div>\r\n                            <div key={'tuesday'} className=\"schCalendarCell\">\r\n                                <h5>Tue</h5>\r\n                            </div>\r\n                            <div key={'wednesday'} className=\"schCalendarCell\">\r\n                                <h5>Wed</h5>\r\n                            </div>\r\n                            <div key={'thursday'} className=\"schCalendarCell\">\r\n                                <h5>Thu</h5>\r\n                            </div>\r\n                            <div key={'friday'} className=\"schCalendarCell\">\r\n                                <h5>Fri</h5>\r\n                            </div>\r\n                            <div key={'saturday'} className=\"schCalendarCell\">\r\n                                <h5>Sat</h5>\r\n                            </div>\r\n                            <div key={'sunday'} className=\"schCalendarCell\">\r\n                                <h5>Sun</h5>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            employee.schedule.map((week, idx) => {\r\n                                    return <div key={'week_' + idx} className=\"schCalendarDayRow\">\r\n                                        {\r\n                                            week.map((day, dayIdx) => {\r\n                                                let color = day.hours >= employeeSetting.superBusy ?\r\n                                                    '#dd6c6c'\r\n                                                    : day.hours >= employeeSetting.busy ?\r\n                                                        '#91d861'\r\n                                                        : day.hours >= employeeSetting.someWhatBusy ?\r\n                                                            '#d645f7'\r\n                                                            : day.hours >= employeeSetting.relativelyFree ?\r\n                                                                '#76c0e2'\r\n                                                                : day.hours != 0 ?\r\n                                                                    '#fffcc1'\r\n                                                                    : day.hours == 0 && (dayIdx == 5 || dayIdx == 6) ?\r\n                                                                        'white' :\r\n                                                                        '#e8c392'\r\n                                                return <div key={'day_' + dayIdx} className=\"schCalendarCell\">\r\n                                                    <h5>{day.date > 0 ? day.date : ''}</h5>\r\n                                                    <div className=\"releaseEmployee\">\r\n                                                        <span className={\"schCalendarHour\"} style={{\r\n                                                            backgroundColor: color\r\n                                                        }}\r\n                                                              onClick={that.calendarDateClicked.bind(that, day, employee)}>{day.hours >= 0 ? day.hours : ''}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default ReleaseDevelopersSchedules\r\n\r\n/**\r\n import React, {Component} from 'react'\r\n import moment from 'moment'\r\n import momentLocalizer from 'react-widgets-moment'\r\n import momentTZ from 'moment-timezone'\r\n import * as SC from '../../../server/serverconstants'\r\n\r\n moment.locale('en')\r\n momentLocalizer()\r\n\r\n class ReleaseDevelopersSchedules extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployeeSettings()\r\n    }\r\n\r\n    render() {\r\n\r\n        const {schedules, employeeSetting, from} = this.props\r\n        let fromString = moment(from).format(SC.DATE_FORMAT)\r\n        let fromMoment = momentTZ.tz(fromString, SC.DATE_FORMAT, SC.UTC_TIMEZONE).hour(0).minute(0).second(0).millisecond(0)\r\n        let startMoment = momentTZ.tz(fromString, SC.DATE_FORMAT, SC.UTC_TIMEZONE).hour(0).minute(0).second(0).millisecond(0)\r\n        let toMoment = fromMoment.clone().add(6, 'days')\r\n        let weekArray = []\r\n        while (startMoment.isSameOrBefore(toMoment)) {\r\n            weekArray.push(startMoment.clone())\r\n            startMoment = startMoment.clone().add(1, 'days')\r\n        }\r\n        return <div>\r\n            {\r\n                schedules && schedules.length ? schedules.map((schedule, idx) => {\r\n\r\n\r\n                        return <div key={'schedule' + idx}\r\n                                    className=\"col-md-12 releaseSchedule\">\r\n                            <div className=\"repository releaseDevInfo\">\r\n                                <div className=\"releaseDevHeading\">\r\n                                    <h5>{schedule.employee && schedule.employee.name ? schedule.employee.name : \"Employee\"}</h5>\r\n                                    <i className=\"glyphicon glyphicon-resize-full pull-right\"></i>\r\n                                    <span\r\n                                        className=\"pull-right\">{fromMoment.format(SC.DATE_MONTH_FORMAT) + ' to ' + toMoment.format(SC.DATE_MONTH_FORMAT)}</span>\r\n                                </div>\r\n                                <div className=\"releaseDayRow\">\r\n                                    {\r\n                                        weekArray && weekArray.length ? weekArray.map((weekDate, index) => {\r\n                                            let scheduleDay = schedule.days && schedule.days.length ? schedule.days.find(day => momentTZ.tz(day.dateString, SC.DATE_FORMAT, SC.UTC_TIMEZONE).isSame(weekDate)) : undefined\r\n                                            if (scheduleDay && scheduleDay != undefined) {\r\n                                                let color = scheduleDay.plannedHours >= employeeSetting.superBusy ?\r\n                                                    '#dd6c6c'\r\n                                                    : scheduleDay.plannedHours >= employeeSetting.busy ?\r\n                                                        '#91d861'\r\n                                                        : scheduleDay.plannedHours >= employeeSetting.someWhatBusy ?\r\n                                                            '#d645f7'\r\n                                                            : scheduleDay.plannedHours >= employeeSetting.relativelyFree ?\r\n                                                                '#76c0e2'\r\n\r\n                                                                : '#e8c392'\r\n\r\n                                                return <div key={'day' + index} className=\"releaseDayCell\">\r\n                                                    <h5> {moment(scheduleDay.dateString).format(SC.DATE_HALF_WEAK_MONTH_FORMAT)}</h5>\r\n                                                    <div className=\"releaseEmployee\" style={{backgroundColor: color}}>\r\n                                                        <span style={{\r\n                                                            display: 'inline-block',\r\n                                                            width: '100%',\r\n                                                            textAlign: 'center'\r\n                                                        }}> {scheduleDay.plannedHours}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            } else return <div key={'day' + index} className=\"releaseDayCell\">\r\n                                                <h5> {moment(weekDate).format(SC.DATE_HALF_WEAK_MONTH_FORMAT)}</h5>\r\n                                                <div className=\"releaseEmployee\" style={{backgroundColor: '#e8c392'}}>\r\n                                                    <span style={{\r\n                                                        display: 'inline-block',\r\n                                                        width: '100%',\r\n                                                        textAlign: 'center'\r\n                                                    }}> 0</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        }) : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }) :\r\n                    <div className=\"releaseEmployeeMsgText\">\r\n                        <label>Employee is not selected</label>\r\n                    </div>\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\n export default ReleaseDevelopersSchedules\r\n\r\n **/\n\n\n// WEBPACK FOOTER //\n// ./client/components/pages/ReleaseDevelopersSchedules.js","import {connect} from 'react-redux'\r\nimport TabSection from '../../components/sections/TabSection'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    visibleComponents: state.app.visibleComponents,\r\n    loggedInUser: state.user.loggedIn\r\n})\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({})\r\n\r\nconst TabSectionContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TabSection)\r\n\r\nexport default TabSectionContainer\n\n\n// WEBPACK FOOTER //\n// ./client/containers/sections/TabSectionContainer.js","import React, {Component} from 'react'\r\nimport {Redirect, Route} from 'react-router-dom'\r\nimport {NotificationContainer} from 'react-notifications'\r\nimport {\r\n    AdminHomeContainer,\r\n    AppHomeContainer,\r\n    HomeContainer,\r\n    SuperAdminHomeContainer\r\n} from '../containers'\r\n\r\nclass AppRouter extends Component {\r\n    render() {\r\n        return ([<NotificationContainer key=\"notification\"/>,\r\n                <Route key=\"home_route\" exact path=\"/\" render={(props) => {\r\n\r\n                    if (this.props.isAuthenticated && this.props.loggedInUser) {\r\n                        if (this.props.loggedInUser.isSuperAdmin)\r\n                            return <Redirect to=\"/super-admin\"/>\r\n                        else if (this.props.loggedInUser.isAdmin)\r\n                            return <Redirect to=\"/admin\"/>\r\n                        else\r\n                            return <Redirect to=\"/app-home\"/>\r\n\r\n                    }\r\n\r\n                    return <HomeContainer/>\r\n\r\n                }\r\n                }/>,\r\n                <Route key=\"super_admin_route\" path=\"/super-admin\" render={(props) => {\r\n                    return <SuperAdminHomeContainer/>\r\n                }\r\n                }/>,\r\n                <Route key=\"admin_route\" path=\"/admin\" render={(props) => {\r\n                    return <AdminHomeContainer/>\r\n                }\r\n                }/>,\r\n                <Route key=\"app_home_route\" path=\"/app-home\" render={(props) => {\r\n                    return <AppHomeContainer/>\r\n                }\r\n                }/>\r\n            ]\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppRouter\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/AppRouter.js","export {default as SidebarSideSection} from './SidebarSideSection'\r\nexport {default as SidebarSection} from './SidebarSection'\r\nexport {default as Sidebar} from './Sidebar'\r\nexport {default as ContentMain} from './ContentMain'\r\nexport {default as DashboardSection} from './DashboardSection'\n\n\n// WEBPACK FOOTER //\n// ./client/components/sections/index.js","import React, {Component} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {renderText} from './fields'\r\nimport {number, required} from \"./validation\"\r\n\r\n\r\nlet AttendanceSettingForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting} = props;\r\n\r\n    return <div className=\"col-md-8\">\r\n        <div className=\"col-md-12 pad\">\r\n            <div className=\"col-md-12\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <Field name=\"minFullDayHours\" placeholder={\"minimum full day hours\"}\r\n                                   component={renderText} validate={[required, number]}\r\n                                   label={\"Minimum Full Day Hours :\"}/>\r\n\r\n                            <Field name=\"minHalfDayHours\" placeholder={\"minimum half day hours\"}\r\n                                   component={renderText} validate={[required, number]}\r\n                                   label={\"Minimum Half Day Hours :\"}/>\r\n\r\n                            <Field name=\"dayStartTime\" placeholder={\"day start Time\"} component={renderText}\r\n                                   label={\"Day Start Time :\"} validate={[required, number]}/>\r\n\r\n                            <Field name=\"dayEndTime\" placeholder={\"day end Time\"} component={renderText}\r\n                                   validate={[required, number]}\r\n                                   label={\"Day End Time :\"}/>\r\n\r\n                            <button type=\"submit\" disabled={pristine || submitting}\r\n                                    className=\"btn customBtn moveInBtnSpace\">Submit\r\n                            </button>\r\n\r\n                            <button type=\"button\" disabled={pristine || submitting} className=\"btn customBtn\"\r\n                                    onClick={reset}>Reset\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nAttendanceSettingForm = reduxForm({\r\n    form: 'attendance-setting'\r\n})(AttendanceSettingForm)\r\n\r\nexport default AttendanceSettingForm\n\n\n// WEBPACK FOOTER //\n// ./client/components/forms/AttendanceSettingForm.js"],"sourceRoot":""}