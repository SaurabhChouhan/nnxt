webpackJsonp([0],{

/***/ "+5we":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _Home = __webpack_require__("6V26");

var _Home2 = _interopRequireDefault(_Home);

var _reactRouterDom = __webpack_require__("F8kA");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var mapStateToProps = function mapStateToProps(state) {
    return {
        loggedInUser: state.user.loggedIn
    };
};

var HomeContainer = (0, _reactRouterDom.withRouter)((0, _reactRedux.connect)(mapStateToProps)(_Home2.default));

exports.default = HomeContainer;

/***/ }),

/***/ "/7TX":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

var _validation = __webpack_require__("4KT+");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PermissionForm = function (_Component) {
    _inherits(PermissionForm, _Component);

    function PermissionForm() {
        _classCallCheck(this, PermissionForm);

        return _possibleConstructorReturn(this, (PermissionForm.__proto__ || Object.getPrototypeOf(PermissionForm)).apply(this, arguments));
    }

    _createClass(PermissionForm, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var handleSubmit = this.props.handleSubmit;

            return [_react2.default.createElement(
                'div',
                { key: 'PermissionFormBackButton' },
                _react2.default.createElement(
                    'button',
                    { type: 'button',
                        onClick: function onClick() {
                            return _this2.props.showPermissionList();
                        } },
                    _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
                )
            ), _react2.default.createElement(
                'form',
                { key: 'PermissionForm', onSubmit: handleSubmit },
                _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-4' },
                        _react2.default.createElement(_reduxForm.Field, { name: 'name', placeholder: "Name of permission", component: _fields.renderText,
                            label: "Permission", validate: [_validation.required] }),
                        _react2.default.createElement(
                            'button',
                            { type: 'submit', className: 'btn btn-submit' },
                            'Submit'
                        )
                    )
                )
            )];
        }
    }]);

    return PermissionForm;
}(_react.Component);

PermissionForm = (0, _reduxForm.reduxForm)({
    form: 'permission'
})(PermissionForm);

exports.default = PermissionForm;

/***/ }),

/***/ "/fyc":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reduxForm = __webpack_require__("ao4a");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _fields = __webpack_require__("NACj");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _validation = __webpack_require__("4KT+");

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactWidgetsMoment = __webpack_require__("Utwc");

var _reactWidgetsMoment2 = _interopRequireDefault(_reactWidgetsMoment);

var _reactRedux = __webpack_require__("RH2O");

var _lodash = __webpack_require__("M4fF");

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_moment2.default.locale('en');
(0, _reactWidgetsMoment2.default)();

var CreateReleaseForm = function CreateReleaseForm(props) {
    var pristine = props.pristine,
        submitting = props.submitting,
        reset = props.reset,
        change = props.change;
    var team = props.team,
        managers = props.managers,
        leaders = props.leaders,
        devStartDate = props.devStartDate,
        devReleaseDate = props.devReleaseDate,
        clientReleaseDate = props.clientReleaseDate,
        manager = props.manager,
        leader = props.leader,
        project = props.project,
        module = props.module,
        projects = props.projects,
        modules = props.modules,
        developmentTypes = props.developmentTypes,
        technologies = props.technologies;

    var max = !_lodash2.default.isEmpty(devReleaseDate) ? (0, _moment2.default)(devReleaseDate).toDate() : !_lodash2.default.isEmpty(clientReleaseDate) ? (0, _moment2.default)(clientReleaseDate).toDate() : undefined;
    var maxRelease = !_lodash2.default.isEmpty(clientReleaseDate) ? (0, _moment2.default)(clientReleaseDate).toDate() : undefined;
    var projectModules = project && project._id ? modules.filter(function (m) {
        return m.project._id.toString() === project._id.toString();
    }) : modules;
    var moduleProjects = [];

    if (module && module._id && (!project || !project._id)) {
        var selectedModule = modules.find(function (m) {
            return m._id.toString() === module._id.toString();
        });
        moduleProjects = projects.filter(function (p) {
            return p._id.toString() === selectedModule.project._id.toString();
        });
    } else {
        moduleProjects = projects;
    }

    /*
        While creating/adding release to an estimation, an user which is chosen as a Manager cannot be chosen as Leader and vice versa.
        A manager/leader can be chose as Developer if they have that role as well.
    */

    var updatedManagerList = leader && leader._id ? managers.filter(function (m) {
        return m._id.toString() !== leader._id.toString();
    }) : managers;
    var updatedLeaderList = manager && manager._id ? leaders.filter(function (l) {
        return l._id.toString() !== manager._id.toString();
    }) : leaders;
    var now = new Date();
    return _react2.default.createElement(
        'form',
        { onSubmit: props.handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'releaseVersionName', component: _fields.renderText, validate: [_validation.required],
                        label: "Name (Release Version):" })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'developmentType._id', component: _fields.renderSelect, label: "Development Type:",
                        options: developmentTypes,
                        displayField: "name", validate: [_validation.required] })
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'project._id',
                        component: _fields.renderSelect,
                        label: "Project:",
                        options: moduleProjects,
                        validate: [_validation.required]
                    })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'module._id',
                        component: _fields.renderSelect,
                        label: "Module:",
                        options: projectModules,
                        displayField: "firstName"
                    })
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-12' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'technologies', component: _fields.renderMultiSelect, label: 'technologies:',
                        data: technologies })
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'devStartDate', component: _fields.renderDateTimePickerString,
                        min: now,
                        max: max,
                        showTime: false,
                        label: "Expected Start Date For Developer:", validate: [_validation.required] })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'devReleaseDate', component: _fields.renderDateTimePickerString,
                        min: (0, _moment2.default)(devStartDate).toDate(),
                        max: maxRelease,
                        showTime: false,
                        label: "Expected Developer Release Date:", validate: [_validation.required] })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'clientReleaseDate', component: _fields.renderDateTimePickerString,
                        min: (0, _moment2.default)(devReleaseDate).toDate(),
                        showTime: false,
                        label: "Expected Client Release Date:",
                        validate: _validation.required })
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'manager._id',
                        component: _fields.renderSelect,
                        label: "Manager Of Release:",
                        options: updatedManagerList,
                        validate: _validation.required,
                        valueField: '_id',
                        displayField: 'Name'
                    })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'leader._id',
                        component: _fields.renderSelect,
                        label: "Leader Of Release:",
                        options: updatedLeaderList,
                        validate: _validation.required,
                        valueField: '_id',
                        displayField: 'Name'
                    })
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-12' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'team',
                        component: _fields.renderMultiSelect,
                        label: "Planned Employees For Release:",
                        data: team,
                        validate: _validation.required,
                        textField: 'name',
                        valueField: '_id'
                    })
                )
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'row initiatEstimation' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-6 text-center' },
                _react2.default.createElement(
                    'button',
                    { type: 'submit', disabled: pristine || submitting, className: 'btn customBtn' },
                    'Submit'
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-6 text-center' },
                _react2.default.createElement(
                    'button',
                    { type: 'button', disabled: pristine || submitting, onClick: reset, className: 'btn customBtn' },
                    'Reset'
                )
            )
        )
    );
};

CreateReleaseForm = (0, _reduxForm.reduxForm)({
    form: 'create-release'
})(CreateReleaseForm);

var selector = (0, _reduxForm.formValueSelector)('create-release');

CreateReleaseForm = (0, _reactRedux.connect)(function (state) {
    var _selector = selector(state, 'devStartDate', 'devReleaseDate', 'clientReleaseDate'),
        devStartDate = _selector.devStartDate,
        devReleaseDate = _selector.devReleaseDate,
        clientReleaseDate = _selector.clientReleaseDate;

    var manager = selector(state, 'manager');
    var leader = selector(state, 'leader');
    var _id = selector(state, '_id');
    var project = selector(state, 'project');
    var module = selector(state, 'module');
    return {
        _id: _id,
        project: project,
        module: module,
        devStartDate: devStartDate,
        devReleaseDate: devReleaseDate,
        clientReleaseDate: clientReleaseDate,
        manager: manager,
        leader: leader
    };
})(CreateReleaseForm);

exports.default = CreateReleaseForm;

/***/ }),

/***/ "/j9I":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var initialState = {
    all: [],
    selected: {}
};

var technologyReducer = function technologyReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case AC.ADD_TECHNOLOGIES:
            return Object.assign({}, state, { all: action.technologies });
        case AC.ADD_TECHNOLOGY:
            return Object.assign({}, state, { all: [].concat(_toConsumableArray(state.all), [action.technology]) });
        case AC.DELETE_TECHNOLOGY:
            return Object.assign({}, state, { all: state.all.filter(function (item) {
                    return item._id !== action.TechnologyID;
                }) });
        default:
            return state;
    }
};

exports.default = technologyReducer;

/***/ }),

/***/ "/saw":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        leaveGoBack: function leaveGoBack(event) {
            dispatch(A.getAllLeavesFromServer(SC.ALL));
            dispatch(A.showComponentHideOthers(COC.LEAVE_LIST));
        }
    };
};

var mapStateToProps = function mapStateToProps(state) {
    return {
        leave: state.leave.selected
    };
};

var LeaveDetailPageContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.LeaveDetailPage);

exports.default = LeaveDetailPageContainer;

/***/ }),

/***/ "0Ltu":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _reactNotifications = __webpack_require__("B0Hd");

var _reduxForm = __webpack_require__("ao4a");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(commentValues) {
            return dispatch(A.addCommentToServer(commentValues)).then(function (json) {
                if (json.success) {
                    dispatch((0, _reduxForm.initialize)("reporting-comment", {
                        releaseID: json.data.release._id,
                        releasePlanID: json.data._id
                    }));
                    _reactNotifications.NotificationManager.success('Comment Added');
                } else {
                    _reactNotifications.NotificationManager.error('Comment Add Failed');
                }
                return json;
            });
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        initialValues: {
            "releaseID": state.report.reportTaskDetail.release._id,
            "releasePlanID": state.report.reportTaskDetail.releasePlan._id
        }
    };
};

var ReportingCommentFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ReportingCommentForm);

exports.default = ReportingCommentFormContainer;

/***/ }),

/***/ "0RBQ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EstimationSuggestTaskDialog = function EstimationSuggestTaskDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal suggestDialog', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Suggest Feature Detail For Estimation'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.EstimationSuggestFeatureFormContainer, null)
        )
    );
};

exports.default = EstimationSuggestTaskDialog;

/***/ }),

/***/ "1BFQ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reduxForm = __webpack_require__("ao4a");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _validation = __webpack_require__("4KT+");

var _fields = __webpack_require__("NACj");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _reactRedux = __webpack_require__("RH2O");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EstimationSuggestTaskForm = function EstimationSuggestTaskForm(props) {
    logger.debug(logger.ESTIMATION_TASK_FORM_RENDER, props);
    var pristine = props.pristine,
        submitting = props.submitting,
        reset = props.reset,
        change = props.change;
    var loggedInUserRole = props.loggedInUserRole,
        isFromRepo = props.isFromRepo,
        estimation = props.estimation,
        readOnly = props.readOnly;


    return _react2.default.createElement(
        'form',
        { onSubmit: props.handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'col-md-12' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-5' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-1' },
                    estimation.loggedInUserRole === SC.ROLE_NEGOTIATOR ? _react2.default.createElement('img', { key: 'estimator', className: 'suggestionUser div-hover', src: '/images/estimator.png',
                        title: 'Estimator End' }) : estimation.loggedInUserRole === SC.ROLE_ESTIMATOR ? _react2.default.createElement('img', { key: 'negotiator', className: 'suggestionUser div-hover', src: '/images/negotiator.png',
                        title: 'Negotiator End' }) : null
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-11' },
                    estimation.loggedInUserRole === SC.ROLE_NEGOTIATOR ? _react2.default.createElement(
                        'h4',
                        { className: 'estimatorClr' },
                        'Estimator'
                    ) : estimation.loggedInUserRole === SC.ROLE_ESTIMATOR ? _react2.default.createElement(
                        'h4',
                        { className: 'negotiatorClr' },
                        'Negotiator'
                    ) : null,
                    _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(_reduxForm.Field, { name: 'estimation._id', component: 'input', type: 'hidden' }),
                        _react2.default.createElement(_reduxForm.Field, { name: '_id', component: 'input', type: 'hidden' }),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-6' },
                            _react2.default.createElement(_reduxForm.Field, { name: 'readOnly.name',
                                readOnly: true,
                                component: _fields.renderText,
                                label: "Task Name:"
                            })
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-6' },
                            _react2.default.createElement(_reduxForm.Field, { name: 'readOnly.estimatedHours',
                                component: _fields.renderText,
                                readOnly: true,
                                label: "Task Estimated Hours:"
                            })
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-12' },
                            _react2.default.createElement(_reduxForm.Field, { name: 'readOnly.description',
                                readOnly: true,
                                component: _fields.renderTextArea,
                                rows: '10',
                                label: 'Task Description:'
                            })
                        )
                    )
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-2 ' },
                isFromRepo && _react2.default.createElement('img', { key: 'repo_flag', src: '/images/repo_flag.png', className: 'suggestionRepo', title: 'From Repository' }),
                _react2.default.createElement(
                    'button',
                    { type: 'button', className: 'suggestCopy btn-link',
                        title: 'Copy Task Details',
                        onClick: function onClick() {
                            change("name", readOnly.name);
                            change("estimatedHours", readOnly.estimatedHours);
                            change("description", readOnly.description);
                        } },
                    _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-right' })
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-5' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-1' },
                    estimation.loggedInUserRole === SC.ROLE_ESTIMATOR ? _react2.default.createElement('img', { key: 'estimator', className: 'suggestionUser div-hover', src: '/images/estimator.png',
                        title: 'Estimator End' }) : estimation.loggedInUserRole === SC.ROLE_NEGOTIATOR ? _react2.default.createElement('img', { key: 'negotiator', className: 'suggestionUser div-hover', src: '/images/negotiator.png',
                        title: 'Negotiator End' }) : null
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-11' },
                    estimation.loggedInUserRole === SC.ROLE_NEGOTIATOR ? _react2.default.createElement(
                        'h4',
                        { className: 'negotiatorClr' },
                        estimation.loggedInUserRole
                    ) : estimation.loggedInUserRole === SC.ROLE_ESTIMATOR ? _react2.default.createElement(
                        'h4',
                        { className: 'estimatorClr' },
                        estimation.loggedInUserRole
                    ) : null,
                    _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-6' },
                            _react2.default.createElement(_reduxForm.Field, {
                                name: 'name',
                                readOnly: isFromRepo,
                                component: _fields.renderText,
                                label: "Task Name:",
                                validate: _validation.required
                            })
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-6' },
                            _react2.default.createElement(_reduxForm.Field, {
                                name: 'estimatedHours',
                                component: _fields.renderText,
                                label: "Task Estimated Hours:",
                                validate: [_validation.required, _validation.number]
                            })
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-12' },
                            _react2.default.createElement(_reduxForm.Field, {
                                name: 'description',
                                readOnly: isFromRepo,
                                component: _fields.renderTextArea,
                                label: 'Task Description:',
                                rows: '10',
                                validate: _validation.required
                            })
                        )
                    )
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'row initiatEstimation' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6 text-center' },
                    _react2.default.createElement(
                        'button',
                        { type: 'submit', disabled: pristine || submitting, className: 'btn customBtn' },
                        'Save'
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6 text-center' },
                    _react2.default.createElement(
                        'button',
                        { type: 'button', disabled: pristine || submitting, className: 'btn customBtn', onClick: reset },
                        'Reset'
                    )
                )
            )
        )
    );
};

EstimationSuggestTaskForm = (0, _reduxForm.reduxForm)({
    form: 'estimation-suggest-task'
})(EstimationSuggestTaskForm);

var selector = (0, _reduxForm.formValueSelector)('estimation-suggest-task');

EstimationSuggestTaskForm = (0, _reactRedux.connect)(function (state) {
    var _selector = selector(state, 'loggedInUserRole', 'isFromRepo'),
        loggedInUserRole = _selector.loggedInUserRole,
        isFromRepo = _selector.isFromRepo;

    var readOnly = {
        name: selector(state, 'readOnly.name'),
        estimatedHours: selector(state, 'readOnly.estimatedHours'),
        description: selector(state, 'readOnly.description')
    };
    return {
        loggedInUserRole: loggedInUserRole,
        readOnly: readOnly,
        isFromRepo: isFromRepo
    };
})(EstimationSuggestTaskForm);

exports.default = EstimationSuggestTaskForm;

/***/ }),

/***/ "1u2K":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        editPermissionsOfRole: function editPermissionsOfRole(role) {
            dispatch(A.showComponentHideOthers(COC.ADMIN_ROLE_FORM));
            dispatch(A.adminEditingRole(role));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        roles: state.role.all
    };
};

var AdminRoleListContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.AdminRoleList);

exports.default = AdminRoleListContainer;

/***/ }),

/***/ "1vyc":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(role) {
            return dispatch(A.editRoleOnServer(role)).then(function (json) {
                if (json.success) {
                    dispatch(A.showComponentHideOthers(COC.ADMIN_ROLE_LIST));
                    _reactNotifications.NotificationManager.success('Role And Permission Updated');
                } else {
                    _reactNotifications.NotificationManager.error('Role And Permission Update Failed');
                }
            });
        },
        showRoleList: function showRoleList() {
            return dispatch(A.showComponentHideOthers(COC.ADMIN_ROLE_LIST));
        }

    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        initialValues: state.role.selected,
        permissionOptions: state.role.permissionOptions
    };
};

var AdminRoleFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.AdminRoleForm);

exports.default = AdminRoleFormContainer;

/***/ }),

/***/ "20Ga":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        setReleaseID: function setReleaseID(releaseID) {
            dispatch(A.setReleaseID(releaseID));
            dispatch(A.getReleaseForDashboard(releaseID));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        allReleases: state.dashboard.allReleases,
        selectedReleaseID: state.dashboard.selectedReleaseID,
        plannedVsUnplannedWork: state.dashboard.plannedVsUnplannedWork,
        overallProgress: state.dashboard.overallProgress,
        completedPendingProgress: state.dashboard.completedPendingProgress,
        plannedVsReported: state.dashboard.plannedVsReported,
        hoursData: state.dashboard.hoursData,
        estimatedProgress: state.dashboard.estimatedProgress
    };
};

var DashboardSectionContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.DashboardSection);

exports.default = DashboardSectionContainer;

/***/ }),

/***/ "22+p":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _fields = __webpack_require__("NACj");

var _reduxForm = __webpack_require__("ao4a");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EstimationFilterForm = function EstimationFilterForm(props) {
    var handleSubmit = props.handleSubmit,
        pristine = props.pristine,
        reset = props.reset,
        submitting = props.submitting;
    var estimation = props.estimation;


    return _react2.default.createElement(
        'form',
        { onSubmit: handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'col-md-12' },
            estimation.loggedInUserRole == SC.ROLE_NEGOTIATOR && _react2.default.createElement(
                'div',
                { className: 'col-md-12 filterTextWithFlag' },
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_reduxForm.Field, { name: 'changedByNegotiator', component: _fields.renderCheckBox, label: "Suggested By You" }),
                    _react2.default.createElement('img', { key: 'negotiator_edit_flag', src: '/images/negotiator_edit_flag.png',
                        className: 'filterFlag',
                        title: 'Suggested by Negotiator' })
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_reduxForm.Field, { name: 'addedByNegotiator', component: _fields.renderCheckBox,
                        label: "Added By You"
                    }),
                    _react2.default.createElement('img', { key: 'negotiator_new_flag', src: '/images/negotiator_new_flag.png',
                        className: 'filterFlag',
                        title: 'Added by Negotiator' })
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_reduxForm.Field, { name: 'changedByEstimator', component: _fields.renderCheckBox,
                        label: "Changed By : " + estimation.estimator.firstName + " " + estimation.estimator.lastName
                    }),
                    _react2.default.createElement('img', { key: 'estimator_edit_flag', src: '/images/estimator_edit_flag.png',
                        className: 'filterFlag',
                        title: 'Changed by Estimator' })
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_reduxForm.Field, { name: 'addedByEstimator', component: _fields.renderCheckBox,
                        label: "Added By: " + estimation.estimator.firstName + " " + estimation.estimator.lastName
                    }),
                    _react2.default.createElement('img', { key: 'estimator_new_flag', src: '/images/estimator_new_flag.png',
                        className: 'filterFlag', title: 'Added by Estimator' })
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_reduxForm.Field, { name: 'permissionRequested', component: _fields.renderCheckBox,
                        label: "Requested Permissions"
                    }),
                    _react2.default.createElement('img', { key: 'estimator_requested_permission_flag', src: '/images/request_flag.png',
                        className: 'filterFlag',
                        title: 'Requested by Estimator' })
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_reduxForm.Field, { name: 'addedFromRepository', component: _fields.renderCheckBox,
                        label: "Added From Repository"
                    }),
                    _react2.default.createElement('img', { key: 'repo_flag', src: '/images/repo_flag.png', className: 'filterFlag',
                        title: 'From Repository' })
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_reduxForm.Field, { name: 'hasError', component: _fields.renderCheckBox,
                        label: "Error in Task/Feature"
                    }),
                    _react2.default.createElement('img', { key: 'exclamation', src: '/images/exclamation.png',
                        className: 'filterFlag',
                        title: 'hasError' })
                )
            ),
            estimation.loggedInUserRole == SC.ROLE_ESTIMATOR && _react2.default.createElement(
                'div',
                { className: 'col-md-12 filterTextWithFlag' },
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_reduxForm.Field, { name: 'changedByEstimator', component: _fields.renderCheckBox, label: "Changed By You" }),
                    _react2.default.createElement('img', { key: 'estimator_edit_flag', src: '/images/estimator_edit_flag.png',
                        className: 'filterFlag',
                        title: 'Changed by Estimator' })
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_reduxForm.Field, { name: 'addedByEstimator', component: _fields.renderCheckBox,
                        label: "Added By You"
                    }),
                    _react2.default.createElement('img', { key: 'estimator_new_flag', src: '/images/estimator_new_flag.png',
                        className: 'filterFlag', title: 'Added by Estimator' })
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_reduxForm.Field, { name: 'permissionRequested', component: _fields.renderCheckBox,
                        label: "Requested Permissions"
                    }),
                    _react2.default.createElement('img', { key: 'estimator_requested_permission_flag', src: '/images/request_flag.png',
                        className: 'filterFlag',
                        title: 'Requested by Estimator' })
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_reduxForm.Field, { name: 'changedByNegotiator', component: _fields.renderCheckBox,
                        label: "Suggested By : " + estimation.negotiator.firstName + " " + estimation.negotiator.lastName
                    }),
                    _react2.default.createElement('img', { key: 'negotiator_edit_flag', src: '/images/negotiator_edit_flag.png',
                        className: 'filterFlag',
                        title: 'Suggested by Negotiator' })
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_reduxForm.Field, { name: 'addedByNegotiator', component: _fields.renderCheckBox,
                        label: "Added By: " + estimation.negotiator.firstName + " " + estimation.negotiator.lastName
                    }),
                    _react2.default.createElement('img', { key: 'negotiator_new_flag', src: '/images/negotiator_new_flag.png',
                        className: 'filterFlag',
                        title: 'Added by Negotiator' })
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_reduxForm.Field, { name: 'addedFromRepository', component: _fields.renderCheckBox,
                        label: "Added From Repository"
                    }),
                    _react2.default.createElement('img', { key: 'repo_flag', src: '/images/repo_flag.png', className: 'filterFlag',
                        title: 'From Repository' })
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_reduxForm.Field, { name: 'hasError', component: _fields.renderCheckBox,
                        label: "Error in Task/Feature"
                    }),
                    _react2.default.createElement('img', { key: 'exclamation', src: '/images/exclamation.png',
                        className: 'filterFlag',
                        title: 'hasError' })
                )
            ),
            _react2.default.createElement(
                'div',
                { className: "col-md-12 text-center" },
                _react2.default.createElement(
                    'button',
                    { type: 'button', className: 'btn secondaryBtn',
                        title: estimation.loggedInUserRole == SC.ROLE_ESTIMATOR ? 'Changed by ' + estimation.negotiator.firstName : 'Changed by ' + estimation.estimator.firstName,
                        onClick: function onClick() {
                            return props.newChangedFilter(props.estimation.status);
                        } },
                    _react2.default.createElement('i', {
                        className: "fa fa-pencil" })
                ),
                _react2.default.createElement(
                    'button',
                    { type: 'button', className: 'btn secondaryBtn', title: "Select All Filters",
                        onClick: function onClick() {
                            return props.selectAllFilter();
                        } },
                    _react2.default.createElement('i', { className: "fa fa-list" })
                ),
                _react2.default.createElement(
                    'button',
                    { type: 'button', className: 'btn secondaryBtn', title: "Clear All Filters",
                        onClick: function onClick() {
                            return props.clearFilter();
                        } },
                    _react2.default.createElement('i', { className: "fa fa-cut" })
                )
            ),
            _react2.default.createElement(
                'div',
                { className: "col-md-12 text-center", style: { marginTop: "15px" } },
                _react2.default.createElement(
                    'button',
                    { type: 'submit', disabled: pristine || submitting, className: 'btn customBtn  FilterBtn ' },
                    'Apply Filter'
                )
            )
        )
    );
};

EstimationFilterForm = (0, _reduxForm.reduxForm)({
    form: 'Estimation-filter'
})(EstimationFilterForm);

exports.default = EstimationFilterForm;

/***/ }),

/***/ "2E7p":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createReleaseOnServer = exports.releasePlanUnplannedAddToReleaseOnServer = exports.releasePlanPlannedAddToReleaseOnServer = exports.changeReleaseDateOfIteration = exports.getAllTaskPlansOfThisReleaseFromServer = exports.getReleaseDevelopersFromServer = exports.getDeveloperSchedulesFromServer = exports.shiftTasksToPastOnServer = exports.shiftTasksToFutureOnServer = exports.getEmployeePlanDetailsForRelease = exports.reopenTaskPlanOnServer = exports.deleteTaskPlanningFromServer = exports.moveTaskPlanOnServer = exports.addTaskPlanningOnServer = exports.getUpdatedReleasePlanFromServer = exports.getReleasePlanDetailsFromServer = exports.getReleasePlansFromServer = exports.getAllTaskPlannedFromServer = exports.getReleaseFromServer = exports.getAllReleasesToAddEstimationFromServer = exports.getAllAvailableReleasesFromServer = exports.getAllReleasesFromServer = exports.updateReleaseDates = exports.addTaskPlannings = exports.setFromDate = exports.setEmployeeSettings = exports.expandDescription = exports.setDevelopersSchedule = exports.updateDeveloperFilteredData = exports.addDeveloperFilteredData = exports.removeTaskPlanning = exports.updateReleasePlan = exports.releasePlanSelected = exports.releaseTabSelected = exports.releaseSelected = exports.updateTaskPlans = exports.updateTaskPlanning = exports.addReleaseTaskPlanningToState = exports.addReleaseTaskPlannings = exports.addReleasePlans = exports.addAvailableReleases = exports.addRelease = exports.addReleases = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _estimationAction = __webpack_require__("2Y/+");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var addReleases = exports.addReleases = function addReleases(releases) {
    return {
        type: AC.ADD_RELEASES,
        releases: releases
    };
};

var addRelease = exports.addRelease = function addRelease(release) {
    return {
        type: AC.ADD_RELEASE,
        release: release
    };
};

var addAvailableReleases = exports.addAvailableReleases = function addAvailableReleases(releases) {
    return {
        type: AC.ADD_AVAILABLE_RELEASES,
        releases: releases
    };
};

var addReleasePlans = exports.addReleasePlans = function addReleasePlans(releasePlans) {
    return {
        type: AC.ADD_RELEASE_PLANS,
        releasePlans: releasePlans
    };
};

var addReleaseTaskPlannings = exports.addReleaseTaskPlannings = function addReleaseTaskPlannings(taskPlans) {
    return {
        type: AC.ADD_RELEASE_TASK_PLANNINGS,
        taskPlans: taskPlans
    };
};

var addReleaseTaskPlanningToState = exports.addReleaseTaskPlanningToState = function addReleaseTaskPlanningToState(taskPlan) {
    return {
        type: AC.ADD_RELEASE_TASK_PLANNING_TO_STATE,
        taskPlan: taskPlan
    };
};

var updateTaskPlanning = exports.updateTaskPlanning = function updateTaskPlanning(taskPlan) {
    return {
        type: AC.UPDATE_TASK_PLANNING,
        taskPlan: taskPlan
    };
};

var updateTaskPlans = exports.updateTaskPlans = function updateTaskPlans(taskPlans) {
    return {
        type: AC.UPDATE_TASK_PLANS,
        taskPlans: taskPlans
    };
};

var releaseSelected = exports.releaseSelected = function releaseSelected(release) {
    return {
        type: AC.RELEASE_SELECTED,
        release: release
    };
};

var releaseTabSelected = exports.releaseTabSelected = function releaseTabSelected(tab) {
    return {
        type: AC.RELEASE_TAB_SELECTED,
        tab: tab
    };
};

var releasePlanSelected = exports.releasePlanSelected = function releasePlanSelected(releasePlan) {
    return {
        type: AC.RELEASE_PLAN_SELECTED,
        releasePlan: releasePlan
    };
};

var updateReleasePlan = exports.updateReleasePlan = function updateReleasePlan(releasePlan) {
    return {
        type: AC.UPDATE_RELEASE_PLAN,
        releasePlan: releasePlan
    };
};

var removeTaskPlanning = exports.removeTaskPlanning = function removeTaskPlanning(planID) {
    return {
        type: AC.DELETE_TASK_PLAN,
        planID: planID
    };
};

var addDeveloperFilteredData = exports.addDeveloperFilteredData = function addDeveloperFilteredData(developerPlans) {
    return {
        type: AC.ADD_DEVELOPER_FILTERED,
        developerPlans: developerPlans
    };
};

var updateDeveloperFilteredData = exports.updateDeveloperFilteredData = function updateDeveloperFilteredData(developerPlanned) {
    return {
        type: AC.UPDATE_DEVELOPER_FILTERED,
        developerPlanned: developerPlanned
    };
};

var setDevelopersSchedule = exports.setDevelopersSchedule = function setDevelopersSchedule(schedules) {
    return {
        type: AC.SET_DEVELOPERS_SCHEDULE,
        schedules: schedules
    };
};

var expandDescription = exports.expandDescription = function expandDescription(flag) {
    return {
        type: AC.EXPAND_DESCRIPTION,
        flag: flag
    };
};

var setEmployeeSettings = exports.setEmployeeSettings = function setEmployeeSettings(empSetting) {
    return {
        type: AC.SET_EMPLOYEE_SETTINGS,
        empSetting: empSetting
    };
};

var setFromDate = exports.setFromDate = function setFromDate(date) {
    return {
        type: AC.SET_FROM_DATE,
        date: date
    };
};
var addTaskPlannings = exports.addTaskPlannings = function addTaskPlannings(taskPlannings) {
    return {
        type: AC.ADD_TASK_PLANNINGS,
        taskPlannings: taskPlannings
    };
};
var updateReleaseDates = exports.updateReleaseDates = function updateReleaseDates(releaseDates) {
    return {
        type: AC.UPDATE_RELEASE_DATES,
        releaseDates: releaseDates
    };
};

var getAllReleasesFromServer = exports.getAllReleasesFromServer = function getAllReleasesFromServer(status) {
    return function (dispatch, getState) {
        return fetch('/api/releases/status/' + status, {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addReleases(json.data));
            }
            return json;
        });
    };
};

var getAllAvailableReleasesFromServer = exports.getAllAvailableReleasesFromServer = function getAllAvailableReleasesFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/releases/', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addAvailableReleases(json.data));
            }
            return json;
        });
    };
};

var getAllReleasesToAddEstimationFromServer = exports.getAllReleasesToAddEstimationFromServer = function getAllReleasesToAddEstimationFromServer(estimationID) {
    return function (dispatch, getState) {
        return fetch('/api/releases/estimation/' + estimationID, {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addAvailableReleases(json.data));
            }
            return json;
        });
    };
};

var getReleaseFromServer = exports.getReleaseFromServer = function getReleaseFromServer(releaseID) {
    return function (dispatch, getState) {
        return fetch('/api/releases/release/' + releaseID, {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(releaseSelected(json.data));
            }
            return json;
        });
    };
};

var getAllTaskPlannedFromServer = exports.getAllTaskPlannedFromServer = function getAllTaskPlannedFromServer(releasePlanID) {
    return function (dispatch, getState) {
        return fetch('/api/task-plans/release-plan/' + releasePlanID, {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addReleaseTaskPlannings(json.data));
                dispatch(addDeveloperFilteredData([]));
                dispatch(setDevelopersSchedule([]));
            }
            return json;
        });
    };
};

var getReleasePlansFromServer = exports.getReleasePlansFromServer = function getReleasePlansFromServer(releaseID, status, empFlag) {
    return function (dispatch, getState) {
        return fetch('/api/releases/' + releaseID + '/status/' + status + '/flag/' + empFlag + '/release-plans', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addReleasePlans(json.data));
            }
            return json;
        });
    };
};

var getReleasePlanDetailsFromServer = exports.getReleasePlanDetailsFromServer = function getReleasePlanDetailsFromServer(releasePlanID) {
    return function (dispatch, getState) {
        return fetch('/api/releases/' + releasePlanID + '/release-plan', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(releasePlanSelected(json.data));
            }
            return json;
        });
    };
};

var getUpdatedReleasePlanFromServer = exports.getUpdatedReleasePlanFromServer = function getUpdatedReleasePlanFromServer(releasePlanID) {
    return function (dispatch, getState) {
        return fetch('/api/releases/' + releasePlanID + '/release-plan', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateReleasePlan(json.data));
            }
            return json;
        });
    };
};

var addTaskPlanningOnServer = exports.addTaskPlanningOnServer = function addTaskPlanningOnServer(taskPlanning) {
    return function (dispatch, getState) {
        return fetch('/api/task-plans', {
            method: 'post',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(taskPlanning)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addReleaseTaskPlanningToState(json.data.taskPlan));
                if (json.data && json.data.taskPlan.releasePlan && json.data.taskPlan.releasePlan._id) {
                    dispatch(getUpdatedReleasePlanFromServer(json.data.taskPlan.releasePlan._id));
                }
                if (json.data && json.data.taskPlans && json.data.taskPlans.length > 0) {
                    dispatch(updateTaskPlans(json.data && json.data.taskPlans));
                    dispatch(getAllTaskPlannedFromServer(json.data.taskPlan.releasePlan._id));
                }
            }
            return json;
        });
    };
};

var moveTaskPlanOnServer = exports.moveTaskPlanOnServer = function moveTaskPlanOnServer(taskPlanning) {
    return function (dispatch) {
        return fetch('/api/task-plans/' + taskPlanning._id + '/move', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(taskPlanning)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateTaskPlanning(json.data.taskPlan));
                dispatch(updateDeveloperFilteredData(json.data.taskPlan));
                dispatch(getAllTaskPlannedFromServer(json.data.taskPlan.releasePlan._id));
            }
            return json;
        });
    };
};

var deleteTaskPlanningFromServer = exports.deleteTaskPlanningFromServer = function deleteTaskPlanningFromServer(taskPlanningID) {
    return function (dispatch, getState) {
        return fetch('/api/task-plans/' + taskPlanningID, {
            method: 'delete',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                if (json.data && json.data.taskPlan && json.data.taskPlan._id) {
                    dispatch(removeTaskPlanning(json.data.taskPlan._id));
                }
                if (json.data && json.data.taskPlan && json.data.taskPlan.releasePlan && json.data.taskPlan.releasePlan._id) {
                    dispatch(getUpdatedReleasePlanFromServer(json.data.taskPlan.releasePlan._id));
                }
                if (json.data && json.data.taskPlans && json.data.taskPlans.length > 0) {
                    dispatch(updateTaskPlans(json.data && json.data.taskPlans));
                    dispatch(getAllTaskPlannedFromServer(json.data.taskPlan.releasePlan._id));
                }
            }
            return json;
        });
    };
};

var reopenTaskPlanOnServer = exports.reopenTaskPlanOnServer = function reopenTaskPlanOnServer(taskPlanningID) {
    return function (dispatch) {
        return fetch('/api/task-plans/' + taskPlanningID + '/reopen', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(getAllTaskPlannedFromServer(json.data.taskPlan.releasePlan._id));
            }
            return json;
        });
    };
};

var getEmployeePlanDetailsForRelease = exports.getEmployeePlanDetailsForRelease = function getEmployeePlanDetailsForRelease(employeeId, startDate, endDate, releaseID) {
    return function (dispatch, getState) {
        return fetch('/api/task-plans/employee/' + employeeId + '/fromDate/' + startDate + '/toDate/' + endDate + '/release/' + releaseID, {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addDeveloperFilteredData(json.data));
            }
            return json;
        });
    };
};

var shiftTasksToFutureOnServer = exports.shiftTasksToFutureOnServer = function shiftTasksToFutureOnServer(shift) {
    return function (dispatch, getState) {
        var state = getState();
        return fetch('/api/releases/shift-future/', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(shift)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(getAllTaskPlannedFromServer(state.release.selectedReleasePlan._id));
                dispatch(addDeveloperFilteredData([]));
                dispatch(setDevelopersSchedule([]));
            }
            return json;
        });
    };
};

var shiftTasksToPastOnServer = exports.shiftTasksToPastOnServer = function shiftTasksToPastOnServer(shift) {
    return function (dispatch, getState) {
        var state = getState();
        return fetch('/api/releases/shift-past/', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(shift)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(getAllTaskPlannedFromServer(state.release.selectedReleasePlan._id));
                dispatch(addDeveloperFilteredData([]));
                dispatch(setDevelopersSchedule([]));
            }
            return json;
        });
    };
};

var getDeveloperSchedulesFromServer = exports.getDeveloperSchedulesFromServer = function getDeveloperSchedulesFromServer(employeeID, from) {
    return function (dispatch, getState) {
        return fetch('/api/employees/' + employeeID + '/from/' + from + '/employee-schedule', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(setFromDate(from));
                dispatch(setDevelopersSchedule(json.data));
            }
            return json;
        });
    };
};

var getReleaseDevelopersFromServer = exports.getReleaseDevelopersFromServer = function getReleaseDevelopersFromServer(releasePlanID) {
    return function (dispatch, getState) {
        return fetch('/api/releases/release-plan/' + releasePlanID + '/role/developers', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(A.addDevelopersToState(json.data));
            }
            return json;
        });
    };
};

var getAllTaskPlansOfThisReleaseFromServer = exports.getAllTaskPlansOfThisReleaseFromServer = function getAllTaskPlansOfThisReleaseFromServer(releaseID) {
    return function (dispatch, getState) {
        return fetch('/api/task-plans/release/' + releaseID, {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {

                dispatch(addTaskPlannings(json.data));
            }
            return json;
        });
    };
};

var changeReleaseDateOfIteration = exports.changeReleaseDateOfIteration = function changeReleaseDateOfIteration(iterationData) {
    return function (dispatch, getState) {
        return fetch('/api/releases/release-date', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(iterationData)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateReleaseDates(json.data));
            }
            return json;
        });
    };
};

var releasePlanPlannedAddToReleaseOnServer = exports.releasePlanPlannedAddToReleaseOnServer = function releasePlanPlannedAddToReleaseOnServer(formInput) {
    return function (dispatch, getState) {
        return fetch('/api/releases/add-planned-task ', {
            method: "post",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateReleasePlan(json.data));
            }
            return json;
        });
    };
};

var releasePlanUnplannedAddToReleaseOnServer = exports.releasePlanUnplannedAddToReleaseOnServer = function releasePlanUnplannedAddToReleaseOnServer(formInput) {
    return function (dispatch, getState) {
        return fetch('/api/releases/add-unplanned-task ', {
            method: "post",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateReleasePlan(json.data));
            }
            return json;
        });
    };
};

var createReleaseOnServer = exports.createReleaseOnServer = function createReleaseOnServer(formInput) {
    return function (dispatch, getState) {
        return fetch('/api/releases', {
            method: 'post',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addRelease(json.data));
            }
            return json;
        });
    };
};

/***/ }),

/***/ "2T45":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.updateUserSettingsOnServer = exports.showUserInfo = exports.loginUserOnServer = exports.deleteUserOnServer = exports.editUserOnServer = exports.getAllDeveloperFromServer = exports.getUsersWithRoleDeveloperFromServer = exports.getUsersWithRoleCategoryFromServer = exports.getAllUsersFromServer = exports.addUserOnServer = exports.updateUserProfileState = exports.deleteUser = exports.editUser = exports.addUser = exports.addDevelopersToState = exports.addUsersWithRoleDeveloper = exports.addUsersWithRoleCategory = exports.addAllUsers = exports.loginFailed = exports.addLoginUser = undefined;

var _reduxForm = __webpack_require__("ao4a");

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var addLoginUser = exports.addLoginUser = function addLoginUser(user) {
    return {
        type: AC.ADD_LOGIN_USER,
        user: user
    };
};

var loginFailed = exports.loginFailed = function loginFailed(error) {
    return {
        type: AC.LOGIN_FAILED,
        error: error
    };
};

var addAllUsers = exports.addAllUsers = function addAllUsers(users) {
    return {
        type: AC.ADD_USERS,
        users: users
    };
};

var addUsersWithRoleCategory = exports.addUsersWithRoleCategory = function addUsersWithRoleCategory(users) {
    return {
        type: AC.ADD_USERS_WITH_ROLE_CATEGORY,
        users: users
    };
};

var addUsersWithRoleDeveloper = exports.addUsersWithRoleDeveloper = function addUsersWithRoleDeveloper(developers) {
    return {
        type: AC.ADD_USERS_WITH_ROLE_DEVELOPER,
        developers: developers
    };
};

var addDevelopersToState = exports.addDevelopersToState = function addDevelopersToState(developers) {
    return {
        type: AC.ADD_DEVELOPERS_TO_STATE,
        developers: developers
    };
};

var addUser = exports.addUser = function addUser(user) {
    return {
        type: AC.ADD_USER,
        user: user
    };
};

var editUser = exports.editUser = function editUser(user) {
    return {
        type: AC.EDIT_USER,
        user: user
    };
};

var deleteUser = exports.deleteUser = function deleteUser(userID) {
    return {
        type: AC.DELETE_USER,
        userID: userID
    };
};

var updateUserProfileState = exports.updateUserProfileState = function updateUserProfileState(user) {
    return {
        type: AC.UPDATE_USER_PROFILE_STATE,
        user: user
    };
};

var addUserOnServer = exports.addUserOnServer = function addUserOnServer(formInput) {
    return function (dispatch, getState) {
        return fetch('/api/users', {
            method: "post",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addUser(json.data));
            }
            return json;
        });
    };
};

var getAllUsersFromServer = exports.getAllUsersFromServer = function getAllUsersFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/users', {
            method: "get",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addAllUsers(json.data));
            }
            return json;
        });
    };
};

var getUsersWithRoleCategoryFromServer = exports.getUsersWithRoleCategoryFromServer = function getUsersWithRoleCategoryFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/users/role-category', {
            method: "get",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addUsersWithRoleCategory(json.data));
            }
            return json;
        });
    };
};

var getUsersWithRoleDeveloperFromServer = exports.getUsersWithRoleDeveloperFromServer = function getUsersWithRoleDeveloperFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/users/role-developer', {
            method: "get",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addUsersWithRoleDeveloper(json.data));
            }
            return json;
        });
    };
};

var getAllDeveloperFromServer = exports.getAllDeveloperFromServer = function getAllDeveloperFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/users/role-developer', {
            method: "get",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addDevelopersToState(json.data));
            }
            return json;
        });
    };
};

//update user
var editUserOnServer = exports.editUserOnServer = function editUserOnServer(user) {
    return function (dispatch, getState) {
        return fetch('/api/users', {
            method: "put",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(user)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(editUser(json.data));
            }
            return json;
        });
    };
};

//delete user

var deleteUserOnServer = exports.deleteUserOnServer = function deleteUserOnServer(userId) {
    return function (dispatch, getState) {
        return fetch('/api/users/' + userId, {
            method: "delete",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(deleteUser(userId));
            }
            return json;
        });
    };
};

var loginUserOnServer = exports.loginUserOnServer = function loginUserOnServer(formInput) {
    return function (dispatch, getState) {
        return fetch('/api/login', {
            method: "post",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addLoginUser(json.data));
            } else {
                dispatch(loginFailed(json.message));
            }
            return json;
        });
    };
};

var showUserInfo = exports.showUserInfo = function showUserInfo() {
    return function (dispatch, getState) {
        dispatch((0, _reduxForm.initialize)('user-profile', getState().user.loggedIn));
    };
};

var updateUserSettingsOnServer = exports.updateUserSettingsOnServer = function updateUserSettingsOnServer(user) {
    return function (dispatch, getState) {
        return fetch('/api/users', {
            method: "put",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(user)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateUserProfileState(json.data));
            }
            return json;
        });
    };
};

/***/ }),

/***/ "2Y/+":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.addToReleaseOnServer = exports.addCreateReleaseOnServer = exports.reopenEstimationOnServer = exports.reOpenTaskOnServer = exports.reOpenFeatureOnServer = exports.canNotApproveEstimationOnServer = exports.canNotApproveFeatureOnServer = exports.canApproveEstimationOnServer = exports.canApproveFeatureOnServer = exports.approveEstimationOnServer = exports.approveFeatureByNegotiatorOnServer = exports.approveTaskByNegotiatorOnServer = exports.requestForFeatureDeletePermissionOnServer = exports.deleteFeatureByEstimatorOnServer = exports.grantEditPermissionOfFeatureOnServer = exports.grantEditPermissionOfTaskOnServer = exports.moveTaskOutOfFeatureOnServer = exports.moveTaskIntoFeatureOnServer = exports.getFeatureFromServer = exports.getOnlyEstimationFromServer = exports.getEstimationFromServer = exports.updateFeatureToEstimationOnServer = exports.addFeatureToEstimationOnServer = exports.updateTaskToEstimationOnServer = exports.copyFeatureFromRepositoryToEstimationOnServer = exports.addFeatureFromRepositoryToEstimationOnServer = exports.copyTaskFromRepositoryToEstimationOnServer = exports.addTaskFromRepositoryToEstimationOnServer = exports.addTaskToEstimationOnServer = exports.requestForTaskDeletePermissionOnServer = exports.deleteEstimationTaskOnServer = exports.requestForFeatureEditPermissionOnServer = exports.requestForTaskEditPermissionOnServer = exports.requestChangeOnServer = exports.checkHasErrorInEstimationOnServer = exports.requestReviewOnServer = exports.requestEstimationOnServer = exports.deleteEstimationOnServer = exports.updateEstimationOnServer = exports.initiateEstimationOnServer = exports.getAllEstimationsFromServer = exports.deleteEstimation = exports.clearFilterFromEstimation = exports.selectAllFilterFromEstimation = exports.addFilteredEstimation = exports.expandTaskAndFeature = exports.expandTask = exports.expandFeature = exports.deleteEstimationFeature = exports.moveTaskOutOfFeature = exports.moveTaskInFeature = exports.estimationTaskDelete = exports.updateEstimationFeature = exports.addEstimationFeature = exports.updateEstimationTask = exports.addEstimationTask = exports.updateSelectedEstimation = exports.selectEstimation = exports.deleteEstimationTask = exports.taskEditRequest = exports.editEstimation = exports.addEstimation = exports.addEstimations = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var addEstimations = exports.addEstimations = function addEstimations(estimations) {
    return {
        type: AC.ADD_ESTIMATIONS,
        estimations: estimations
    };
};

var addEstimation = exports.addEstimation = function addEstimation(estimation) {
    return {
        type: AC.ADD_ESTIMATION,
        estimation: estimation
    };
};

var editEstimation = exports.editEstimation = function editEstimation(estimation) {
    return {
        type: AC.EDIT_ESTIMATION,
        estimation: estimation
    };
};

var taskEditRequest = exports.taskEditRequest = function taskEditRequest(task) {
    return {
        type: AC.REQUEST_FOR_TASK_EDIT_PERMISSION,
        task: task
    };
};

var deleteEstimationTask = exports.deleteEstimationTask = function deleteEstimationTask(task) {
    return {
        type: AC.DELETE_ESTIMATION_TASK,
        task: task
    };
};

var selectEstimation = exports.selectEstimation = function selectEstimation(estimation) {
    return {
        type: AC.SELECT_ESTIMATION,
        estimation: estimation
    };
};

var updateSelectedEstimation = exports.updateSelectedEstimation = function updateSelectedEstimation(estimation) {
    return {
        type: AC.UPDATE_SELECTED_ESTIMATION,
        estimation: estimation
    };
};

var addEstimationTask = exports.addEstimationTask = function addEstimationTask(task) {
    return {
        type: AC.ADD_ESTIMATION_TASK,
        task: task
    };
};

var updateEstimationTask = exports.updateEstimationTask = function updateEstimationTask(task) {
    return {
        type: AC.UPDATE_ESTIMATION_TASK,
        task: task
    };
};

var addEstimationFeature = exports.addEstimationFeature = function addEstimationFeature(feature) {
    return {
        type: AC.ADD_ESTIMATION_FEATURE,
        feature: feature
    };
};

var updateEstimationFeature = exports.updateEstimationFeature = function updateEstimationFeature(feature) {
    return {
        type: AC.UPDATE_ESTIMATION_FEATURE,
        feature: feature
    };
};

var estimationTaskDelete = exports.estimationTaskDelete = function estimationTaskDelete(taskID) {
    return {
        type: AC.ESTIMATION_TASK_DELETE,
        taskID: taskID
    };
};

var moveTaskInFeature = exports.moveTaskInFeature = function moveTaskInFeature(task) {
    return {
        type: AC.MOVE_TASK_IN_FEATURE,
        task: task
    };
};

var moveTaskOutOfFeature = exports.moveTaskOutOfFeature = function moveTaskOutOfFeature(task, featureID) {
    return {
        type: AC.MOVE_TASK_OUTOF_FEATURE,
        task: task,
        featureID: featureID
    };
};

var deleteEstimationFeature = exports.deleteEstimationFeature = function deleteEstimationFeature(feature) {
    return {
        type: AC.DELETE_ESTIMATION_FEATURE,
        feature: feature
    };
};

var expandFeature = exports.expandFeature = function expandFeature(featureID) {
    return {
        type: AC.EXPAND_FEATURE,
        featureID: featureID
    };
};

var expandTask = exports.expandTask = function expandTask(taskID) {
    return {
        type: AC.EXPAND_TASK,
        taskID: taskID
    };
};

var expandTaskAndFeature = exports.expandTaskAndFeature = function expandTaskAndFeature(featureID, taskID) {
    return {
        type: AC.EXPAND_TASK_AND_FEATURE,
        taskID: taskID,
        featureID: featureID
    };
};

var addFilteredEstimation = exports.addFilteredEstimation = function addFilteredEstimation(filter) {
    return {
        type: AC.ADD_FILTERED_ESTIMATIONS,
        filter: filter
    };
};

var selectAllFilterFromEstimation = exports.selectAllFilterFromEstimation = function selectAllFilterFromEstimation() {
    return {
        type: AC.SELECT_ALL_FILTER_FROM_ESTIMATION
    };
};

var clearFilterFromEstimation = exports.clearFilterFromEstimation = function clearFilterFromEstimation() {
    return {
        type: AC.CLEAR_FILTER_FROM_ESTIMATION
    };
};

var deleteEstimation = exports.deleteEstimation = function deleteEstimation(estimationID) {
    return {
        type: AC.DELETE_ESTIMATION,
        estimationID: estimationID
    };
};

var getAllEstimationsFromServer = exports.getAllEstimationsFromServer = function getAllEstimationsFromServer(projectID, status) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/project/' + projectID + '/status/' + status, {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addEstimations(json.data));
            }
        });
    };
};

var initiateEstimationOnServer = exports.initiateEstimationOnServer = function initiateEstimationOnServer(estimation) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/initiate', {
            method: 'post',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(estimation)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addEstimation(json.data));
            }
            return json;
        });
    };
};

var updateEstimationOnServer = exports.updateEstimationOnServer = function updateEstimationOnServer(estimation) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/update', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(estimation)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(editEstimation(json.data));
            }
            return json;
        });
    };
};

var deleteEstimationOnServer = exports.deleteEstimationOnServer = function deleteEstimationOnServer(estimationID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/' + estimationID + "/delete", {
            method: 'delete',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(deleteEstimation(estimationID));
            }
            return json;
        });
    };
};

var requestEstimationOnServer = exports.requestEstimationOnServer = function requestEstimationOnServer(estimationID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/' + estimationID + "/request", {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({})
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(editEstimation(json.data));
            }
            return json;
        });
    };
};

var requestReviewOnServer = exports.requestReviewOnServer = function requestReviewOnServer(estimationID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/' + estimationID + "/review-request", {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({})
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(getEstimationFromServer(estimationID));
            }
            return json;
        });
    };
};

var checkHasErrorInEstimationOnServer = exports.checkHasErrorInEstimationOnServer = function checkHasErrorInEstimationOnServer(estimationID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/' + estimationID + "/hasError", {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({})
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(editEstimation(json.data));
            }
            return json;
        });
    };
};

var requestChangeOnServer = exports.requestChangeOnServer = function requestChangeOnServer(estimationID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/' + estimationID + "/change-request", {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({})
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                //dispatch(editEstimation(json.data))
                // During change request,  flags of tasks/feature may also change so select this estimation again to get latest data
                dispatch(getEstimationFromServer(estimationID));
            }
            return json;
        });
    };
};

var requestForTaskEditPermissionOnServer = exports.requestForTaskEditPermissionOnServer = function requestForTaskEditPermissionOnServer(taskID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/tasks/' + taskID + '/request-edit', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                // As json.data would contain complete updated task just fire update redux action
                dispatch(updateEstimationTask(json.data));
                if (json.data && json.data.feature && json.data.feature._id) {
                    dispatch(getFeatureFromServer(json.data.feature._id));
                }
            }
            return json;
        });
    };
};

var requestForFeatureEditPermissionOnServer = exports.requestForFeatureEditPermissionOnServer = function requestForFeatureEditPermissionOnServer(featureID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/features/' + featureID + '/request-edit', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                // As json.data would contain complete updated feature just fire update redux action
                dispatch(updateEstimationFeature(json.data));
            }
            return json;
        });
    };
};

var deleteEstimationTaskOnServer = exports.deleteEstimationTaskOnServer = function deleteEstimationTaskOnServer(estimationID, taskID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/' + estimationID + '/tasks/' + taskID, {
            method: 'delete',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(deleteEstimationTask(json.data));
                if (json.data && json.data.estimation && json.data.estimation._id) {
                    dispatch(getOnlyEstimationFromServer(json.data.estimation._id));
                }
                if (json.data && json.data.feature && json.data.feature._id) {
                    dispatch(getFeatureFromServer(json.data.feature._id));
                }
            }
            return json;
        });
    };
};

var requestForTaskDeletePermissionOnServer = exports.requestForTaskDeletePermissionOnServer = function requestForTaskDeletePermissionOnServer(taskID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/tasks/' + taskID + '/request-removal', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateEstimationTask(json.data));
                if (json.data && json.data.feature && json.data.feature._id) {
                    dispatch(canNotApproveFeatureOnServer(json.data.feature._id, false));
                }
                if (json.data && json.data.estimation && json.data.estimation._id) {
                    dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, false));
                }
            }
            return json;
        });
    };
};

var addTaskToEstimationOnServer = exports.addTaskToEstimationOnServer = function addTaskToEstimationOnServer(task) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/tasks', {
            method: 'post',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(task)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addEstimationTask(json.data));
                if (json.data && json.data.isEstimationCanApprove && json.data.estimation && json.data.estimation._id) {
                    dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, false));
                } else if (json.data && json.data.estimation && json.data.estimation._id) {
                    dispatch(getOnlyEstimationFromServer(json.data.estimation._id));
                }

                if (json.data && json.data.isFeatureCanApprove && json.data.feature && json.data.feature._id) {
                    dispatch(canNotApproveFeatureOnServer(json.data.feature._id, false));
                } else if (json.data && json.data.feature && json.data.feature._id) {
                    dispatch(getFeatureFromServer(json.data.feature._id));
                }
            }
            return json;
        });
    };
};

var addTaskFromRepositoryToEstimationOnServer = exports.addTaskFromRepositoryToEstimationOnServer = function addTaskFromRepositoryToEstimationOnServer(estimationID, taskID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/tasks/estimation/' + estimationID + '/repository-task/' + taskID, {
            method: 'post',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addEstimationTask(json.data));
                if (json.data && json.data.estimation && json.data.estimation._id && json.data.isEstimationCanApprove) {
                    dispatch(canNotApproveEstimationOnServer(json.data.estimation._id));
                } else if (json.data && json.data.estimation && json.data.estimation._id) {
                    dispatch(getOnlyEstimationFromServer(json.data.estimation._id));
                }
            }
            return json;
        });
    };
};

var copyTaskFromRepositoryToEstimationOnServer = exports.copyTaskFromRepositoryToEstimationOnServer = function copyTaskFromRepositoryToEstimationOnServer(estimationID, taskID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/tasks/estimation/' + estimationID + '/repository-task-copy/' + taskID, {
            method: 'post',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addEstimationTask(json.data));
                if (json.data && json.data.estimation && json.data.estimation._id && json.data.isEstimationCanApprove) {
                    dispatch(canNotApproveEstimationOnServer(json.data.estimation._id));
                } else if (json.data && json.data.estimation && json.data.estimation._id) {
                    dispatch(getOnlyEstimationFromServer(json.data.estimation._id));
                }
            }
            return json;
        });
    };
};

var addFeatureFromRepositoryToEstimationOnServer = exports.addFeatureFromRepositoryToEstimationOnServer = function addFeatureFromRepositoryToEstimationOnServer(estimationID, featureID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/features/estimation/' + estimationID + '/repository-feature/' + featureID, {
            method: 'post',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addEstimationFeature(json.data));
                if (json.data && json.data.estimation && json.data.estimation._id && json.data.isEstimationCanApprove) {
                    dispatch(canNotApproveEstimationOnServer(json.data.estimation._id));
                } else if (json.data && json.data.estimation && json.data.estimation._id) {
                    dispatch(getOnlyEstimationFromServer(json.data.estimation._id));
                }
            }
            return json;
        });
    };
};

var copyFeatureFromRepositoryToEstimationOnServer = exports.copyFeatureFromRepositoryToEstimationOnServer = function copyFeatureFromRepositoryToEstimationOnServer(estimationID, featureID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/features/estimation/' + estimationID + '/repository-feature-copy/' + featureID, {
            method: 'post',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addEstimationFeature(json.data));
                if (json.data && json.data.estimation && json.data.estimation._id && json.data.isEstimationCanApprove) {
                    dispatch(canNotApproveEstimationOnServer(json.data.estimation._id));
                } else if (json.data && json.data.estimation && json.data.estimation._id) {
                    dispatch(getOnlyEstimationFromServer(json.data.estimation._id));
                }
            }
            return json;
        });
    };
};

var updateTaskToEstimationOnServer = exports.updateTaskToEstimationOnServer = function updateTaskToEstimationOnServer(task) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/tasks', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(task)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateEstimationTask(json.data));
                if (json.data && json.data.isEstimationCanApprove && json.data.estimation && json.data.estimation._id) {
                    dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, false));
                } else if (json.data && json.data.estimation && json.data.estimation._id) {
                    dispatch(getOnlyEstimationFromServer(json.data.estimation._id));
                }
                if (json.data && json.data.isFeatureCanApprove && json.data.feature && json.data.feature._id) {
                    dispatch(canNotApproveFeatureOnServer(json.data.feature._id, false));
                } else if (json.data && json.data.feature && json.data.feature._id) {
                    dispatch(getFeatureFromServer(json.data.feature._id));
                }
            }
            return json;
        });
    };
};

var addFeatureToEstimationOnServer = exports.addFeatureToEstimationOnServer = function addFeatureToEstimationOnServer(feature) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/features', {
            method: 'post',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(feature)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addEstimationFeature(json.data));
                if (json.data && json.data.isEstimationCanApprove && json.data.estimation && json.data.estimation._id) {
                    dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, false));
                }
            }
            return json;
        });
    };
};

var updateFeatureToEstimationOnServer = exports.updateFeatureToEstimationOnServer = function updateFeatureToEstimationOnServer(feature) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/features', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(feature)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateEstimationFeature(json.data));
                if (json.data && json.data.isEstimationCanApprove && json.data.estimation && json.data.estimation._id) {
                    dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, false));
                }
            }
            return json;
        });
    };
};

var getEstimationFromServer = exports.getEstimationFromServer = function getEstimationFromServer(estimationID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/' + estimationID, {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(selectEstimation(json.data));
            }
            return json;
        });
    };
};

var getOnlyEstimationFromServer = exports.getOnlyEstimationFromServer = function getOnlyEstimationFromServer(estimationID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/' + estimationID + '/only', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateSelectedEstimation(json.data));
            }
            return json;
        });
    };
};

var getFeatureFromServer = exports.getFeatureFromServer = function getFeatureFromServer(featureID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/feature/' + featureID, {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateEstimationFeature(json.data));
            }
            return json;
        });
    };
};

var moveTaskIntoFeatureOnServer = exports.moveTaskIntoFeatureOnServer = function moveTaskIntoFeatureOnServer(taskID, featureID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/tasks/' + taskID + '/features/' + featureID, {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(moveTaskInFeature(json.data));
                if (json.data && json.data.feature && json.data.feature._id) {
                    dispatch(getFeatureFromServer(json.data.feature._id));
                }
            }
            return json;
        });
    };
};

var moveTaskOutOfFeatureOnServer = exports.moveTaskOutOfFeatureOnServer = function moveTaskOutOfFeatureOnServer(task) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/tasks/' + task._id + '/move-out-of-feature', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                if (task && task.feature && task.feature._id) {
                    dispatch(getFeatureFromServer(task.feature._id));
                    dispatch(moveTaskOutOfFeature(json.data, task.feature._id));
                }
            }
            return json;
        });
    };
};

var grantEditPermissionOfTaskOnServer = exports.grantEditPermissionOfTaskOnServer = function grantEditPermissionOfTaskOnServer(taskID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/tasks/' + taskID + '/grant-edit', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateEstimationTask(json.data));
                if (json.data && json.data.feature && json.data.feature._id) {
                    dispatch(canNotApproveFeatureOnServer(json.data.feature._id, true));
                }
                if (json.data && json.data.estimation && json.data.isEstimationCanApprove && json.data.estimation._id) {
                    dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, true));
                }
            }
            return json;
        });
    };
};

var grantEditPermissionOfFeatureOnServer = exports.grantEditPermissionOfFeatureOnServer = function grantEditPermissionOfFeatureOnServer(featureId) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/features/' + featureId + '/grant-edit', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateEstimationFeature(json.data));
                if (json.data && json.data.isEstimationCanApprove && json.data.estimation && json.data.estimation._id) {
                    dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, true));
                }
            }

            return json;
        });
    };
};

var deleteFeatureByEstimatorOnServer = exports.deleteFeatureByEstimatorOnServer = function deleteFeatureByEstimatorOnServer(estimationID, featureID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/' + estimationID + '/feature/' + featureID, {
            method: 'delete',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(deleteEstimationFeature(json.data));
                if (json.data && json.data.estimation && json.data.estimation._id) {
                    dispatch(getOnlyEstimationFromServer(json.data.estimation._id));
                }
            }
            return json;
        });
    };
};

var requestForFeatureDeletePermissionOnServer = exports.requestForFeatureDeletePermissionOnServer = function requestForFeatureDeletePermissionOnServer(featureID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/features/' + featureID + '/request-removal', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateEstimationFeature(json.data));
            }
            return json;
        });
    };
};

var approveTaskByNegotiatorOnServer = exports.approveTaskByNegotiatorOnServer = function approveTaskByNegotiatorOnServer(taskID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/tasks/' + taskID + '/approve', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                if (json.data && json.data.feature && json.data.feature._id) {
                    dispatch(canApproveFeatureOnServer(json.data.feature._id)).then(function (json) {
                        if (json.success) {} else {
                            dispatch(getFeatureFromServer(json.data.feature._id));
                        }
                        return json;
                    });
                }
                if (json.data && json.data.estimation && json.data.estimation._id) {
                    dispatch(canApproveEstimationOnServer(json.data.estimation._id)).then(function (responseJson) {
                        if (responseJson.success) {} else {
                            dispatch(getOnlyEstimationFromServer(json.data.estimation._id));
                        }
                        return responseJson;
                    });
                }
                dispatch(updateEstimationTask(json.data));
            }
            return json;
        });
    };
};

var approveFeatureByNegotiatorOnServer = exports.approveFeatureByNegotiatorOnServer = function approveFeatureByNegotiatorOnServer(featureID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/features/' + featureID + '/approve', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateEstimationFeature(json.data));
                if (json.data && json.data.estimation && json.data.estimation._id) {
                    dispatch(canApproveEstimationOnServer(json.data.estimation._id));
                }
            }
            return json;
        });
    };
};

var approveEstimationOnServer = exports.approveEstimationOnServer = function approveEstimationOnServer(estimationID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/' + estimationID + "/approve", {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({})
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                //dispatch(editEstimation(json.data))
                // During Approve,  flags of tasks/feature may also change so select this estimation again to get latest data
                dispatch(getOnlyEstimationFromServer(estimationID));
            }
            return json;
        });
    };
};

var canApproveFeatureOnServer = exports.canApproveFeatureOnServer = function canApproveFeatureOnServer(FeatureID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/feature/' + FeatureID + '/can-approve', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateEstimationFeature(json.data));
            }
            return json;
        });
    };
};

var canApproveEstimationOnServer = exports.canApproveEstimationOnServer = function canApproveEstimationOnServer(estimationID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/' + estimationID + "/can-approve", {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({})
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(editEstimation(json.data));
                // During Approve,  flags of tasks/feature may also change so select this estimation again to get latest data
                //dispatch(getOnlyEstimationFromServer(estimationID))
            }
            return json;
        });
    };
};

var canNotApproveFeatureOnServer = exports.canNotApproveFeatureOnServer = function canNotApproveFeatureOnServer(FeatureID, grant) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/feature/' + FeatureID + '/can-not-approve/' + grant + '/is-granted', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateEstimationFeature(json.data));
            }
            return json;
        });
    };
};

var canNotApproveEstimationOnServer = exports.canNotApproveEstimationOnServer = function canNotApproveEstimationOnServer(estimationID, grant) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/' + estimationID + '/can-not-approve/' + grant + '/is-granted', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({})
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(editEstimation(json.data));
            }
            return json;
        });
    };
};

var reOpenFeatureOnServer = exports.reOpenFeatureOnServer = function reOpenFeatureOnServer(FeatureID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/feature/' + FeatureID + '/reOpen', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateEstimationFeature(json.data));
                if (json.data && json.data.estimation && json.data.isEstimationCanApprove && json.data.estimation._id) {
                    dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, true));
                }
            }
            return json;
        });
    };
};

var reOpenTaskOnServer = exports.reOpenTaskOnServer = function reOpenTaskOnServer(TaskID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/task/' + TaskID + '/reOpen', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateEstimationTask(json.data));
                if (json.data && json.data.feature && json.data.isFeatureApproved && json.data.feature._id) {
                    dispatch(getFeatureFromServer(json.data.feature._id));
                } else if (json.data && json.data.feature && json.data.isFeatureCanApprove && json.data.feature._id) {
                    dispatch(canNotApproveFeatureOnServer(json.data.feature._id, true));
                }
                if (json.data && json.data.estimation && json.data.isEstimationCanApprove && json.data.estimation._id) {
                    dispatch(canNotApproveEstimationOnServer(json.data.estimation._id, true));
                }
            }
            return json;
        });
    };
};

var reopenEstimationOnServer = exports.reopenEstimationOnServer = function reopenEstimationOnServer(estimationID) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/' + estimationID + "/reopen", {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({})
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(editEstimation(json.data));
            }
            return json;
        });
    };
};

var addCreateReleaseOnServer = exports.addCreateReleaseOnServer = function addCreateReleaseOnServer(formInput) {
    return function (dispatch, getState) {
        return fetch('/api/estimations/create-release', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateSelectedEstimation(json.data));
            }
            return json;
        });
    };
};

var addToReleaseOnServer = exports.addToReleaseOnServer = function addToReleaseOnServer(formInput) {
    formInput.billedHours = parseInt(formInput.billedHours);
    return function (dispatch, getState) {
        return fetch('/api/estimations/add-to-release', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateSelectedEstimation(json.data));
            }
            return json;
        });
    };
};

/***/ }),

/***/ "2y/X":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reduxForm = __webpack_require__("ao4a");

var _roleAction = __webpack_require__("Yb2E");

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        showRoleForm: function showRoleForm() {
            return dispatch(A.showComponentHideOthers(COC.ROLE_FORM));
        },
        editRole: function editRole(role) {
            dispatch((0, _reduxForm.initialize)("role", role));
            dispatch(A.showComponentHideOthers(COC.ROLE_FORM));
        },
        deleteRole: function deleteRole(roleID) {
            dispatch(A.deleteRoleOnServer(roleID)).then(function (json) {
                if (json.success) {
                    dispatch((0, _roleAction.deleteRole)(json.data));
                    _reactNotifications.NotificationManager.success('Role Deleted Successfully');
                } else {
                    _reactNotifications.NotificationManager.error('Role Not Deleted!');
                }
                return json;
            });
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        loggedInUser: state.user.loggedIn,
        roles: state.role.all,
        permissions: state.permission.all
    };
};

var RoleListContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.RoleList);

exports.default = RoleListContainer;

/***/ }),

/***/ "30wz":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        showFeatureDetailPage: function showFeatureDetailPage(feature) {
            dispatch(A.selectFeatureFromRepository(feature));
            dispatch(A.showComponent(COC.REPOSITORY_FEATURE_DETAIL_DIALOG));
        },

        showTaskDetailPage: function showTaskDetailPage(task) {
            dispatch(A.selectTaskFromRepository(task));
            dispatch(A.showComponent(COC.REPOSITORY_TASK_DETAIL_DIALOG));
        },
        getAllRepositoryData: function getAllRepositoryData(technologies) {
            return dispatch(A.getRepositoryFromServer(technologies, SC.ALL));
        },
        fetchRepositoryBasedOnDiffCriteria: function fetchRepositoryBasedOnDiffCriteria(tags, type, searchText) {
            var technologies = [];
            tags.map(function (f, i) {
                technologies.push(f.text);
            });
            dispatch(A.getRepositoryFromServer(technologies, type, searchText));
        }

    };
};

var mapStateToProps = function mapStateToProps(state) {
    return {
        repository: state.repository.all,
        estimation: state.estimation.selected
    };
};

var RepositorySearchContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.RepositorySearch);

exports.default = RepositorySearchContainer;

/***/ }),

/***/ "35ej":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactEventTimeline = __webpack_require__("kCet");

var _reactRouterDom = __webpack_require__("F8kA");

var _containers = __webpack_require__("GF1l");

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _reactBootstrapTable = __webpack_require__("feXg");

var _momentTimezone = __webpack_require__("xNPZ");

var _momentTimezone2 = _interopRequireDefault(_momentTimezone);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ReportingTaskDetailPage = function (_React$Component) {
    _inherits(ReportingTaskDetailPage, _React$Component);

    function ReportingTaskDetailPage(props) {
        _classCallCheck(this, ReportingTaskDetailPage);

        var _this = _possibleConstructorReturn(this, (ReportingTaskDetailPage.__proto__ || Object.getPrototypeOf(ReportingTaskDetailPage)).call(this, props));

        _this.commentListPageOptions = {
            sizePerPageList: [{
                text: '4', value: 4
            }],
            sizePerPage: 4 // which size per page you want to locate as default
        };

        _this.taskListPageOptions = {
            sizePerPageList: [{
                text: '4', value: 4
            }],
            sizePerPage: 4 // which size per page you want to locate as default
        };
        return _this;
    }

    _createClass(ReportingTaskDetailPage, [{
        key: 'assignedTasksRowClass',
        value: function assignedTasksRowClass(row) {
            return row._id.toString() == this.props.taskPlan._id.toString() ? 'td-row-completed' : 'td-row-unreported';
        }
    }, {
        key: 'formatCommentDate',
        value: function formatCommentDate(date) {
            return (0, _momentTimezone2.default)(date).tz(SC.INDIAN_TIMEZONE).format('DD MMM,YY (hh:mm a)');
        }
    }, {
        key: 'formatPlanDate',
        value: function formatPlanDate(date) {
            return (0, _momentTimezone2.default)(date).utc().format('DD MMM,YY');
        }
    }, {
        key: 'formatPlannedHours',
        value: function formatPlannedHours(planning) {
            if (planning && planning.plannedHours) return planning.plannedHours;
            return '';
        }
    }, {
        key: 'formatReportedHours',
        value: function formatReportedHours(report) {
            if (report && report.reportedHours) return report.reportedHours;
            return '';
        }
    }, {
        key: 'formatReportStatus',
        value: function formatReportStatus(report) {

            if (report && report.status) return report.status;
            return SC.STATUS_UNREPORTED;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                taskPlan = _props.taskPlan,
                release = _props.release,
                releasePlan = _props.releasePlan,
                taskPlans = _props.taskPlans;


            return _react2.default.createElement(
                _reactEventTimeline.Timeline,
                null,
                _react2.default.createElement(
                    'span',
                    null,
                    _react2.default.createElement(
                        'button',
                        { className: 'btn-link calArrow', style: { marginLeft: '-3%' },
                            onClick: function onClick() {
                                _this2.props.history.push('/app-home/reporting');
                                _this2.props.ReportingGoBack();
                            } },
                        _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Task Name :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    taskPlan && taskPlan.task && taskPlan.task.name ? taskPlan.task.name : ''
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Work Assigned to You for this Task:',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    _react2.default.createElement(
                        'div',
                        { className: 'DeveloperTasksTable' },
                        _react2.default.createElement(
                            _reactBootstrapTable.BootstrapTable,
                            {
                                data: taskPlans,
                                striped: true,
                                hover: true,
                                options: this.taskListPageOptions,
                                pagination: true,
                                trClassName: this.assignedTasksRowClass.bind(this),
                                height: "202px" },
                            _react2.default.createElement(_reactBootstrapTable.TableHeaderColumn, { columnTitle: true, isKey: true, dataField: '_id', hidden: true }),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: "15%", columnTitle: true, dataField: 'planningDate',
                                    dataFormat: this.formatPlanDate.bind(this) },
                                'Planned Date'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: "45%", columnTitle: true, dataField: 'description' },
                                'Tasks Description'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: "15%", columnTitle: true, dataField: 'planning',
                                    dataFormat: this.formatPlannedHours.bind(this) },
                                'Planned Hours'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: "15%", columnTitle: true, dataField: 'report',
                                    dataFormat: this.formatReportedHours.bind(this) },
                                'Reported Hours'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: "15%", columnTitle: true, dataField: 'report',
                                    dataFormat: this.formatReportStatus.bind(this) },
                                'Reported Status'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Comments :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    _react2.default.createElement(_containers.ReportingCommentFormContainer, null),
                    _react2.default.createElement(
                        'div',
                        { className: 'ReportingCommentTable' },
                        _react2.default.createElement(
                            _reactBootstrapTable.BootstrapTable,
                            {
                                data: releasePlan.comments && releasePlan.comments.length ? releasePlan.comments : [],
                                striped: true,
                                hover: true,
                                options: this.commentListPageOptions,
                                pagination: true,
                                height: "300px" },
                            _react2.default.createElement(_reactBootstrapTable.TableHeaderColumn, { columnTitle: true, isKey: true, dataField: '_id', hidden: true }),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: '12%', columnTitle: true, dataField: 'date',
                                    dataFormat: this.formatCommentDate.bind(this) },
                                'Date/Time'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: '40%', columnTitle: true, dataField: 'comment'
                                },
                                'Comment'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: '10%', columnTitle: true, dataField: 'commentType',
                                    dataSort: true },
                                'Comment Type'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: '10%', columnTitle: true, dataField: 'name' },
                                'Commented By'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Task Day Report Details :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    _react2.default.createElement(
                        'p',
                        { className: 'description' },
                        '  ',
                        taskPlan && taskPlan.report && taskPlan.report.description ? taskPlan.report.description : ''
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Task Day Requirement :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    _react2.default.createElement(
                        'p',
                        { className: 'description' },
                        '  ',
                        taskPlan && taskPlan.description ? taskPlan.description : ''
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Task Requirement:',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    _react2.default.createElement(
                        'p',
                        { className: 'description' },
                        '  ',
                        releasePlan && releasePlan.task && releasePlan.task.description ? releasePlan.task.description : ''
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { style: { fontSize: '20px' },
                        title: 'Project Name :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }) },
                    release && release.project && release.project.name ? release.project.name : ''
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { style: { fontSize: '20px' },
                        title: 'Project Description :',
                        icon: _react2.default.createElement('i', {
                            className: 'glyphicon glyphicon-tasks calendar_icon' }) },
                    _react2.default.createElement(
                        'p',
                        { className: 'description' },
                        releasePlan && releasePlan.estimationDescription ? releasePlan.estimationDescription : ''
                    )
                )
            );
        }
    }]);

    return ReportingTaskDetailPage;
}(_react2.default.Component);

exports.default = (0, _reactRouterDom.withRouter)(ReportingTaskDetailPage);

/***/ }),

/***/ "3Hd+":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _reduxForm = __webpack_require__("ao4a");

var _reactNotifications = __webpack_require__("B0Hd");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {

            logger.debug(logger.ATTENDENCE_SETTING_FORM_RENDER, "onSubmit:values:", values);
            return dispatch(A.addAttendanceSettingOnServer(values)).then(function (json) {
                if (json.success) {
                    dispatch((0, _reduxForm.initialize)("attendance-setting", json.data));
                    _reactNotifications.NotificationManager.success('Attendance Setting added Successfully');
                } else {
                    _reactNotifications.NotificationManager.error('Attendance Setting  Not Added!');
                }
            });
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {};
};

var AttendanceSettingFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.AttendenceSettingForm);

exports.default = AttendanceSettingFormContainer;

/***/ }),

/***/ "3Hs3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactBootstrapDialog = __webpack_require__("OLzJ");

var _reactBootstrapDialog2 = _interopRequireDefault(_reactBootstrapDialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PermissionList = function (_Component) {
    _inherits(PermissionList, _Component);

    function PermissionList(props) {
        _classCallCheck(this, PermissionList);

        return _possibleConstructorReturn(this, (PermissionList.__proto__ || Object.getPrototypeOf(PermissionList)).call(this, props));
    }

    _createClass(PermissionList, [{
        key: 'editCellButton',
        value: function editCellButton(cell, row, enumObject, rowIndex) {
            var _this2 = this;

            return _react2.default.createElement('button', { className: 'glyphicon glyphicon-pencil pull-left btn btn-custom', type: 'button',
                onClick: function onClick() {
                    return _this2.props.editPermission(row, rowIndex);
                } });
        }
    }, {
        key: 'deleteCellButton',
        value: function deleteCellButton(cell, row, enumObject, rowIndex) {
            var _this3 = this;

            return _react2.default.createElement('button', { className: 'glyphicon glyphicon-trash pull-left btn btn-custom', type: 'button',
                onClick: function onClick() {
                    _this3.dialog.show({
                        title: "Delete User",
                        body: "",
                        actions: [_reactBootstrapDialog2.default.DefaultAction('Delete', function () {
                            _this3.props.deleteUser(row._id);
                        }, 'btn-custom'), _reactBootstrapDialog2.default.DefaultAction('Close', function () {
                            _this3.dialog.hide();
                        }, 'btn-custom')],
                        bsSize: 'small',
                        onHide: function onHide(dialog) {
                            _this3.dialog.hide();
                        }
                    });
                } });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            return _react2.default.createElement(
                'div',
                { className: 'row' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6' },
                    _react2.default.createElement(_reactBootstrapDialog2.default, { ref: function ref(el) {
                            _this4.dialog = el;
                        } }),
                    this.props.loggedInUser.isSuperAdmin ? _react2.default.createElement(
                        'button',
                        { className: 'btn btn-default btn-submit addBtn',
                            onClick: function onClick() {
                                return _this4.props.showPermissionForm();
                            } },
                        'Add Permission'
                    ) : _react2.default.createElement('div', { style: { height: '10px' } }),
                    _react2.default.createElement(
                        _reactBootstrapTable.BootstrapTable,
                        { options: this.options, data: this.props.permissions,
                            striped: true,
                            hoveNr: true },
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { isKey: true, dataField: '_id', hidden: true },
                            'ID'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { dataField: 'name' },
                            'Name'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '20%', dataField: 'button', dataFormat: this.editCellButton.bind(this) },
                            _react2.default.createElement('i', {
                                className: 'fa fa-pencil' })
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '20%', dataField: 'button',
                                dataFormat: this.deleteCellButton.bind(this) },
                            _react2.default.createElement('i', { className: 'fa fa-trash' })
                        )
                    )
                )
            );
        }
    }]);

    return PermissionList;
}(_react.Component);

exports.default = PermissionList;

/***/ }),

/***/ "3cps":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            console.log("EstimationTaskFormContainer->onSubmit() ", values);
            if (values._id) {
                values.estimatedHours = Number(values.estimatedHours);
                logger.debug(logger.ESTIMATION_TASK_FORM_SUBMIT, "values:", values);
                dispatch(A.updateTaskToEstimationOnServer(values)).then(function (json) {
                    if (json.success) {
                        _reactNotifications.NotificationManager.success("Task Updated");
                        // hide dialog
                        dispatch(A.hideComponent(COC.ESTIMATION_TASK_DIALOG));
                    } else {
                        _reactNotifications.NotificationManager.error(json.message);
                    }
                });
            } else {
                values.estimatedHours = Number(values.estimatedHours);
                logger.debug(logger.ESTIMATION_TASK_FORM_SUBMIT, "values:", values);
                dispatch(A.addTaskToEstimationOnServer(values)).then(function (json) {
                    if (json.success) {
                        _reactNotifications.NotificationManager.success("Task Added");
                        // hide dialog
                        dispatch(A.hideComponent(COC.ESTIMATION_TASK_DIALOG));
                    } else {
                        _reactNotifications.NotificationManager.error(json.message);
                    }
                });
            }
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    var features = [];
    if (state.estimation && state.estimation.features && Array.isArray(state.estimation.features) && state.estimation.features.length) {
        features = state.estimation.features.filter(function (f) {
            return f.status != SC.STATUS_APPROVED && f.repo && f.repo.addedFromThisEstimation == true || f.repo == undefined;
        });
    }
    return {
        estimation: state.estimation.selected,
        features: features
    };
};

var EstimationTaskFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.EstimationTaskForm);

exports.default = EstimationTaskFormContainer;

/***/ }),

/***/ "3fis":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var initialState = {
    all: []
};

var warningReducer = function warningReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];


    switch (action.type) {
        case AC.ADD_WARNINGS:
            // add all warnings from server
            return Object.assign({}, state, {
                all: action.warnings
            });

        default:
            return state;
    }
};

exports.default = warningReducer;

/***/ }),

/***/ "3npA":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _fields = __webpack_require__("NACj");

var _validation = __webpack_require__("4KT+");

var _reduxForm = __webpack_require__("ao4a");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ReportingCommentForm = function (_React$Component) {
    _inherits(ReportingCommentForm, _React$Component);

    function ReportingCommentForm(props) {
        _classCallCheck(this, ReportingCommentForm);

        return _possibleConstructorReturn(this, (ReportingCommentForm.__proto__ || Object.getPrototypeOf(ReportingCommentForm)).call(this, props));
    }

    _createClass(ReportingCommentForm, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                handleSubmit = _props.handleSubmit,
                pristine = _props.pristine,
                submitting = _props.submitting;

            var options = [{ name: SC.TYPE_REPORT_COMMENT }, { name: SC.TYPE_INFORMATION }, { name: SC.TYPE_CLARIFICATION }, { name: SC.TYPE_WAITING }, { name: SC.TYPE_BLOCKING }];
            return _react2.default.createElement(
                "form",
                { onSubmit: handleSubmit },
                _react2.default.createElement(
                    "div",
                    { className: "col-md-12 pad reportingCommentForm", style: { marginBottom: '10px' } },
                    _react2.default.createElement(_reduxForm.Field, { name: "releasePlanID", component: "input", className: "form-control", type: "hidden" }),
                    _react2.default.createElement(_reduxForm.Field, { name: "releaseID", component: "input", className: "form-control", type: "hidden" }),
                    _react2.default.createElement(
                        "div",
                        { className: "col-md-7 commentInputPadding" },
                        _react2.default.createElement(_reduxForm.Field, { name: "comment", label: "Comment :", component: _fields.renderTextArea, type: "text",
                            placeholder: "Enter comments or issues here", validate: [_validation.required] })
                    ),
                    _react2.default.createElement(
                        "div",
                        { className: "col-md-3" },
                        _react2.default.createElement(_reduxForm.Field, { name: "commentType", label: "Type :", component: _fields.renderSelect, options: options,
                            type: "text", displayField: "name", valueField: "name", validate: [_validation.required] })
                    ),
                    _react2.default.createElement(
                        "div",
                        { className: "col-md-2 reportingCommentBtn" },
                        _react2.default.createElement(
                            "button",
                            { type: "submit", disabled: pristine || submitting, className: "btn customBtn" },
                            "Comment"
                        )
                    )
                )
            );
        }
    }]);

    return ReportingCommentForm;
}(_react2.default.Component);

ReportingCommentForm = (0, _reduxForm.reduxForm)({
    form: 'reporting-comment'
})(ReportingCommentForm);
exports.default = ReportingCommentForm;

/***/ }),

/***/ "3tJH":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var _reactNotifications = __webpack_require__("B0Hd");

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            if (!values._id) {
                // converted data into number format
                values.casualLeaves = Number(values.casualLeaves);
                values.paidLeaves = Number(values.paidLeaves);
                values.maternityLeaves = Number(values.maternityLeaves);
                values.paternityLeaves = Number(values.paternityLeaves);
                values.specialLeaves = Number(values.specialLeaves);

                // Leave Setting is created
                return dispatch((0, _actions.addLeaveSettingOnServer)(values)).then(function (response) {
                    if (response.success) {
                        _reactNotifications.NotificationManager.success('Leave Setting Added Successfully');
                    } else {
                        _reactNotifications.NotificationManager.error('Leave Setting Added Failed');
                    }
                });
            } else {

                // converted data into number format
                values.casualLeaves = Number(values.casualLeaves);
                values.paidLeaves = Number(values.paidLeaves);
                values.maternityLeaves = Number(values.maternityLeaves);
                values.paternityLeaves = Number(values.paternityLeaves);
                values.specialLeaves = Number(values.specialLeaves);

                // Leave Setting is edited
                return dispatch((0, _actions.updateLeaveSettingOnServer)(values)).then(function (response) {
                    if (response.success) {
                        _reactNotifications.NotificationManager.success('Leave Setting Updated Successfully');
                    } else {
                        _reactNotifications.NotificationManager.error('Leave Setting Updated Failed');
                    }
                    return response;
                });
            }
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {};
};

var LeaveSettingFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.LeaveSettingForm);

exports.default = LeaveSettingFormContainer;

/***/ }),

/***/ "4FiL":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ModuleFormDialog = function ModuleFormDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Add Module'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.ModuleFormContainer, null)
        )
    );
};

exports.default = ModuleFormDialog;

/***/ }),

/***/ "4KT+":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/*
Validation Rules
 */
var required = exports.required = function required(value) {
    return value ? undefined : 'This field is required';
};
var number = exports.number = function number(value) {
    return value && isNaN(Number(value)) ? 'Must be a number' : undefined;
};

var email = exports.email = function email(value) {
    return value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined;
};

var url = exports.url = function url(value) {
    return value && !/^[A-Z0-9_-]{1,200}$/i.test(value) ? 'Invalid url address' : undefined;
};

var minLength = function minLength(min) {
    return function (value) {
        return value && value.length < min ? 'Must be at least ' + min + ' characters long' : undefined;
    };
};

var maxLength = function maxLength(max) {
    return function (value) {
        return value && value.length > max ? 'Must be ' + max + ' characters or less' : undefined;
    };
};

var hasLength = function hasLength(len) {
    return function (value) {
        return value && (value.length < len || value.length > len) ? 'Must be exactly ' + len + ' characters long' : undefined;
    };
};

var passwordLength = exports.passwordLength = minLength(6);

var phoneNumber = exports.phoneNumber = function phoneNumber(value) {
    return hasLength(10)(value) ? hasLength(10)(value) : number(value);
};

/***/ }),

/***/ "4jZl":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            if (values._id) {
                values.estimatedHours = Number(values.estimatedHours);
                logger.debug(logger.ESTIMATION_SUGGEST_FEATURE_FORM_SUBMIT, "values:", values);
                dispatch(A.updateFeatureToEstimationOnServer(values)).then(function (json) {
                    if (json.success) {
                        if (values.loggedInUserRole == SC.ROLE_NEGOTIATOR) _reactNotifications.NotificationManager.success("Added feature suggestion");else if (values.loggedInUserRole == SC.ROLE_ESTIMATOR) _reactNotifications.NotificationManager.success("Updated feature");
                        // hide dialog
                        dispatch(A.hideComponent(COC.ESTIMATION_SUGGEST_FEATURE_FORM_DIALOG));
                    } else {
                        if (values.loggedInUserRole == SC.ROLE_NEGOTIATOR) _reactNotifications.NotificationManager.error("Suggestions not saved");else if (values.loggedInUserRole == SC.ROLE_ESTIMATOR) _reactNotifications.NotificationManager.error("Feature updates failed");
                    }
                });
            } else {
                values.estimatedHours = Number(values.estimatedHours);
                logger.debug(logger.ESTIMATION_SUGGEST_FEATURE_FORM_SUBMIT, "values:", values);
                dispatch(A.addFeatureToEstimationOnServer(values)).then(function (json) {
                    if (json.success) {
                        if (values.loggedInUserRole == SC.ROLE_NEGOTIATOR) _reactNotifications.NotificationManager.success("Feature Suggested");else if (values.loggedInUserRole == SC.ROLE_ESTIMATOR) _reactNotifications.NotificationManager.success("Feature Added");
                        // hide dialog
                        dispatch(A.hideComponent(COC.ESTIMATION_SUGGEST_FEATURE_FORM_DIALOG));
                    } else {
                        if (values.loggedInUserRole == SC.ROLE_NEGOTIATOR) {
                            if (json.code == EC.ACCESS_DENIED) {
                                throw new SubmissionError({ name: "You dont have permission " });
                                _reactNotifications.NotificationManager.error("Feature Suggestion Failed You dont have permission from Estimator");
                            }
                            _reactNotifications.NotificationManager.error("Update Feature Suggestion Failed");
                        } else if (values.loggedInUserRole == SC.ROLE_ESTIMATOR) {
                            if (json.code == EC.ACCESS_DENIED) {
                                _reactNotifications.NotificationManager.error("Feature Suggestion Failed You dont have permission from Negotiator");
                            }
                            _reactNotifications.NotificationManager.error("Feature Addition Failed");
                        }
                    }
                });
            }
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        estimation: state.estimation.selected
    };
};

var EstimationSuggestFeatureFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.EstimationSuggestFeatureForm);

exports.default = EstimationSuggestFeatureFormContainer;

/***/ }),

/***/ "5LBi":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var ROLE_ADMIN = exports.ROLE_ADMIN = 'admin';
var ROLE_SUPER_ADMIN = exports.ROLE_SUPER_ADMIN = 'super_admin';
var ROLE_APP_USER = exports.ROLE_APP_USER = 'app_user';

var DEBUG_LEVEL = exports.DEBUG_LEVEL = 'debug';
var INFO_LEVEL = exports.INFO_LEVEL = 'info';
var WARNING_LEVEL = exports.WARNING_LEVEL = 'warning';
var ERROR_LEVEL = exports.ERROR_LEVEL = 'error';

var EDIT_PROFILE = exports.EDIT_PROFILE = 'Edit Profile';
var MANAGE_PERMISSIONS = exports.MANAGE_PERMISSIONS = 'Manage Permissions';
var MANAGE_ROLES = exports.MANAGE_ROLES = 'Manage Roles';
var CREATE_USER = exports.CREATE_USER = 'Create User';
var EDIT_USER = exports.EDIT_USER = 'Edit User';
var DELETE_USER = exports.DELETE_USER = 'Delete User';
var LIST_USERS = exports.LIST_USERS = 'List Users';
var EDIT_ROLE_PERMISSIONS = exports.EDIT_ROLE_PERMISSIONS = 'Edit Role Permissions';

var TYPE_DEVELOPMENT = exports.TYPE_DEVELOPMENT = 'development';
var TYPE_TESTING = exports.TYPE_TESTING = 'testing';
var TYPE_REVIEW = exports.TYPE_REVIEW = 'review';
var TYPE_MANAGEMENT = exports.TYPE_MANAGEMENT = 'management';
var TYPE_COMPANY = exports.TYPE_COMPANY = 'company';

/***/ }),

/***/ "5XdS":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Tab = __webpack_require__("NtnM");

var _Tab2 = _interopRequireDefault(_Tab);

var _reactLoaders = __webpack_require__("5sI1");

var _reactRouterDom = __webpack_require__("F8kA");

var _utils = __webpack_require__("DcaD");

var U = _interopRequireWildcard(_utils);

var _componentConsts = __webpack_require__("8Ojg");

var _clientconstants = __webpack_require__("5LBi");

var _containers = __webpack_require__("GF1l");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tabs = function (_Component) {
    _inherits(Tabs, _Component);

    function Tabs(props) {
        _classCallCheck(this, Tabs);

        var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));

        logger.debug(logger.TABS_LIFE_CYCLE, 'constructor()');
        _this.changeTab = _this.changeTab.bind(_this);
        _this.tabData = [];

        var permissions = _this.props.loggedInUser.permissions;

        if (permissions.includes(_clientconstants.EDIT_PROFILE)) {
            _this.tabData.push({
                name: _componentConsts.USER_PROFILE_TAB, url: "/profile",
                render: function render(props) {
                    return _react2.default.createElement(
                        _containers.TabSectionContainer,
                        null,
                        _react2.default.createElement(_containers.UserProfileFormContainer, { name: _componentConsts.USER_PROFILE_FORM })
                    );
                }
            });
        }

        if (permissions.includes(_clientconstants.MANAGE_PERMISSIONS)) {
            _this.tabData.push({
                name: _componentConsts.PERMISSION_TAB, url: "/permission",
                render: function render(props) {
                    return _react2.default.createElement(
                        _containers.TabSectionContainer,
                        null,
                        _react2.default.createElement(_containers.PermissionFormContainer, { name: _componentConsts.PERMISSION_FORM }),
                        _react2.default.createElement(_containers.PermissionListContainer, { name: _componentConsts.PERMISSION_LIST })
                    );
                }
            });
        }
        if (permissions.includes(_clientconstants.MANAGE_ROLES)) {
            _this.tabData.push({
                name: _componentConsts.ROLE_TAB, url: "/role",
                render: function render(props) {
                    return _react2.default.createElement(
                        _containers.TabSectionContainer,
                        null,
                        _react2.default.createElement(_containers.RoleFormContainer, { name: _componentConsts.ROLE_FORM }),
                        _react2.default.createElement(_containers.RoleListContainer, { name: _componentConsts.ROLE_LIST })
                    );
                }
            });
        }

        /*
        if (permissions.includes(LIST_USERS)) {
            this.tabData.push({
                name: ADMIN_USER_TAB, displayName: "Users", url: "/admin-user",
                render: (props) => {
                    return <TabSectionContainer>
                        <AdminUserFormContainer name={ADMIN_USER_FORM}/>
                        <AdminUserListContainer name={ADMIN_USER_LIST}/>
                    </TabSectionContainer>
                }
            })
        }
        */

        if (permissions.includes(_clientconstants.LIST_USERS)) {
            _this.tabData.push({
                name: _componentConsts.USER_TAB, url: "/users",
                render: function render(props) {
                    return _react2.default.createElement(
                        _containers.TabSectionContainer,
                        null,
                        _react2.default.createElement(_containers.UserFormContainer, { name: _componentConsts.USER_FORM }),
                        _react2.default.createElement(_containers.UserListContainer, { name: _componentConsts.USER_LIST })
                    );
                }
            });
        }

        if (permissions.includes(_clientconstants.EDIT_ROLE_PERMISSIONS)) {
            _this.tabData.push({
                name: _componentConsts.ADMIN_PERMISSION_TAB,
                url: "/admin-permission",
                displayName: "Permissions",
                render: function render(props) {
                    return _react2.default.createElement(
                        _containers.TabSectionContainer,
                        null,
                        _react2.default.createElement(_containers.AdminRoleFormContainer, { name: _componentConsts.ADMIN_ROLE_FORM }),
                        _react2.default.createElement(_containers.AdminRoleListContainer, { name: _componentConsts.ADMIN_ROLE_LIST })
                    );
                }
            });
        }
        if (permissions.includes(_clientconstants.CREATE_USER)) {
            _this.tabData.push({
                name: _componentConsts.EMPLOYEE_SETTING_TAB,
                url: "/employee-setting",
                render: function render(props) {
                    return _react2.default.createElement(
                        _containers.TabSectionContainer,
                        null,
                        _react2.default.createElement(_containers.EmployeeSettingFormContainer, { name: _componentConsts.EMPLOYEE_SETTING_FORM })
                    );
                }
            });
        }
        if (permissions.includes(_clientconstants.CREATE_USER)) {
            _this.tabData.push({
                name: _componentConsts.LEAVE_SETTING_TAB,
                url: "/leave-setting",
                render: function render(props) {
                    return _react2.default.createElement(
                        _containers.TabSectionContainer,
                        null,
                        _react2.default.createElement(_containers.LeaveSettingFormContainer, { name: _componentConsts.LEAVE_SETTING_FORM })
                    );
                }
            });
        }
        if (permissions.includes(_clientconstants.LIST_USERS)) {
            _this.tabData.push({
                name: _componentConsts.HOLIDAY_TAB,
                url: "/holiday",
                render: function render(props) {
                    return _react2.default.createElement(
                        _containers.TabSectionContainer,
                        null,
                        _react2.default.createElement(_containers.HolidayFormContainer, { name: _componentConsts.HOLIDAY_FORM }),
                        _react2.default.createElement(_containers.HolidayListContainer, { name: _componentConsts.HOLIDAY_LIST })
                    );
                }
            });
        }

        if (_this.tabData.length > 0) {
            _this.state = {
                activeTab: _this.tabData[0]
            };
        }
        return _this;
    }

    _createClass(Tabs, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            logger.debug(logger.TABS_LIFE_CYCLE, 'componentDidMount()');
            if (this.tabData && this.tabData.length > 0) {
                this.changeTab(null, this.tabData[0]);
            }
        }
    }, {
        key: 'changeTab',
        value: function changeTab(e, tab) {
            logger.debug(logger.TABS_CHANGE_TAB, 'Tab [' + tab.name + '] clicked...');
            var store = this.context.store;

            switch (tab.name) {
                case _componentConsts.USER_PROFILE_TAB:
                    store.dispatch(A.showUserInfo());
                    store.dispatch(A.showComponentHideOthers(_componentConsts.USER_PROFILE_FORM));
                    break;

                case _componentConsts.PERMISSION_TAB:
                    store.dispatch(A.getAllRolesFromServer());
                    store.dispatch(A.getAllPermissionsFromServer());
                    store.dispatch(A.showComponentHideOthers(_componentConsts.PERMISSION_LIST));
                    break;

                case _componentConsts.ROLE_TAB:
                    store.dispatch(A.getAllRolesFromServer());
                    store.dispatch(A.showComponentHideOthers(_componentConsts.ROLE_LIST));
                    break;

                case _componentConsts.USER_TAB:
                    store.dispatch(A.getAllRolesFromServer());
                    store.dispatch(A.getAllUsersFromServer());
                    store.dispatch(A.showComponentHideOthers(_componentConsts.USER_LIST));
                    break;

                case _componentConsts.ADMIN_PERMISSION_TAB:
                    store.dispatch(A.getAllRolesFromServer());
                    store.dispatch(A.showComponentHideOthers(_componentConsts.ADMIN_ROLE_LIST));
                    break;

                case _componentConsts.EMPLOYEE_SETTING_TAB:
                    store.dispatch(A.getEmployeeSettingFromServer());
                    store.dispatch(A.showComponentHideOthers(_componentConsts.EMPLOYEE_SETTING_FORM));
                    break;

                case _componentConsts.LEAVE_SETTING_TAB:
                    store.dispatch(A.getLeaveSettingFromServer());
                    store.dispatch(A.showComponentHideOthers(_componentConsts.LEAVE_SETTING_FORM));
                    break;

                case _componentConsts.HOLIDAY_TAB:
                    store.dispatch(A.getAllHolidayYearsFromServer());
                    var currentYear = U.getCurrentYear();
                    store.dispatch(A.getAllHolidaysOfYearFromServer(currentYear));
                    store.dispatch(A.showComponentHideOthers(_componentConsts.HOLIDAY_LIST));
                    break;
            }
            this.setState({
                activeTab: tab
            });
        }
    }, {
        key: 'render',
        value: function render() {
            logger.debug(logger.TABS_RENDER, this.props);
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(_reactLoaders.Loader, { type: 'square-spin', active: this.props.showLoader }),
                _react2.default.createElement(
                    'ul',
                    { className: 'nav nav-tabs' },
                    this.tabData && this.tabData.length && this.tabData.map(function (tab, idx) {
                        var _this2 = this;

                        return _react2.default.createElement(_Tab2.default, _extends({ key: idx, data: tab, match: this.props.match, isActive: this.state.activeTab === tab,
                            handleClick: function handleClick(e) {
                                return _this2.changeTab(e, tab);
                            } }, this.props));
                    }.bind(this))
                ),
                this.tabData.length > 0 && _react2.default.createElement(_reactRouterDom.Route, { key: "admin_idx_route", exact: true, path: this.props.match.url, render: this.tabData[0].render }),
                this.tabData && this.tabData.length && this.tabData.map(function (tab, idx) {
                    return _react2.default.createElement(_reactRouterDom.Route, { key: "route" + idx, path: this.props.match.url + tab.url, render: tab.render });
                }.bind(this))
            );
        }
    }]);

    return Tabs;
}(_react.Component);

Tabs.contextTypes = {
    store: _propTypes2.default.object
};

exports.default = Tabs;

/***/ }),

/***/ "5bqi":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ProjectFormDialog = function ProjectFormDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Add Project'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.ProjectFormContainer, null)
        )
    );
};

exports.default = ProjectFormDialog;

/***/ }),

/***/ "6+3V":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _reduxForm = __webpack_require__("ao4a");

var _componentConsts = __webpack_require__("8Ojg");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        getEmployeeSettings: function getEmployeeSettings() {
            return dispatch(A.getEmployeeSettingFromServer());
        },
        dispatch: dispatch,
        showTaskShiftDialog: function showTaskShiftDialog(day, month, year, employee) {

            dispatch((0, _reduxForm.initialize)('task-plan-shift', {
                day: day,
                month: month,
                year: year,
                employee: employee
            }));

            dispatch(A.showComponent(_componentConsts.TASK_SHIFT_DIALOG));
        }
    };
};

var mapStateToProps = function mapStateToProps(state) {
    return {
        schedules: state.release.schedules,
        workCalendar: state.employee.workCalendar,
        from: state.release.from,
        employeeSetting: state.release.employeeSetting
    };
};

var ReleaseDevelopersSchedulesContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ReleaseDevelopersSchedules);

exports.default = ReleaseDevelopersSchedulesContainer;

/***/ }),

/***/ "6+Wc":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__("F8kA");

var _recharts = __webpack_require__("zyQQ");

var _reactNotifications = __webpack_require__("B0Hd");

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var addPercentage = function addPercentage(value) {
    if (value == 0) return '';
    return value + '%';
};

var getHoursAngles = function getHoursAngles(estimatedHours, plannedHours, reportedHours) {
    var maxHours = Math.max(estimatedHours, plannedHours, reportedHours);
    var estimatedStartAngle = 180,
        plannedStartAngle = 180,
        reportedStartAngle = 180;
    var estimatedEndAngle = 0,
        plannedEndAngle = 0,
        reportedEndAngle = 0;

    if (maxHours == estimatedHours) {
        // estimated hours are maximum
        estimatedEndAngle = -180;
        plannedEndAngle = 180 - plannedHours / maxHours * 360;
        reportedEndAngle = 180 - reportedHours * 360 / maxHours;
    } else if (maxHours == plannedHours) {
        plannedEndAngle = -180;
        estimatedEndAngle = 180 - estimatedHours * 360 / maxHours;
        reportedEndAngle = 180 - reportedHours * 360 / maxHours;
    } else {
        reportedEndAngle = -180;
        estimatedEndAngle = 180 - estimatedHours * 360 / maxHours;
        plannedEndAngle = 180 - plannedHours * 360 / maxHours;
    }

    return {
        estimatedStartAngle: estimatedStartAngle,
        estimatedEndAngle: estimatedEndAngle,
        plannedStartAngle: plannedStartAngle,
        plannedEndAngle: plannedEndAngle,
        reportedStartAngle: reportedStartAngle,
        reportedEndAngle: reportedEndAngle
    };
};

var getProgressAngles = function getProgressAngles(actualProgress, plannedProgress, reportedProgress) {

    var maxProgress = Math.max(actualProgress, plannedProgress, reportedProgress);
    if (maxProgress < 100) maxProgress = 100;

    var actualProgressStartAngle = 180,
        plannedProgressStartAngle = 180,
        reportedProgressStartAngle = 180;
    var actualProgressEndAngle = 0,
        plannedProgressEndAngle = 0,
        reportedProgressEndAngle = 0;

    if (maxProgress == actualProgress) {
        // estimated hours are maximum
        actualProgressEndAngle = -180;
        plannedProgressEndAngle = 180 - plannedProgress / maxProgress * 360;
        reportedProgressEndAngle = 180 - plannedProgress * 360 / maxProgress;
    } else if (maxProgress == plannedProgress) {
        plannedProgressEndAngle = -180;
        actualProgressEndAngle = 180 - actualProgress * 360 / maxProgress;
        reportedProgressEndAngle = 180 - reportedProgress * 360 / maxProgress;
    } else if (maxProgress == reportedProgress) {
        reportedProgressEndAngle = -180;
        actualProgressEndAngle = 180 - actualProgress * 360 / maxProgress;
        plannedProgressEndAngle = 180 - plannedProgress * 360 / maxProgress;
    } else {
        actualProgressEndAngle = 180 - actualProgress * 360 / maxProgress;
        reportedProgressEndAngle = 180 - reportedProgress * 360 / maxProgress;
        plannedProgressEndAngle = 180 - plannedProgress * 360 / maxProgress;
    }

    return {
        actualProgressStartAngle: actualProgressStartAngle,
        actualProgressEndAngle: actualProgressEndAngle,
        plannedProgressStartAngle: plannedProgressStartAngle,
        plannedProgressEndAngle: plannedProgressEndAngle,
        reportedProgressStartAngle: reportedProgressStartAngle,
        reportedProgressEndAngle: reportedProgressEndAngle
    };
};

var renderPieCenter = function renderPieCenter(_ref) {
    var cx = _ref.cx,
        cy = _ref.cy,
        value = _ref.value;

    return _react2.default.createElement(
        'text',
        { x: cx, y: cy, fill: '#4172c1', fontSize: "20", fontWeight: "bold", textAnchor: 'middle',
            dominantBaseline: 'middle' },
        '' + value
    );
};

var renderPercentagePieCenter = function renderPercentagePieCenter(_ref2) {
    var cx = _ref2.cx,
        cy = _ref2.cy,
        value = _ref2.value;

    return _react2.default.createElement(
        'text',
        { x: cx, y: cy, fill: '#4172c1', fontSize: "20", fontWeight: "bold", textAnchor: 'middle',
            dominantBaseline: 'middle' },
        value + '%'
    );
};

var renderPercentage = function renderPercentage(_ref3) {
    var cx = _ref3.cx,
        cy = _ref3.cy,
        value = _ref3.value;

    return value + '%';
};

var DashboardSection = function (_Component) {
    _inherits(DashboardSection, _Component);

    function DashboardSection(props) {
        _classCallCheck(this, DashboardSection);

        var _this = _possibleConstructorReturn(this, (DashboardSection.__proto__ || Object.getPrototypeOf(DashboardSection)).call(this, props));

        _this.state = {
            monthMoment: (0, _moment2.default)()
        };
        return _this;
    }

    _createClass(DashboardSection, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            console.log("ReleaseDashboardSection:componentDidMount()");
            this.props.getDashboardData(this.props.release);
        }
    }, {
        key: 'onReleaseSelect',
        value: function onReleaseSelect(releaseID) {
            this.props.setReleaseID(releaseID);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var dashboardWidth = window.innerWidth * 0.8; // as content section has 80% width
            var barMargin = { top: 20, right: 40, left: 40, bottom: 20 };
            var barWidth = (dashboardWidth - 90) / 2;

            var _getHoursAngles = getHoursAngles(this.props.hoursData.estimatedHours, this.props.hoursData.plannedHours, this.props.hoursData.reportedHours),
                estimatedStartAngle = _getHoursAngles.estimatedStartAngle,
                estimatedEndAngle = _getHoursAngles.estimatedEndAngle,
                plannedStartAngle = _getHoursAngles.plannedStartAngle,
                plannedEndAngle = _getHoursAngles.plannedEndAngle,
                reportedStartAngle = _getHoursAngles.reportedStartAngle,
                reportedEndAngle = _getHoursAngles.reportedEndAngle;

            var _getProgressAngles = getProgressAngles(this.props.progress.actual, this.props.progress.planned, this.props.progress.reported),
                actualProgressStartAngle = _getProgressAngles.actualProgressStartAngle,
                actualProgressEndAngle = _getProgressAngles.actualProgressEndAngle,
                plannedProgressStartAngle = _getProgressAngles.plannedProgressStartAngle,
                plannedProgressEndAngle = _getProgressAngles.plannedProgressEndAngle,
                reportedProgressStartAngle = _getProgressAngles.reportedProgressStartAngle,
                reportedProgressEndAngle = _getProgressAngles.reportedProgressEndAngle;

            var baseHour = this.props.plannedVsReported.baseHour;
            var plannedColor = '#ffa75b',
                reportedColor = '#e52d8c',
                actualColor = '#4172c1',
                completedColor = '#6CE190',
                pendingColor = '#f5f968',
                unfinishedColor = '#E25858';

            var planningsWidth = dashboardWidth - 150;
            if (this.props.dailyPlannings && this.props.dailyPlannings.length) planningsWidth = 50 * this.props.dailyPlannings.length;

            if (this.props.resetDailyPlanningMonth) {
                this.state.monthMoment = (0, _moment2.default)();
            }

            var releaseStartMonth = (0, _moment2.default)(this.props.release.devStartDate);
            var releaseEndMonth = (0, _moment2.default)(this.props.release.devEndDate);

            var beforeOrSameAsStartMonth = false;
            var afterOrSameAsLastMonth = false;
            if (this.state.monthMoment.month() <= releaseStartMonth.month() && this.state.monthMoment.year() <= releaseStartMonth.year() || this.state.monthMoment.year() < releaseStartMonth.year()) beforeOrSameAsStartMonth = true;
            if (this.state.monthMoment.month() >= releaseEndMonth.month() && this.state.monthMoment.year() == releaseEndMonth.year() || this.state.monthMoment.year() > releaseEndMonth.year()) afterOrSameAsLastMonth = true;

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { className: "col-md-6", style: { marginRight: "0px" } },
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.BarChart,
                            { data: [this.props.overallProgress],
                                height: 80, width: barWidth, layout: "vertical", margin: barMargin },
                            _react2.default.createElement(_recharts.XAxis, { type: 'number', hide: true }),
                            _react2.default.createElement(_recharts.YAxis, { type: 'category', dataKey: "name", hide: true }),
                            _react2.default.createElement(_recharts.Tooltip, null),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'progress', stackId: 'a', fill: completedColor,
                                    name: "Overall Progress" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'progress', position: 'top', formatter: addPercentage })
                            ),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'remaining', stackId: 'a', fill: unfinishedColor, name: "Unfinished" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'remaining', position: 'top', formatter: addPercentage })
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.BarChart,
                            { data: [this.props.completedPendingProgress],
                                height: 80, width: barWidth, margin: barMargin,
                                layout: "vertical" },
                            _react2.default.createElement(_recharts.XAxis, { type: 'number', hide: true }),
                            _react2.default.createElement(_recharts.YAxis, { type: 'category', dataKey: "name", hide: true }),
                            _react2.default.createElement(_recharts.Tooltip, null),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'completed', stackId: 'a', fill: completedColor,
                                    name: "Progress (Completed Tasks)" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'completed', position: 'top', formatter: addPercentage })
                            ),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'pending', stackId: 'a', fill: pendingColor,
                                    name: "Progress (Pending Tasks)" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'pending', position: 'top', formatter: addPercentage })
                            ),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'remaining', stackId: 'a', fill: unfinishedColor, name: "Unfinished" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'remaining', position: 'top', formatter: addPercentage })
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.PieChart,
                            { width: barWidth, height: 240, margin: { top: 40, right: 0, left: 0, bottom: 20 } },
                            _react2.default.createElement(_recharts.Pie, { isAnimationActive: false,
                                dataKey: "value",
                                data: [{ name: 'Actual Progress', value: this.props.progress.actual }],
                                cx: barWidth / 2,
                                cy: 80, outerRadius: 60, innerRadius: 52, startAngle: actualProgressStartAngle,
                                endAngle: actualProgressEndAngle, fill: actualColor,
                                label: renderPercentagePieCenter,
                                labelLine: false }),
                            _react2.default.createElement(_recharts.Pie, { isAnimationActive: false,
                                dataKey: "value",
                                data: [{ name: 'Planned Progress', value: this.props.progress.planned }],
                                cx: barWidth / 2,
                                cy: 80, outerRadius: 70, innerRadius: 62, startAngle: plannedProgressStartAngle,
                                endAngle: plannedProgressEndAngle, fill: plannedColor,
                                label: renderPercentage }),
                            _react2.default.createElement(_recharts.Pie, { isAnimationActive: false,
                                dataKey: "value",
                                data: [{ name: 'Reported Progress', value: this.props.progress.reported }],
                                cx: barWidth / 2,
                                cy: 80, outerRadius: 80, innerRadius: 72, startAngle: reportedProgressStartAngle,
                                endAngle: reportedProgressEndAngle, fill: reportedColor,
                                label: renderPercentage }),
                            '/>',
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(_recharts.Tooltip, null)
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: "col-md-6" },
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.BarChart,
                            { data: [this.props.plannedVsUnplannedWork],
                                height: 80, width: barWidth, layout: "vertical", margin: barMargin },
                            _react2.default.createElement(_recharts.XAxis, { type: 'number', hide: true }),
                            _react2.default.createElement(_recharts.YAxis, { type: 'category', dataKey: "name", hide: true }),
                            _react2.default.createElement(_recharts.Tooltip, null),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'planned', stackId: 'a', fill: completedColor, name: "Planned Work" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'planned', position: 'top', formatter: addPercentage })
                            ),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'unplanned', stackId: 'a', fill: unfinishedColor,
                                    name: "Unplanned Work" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'unplanned', position: 'top', formatter: addPercentage })
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.BarChart,
                            { data: [this.props.plannedVsReported],
                                height: 80, width: barWidth, layout: "vertical", margin: barMargin },
                            _react2.default.createElement(_recharts.XAxis, { type: 'number', hide: true,
                                domain: [0, this.props.plannedVsReported.base + this.props.plannedVsReported.extra] }),
                            _react2.default.createElement(_recharts.YAxis, { type: 'category', dataKey: "name", hide: true }),
                            _react2.default.createElement(_recharts.Tooltip, null),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'base', stackId: 'a',
                                    fill: baseHour === 'planned' ? plannedColor : reportedColor,
                                    name: baseHour === 'planned' ? 'Planned Hours' : 'Reported Hours' },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'base', position: 'top' })
                            ),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'extra', stackId: 'a',
                                    fill: baseHour === 'planned' ? reportedColor : plannedColor,
                                    name: baseHour === 'planned' ? 'Extra Reported Hours' : 'Extra Planned Hours' },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'extra', position: 'top' })
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.PieChart,
                            { width: barWidth, height: 240, margin: { top: 40, right: 0, left: 0, bottom: 20 } },
                            _react2.default.createElement(_recharts.Pie, { isAnimationActive: false,
                                dataKey: "value",
                                data: [{ name: 'Estimated Hours', value: this.props.hoursData.estimatedHours }],
                                cx: barWidth / 2,
                                cy: 80, outerRadius: 60, innerRadius: 52, startAngle: estimatedStartAngle,
                                endAngle: estimatedEndAngle, fill: actualColor,
                                label: renderPieCenter,
                                labelLine: false }),
                            _react2.default.createElement(_recharts.Pie, { isAnimationActive: false,
                                dataKey: "value",
                                data: [{ name: 'Planned Hours', value: this.props.hoursData.plannedHours }],
                                cx: barWidth / 2,
                                cy: 80, outerRadius: 70, innerRadius: 62, startAngle: plannedStartAngle,
                                endAngle: plannedEndAngle, fill: plannedColor,
                                label: true }),
                            _react2.default.createElement(_recharts.Pie, { isAnimationActive: false,
                                dataKey: "value",
                                data: [{ name: 'Reported Hours', value: this.props.hoursData.reportedHours }],
                                cx: barWidth / 2,
                                cy: 80, outerRadius: 80, innerRadius: 72, startAngle: reportedStartAngle,
                                endAngle: reportedEndAngle, fill: reportedColor,
                                label: true }),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(_recharts.Tooltip, null)
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: "col-md-2" },
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.BarChart,
                            { data: [this.props.unplannedReport],
                                height: 120, width: (dashboardWidth - 120) / 6, layout: "vertical", margin: barMargin },
                            _react2.default.createElement(_recharts.XAxis, { type: 'number', hide: true }),
                            _react2.default.createElement(_recharts.YAxis, { type: 'category', dataKey: "name", hide: true }),
                            _react2.default.createElement(_recharts.Tooltip, null),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'reportedHours', fill: reportedColor,
                                    name: "Unplanned Reported Hours" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'reportedHours', position: 'top' })
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: "col-md-4" },
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.BarChart,
                            { data: [this.props.mgmtData],
                                height: 120, width: (dashboardWidth - 120) / 3, layout: "vertical",
                                margin: { top: 20, right: 40, left: 40, bottom: 20 } },
                            _react2.default.createElement(_recharts.XAxis, { type: 'number', hide: true }),
                            _react2.default.createElement(_recharts.YAxis, { type: 'category', dataKey: "name", hide: true }),
                            _react2.default.createElement(_recharts.Tooltip, null),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'plannedBefore', fill: "#ffcb9e",
                                    name: "Planned Before" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'plannedBefore', position: 'top' })
                            ),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'plannedAfter', fill: plannedColor,
                                    name: "Planned After" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'plannedAfter', position: 'top' })
                            ),
                            _react2.default.createElement(
                                _recharts.ReferenceLine,
                                { x: 0, stroke: 'black', isFront: true },
                                _react2.default.createElement(_recharts.Label, { value: '0 Hours', position: 'top' })
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: "col-md-4" },
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.BarChart,
                            { data: [this.props.mgmtData],
                                height: 120, width: (dashboardWidth - 120) / 3, layout: "vertical", margin: barMargin },
                            _react2.default.createElement(_recharts.XAxis, { type: 'number', hide: true }),
                            _react2.default.createElement(_recharts.YAxis, { type: 'category', dataKey: "name", hide: true }),
                            _react2.default.createElement(_recharts.Tooltip, null),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'plannedHoursOnLeave', stackId: 'a', fill: plannedColor, name: "PH (On Leave)" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'plannedHoursOnLeave', position: 'top' })
                            ),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'plannedHoursLastMinuteLeave', stackId: 'a', fill: unfinishedColor,
                                    name: "PH (Last Minute)" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'plannedHoursLastMinuteLeave', position: 'top' })
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: "col-md-2" },
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.BarChart,
                            { data: [this.props.mgmtData],
                                height: 120, width: (dashboardWidth - 120) / 6, layout: "vertical",
                                margin: { top: 20, right: 40, left: 40, bottom: 20 } },
                            _react2.default.createElement(_recharts.XAxis, { type: 'number', hide: true }),
                            _react2.default.createElement(_recharts.YAxis, { type: 'category', dataKey: "name", hide: true }),
                            _react2.default.createElement(_recharts.Tooltip, null),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'reportedAfter', fill: "#d671a5",
                                    name: "Reported After" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'reportedAfter', position: 'top' })
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: "col-md-12" },
                    !beforeOrSameAsStartMonth && _react2.default.createElement(
                        'button',
                        { className: "btn reportingArrow",
                            style: { position: 'absolute', top: 93, left: 20 },
                            onClick: function onClick() {
                                var newMonthMoment = _this2.state.monthMoment.subtract(1, 'month');
                                _this2.props.getReleaseDailyPlannings(_this2.props.release._id, newMonthMoment.month(), newMonthMoment.year());
                            },
                            type: 'button' },
                        _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection",
                            style: { paddingRight: "0px", paddingLeft: "50px" } },
                        _react2.default.createElement(
                            _recharts.BarChart,
                            { data: this.props.dailyPlannings,
                                height: 250, width: planningsWidth,
                                margin: { top: 40, right: 0, left: 0, bottom: 20 },
                                barGap: 2 },
                            _react2.default.createElement(_recharts.CartesianGrid, { strokeDasharray: '3 3' }),
                            _react2.default.createElement(_recharts.XAxis, { dataKey: "planningDateString", type: "category" }),
                            _react2.default.createElement(_recharts.YAxis, { type: 'number' }),
                            _react2.default.createElement(_recharts.Tooltip, null),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 12, dataKey: 'plannedHours',
                                    fill: plannedColor,
                                    name: 'Planned Hours' },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'plannedHours', position: 'top' })
                            ),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 12, dataKey: 'reportedHours',
                                    fill: reportedColor,
                                    name: 'Reported Hours' },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'reportedHours', position: 'top' })
                            )
                        )
                    ),
                    !afterOrSameAsLastMonth && _react2.default.createElement(
                        'button',
                        { className: "btn reportingArrow",
                            style: { position: 'absolute', top: 93, right: 20 },
                            onClick: function onClick() {
                                var newMonthMoment = _this2.state.monthMoment.add(1, 'month');
                                _this2.props.getReleaseDailyPlannings(_this2.props.release._id, newMonthMoment.month(), newMonthMoment.year());
                            },
                            type: 'button' },
                        _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-right' })
                    )
                )
            );
        }
    }]);

    return DashboardSection;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)(DashboardSection);

/***/ }),

/***/ "6JFi":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

var _validation = __webpack_require__("4KT+");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ReportTaskDescriptionForm = function ReportTaskDescriptionForm(props) {
    var handleSubmit = props.handleSubmit,
        pristine = props.pristine,
        reset = props.reset,
        submitting = props.submitting;

    logger.debug(logger.CLIENT_FORM_RENDER, props);
    return _react2.default.createElement(
        'form',
        { onSubmit: handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-6' },
                _react2.default.createElement(_reduxForm.Field, { name: 'taskName',
                    component: _fields.renderText,
                    label: "Task Name", readOnly: true })
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-6' },
                _react2.default.createElement(_reduxForm.Field, { name: 'status',
                    component: _fields.renderText,
                    label: "Status you are reporting:", readOnly: true })
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(_reduxForm.Field, { name: 'reportDescription',
                    placeholder: "Add details of work done on task '" + props.taskName + "' on date you are reporting for.",
                    component: _fields.renderTextArea,
                    label: "Add Details of Work Done", validate: [_validation.required], rows: 10 }),
                _react2.default.createElement(
                    'button',
                    { type: 'submit', disabled: submitting, className: 'btn customBtn' },
                    'Submit'
                )
            )
        )
    );
};

ReportTaskDescriptionForm = (0, _reduxForm.reduxForm)({
    form: 'report-task-description'
})(ReportTaskDescriptionForm);

exports.default = ReportTaskDescriptionForm;

/***/ }),

/***/ "6LXe":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ReleaseTaskPlanningFormDialog = function ReleaseTaskPlanningFormDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal releaseDialog', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Add Task Planning'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.ReleaseTaskPlanningFormContainer, null)
        )
    );
};

exports.default = ReleaseTaskPlanningFormDialog;

/***/ }),

/***/ "6V26":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AdminHome = function (_Component) {
    _inherits(AdminHome, _Component);

    function AdminHome() {
        _classCallCheck(this, AdminHome);

        return _possibleConstructorReturn(this, (AdminHome.__proto__ || Object.getPrototypeOf(AdminHome)).apply(this, arguments));
    }

    _createClass(AdminHome, [{
        key: 'render',
        value: function render() {
            return [_react2.default.createElement(_containers.LoginFormContainer, null)];
        }
    }]);

    return AdminHome;
}(_react.Component);

exports.default = AdminHome;

/***/ }),

/***/ "6XdO":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reduxForm = __webpack_require__("ao4a");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _fields = __webpack_require__("NACj");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _validation = __webpack_require__("4KT+");

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactWidgetsMoment = __webpack_require__("Utwc");

var _reactWidgetsMoment2 = _interopRequireDefault(_reactWidgetsMoment);

var _reactRedux = __webpack_require__("RH2O");

var _lodash = __webpack_require__("M4fF");

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_moment2.default.locale('en');
(0, _reactWidgetsMoment2.default)();

var EstimationAddToReleaseForm = function EstimationAddToReleaseForm(props) {
    var pristine = props.pristine,
        submitting = props.submitting,
        change = props.change,
        reset = props.reset;
    var devStartDate = props.devStartDate,
        devReleaseDate = props.devReleaseDate,
        clientReleaseDate = props.clientReleaseDate,
        allAvailableReleases = props.allAvailableReleases,
        release = props.release;

    var max = !_lodash2.default.isEmpty(devReleaseDate) ? (0, _moment2.default)(devReleaseDate).toDate() : !_lodash2.default.isEmpty(clientReleaseDate) ? (0, _moment2.default)(clientReleaseDate).toDate() : undefined;
    var maxRelease = !_lodash2.default.isEmpty(clientReleaseDate) ? (0, _moment2.default)(clientReleaseDate).toDate() : undefined;
    var now = new Date();
    return _react2.default.createElement(
        'form',
        { onSubmit: props.handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(_reduxForm.Field, { name: 'estimation._id', component: 'input', type: 'hidden' }),
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'billedHours', component: _fields.renderText, label: "Negotiated Billed Hours:",
                        validate: [_validation.required, _validation.number] })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'name', component: _fields.renderText, label: "Name (Iteration):",
                        validate: [_validation.required] })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'release._id', component: _fields.renderSelect, options: allAvailableReleases,
                        validate: [_validation.required],
                        label: "Release:" })
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'devStartDate', component: _fields.renderDateTimePickerString,
                        min: now,
                        max: max,
                        showTime: false,
                        label: "Expected Start Date For Developer:", validate: [_validation.required] })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'devReleaseDate', component: _fields.renderDateTimePickerString,
                        min: (0, _moment2.default)(devStartDate).toDate(),
                        max: maxRelease,
                        showTime: false,
                        label: "Expected Developer Release Date:", validate: [_validation.required] })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'clientReleaseDate', component: _fields.renderDateTimePickerString,
                        min: (0, _moment2.default)(devReleaseDate).toDate(),
                        showTime: false,
                        label: "Expected Client Release Date:",
                        validate: _validation.required })
                )
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'row initiatEstimation' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-6 text-center' },
                _react2.default.createElement(
                    'button',
                    { type: 'submit', disabled: pristine || submitting, className: 'btn customBtn' },
                    'Submit'
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-6 text-center' },
                _react2.default.createElement(
                    'button',
                    { type: 'button', disabled: pristine || submitting, onClick: reset, className: 'btn customBtn' },
                    'Reset'
                )
            )
        )
    );
};

EstimationAddToReleaseForm = (0, _reduxForm.reduxForm)({
    form: 'estimation-add-to-release'
})(EstimationAddToReleaseForm);

var selector = (0, _reduxForm.formValueSelector)('estimation-add-to-release');

EstimationAddToReleaseForm = (0, _reactRedux.connect)(function (state) {
    var _selector = selector(state, 'devStartDate', 'devReleaseDate', 'clientReleaseDate'),
        devStartDate = _selector.devStartDate,
        devReleaseDate = _selector.devReleaseDate,
        clientReleaseDate = _selector.clientReleaseDate;

    return {
        devStartDate: devStartDate,
        devReleaseDate: devReleaseDate,
        clientReleaseDate: clientReleaseDate
    };
})(EstimationAddToReleaseForm);

exports.default = EstimationAddToReleaseForm;

/***/ }),

/***/ "7+o0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        getEmployeePlanDetails: function getEmployeePlanDetails(employeeId, startDate, endDate, releaseID) {
            if (!employeeId) {
                return _reactNotifications.NotificationManager.error("Please select employee");
            } else {

                if (!startDate) startDate = SC.NONE;

                if (!endDate) endDate = SC.NONE;
                return dispatch(A.getEmployeePlanDetailsForRelease(employeeId, startDate, endDate, releaseID));
            }
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        team: state.release.teamOfRelease,
        selectedReleaseID: state.release.selectedRelease._id
    };
};

var ReleaseDeveloperFilterFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ReleaseDeveloperFilterForm);

exports.default = ReleaseDeveloperFilterFormContainer;

/***/ }),

/***/ "7NoE":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            if (values._id) {
                values.estimatedHours = Number(values.estimatedHours);
                logger.debug(logger.ESTIMATION_TASK_FORM_SUBMIT, "values:", values);
                dispatch(A.updateTaskToEstimationOnServer(values)).then(function (json) {
                    if (json.success) {
                        _reactNotifications.NotificationManager.success("Suggestions saved successfully");
                        // hide dialog
                        dispatch(A.hideComponent(COC.ESTIMATION_SUGGEST_TASK_FORM_DIALOG));
                    } else {
                        _reactNotifications.NotificationManager.error(json.message);
                    }
                });
            } else {
                values.estimatedHours = Number(values.estimatedHours);
                logger.debug(logger.ESTIMATION_TASK_FORM_SUBMIT, "values:", values);
                dispatch(A.addTaskToEstimationOnServer(values)).then(function (json) {
                    if (json.success) {
                        if (values.loggedInUserRole == SC.ROLE_NEGOTIATOR) _reactNotifications.NotificationManager.success("Task suggestions saved successfully");else if (values.loggedInUserRole == SC.ROLE_ESTIMATOR) _reactNotifications.NotificationManager.success("Task estimations saved successfully");
                        // hide dialog
                        dispatch(A.hideComponent(COC.ESTIMATION_SUGGEST_TASK_FORM_DIALOG));
                    } else {
                        _reactNotifications.NotificationManager.error(json.message);
                    }
                });
            }
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        estimation: state.estimation.selected
    };
};

var EstimationSuggestTaskFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.EstimationSuggestTaskForm);

exports.default = EstimationSuggestTaskFormContainer;

/***/ }),

/***/ "7cCe":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _ = __webpack_require__("ZhKb");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EstimationFeatures = function EstimationFeatures(props) {
    var childProps = Object.assign({}, props, {
        features: undefined
    });
    var _props$filter = props.filter,
        changedByNegotiator = _props$filter.changedByNegotiator,
        changedByEstimator = _props$filter.changedByEstimator,
        permissionRequested = _props$filter.permissionRequested,
        addedFromRepository = _props$filter.addedFromRepository,
        addedByNegotiator = _props$filter.addedByNegotiator,
        addedByEstimator = _props$filter.addedByEstimator,
        hasError = _props$filter.hasError;
    var expandedFeatureID = props.expandedFeatureID;


    return Array.isArray(props.features) && props.features.map(function (f, idx) {
        if (!f) {
            return _react2.default.createElement('span', null);
        }
        if (changedByNegotiator && changedByEstimator && permissionRequested && addedFromRepository && addedByNegotiator && addedByEstimator && hasError) {
            return expandedFeatureID === f._id ? _react2.default.createElement(_.EstimationFeature, _extends({ feature: f, index: idx, key: "feature" + idx }, childProps, {
                expanded: true })) : _react2.default.createElement(_.EstimationFeature, _extends({ feature: f, index: idx, key: "feature" + idx }, childProps));
        } else {
            if (changedByNegotiator && f.negotiator && (f.negotiator.changeSuggested || f.negotiator.changedInThisIteration) && !f.addedInThisIteration) {
                return expandedFeatureID === f._id ? _react2.default.createElement(_.EstimationFeature, _extends({ feature: f, index: idx, key: "feature" + idx }, childProps, {
                    expanded: true })) : _react2.default.createElement(_.EstimationFeature, _extends({ feature: f, index: idx, key: "feature" + idx }, childProps));
            } else if (changedByEstimator && f.estimator && (f.estimator.changedKeyInformation || f.estimator.changedInThisIteration)) {
                return expandedFeatureID === f._id ? _react2.default.createElement(_.EstimationFeature, _extends({ feature: f, index: idx, key: "feature" + idx }, childProps, {
                    expanded: true })) : _react2.default.createElement(_.EstimationFeature, _extends({ feature: f, index: idx, key: "feature" + idx }, childProps));
            } else if (permissionRequested && f.estimator && (f.estimator.removalRequested || f.estimator.changeRequested || f.tasks && Array.isArray(f.tasks) && f.tasks.length && f.tasks.findIndex(function (t) {
                return t.estimator && t.estimator.removalRequested || t.estimator && t.estimator.changeRequested;
            }) != -1)) {
                return expandedFeatureID === f._id ? _react2.default.createElement(_.EstimationFeature, _extends({ feature: f, index: idx, key: "feature" + idx }, childProps, {
                    expanded: true })) : _react2.default.createElement(_.EstimationFeature, _extends({ feature: f, index: idx, key: "feature" + idx }, childProps));
            } else if (addedFromRepository && (f.repo && !f.repo.addedFromThisEstimation || f.tasks && Array.isArray(f.tasks) && f.tasks.length && f.tasks.findIndex(function (t) {
                return t.repo && !t.repo.addedFromThisEstimation;
            }) != -1)) {
                return expandedFeatureID === f._id ? _react2.default.createElement(_.EstimationFeature, _extends({ feature: f, index: idx, key: "feature" + idx }, childProps, {
                    expanded: true })) : _react2.default.createElement(_.EstimationFeature, _extends({ feature: f, index: idx, key: "feature" + idx }, childProps));
            } else if (addedByNegotiator && (f.addedInThisIteration && f.owner == SC.OWNER_NEGOTIATOR || f.tasks && Array.isArray(f.tasks) && f.tasks.length && f.tasks.findIndex(function (t) {
                return t.addedInThisIteration && t.owner == SC.OWNER_NEGOTIATOR;
            }) != -1)) {
                return expandedFeatureID === f._id ? _react2.default.createElement(_.EstimationFeature, _extends({ feature: f, index: idx, key: "feature" + idx }, childProps, {
                    expanded: true })) : _react2.default.createElement(_.EstimationFeature, _extends({ feature: f, index: idx, key: "feature" + idx }, childProps));
            } else if (addedByEstimator && (f.addedInThisIteration && f.owner == SC.OWNER_ESTIMATOR || f.tasks && Array.isArray(f.tasks) && f.tasks.length && f.tasks.findIndex(function (t) {
                return t.addedInThisIteration && t.owner == SC.OWNER_ESTIMATOR;
            }) != -1)) {
                return expandedFeatureID === f._id ? _react2.default.createElement(_.EstimationFeature, _extends({ feature: f, index: idx, key: "feature" + idx }, childProps, {
                    expanded: true })) : _react2.default.createElement(_.EstimationFeature, _extends({ feature: f, index: idx, key: "feature" + idx }, childProps));
            } else if (hasError && f.hasError) {
                return expandedFeatureID === f._id ? _react2.default.createElement(_.EstimationFeature, _extends({ feature: f, index: idx, key: "feature" + idx }, childProps, {
                    expanded: true })) : _react2.default.createElement(_.EstimationFeature, _extends({ feature: f, index: idx, key: "feature" + idx }, childProps));
            }
        }
    });
};

exports.default = EstimationFeatures;


{/*
    
           if (!f) {
               return <span></span>
           }
           if (estimator && changeRequested && repository && grantPermission && suggestions && negotiator) {
    
           }
           else {
               if (estimator || changeRequested || repository || grantPermission || suggestions || negotiator) {
    
                   if (loggedInUserRole == SC.ROLE_ESTIMATOR) {
    
    
                       //when feature owner is estimator
                       if (estimator) {
                           if (f.owner === SC.OWNER_ESTIMATOR)
                               return (expandedFeatureID === f._id) ?
                                   <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}
                                                      expanded="true"/> :
                                   <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}/>
    
                       }
    
                       //when negotiator grant the permission required
                       if (grantPermission) {
                           if (f.negotiator.changedInThisIteration && f.negotiator.changeGranted) {
                               return (expandedFeatureID === f._id) ?
                                   <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}
                                                      expanded="true"/> :
                                   <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}/>
                           }
                       }
                       if (suggestions) {
                           if (f.negotiator.changedInThisIteration && f.negotiator.changeSuggested) {
                               return (expandedFeatureID === f._id) ?
                                   <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}
                                                      expanded="true"/> :
                                   <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}/>
                           }
                       }
    
                       //feature added from repository
                       if (repository) {
                           if (f.repo)
                               if (!f.repo.addedFromThisEstimation) {
                                   return (expandedFeatureID === f._id) ?
                                       <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}
                                                          expanded="true"/> :
                                       <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}/>
                               }
                       }
                   }
                   else {
                       if (loggedInUserRole == SC.ROLE_NEGOTIATOR) {
    
                           //feature owner is negotiator
                           if (negotiator) {
                               if (f.owner === SC.OWNER_NEGOTIATOR)
                                   return (expandedFeatureID === f._id) ?
                                       <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}
                                                          expanded="true"/> :
                                       <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}/>
    
                           }
    
                           //when estimator asked for change request on feature
                           if (changeRequested) {
                               if (f.estimator.changedInThisIteration) {
                                   if (f.estimator.changeRequested || f.estimator.removalRequested) {
                                       return (expandedFeatureID === f._id) ?
                                           <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}
                                                              expanded="true"/> :
                                           <EstimationFeature feature={f} index={idx}
                                                              key={"feature" + idx} {...childProps}/>
                                   }
                               }
    
                           }
    
                           if (repository) {
                               if (f.repo)
                                   if (!f.repo.addedFromThisEstimation) {
                                       return (expandedFeatureID === f._id) ?
                                           <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}
                                                              expanded="true"/> :
                                           <EstimationFeature feature={f} index={idx}
                                                              key={"feature" + idx} {...childProps}/>
                                   }
                           }
                           if (suggestions) {
                               if (f.estimator.changedInThisIteration && f.estimator.changedKeyInformation) {
                                   return (expandedFeatureID === f._id) ?
                                       <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}
                                                          expanded="true"/> :
                                       <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}/>
                               }
                           }
                       }
                       else {
                           return (expandedFeatureID === f._id) ?
                               <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}
                                                  expanded="true"/> :
                               <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}/>
                       }
                   }
    
               }
               else {
                   // by default show all
                   return (expandedFeatureID === f._id) ?
                       <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps} expanded="true"/> :
                       <EstimationFeature feature={f} index={idx} key={"feature" + idx} {...childProps}/>
               }
           }
    
    
      */

}

/***/ }),

/***/ "7cEl":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _reactRedux = __webpack_require__("RH2O");

var _fields = __webpack_require__("NACj");

var _validation = __webpack_require__("4KT+");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var passwordMatch = function passwordMatch(value, values) {
    return value != values.password ? 'both password field should be same ' : undefined;
};

var UserProfileForm = function (_Component) {
    _inherits(UserProfileForm, _Component);

    function UserProfileForm(props) {
        _classCallCheck(this, UserProfileForm);

        return _possibleConstructorReturn(this, (UserProfileForm.__proto__ || Object.getPrototypeOf(UserProfileForm)).call(this, props));
    }

    _createClass(UserProfileForm, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                handleSubmit = _props.handleSubmit,
                pristine = _props.pristine,
                reset = _props.reset,
                submitting = _props.submitting;


            return _react2.default.createElement(
                'div',
                { className: 'col-md-8' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-12' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12 pad' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-12' },
                            _react2.default.createElement(
                                'form',
                                { key: 'userProfileForm', onSubmit: handleSubmit },
                                _react2.default.createElement(
                                    'div',
                                    { className: 'row' },
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'col-md-6' },
                                        _react2.default.createElement(_reduxForm.Field, { name: 'firstName', placeholder: "First Name", component: _fields.renderText,
                                            label: "First Name:", validate: [_validation.required] })
                                    ),
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'col-md-6' },
                                        _react2.default.createElement(_reduxForm.Field, { name: 'lastName', label: "Last Name :", placeholder: "Last Name",
                                            component: _fields.renderText, validate: [_validation.required] })
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'row' },
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'col-md-6' },
                                        _react2.default.createElement(_reduxForm.Field, { name: 'phone', label: "Phone No.:", placeholder: "phone Name",
                                            component: _fields.renderText, validate: [_validation.required, _validation.number] })
                                    ),
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'col-md-6' },
                                        _react2.default.createElement(_reduxForm.Field, { name: 'email', label: "Email :", placeholder: "Email",
                                            validate: [_validation.required, _validation.email],
                                            component: _fields.renderText, type: 'email' })
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'row' },
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'col-md-6' },
                                        _react2.default.createElement(_reduxForm.Field, { name: 'address', label: "Address :", placeholder: "address",
                                            component: _fields.renderTextArea, validate: [_validation.required] })
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'row' },
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'col-md-6' },
                                        _react2.default.createElement(_reduxForm.Field, { name: 'password', label: "New Password :", placeholder: "new Password",
                                            validate: [_validation.passwordLength],
                                            component: _fields.renderText, type: 'password' })
                                    ),
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'col-md-6' },
                                        _react2.default.createElement(_reduxForm.Field, { name: 'confirmPassword', label: 'Confirm Password :',
                                            placeholder: "confirm Password",
                                            validate: [_validation.passwordLength, passwordMatch], component: _fields.renderField,
                                            type: 'password' })
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'row' },
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'col-md-6' },
                                        _react2.default.createElement(_reduxForm.Field, { name: 'dob', placeholder: "date of birth :",
                                            component: _fields.renderDateTimePickerString,
                                            showTime: false,
                                            label: "DOB :", validate: [_validation.required] })
                                    ),
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'col-md-6' },
                                        _react2.default.createElement(_reduxForm.Field, { name: 'designation', label: "designation :",
                                            placeholder: "Employee-designation",
                                            component: _fields.renderText, readOnly: true })
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'row' },
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'col-md-6' },
                                        _react2.default.createElement(_reduxForm.Field, { name: 'employeeCode', label: "code :", placeholder: "Employee-Code",
                                            component: _fields.renderText, readOnly: true })
                                    ),
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'col-md-6' },
                                        _react2.default.createElement(_reduxForm.Field, { name: 'dateJoined', label: "Date of joining :",
                                            placeholder: "Employee-date of joining",
                                            component: _fields.renderText, readOnly: true })
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'row updateUserProfile' },
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'col-md-6 text-right' },
                                        _react2.default.createElement(
                                            'button',
                                            { type: 'submit', disabled: pristine || submitting, className: 'btn customBtn' },
                                            'Update'
                                        )
                                    ),
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'col-md-6 text-left' },
                                        _react2.default.createElement(
                                            'button',
                                            { type: 'button', disabled: pristine || submitting, className: 'btn customBtn',
                                                onClick: reset },
                                            'Reset'
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return UserProfileForm;
}(_react.Component);

UserProfileForm = (0, _reduxForm.reduxForm)({
    form: 'user-profile'
})(UserProfileForm);

var selector = (0, _reduxForm.formValueSelector)('user-profile');

UserProfileForm = (0, _reactRedux.connect)(function (state) {
    var changeCredentials = selector(state, 'changeCredentials');
    return { changeCredentials: changeCredentials };
})(UserProfileForm);
exports.default = UserProfileForm;

/***/ }),

/***/ "7ghI":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RepositoryFeatureDetailDialog = function RepositoryFeatureDetailDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Feature Detail Page'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.RepositoryFeatureDetailPageContainer, null)
        )
    );
};

exports.default = RepositoryFeatureDetailDialog;

/***/ }),

/***/ "7jmT":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactRouterDom = __webpack_require__("F8kA");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _lodash = __webpack_require__("M4fF");

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EstimationList = function (_Component) {
    _inherits(EstimationList, _Component);

    function EstimationList(props) {
        _classCallCheck(this, EstimationList);

        var _this = _possibleConstructorReturn(this, (EstimationList.__proto__ || Object.getPrototypeOf(EstimationList)).call(this, props));

        _this.options = {
            onRowClick: _this.onRowClick.bind(_this)
        };
        _this.state = {
            status: SC.ALL,
            projectID: SC.ALL
        };
        _this.filterEstimationByProject = _this.filterEstimationByProject.bind(_this);
        return _this;
    }

    _createClass(EstimationList, [{
        key: 'onRowClick',
        value: function onRowClick(row) {
            this.props.history.push("/app-home/estimation-detail");
            this.props.estimationSelected(row);
        }
    }, {
        key: 'filterEstimationStatus',
        value: function filterEstimationStatus(status) {
            this.setState({ status: status });
            this.props.getAllEstimations(this.state.projectID, status);
        }
    }, {
        key: 'filterEstimationByProject',
        value: function filterEstimationByProject(projectID) {

            this.setState({ projectID: projectID });
            this.props.getAllEstimations(projectID, this.state.status);
        }
    }, {
        key: 'formatProject',
        value: function formatProject(project) {
            if (project) return project.name;
            return '';
        }
    }, {
        key: 'columnClassStatusFormat',
        value: function columnClassStatusFormat(status) {
            if (status == SC.STATUS_ESTIMATION_REQUESTED) return 'erRowColor';
            if (status == SC.STATUS_INITIATED) return 'inRowColor';
            if (status == SC.STATUS_PENDING) return 'penRowColor';
            if (status == SC.STATUS_APPROVED) return 'appRowColor';
            if (status == SC.STATUS_REVIEW_REQUESTED) return 'rrRowColor';
            if (status == SC.STATUS_CHANGE_REQUESTED) return 'crRowColor';
            if (status == SC.STATUS_REOPENED) return 'roRowColor';
            if (status == SC.STATUS_PROJECT_AWARDED) return 'paRowColor';
            if (status == SC.STATUS_REJECTED) return 'rejRowColor';
            return '';
        }
    }, {
        key: 'formatStatus',
        value: function formatStatus(status) {
            return '';
        }
    }, {
        key: 'columnClassUserFormat',
        value: function columnClassUserFormat(user) {
            return 'estimationListUser';
        }
    }, {
        key: 'formatClient',
        value: function formatClient(client) {
            if (client) return client.name;
            return '';
        }
    }, {
        key: 'formatTechnologies',
        value: function formatTechnologies(technologies) {
            if (Array.isArray(technologies)) return _lodash2.default.join(technologies.map(function (t) {
                return t.name;
            }));
            return '';
        }
    }, {
        key: 'formatProjectDescription',
        value: function formatProjectDescription(description) {
            if (description) return description;
            return '';
        }
    }, {
        key: 'formatEstimator',
        value: function formatEstimator(estimator) {
            if (estimator) return estimator.firstName;
            return '';
        }
    }, {
        key: 'formatNegotiator',
        value: function formatNegotiator(negotiator) {
            if (negotiator) return negotiator.firstName;
            return '';
        }
    }, {
        key: 'viewButton',
        value: function viewButton(cell, row, enumObject, rowIndex) {
            return _react2.default.createElement('button', { className: 'glyphicon glyphicon-th-list pull-left btn btn-custom', type: 'button' });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                projects = _props.projects,
                estimations = _props.estimations,
                loggedInUser = _props.loggedInUser;

            return _react2.default.createElement(
                'div',
                { key: 'estimation_list', className: 'clearfix' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-12' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-8 estimationSearchSection' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-4' },
                            _react2.default.createElement(
                                'select',
                                {
                                    className: 'form-control estimationSearchProject ', onChange: function onChange(projectID) {
                                        return _this2.filterEstimationByProject(projectID.target.value);
                                    } },
                                _react2.default.createElement(
                                    'option',
                                    { value: SC.ALL },
                                    'All Projects'
                                ),
                                projects && projects.map(function (option) {

                                    return _react2.default.createElement(
                                        'option',
                                        { value: _lodash2.default.get(option, "_id"),
                                            key: option["_id"] },
                                        _lodash2.default.get(option, 'name')
                                    );
                                })
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-4' },
                            _react2.default.createElement(
                                'select',
                                { className: 'form-control estimationSearchStatus', onChange: function onChange(status) {
                                        return _this2.filterEstimationStatus(status.target.value);
                                    } },
                                _react2.default.createElement(
                                    'option',
                                    { value: SC.ALL },
                                    'All Status'
                                ),
                                _react2.default.createElement(
                                    'option',
                                    { value: SC.STATUS_ESTIMATION_REQUESTED },
                                    SC.STATUS_ESTIMATION_REQUESTED
                                ),
                                _react2.default.createElement(
                                    'option',
                                    { value: SC.STATUS_INITIATED },
                                    SC.STATUS_INITIATED
                                ),
                                _react2.default.createElement(
                                    'option',
                                    { value: SC.STATUS_PENDING },
                                    SC.STATUS_PENDING
                                ),
                                _react2.default.createElement(
                                    'option',
                                    { value: SC.STATUS_APPROVED },
                                    SC.STATUS_APPROVED
                                ),
                                _react2.default.createElement(
                                    'option',
                                    { value: SC.STATUS_REVIEW_REQUESTED },
                                    SC.STATUS_REVIEW_REQUESTED
                                ),
                                _react2.default.createElement(
                                    'option',
                                    { value: SC.STATUS_CHANGE_REQUESTED },
                                    SC.STATUS_CHANGE_REQUESTED
                                ),
                                _react2.default.createElement(
                                    'option',
                                    { value: SC.STATUS_REOPENED },
                                    SC.STATUS_REOPENED
                                ),
                                _react2.default.createElement(
                                    'option',
                                    { value: SC.STATUS_PROJECT_AWARDED },
                                    SC.STATUS_PROJECT_AWARDED
                                ),
                                _react2.default.createElement(
                                    'option',
                                    { value: SC.STATUS_REJECTED },
                                    SC.STATUS_REJECTED
                                )
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-4' },
                            _react2.default.createElement(
                                'div',
                                { className: 'estimation ' },
                                this.props.loggedInUser.roleNames.includes(SC.ROLE_NEGOTIATOR) && _react2.default.createElement(
                                    'button',
                                    { className: 'btn customBtn estimationSearchInitiateBtn',
                                        onClick: function onClick() {
                                            return _this2.props.showEstimationInitiateForm();
                                        } },
                                    'Initiate Estimation'
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'estimation' },
                        _react2.default.createElement(
                            _reactBootstrapTable.BootstrapTable,
                            { options: this.options, data: this.props.estimations,
                                multiColumnSearch: true,
                                search: true,
                                striped: true,
                                hover: true },
                            _react2.default.createElement(_reactBootstrapTable.TableHeaderColumn, { columnTitle: true, width: '10px', dataField: 'status',
                                dataFormat: this.formatStatus,
                                columnClassName: this.columnClassStatusFormat }),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { columnTitle: true, isKey: true, dataField: '_id', searchable: false,
                                    hidden: true },
                                'ID'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { columnTitle: true, dataField: 'project',
                                    dataFormat: this.formatProject.bind(this) },
                                'Project Name'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { columnTitle: true, dataField: 'client',
                                    dataFormat: this.formatClient.bind(this) },
                                'Client'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { columnTitle: true, dataField: 'technologies',
                                    dataFormat: this.formatTechnologies.bind(this) },
                                'Technologies'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { columnTitle: true, dataField: 'estimatedHours' },
                                'Total Hours'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { columnTitle: true, dataField: 'description',
                                    dataFormat: this.formatProjectDescription.bind(this) },
                                'Project Description'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { columnTitle: true, dataField: 'estimator',
                                    columnClassName: this.columnClassUserFormat,
                                    dataFormat: this.formatEstimator.bind(this) },
                                'Estimator'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { columnTitle: true, dataField: 'negotiator',
                                    columnClassName: this.columnClassUserFormat,
                                    dataFormat: this.formatNegotiator.bind(this) },
                                'Negotiator'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { columnTitle: true, dataField: 'status' },
                                'Status'
                            )
                        )
                    )
                )
            );
        }
    }]);

    return EstimationList;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)(EstimationList);

/***/ }),

/***/ "7sPg":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _ = __webpack_require__("zyxl");

var _SidebarSectionContainer = __webpack_require__("Tn4U");

var _SidebarSectionContainer2 = _interopRequireDefault(_SidebarSectionContainer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Sidebar = function Sidebar(props) {
    return _react2.default.createElement(
        'div',
        { className: 'sidebar-wrapper' },
        _react2.default.createElement(
            'div',
            { className: 'web_logo' },
            _react2.default.createElement('img', { src: '/images/logo.png' })
        ),
        _react2.default.createElement(
            'div',
            { className: 'user_name' },
            _react2.default.createElement('img', { src: '/images/user.png', height: '30', width: '30' }),
            ' ',
            props.loggedInUser.fullName
        ),
        _react2.default.createElement(_.SidebarSideSection, null),
        _react2.default.createElement(_SidebarSectionContainer2.default, null)
    );
};

exports.default = Sidebar;

/***/ }),

/***/ "81ym":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _userAction = __webpack_require__("2T45");

Object.keys(_userAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _userAction[key];
    }
  });
});

var _permissionAction = __webpack_require__("SVfc");

Object.keys(_permissionAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _permissionAction[key];
    }
  });
});

var _appAction = __webpack_require__("rp4x");

Object.keys(_appAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _appAction[key];
    }
  });
});

var _roleAction = __webpack_require__("Yb2E");

Object.keys(_roleAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _roleAction[key];
    }
  });
});

var _clientAction = __webpack_require__("z7du");

Object.keys(_clientAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _clientAction[key];
    }
  });
});

var _estimationAction = __webpack_require__("2Y/+");

Object.keys(_estimationAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _estimationAction[key];
    }
  });
});

var _projectAction = __webpack_require__("E0gF");

Object.keys(_projectAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _projectAction[key];
    }
  });
});

var _technologyAction = __webpack_require__("U3TS");

Object.keys(_technologyAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _technologyAction[key];
    }
  });
});

var _leaveAction = __webpack_require__("POAP");

Object.keys(_leaveAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _leaveAction[key];
    }
  });
});

var _repositoryAction = __webpack_require__("VvrU");

Object.keys(_repositoryAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _repositoryAction[key];
    }
  });
});

var _AttendanceSettingAction = __webpack_require__("tsbO");

Object.keys(_AttendanceSettingAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _AttendanceSettingAction[key];
    }
  });
});

var _releaseAction = __webpack_require__("2E7p");

Object.keys(_releaseAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _releaseAction[key];
    }
  });
});

var _calendarAction = __webpack_require__("HndC");

Object.keys(_calendarAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _calendarAction[key];
    }
  });
});

var _reportingAction = __webpack_require__("Gcv5");

Object.keys(_reportingAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _reportingAction[key];
    }
  });
});

var _employeeAction = __webpack_require__("ybGK");

Object.keys(_employeeAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _employeeAction[key];
    }
  });
});

var _warningAction = __webpack_require__("a6mO");

Object.keys(_warningAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _warningAction[key];
    }
  });
});

var _holidayAction = __webpack_require__("dJqb");

Object.keys(_holidayAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _holidayAction[key];
    }
  });
});

var _dashboardAction = __webpack_require__("NfZE");

Object.keys(_dashboardAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _dashboardAction[key];
    }
  });
});

var _developmentTypeAction = __webpack_require__("tBtA");

Object.keys(_developmentTypeAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _developmentTypeAction[key];
    }
  });
});

var _moduleAction = __webpack_require__("m7GT");

Object.keys(_moduleAction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _moduleAction[key];
    }
  });
});

/***/ }),

/***/ "8Fbf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(formInput) {
            formInput.billedHours = parseInt(formInput.billedHours);
            logger.debug(logger.ESTIMATION_PROJECT_AWARD_FORM_SUBMIT, "formInput:", formInput);
            return dispatch(A.addCreateReleaseOnServer(formInput)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Project Awarded");
                    // hide dialog
                    dispatch(A.hideComponent(COC.ESTIMATION_PROJECT_AWARD_FORM_DIALOG));
                } else {
                    _reactNotifications.NotificationManager.error("Project Awardation Failed");
                }
            });
        }
    };
};
var mapStateToProps = function mapStateToProps(state) {

    var managers = [];
    var leaders = [];
    var team = [];

    if (state.user.userWithRoleCategory) {
        // Users who has role as a manager or leader or both
        managers = state.user.userWithRoleCategory && state.user.userWithRoleCategory.managers ? state.user.userWithRoleCategory.managers : [];
        leaders = state.user.userWithRoleCategory && state.user.userWithRoleCategory.leaders ? state.user.userWithRoleCategory.leaders : [];
        team = state.user.userWithRoleCategory && state.user.userWithRoleCategory.team ? state.user.userWithRoleCategory.team.map(function (dev, idx) {
            dev.name = dev.firstName + ' ' + dev.lastName;
            return dev;
        }) : [];
    }

    return {
        team: team,
        managers: managers,
        leaders: leaders
    };
};

var EstimationProjectAwardFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.EstimationProjectAwardForm);

exports.default = EstimationProjectAwardFormContainer;

/***/ }),

/***/ "8GKS":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            return dispatch((0, _actions.loginUserOnServer)(values));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        errorMsg: state.user.loginError
    };
};

var LoginFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.LoginForm);

exports.default = LoginFormContainer;

/***/ }),

/***/ "8Ojg":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
// tabs
var PERMISSION_TAB = exports.PERMISSION_TAB = "Permission";
var ROLE_TAB = exports.ROLE_TAB = "Role";
var USER_TAB = exports.USER_TAB = "User";
var ADMIN_USER_TAB = exports.ADMIN_USER_TAB = "Manage User";
var USER_PROFILE_TAB = exports.USER_PROFILE_TAB = "Profile";
var ADMIN_PERMISSION_TAB = exports.ADMIN_PERMISSION_TAB = "Manage Permission";
var EMPLOYEE_SETTING_TAB = exports.EMPLOYEE_SETTING_TAB = "Employee Setting";
var LEAVE_SETTING_TAB = exports.LEAVE_SETTING_TAB = "Leave Setting";
var HOLIDAY_TAB = exports.HOLIDAY_TAB = "Holiday ";

// forms
var PERMISSION_FORM = exports.PERMISSION_FORM = "PERMISSION_FORM";
var ROLE_FORM = exports.ROLE_FORM = "ROLE_FORM";
var USER_FORM = exports.USER_FORM = "USER_FORM";
var ADMIN_USER_FORM = exports.ADMIN_USER_FORM = "ADMIN_USER_FORM";
var USER_PROFILE_FORM = exports.USER_PROFILE_FORM = "USER_PROFILE_FORM";
var ADMIN_ROLE_FORM = exports.ADMIN_ROLE_FORM = "ADMIN_ROLE_FORM";
var CLIENT_FORM = exports.CLIENT_FORM = "CLIENT_FORM";
var PROJECT_FORM = exports.PROJECT_FORM = "PROJECT_FORM";
var TECHNOLOGY_FORM = exports.TECHNOLOGY_FORM = "TECHNOLOGY_FORM";
var LEAVE_REQUEST_FORM = exports.LEAVE_REQUEST_FORM = "LEAVE_REQUEST_FORM";
var ATTENDANCE_SETTING_FORM = exports.ATTENDANCE_SETTING_FORM = "ATTENDANCE_SETTING_FORM";
var MERGE_TASK_PLANNING_FORM = exports.MERGE_TASK_PLANNING_FORM = "MERGE_TASK_PLANNING_FORM";
var EMPLOYEE_SETTING_FORM = exports.EMPLOYEE_SETTING_FORM = "EMPLOYEE_SETTING_FORM";
var LEAVE_SETTING_FORM = exports.LEAVE_SETTING_FORM = "LEAVE_SETTING_FORM";
var HOLIDAY_FORM = exports.HOLIDAY_FORM = "HOLIDAY_FORM";

// lists
var PERMISSION_LIST = exports.PERMISSION_LIST = "PERMISSION_LIST";
var ROLE_LIST = exports.ROLE_LIST = "ROLE_LIST";
var USER_LIST = exports.USER_LIST = "USER_LIST";
var ADMIN_USER_LIST = exports.ADMIN_USER_LIST = "ADMIN_USER_LIST";
var ADMIN_ROLE_LIST = exports.ADMIN_ROLE_LIST = "ADMIN_ROLE_LIST";
var ESTIMATION_LIST = exports.ESTIMATION_LIST = "ESTIMATION_LIST";
var PROJECT_LIST = exports.PROJECT_LIST = "PROJECT_LIST";
var MODULE_LIST = exports.MODULE_LIST = "MODULE_LIST";
var TECHNOLOGIES_LIST = exports.TECHNOLOGIES_LIST = "TECHNOLOGIES_LIST";
var CLIENT_LIST = exports.CLIENT_LIST = "CLIENT_LIST";
var LEAVE_LIST = exports.LEAVE_LIST = "LEAVE_LIST";
var RELEASE_LIST = exports.RELEASE_LIST = "RELEASE_LIST";
var RELEASE_PLAN_LIST = exports.RELEASE_PLAN_LIST = "RELEASE_PLAN_LIST";
var RELEASE_TASK_PLANNING_PAGE = exports.RELEASE_TASK_PLANNING_PAGE = "RELEASE_TASK_DETAIL_PAGE";
var HOLIDAY_LIST = exports.HOLIDAY_LIST = "HOLIDAY_LIST";

// dialogs
var ESTIMATION_INITIATE_DIALOG = exports.ESTIMATION_INITIATE_DIALOG = "ESTIMATION_INITIATE_DIALOG";
var ESTIMATION_TASK_DIALOG = exports.ESTIMATION_TASK_DIALOG = "ESTIMATION_TASK_DIALOG";
var TECHNOLOGY_FORM_DIALOG = exports.TECHNOLOGY_FORM_DIALOG = "TECHNOLOGY_FORM_DIALOG";
var PROJECT_FORM_DIALOG = exports.PROJECT_FORM_DIALOG = "PROJECT_FORM_DIALOG";
var MODULE_FORM_DIALOG = exports.MODULE_FORM_DIALOG = "MODULE_FORM_DIALOG";
var CLIENT_FORM_DIALOG = exports.CLIENT_FORM_DIALOG = "CLIENT_FORM_DIALOG";
var LEAVE_REQUEST_FORM_DIALOG = exports.LEAVE_REQUEST_FORM_DIALOG = "LEAVE_REQUEST_FORM_DIALOG";
var ESTIMATION_FEATURE_DIALOG = exports.ESTIMATION_FEATURE_DIALOG = "ESTIMATION_FEATURE_DIALOG";
var MOVE_TASK_TO_FEATURE_FORM_DIALOG = exports.MOVE_TASK_TO_FEATURE_FORM_DIALOG = "MOVE_TASK_TO_FEATURE_FORM_DIALOG";
var ESTIMATION_SUGGEST_TASK_FORM_DIALOG = exports.ESTIMATION_SUGGEST_TASK_FORM_DIALOG = "ESTIMATION_SUGGEST_TASK_FORM_DIALOG";
var ESTIMATION_SUGGEST_FEATURE_FORM_DIALOG = exports.ESTIMATION_SUGGEST_FEATURE_FORM_DIALOG = "ESTIMATION_SUGGEST_FEATURE_FORM_DIALOG";
var ESTIMATION_PROJECT_AWARD_FORM_DIALOG = exports.ESTIMATION_PROJECT_AWARD_FORM_DIALOG = "ESTIMATION_PROJECT_AWARD_FORM_DIALOG";
var ESTIMATION_ADD_TO_RELEASE_FORM_DIALOG = exports.ESTIMATION_ADD_TO_RELEASE_FORM_DIALOG = "ESTIMATION_ADD_TO_RELEASE_FORM_DIALOG";
var RELEASE_PLAN_ADD_TO_RELEASE_FORM_DIALOG = exports.RELEASE_PLAN_ADD_TO_RELEASE_FORM_DIALOG = "RELEASE_PLAN_ADD_TO_RELEASE_FORM_DIALOG";
var REPOSITORY_TASK_DETAIL_DIALOG = exports.REPOSITORY_TASK_DETAIL_DIALOG = "REPOSITORY_TASK_DETAIL_DIALOG";
var REPOSITORY_FEATURE_DETAIL_DIALOG = exports.REPOSITORY_FEATURE_DETAIL_DIALOG = "REPOSITORY_FEATURE_DETAIL_DIALOG";
var ESTIMATION_FILTER_DIALOG = exports.ESTIMATION_FILTER_DIALOG = "ESTIMATION_FILTER_DIALOG";
var LEAVE_APPROVE_DIALOG = exports.LEAVE_APPROVE_DIALOG = "LEAVE_APPROVE_DIALOG";
var LEAVE_REJECT_DIALOG = exports.LEAVE_REJECT_DIALOG = "LEAVE_REJECT_DIALOG";
var RELEASE_TASK_PLANNING_FORM_DIALOG = exports.RELEASE_TASK_PLANNING_FORM_DIALOG = "RELEASE_TASK_PLANNING_FORM_DIALOG";
var MOVE_TASK_PLAN_DIALOG = exports.MOVE_TASK_PLAN_DIALOG = "MOVE_TASK_PLAN_DIALOG";
var UPDATE_RELEASE_DATES_DIALOG = exports.UPDATE_RELEASE_DATES_DIALOG = "UPDATE_RELEASE_DATES_DIALOG";
var TASK_SHIFT_DIALOG = exports.TASK_SHIFT_DIALOG = "TASK_SHIFT_DIALOG";
var DASHBOARD_SECTION = exports.DASHBOARD_SECTION = "DASHBOARD_SECTION";
var REPORT_TASK_DESCRIPTION_DIALOG = exports.REPORT_TASK_DESCRIPTION_DIALOG = "REPORT_TASK_DESCRIPTION_DIALOG";
var CREATE_RELEASE_FORM_DIALOG = exports.CREATE_RELEASE_FORM_DIALOG = "CREATE_RELEASE_FORM_DIALOG";

// pages
var ESTIMATION_DETAIL_PAGE = exports.ESTIMATION_DETAIL_PAGE = "ESTIMATION_DETAIL_PAGE";
var REPORTING_TASK_PAGE = exports.REPORTING_TASK_PAGE = "REPORTING_TASK_PAGE";
var REPORTING_TASK_DETAIL_PAGE = exports.REPORTING_TASK_DETAIL_PAGE = "REPORTING_TASK_DETAIL_PAGE";
var CALENDAR_TASK_DETAIL_PAGE = exports.CALENDAR_TASK_DETAIL_PAGE = "CALENDAR_TASK_DETAIL_PAGE";
var CALENDAR_TASK_PAGE = exports.CALENDAR_TASK_PAGE = "CALENDAR_TASK_PAGE";
var LEAVE_DETAIL_PAGE = exports.LEAVE_DETAIL_PAGE = "LEAVE_DETAIL_PAGE";
var TASK_REPORT_DETAIL_PAGE = exports.TASK_REPORT_DETAIL_PAGE = "TASK_REPORT_DETAIL_PAGE";

/***/ }),

/***/ "8ukY":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

var _validation = __webpack_require__("4KT+");

var _reactRedux = __webpack_require__("RH2O");

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactWidgetsMoment = __webpack_require__("Utwc");

var _reactWidgetsMoment2 = _interopRequireDefault(_reactWidgetsMoment);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_moment2.default.locale('en');
(0, _reactWidgetsMoment2.default)();
var ReleaseTaskPlanningForm = function ReleaseTaskPlanningForm(props) {
    var change = props.change,
        handleSubmit = props.handleSubmit,
        submitting = props.submitting,
        pristine = props.pristine,
        reset = props.reset;
    var allTeam = props.allTeam,
        releaseTeam = props.releaseTeam,
        releasePlan = props.releasePlan,
        projectUsersOnly = props.projectUsersOnly,
        initial = props.initial;

    var devStartDateMoment = (0, _moment2.default)(initial.devStartDate).hour(0).minute(0).second(0).milliseconds(0);
    var devEndDateMoment = (0, _moment2.default)(initial.devEndDate).hour(0).minute(0).second(0).milliseconds(0);
    var min = devStartDateMoment.toDate();
    var max = devEndDateMoment.toDate();

    var employees = [];
    if (releasePlan && releasePlan.rolesInThisRelease) {
        if (releasePlan.rolesInThisRelease.indexOf(SC.ROLE_MANAGER) > -1) employees = projectUsersOnly ? releaseTeam : allTeam;else if (releasePlan.rolesInThisRelease.indexOf(SC.ROLE_LEADER) > -1) employees = releaseTeam;
    }

    return _react2.default.createElement(
        'form',
        { onSubmit: handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-6 releaseAlign' },
                _react2.default.createElement(_reduxForm.Field, { name: 'release._id', component: 'input', type: 'hidden' }),
                _react2.default.createElement(_reduxForm.Field, { name: 'planningDate',
                    placeholder: "Date",
                    component: _fields.renderDateTimePickerString,
                    showTime: false,
                    min: min,
                    max: max,
                    label: " Date :", validate: [_validation.required] }),
                _react2.default.createElement(_reduxForm.Field, { name: 'planning.plannedHours',
                    placeholder: "Enter Hours",
                    component: _fields.renderSelect,
                    label: "Planning Hours:",
                    validate: [_validation.required, _validation.number],
                    options: [{ 'name': '0.5' }, { 'name': '1' }, { 'name': '1.5' }, { 'name': '2' }, { 'name': '2.5' }, { 'name': '3' }, { 'name': '3.5' }, { 'name': '4' }, { 'name': '4.5' }, { 'name': '5' }, { 'name': '5.5' }, { 'name': '6' }, { 'name': '6.5' }, { 'name': '7' }, { 'name': '7.5' }, { 'name': '8' }, { 'name': '8.5' }, { 'name': '9' }, { 'name': '9.5' }, { 'name': '10' }, { 'name': '10.5' }, { 'name': '11' }, { 'name': '11.5' }, { 'name': '12' }],
                    valueField: "name"
                }),
                _react2.default.createElement(_reduxForm.Field, { name: 'employee.name', component: 'input', type: 'hidden' }),
                releasePlan && releasePlan.rolesInThisRelease.indexOf(SC.ROLE_MANAGER) > -1 ? _react2.default.createElement(_reduxForm.Field, { name: 'projectUsersOnly',
                    type: 'checkbox',
                    label: 'projectUsersOnly',
                    className: 'input checkbox planchk ',
                    component: _fields.renderCheckBox }) : null,
                _react2.default.createElement(_reduxForm.Field, { name: 'employee._id', placeholder: "Name of Developer",
                    component: _fields.renderSelect,
                    options: employees,
                    label: "Developer Name:",
                    onChange: function onChange(event, newValue, oldValue) {
                        var employee = allTeam.find(function (e) {
                            return e._id == newValue;
                        });
                        change("employee.name", employee.name);
                    },
                    validate: [_validation.required] }),
                _react2.default.createElement(
                    'div',
                    { className: 'planTextArea' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'description',
                        label: "Description:",
                        component: _fields.renderTextArea,
                        type: 'text',
                        rows: 8,
                        placeholder: 'Enter task description',
                        validate: [_validation.required] })
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-12 releaseAlign' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4 releasePlanBtn' },
                    _react2.default.createElement(
                        'button',
                        { type: 'submit', className: 'btn customBtn ', disabled: submitting || pristine },
                        'Plan Task'
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4 releaseResetBtn' },
                    _react2.default.createElement(
                        'button',
                        { type: 'button', className: 'btn customBtn', disabled: submitting || pristine, onClick: reset },
                        'Reset'
                    )
                )
            )
        )
    );
};

ReleaseTaskPlanningForm = (0, _reduxForm.reduxForm)({
    form: 'task-planning'
})(ReleaseTaskPlanningForm);

var selector = (0, _reduxForm.formValueSelector)('task-planning');

ReleaseTaskPlanningForm = (0, _reactRedux.connect)(function (state) {
    var projectUsersOnly = selector(state, 'projectUsersOnly');
    return {
        projectUsersOnly: projectUsersOnly
    };
})(ReleaseTaskPlanningForm);

exports.default = ReleaseTaskPlanningForm;

/***/ }),

/***/ "8ung":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _index = __webpack_require__("ZhKb");

var _index2 = __webpack_require__("81ym");

var A = _interopRequireWildcard(_index2);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _utils = __webpack_require__("DcaD");

var U = _interopRequireWildcard(_utils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        ReportGoBack: function ReportGoBack(event) {
            dispatch(A.showComponentHideOthers(COC.RELEASE_PLAN_LIST));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        taskPlan: state.report.reportTaskDetail.taskPlan,
        release: state.report.reportTaskDetail.release,
        releasePlan: state.report.reportTaskDetail.releasePlan,
        taskPlans: state.report.reportTaskDetail.taskPlans
    };
};

var TaskReportDetailPageContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_index.TaskReportDetailPage);

exports.default = TaskReportDetailPageContainer;

/***/ }),

/***/ "98W3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RepositoryFeatureDetailPage = function (_Component) {
    _inherits(RepositoryFeatureDetailPage, _Component);

    function RepositoryFeatureDetailPage(props) {
        _classCallCheck(this, RepositoryFeatureDetailPage);

        var _this = _possibleConstructorReturn(this, (RepositoryFeatureDetailPage.__proto__ || Object.getPrototypeOf(RepositoryFeatureDetailPage)).call(this, props));

        _this.state = {
            showHistory: false
        };
        _this.showHistoryDetail = _this.showHistoryDetail.bind(_this);
        return _this;
    }

    _createClass(RepositoryFeatureDetailPage, [{
        key: "showHistoryDetail",
        value: function showHistoryDetail() {
            this.setState({ showHistory: !this.state.showHistory });
        }
    }, {
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                feature = _props.feature,
                estimationId = _props.estimationId;
            var showHistory = this.state.showHistory;

            return _react2.default.createElement(
                "div",
                { className: "col-md-12" },
                _react2.default.createElement(
                    "div",
                    { className: "col-md-10" },
                    _react2.default.createElement(
                        "h3",
                        { className: "repo-detail-header" },
                        feature.name,
                        " "
                    )
                ),
                _react2.default.createElement(
                    "div",
                    { className: "col-md-2" },
                    _react2.default.createElement(
                        "h3",
                        { className: "repo-detail-hour" },
                        feature.estimatedHours ? '(' + feature.estimatedHours + ')' : '(00)',
                        " "
                    )
                ),
                _react2.default.createElement(
                    "div",
                    { className: "col-md-12" },
                    _react2.default.createElement(
                        "p",
                        { className: "repositoryModalPara repo-detail" },
                        "Feature Description: ",
                        feature.description,
                        " "
                    )
                ),
                _react2.default.createElement(
                    "div",
                    { className: "col-md-12 pad" },
                    _react2.default.createElement(
                        "div",
                        { className: "col-md-3" },
                        _react2.default.createElement(
                            "button",
                            { className: "customBtn", type: "button", onClick: this.showHistoryDetail },
                            "History"
                        )
                    ),
                    _react2.default.createElement(
                        "div",
                        { className: "col-md-4 pad" },
                        _react2.default.createElement(
                            "button",
                            { className: "customBtn", type: "button", onClick: function onClick() {
                                    _this2.props.addFeature(estimationId, feature._id);
                                } },
                            "Add to Estimation"
                        )
                    ),
                    _react2.default.createElement(
                        "div",
                        { className: "col-md-5" },
                        _react2.default.createElement(
                            "button",
                            { className: "customBtn", type: "button", onClick: function onClick() {
                                    _this2.props.copyFeature(estimationId, feature._id);
                                } },
                            "Copy To Estimation"
                        )
                    )
                ),
                showHistory && _react2.default.createElement(
                    "div",
                    null,
                    feature.hasHistory ? _react2.default.createElement(
                        "div",
                        null,
                        _react2.default.createElement(
                            "lablel",
                            null,
                            "under Construction"
                        )
                    ) : _react2.default.createElement(
                        "lablel",
                        null,
                        "No History available"
                    ),
                    " "
                )
            );
        }
    }]);

    return RepositoryFeatureDetailPage;
}(_react.Component);

exports.default = RepositoryFeatureDetailPage;

/***/ }),

/***/ "9A8+":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactWidgetsMoment = __webpack_require__("Utwc");

var _reactWidgetsMoment2 = _interopRequireDefault(_reactWidgetsMoment);

var _reactRedux = __webpack_require__("RH2O");

var _lodash = __webpack_require__("M4fF");

var _lodash2 = _interopRequireDefault(_lodash);

var _utils = __webpack_require__("DcaD");

var U = _interopRequireWildcard(_utils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_moment2.default.locale('en');
(0, _reactWidgetsMoment2.default)();
var ReleaseDeveloperFilterForm = function ReleaseDeveloperFilterForm(props) {
    var team = props.team,
        handleSubmit = props.handleSubmit,
        employeeId = props.employeeId,
        startDate = props.startDate,
        endDate = props.endDate,
        selectedReleaseID = props.selectedReleaseID;

    var min = startDate && U.nowMomentInIndia().isSameOrBefore(U.momentInUTC(startDate)) ? U.momentInUTC(startDate) : U.nowMomentInIndia();
    var max = U.momentInUTC(endDate);
    console.log("min", min);
    console.log("max", max);
    return _react2.default.createElement(
        'form',
        { onSubmit: handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'col-md-12 planFilterDivider' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-4 ' },
                _react2.default.createElement(_reduxForm.Field, { name: 'employeeId', placeholder: "Name of Developer",
                    onChange: function onChange(event, newValue, oldValue) {
                        props.getEmployeePlanDetails(newValue, startDate, endDate, selectedReleaseID);
                    },
                    component: _fields.renderSelect, options: team,
                    label: "Developer Name:" })
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-8' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'startDate',
                        placeholder: "Start Date",
                        component: _fields.renderDateTimePickerString,
                        onChange: function onChange(event, newValue, oldValue) {
                            props.getEmployeePlanDetails(employeeId, newValue, endDate, selectedReleaseID);
                        },
                        showTime: false,
                        min: min ? min.toDate() : min,
                        max: max ? max.toDate() : max,
                        label: " From :" })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'endDate', placeholder: " End Date", component: _fields.renderDateTimePickerString,
                        onChange: function onChange(event, newValue, oldValue) {
                            props.getEmployeePlanDetails(employeeId, startDate, newValue, selectedReleaseID);
                        },
                        showTime: false,
                        min: min ? min.toDate() : min,
                        label: " To :" })
                )
            )
        )
    );
};

ReleaseDeveloperFilterForm = (0, _reduxForm.reduxForm)({
    form: 'developer-filter'
})(ReleaseDeveloperFilterForm);

var selector = (0, _reduxForm.formValueSelector)('developer-filter');

ReleaseDeveloperFilterForm = (0, _reactRedux.connect)(function (state) {
    var _selector = selector(state, 'employeeId', 'startDate', 'endDate'),
        employeeId = _selector.employeeId,
        startDate = _selector.startDate,
        endDate = _selector.endDate;

    return {
        employeeId: employeeId,
        startDate: startDate,
        endDate: endDate
    };
})(ReleaseDeveloperFilterForm);

exports.default = ReleaseDeveloperFilterForm;

/***/ }),

/***/ "9gB4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LeaveRequestFormDialog = function LeaveRequestFormDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Raise Leave'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.LeaveRequestFormContainer, null)
        )
    );
};

exports.default = LeaveRequestFormDialog;

/***/ }),

/***/ "A5gq":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var initialState = {
    all: [],
    selected: {}
};

var moduleReducer = function moduleReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case AC.ADD_MODULES:
            return Object.assign({}, state, { all: action.modules });
        case AC.ADD_MODULE:
            return Object.assign({}, state, { all: [].concat(_toConsumableArray(state.all), [action.module]) });
        case AC.EDIT_MODULE:
            return Object.assign({}, state, { all: state.all.map(function (item) {
                    return item._id == action.module._id ? action.module : item;
                }) });
        case AC.DELETE_MODULE:
            return Object.assign({}, state, { all: state.all.filter(function (item) {
                    return item._id !== action.moduleID;
                }) });
        default:
            return state;
    }
};

exports.default = moduleReducer;

/***/ }),

/***/ "AYZt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var initialState = {
    all: [],
    selected: {}
};

var developmentTypeReducer = function developmentTypeReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case AC.ADD_DEVELOPMENT_TYPES:
            return Object.assign({}, state, { all: action.developmentTypes });
        case AC.ADD_DEVELOPMENT_TYPE:
            return Object.assign({}, state, { all: [].concat(_toConsumableArray(state.all), [action.developmentType]) });
        case AC.DELETE_DEVELOPMENT_TYPE:
            return Object.assign({}, state, { all: state.all.filter(function (item) {
                    return item._id !== action.developmentTypeID;
                }) });
        default:
            return state;
    }
};

exports.default = developmentTypeReducer;

/***/ }),

/***/ "B+uT":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _index = __webpack_require__("81ym");

var A = _interopRequireWildcard(_index);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onReleaseSelected: function onReleaseSelected(releaseID, planDate, iterationType, taskStatus) {
            if (releaseID && planDate) {
                dispatch(A.getReportingTasksForDate(releaseID, planDate, iterationType, taskStatus));
            }
        },
        setReportDate: function setReportDate(reportDate) {
            return dispatch(A.setReportDate(reportDate));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        reportedStatus: state.report.reportedStatus,
        releaseID: state.report.releaseID,
        iterationType: state.report.iterationType,
        initialValues: {
            "dateOfReport": (0, _moment2.default)(state.report.dateStringOfReport).toDate()
        }
    };
};

var ReportingDateNavBarContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ReportingDateNavBar);

exports.default = ReportingDateNavBarContainer;

/***/ }),

/***/ "B6Oj":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _2 = __webpack_require__("ZhKb");

var _ConfirmationDialog = __webpack_require__("uwS4");

var _containers = __webpack_require__("GF1l");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _lodash = __webpack_require__("M4fF");

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EstimationDetail = function (_Component) {
    _inherits(EstimationDetail, _Component);

    function EstimationDetail(props) {
        _classCallCheck(this, EstimationDetail);

        var _this = _possibleConstructorReturn(this, (EstimationDetail.__proto__ || Object.getPrototypeOf(EstimationDetail)).call(this, props));

        _this.state = {
            showEstimationRequestDialog: false,
            showEstimationApproveDialog: false,
            showEstimationDeleteDialog: false
        };
        return _this;
    }

    _createClass(EstimationDetail, [{
        key: 'onClose',
        value: function onClose() {
            this.setState({
                showEstimationRequestDialog: false,
                showEstimationReviewDialog: false,
                showEstimationChangeDialog: false,
                showEstimationApproveDialog: false,
                showEstimationReopenDialog: false,
                showEstimationDeleteDialog: false
            });
        }
    }, {
        key: 'onConfirmEstimationApprove',
        value: function onConfirmEstimationApprove() {
            this.setState({ showEstimationApproveDialog: false });
            this.props.estimationApprove(this.props.estimation);
        }
    }, {
        key: 'onConfirmEstimationRequest',
        value: function onConfirmEstimationRequest() {
            this.setState({ showEstimationRequestDialog: false });
            this.props.sendEstimationRequest(this.props.estimation);
        }
    }, {
        key: 'onConfirmReviewRequest',
        value: function onConfirmReviewRequest() {
            this.setState({ showEstimationReviewDialog: false });
            this.props.sendReviewRequest(this.props.estimation);
        }
    }, {
        key: 'onConfirmChangeRequest',
        value: function onConfirmChangeRequest() {
            this.setState({ showEstimationChangeDialog: false });
            this.props.sendChangeRequest(this.props.estimation);
        }
    }, {
        key: 'onConfirmReopen',
        value: function onConfirmReopen() {
            this.setState({ showEstimationReopenDialog: false });
            this.props.reopenEstimation(this.props.estimation);
        }
    }, {
        key: 'onConfirmDelete',
        value: function onConfirmDelete() {
            var _this2 = this;

            this.setState({ showEstimationDeleteDialog: false });
            this.props.deleteEstimation(this.props.estimation).then(function (json) {
                if (json.success) {
                    _this2.props.history.push("/app-home/estimation");
                    _this2.props.estimationGoBack();
                }
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            logger.debug(logger.ESTIMATION_DETAIL_RENDER, this.props);
            var _props = this.props,
                estimation = _props.estimation,
                userRoleInThisEstimation = _props.userRoleInThisEstimation;

            var editView = false;
            if (userRoleInThisEstimation === SC.ROLE_NEGOTIATOR && _lodash2.default.includes([SC.STATUS_INITIATED, SC.STATUS_REVIEW_REQUESTED], estimation.status) || userRoleInThisEstimation === SC.ROLE_ESTIMATOR && _lodash2.default.includes([SC.STATUS_ESTIMATION_REQUESTED, SC.STATUS_CHANGE_REQUESTED], estimation.status)) {
                editView = true;
            }

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-8 pad estimation-container' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12 estimateheader' },
                        estimation.canApprove && userRoleInThisEstimation === SC.ROLE_NEGOTIATOR && estimation.status === SC.STATUS_REVIEW_REQUESTED ? _react2.default.createElement(
                            'div',
                            { className: 'col-md-5 pad' },
                            _react2.default.createElement(
                                'div',
                                { className: 'col-md-6 backarrow estimationBackArrow' },
                                _react2.default.createElement(
                                    'h5',
                                    null,
                                    _react2.default.createElement(
                                        'button',
                                        { title: 'Go Back', className: 'btn-link pad', onClick: function onClick() {
                                                _this3.props.history.push("/app-home/estimation");
                                                _this3.props.estimationGoBack();
                                            } },
                                        _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
                                    ),
                                    _react2.default.createElement(
                                        'b',
                                        null,
                                        estimation.project ? estimation.project.name : ''
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'col-md-6' },
                                _react2.default.createElement(
                                    'button',
                                    { className: 'btn approveBtn',
                                        onClick: function onClick() {
                                            return _this3.setState({ showEstimationApproveDialog: true });
                                        } },
                                    'Approve Estimation'
                                )
                            )
                        ) : _react2.default.createElement(
                            'div',
                            { className: 'col-md-5 pad' },
                            _react2.default.createElement(
                                'div',
                                { title: 'Go Back', className: 'col-md-5 backarrow estimationBackArrow' },
                                _react2.default.createElement(
                                    'h5',
                                    null,
                                    _react2.default.createElement(
                                        'button',
                                        { className: 'btn-link pad', onClick: function onClick() {
                                                _this3.props.history.push("/app-home/estimation");
                                                _this3.props.estimationGoBack();
                                            } },
                                        _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
                                    ),
                                    _react2.default.createElement(
                                        'b',
                                        null,
                                        estimation.project ? estimation.project.name : ''
                                    )
                                )
                            ),
                            _lodash2.default.includes([SC.STATUS_INITIATED], estimation.status) && userRoleInThisEstimation === SC.ROLE_NEGOTIATOR && _react2.default.createElement(
                                'button',
                                { type: 'button', className: 'btn customBtn', onClick: function onClick() {
                                        _this3.props.editEstimationInitiateForm(estimation);
                                    } },
                                'Edit Estimation'
                            )
                        ),
                        this.state.showEstimationRequestDialog && _react2.default.createElement(
                            _ConfirmationDialog.NewConfirmationDialog,
                            { show: true, onConfirm: this.onConfirmEstimationRequest.bind(this),
                                title: 'Estimation Request', onClose: this.onClose.bind(this)
                            },
                            _react2.default.createElement(
                                'div',
                                null,
                                'This will send an \'Estimation Request\' to',
                                _react2.default.createElement(
                                    'span',
                                    { className: "highlightText" },
                                    ' ',
                                    this.props.estimation.estimator.firstName
                                ),
                                ' so that appropriate estimates can be added. You will be unable to edit it until ',
                                _react2.default.createElement(
                                    'span',
                                    {
                                        className: "highlightText" },
                                    ' ',
                                    this.props.estimation.estimator.firstName
                                ),
                                ' sends estimation back for your review. Please confirm.'
                            )
                        ),
                        this.state.showEstimationApproveDialog && _react2.default.createElement(_2.ConfirmationDialog, { show: true, onConfirm: this.onConfirmEstimationApprove.bind(this),
                            title: 'Estimation Approve', onClose: this.onClose.bind(this),
                            body: 'Approving estimation means that you are satisfied with this estimation and now locking it. Neither you nor ' + this.props.estimation.estimator.firstName + ' would be able to change anything in estimation. You can re-open estimation anytime to start modifying it again. Please confirm!' }),
                        this.state.showEstimationChangeDialog && _react2.default.createElement(
                            _ConfirmationDialog.NewConfirmationDialog,
                            { show: true, onConfirm: this.onConfirmChangeRequest.bind(this),
                                title: 'Change Request', onClose: this.onClose.bind(this) },
                            _react2.default.createElement(
                                'div',
                                null,
                                'This will send a \'Change Request\' to',
                                _react2.default.createElement(
                                    'span',
                                    { className: "highlightText" },
                                    ' ',
                                    this.props.estimation.estimator.firstName
                                ),
                                ' so that appropriate changes can be made to estimation as per your suggestions. You will be unable to edit it until ',
                                _react2.default.createElement(
                                    'span',
                                    {
                                        className: "highlightText" },
                                    ' ',
                                    this.props.estimation.estimator.firstName
                                ),
                                ' sends estimation back for your review. Please confirm.'
                            )
                        ),
                        this.state.showEstimationReviewDialog && _react2.default.createElement(_2.ConfirmationDialog, { show: true, onConfirm: this.onConfirmReviewRequest.bind(this),
                            title: 'Estimation Request', onClose: this.onClose.bind(this),
                            dialogName: SC.DIALOG_ESTIMATION_REQUEST_REVIEW,
                            hasError: this.props.estimation.hasError,
                            body: this.props.estimation && this.props.estimation.hasError ? 'There are still few tasks/features that have estimated hours missing. This would prevent ' + this.props.estimation.negotiator.firstName + ' from approving them during review and hence estimation would need to be send back to you needing extra iteration for completion. Press \'Cancel\' to add missing information or press Confirm to send Estimation for review' : 'You are about to send \'Review Request\' to ' + this.props.estimation.negotiator.firstName + '. Please note , any estimates given by you would be considered final and ' + this.props.estimation.negotiator.firstName + ' would be able to approve them without needing further changes from you. Please confirm!'
                        }),
                        this.state.showEstimationReopenDialog && _react2.default.createElement(_2.ConfirmationDialog, { show: true, onConfirm: this.onConfirmReopen.bind(this),
                            title: 'Estimation Reopen', onClose: this.onClose.bind(this),
                            body: 'Reopening an estimation means you would like to make changes to this estimation. Please confirm!' }),
                        this.state.showEstimationDeleteDialog && _react2.default.createElement(_2.ConfirmationDialog, { show: true, onConfirm: this.onConfirmDelete.bind(this),
                            dialogName: SC.DIALOG_ESTIMATION_REQUEST_REVIEW,
                            title: 'Estimation Delete', onClose: this.onClose.bind(this),
                            hasError: true,
                            body: 'Deleting this estimation would remove it from database. This operation cannot be reversed. Please confirm!!!' }),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-3' },
                            userRoleInThisEstimation === SC.ROLE_NEGOTIATOR && estimation.status === SC.STATUS_INITIATED && _react2.default.createElement(
                                'button',
                                { className: 'btn customBtn',
                                    onClick: function onClick() {
                                        return _this3.setState({ showEstimationRequestDialog: true });
                                    } },
                                'Request Estimation'
                            ),
                            userRoleInThisEstimation === SC.ROLE_NEGOTIATOR && estimation.status === SC.STATUS_APPROVED && _react2.default.createElement(
                                'button',
                                { className: 'btn reopenBtn',
                                    onClick: function onClick() {
                                        return _this3.setState({ showEstimationReopenDialog: true });
                                    } },
                                'Reopen Estimation'
                            ),
                            userRoleInThisEstimation === SC.ROLE_NEGOTIATOR && estimation.status === SC.STATUS_REVIEW_REQUESTED && _react2.default.createElement(
                                'button',
                                { className: 'btn customBtn',
                                    onClick: function onClick() {
                                        return _this3.setState({ showEstimationChangeDialog: true });
                                    } },
                                'Request Change'
                            ),
                            userRoleInThisEstimation === SC.ROLE_ESTIMATOR && (estimation.status === SC.STATUS_ESTIMATION_REQUESTED || estimation.status === SC.STATUS_CHANGE_REQUESTED) && _react2.default.createElement(
                                'button',
                                { className: 'btn customBtn',
                                    onClick: function onClick() {

                                        _this3.props.hasErrorInEstimation(_this3.props.estimation);
                                        _this3.setState({ showEstimationReviewDialog: true });
                                    } },
                                'Request Review'
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-1' },
                            userRoleInThisEstimation === SC.ROLE_NEGOTIATOR && (estimation.status === SC.STATUS_INITIATED || estimation.status === SC.STATUS_REVIEW_REQUESTED) && _react2.default.createElement(
                                'button',
                                { type: 'button', className: 'btn customBtn deleteEstimationBtn', onClick: function onClick() {
                                        _this3.setState({ showEstimationDeleteDialog: true });
                                    } },
                                _react2.default.createElement('i', { className: 'fa fa-trash iconClr ' })
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-3 pad ' },
                            _react2.default.createElement(
                                'div',
                                { className: 'estimationfileoption' },
                                _react2.default.createElement(
                                    'ul',
                                    { className: 'list-unstyled' },
                                    editView && _react2.default.createElement(
                                        'button',
                                        { type: 'button', className: 'btn customBtn filterAlign', onClick: function onClick() {
                                                _this3.props.estimationFilterForm();
                                            } },
                                        'filter'
                                    )
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        {
                            className: 'col-md-12 ' },
                        _react2.default.createElement(
                            'div',
                            {
                                className: 'col-md-2 pad' },
                            _react2.default.createElement(
                                'div',
                                {
                                    className: 'estimationuser tooltip' },
                                ' ',
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    ' C '
                                ),
                                _react2.default.createElement(
                                    'p',
                                    { className: 'tooltiptext' },
                                    estimation.client ? estimation.client.name : ''
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'estimationuser tooltip' },
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    'N'
                                ),
                                _react2.default.createElement(
                                    'p',
                                    { className: 'tooltiptext' },
                                    estimation.negotiator ? estimation.negotiator.firstName : ''
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                {
                                    className: 'estimationuser tooltip' },
                                ' ',
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    ' E '
                                ),
                                _react2.default.createElement(
                                    'p',
                                    { className: 'tooltiptext' },
                                    estimation.estimator ? estimation.estimator.firstName : ''
                                )
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-2' },
                            _react2.default.createElement(
                                'div',
                                { className: 'logo' },
                                estimation.technologies.map(function (t) {
                                    return _react2.default.createElement('img', { src: "/images/technology/" + t.name.replace(' ', '_') + ".png" });
                                })
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-5' },
                            (userRoleInThisEstimation === SC.ROLE_NEGOTIATOR && _lodash2.default.includes([SC.STATUS_INITIATED, SC.STATUS_REVIEW_REQUESTED], estimation.status) || userRoleInThisEstimation === SC.ROLE_ESTIMATOR && _lodash2.default.includes([SC.STATUS_ESTIMATION_REQUESTED, SC.STATUS_CHANGE_REQUESTED], estimation.status)) && _react2.default.createElement(
                                'form',
                                null,
                                _react2.default.createElement(
                                    'button',
                                    { type: 'button', className: 'btn taskbtn',
                                        onClick: function onClick() {
                                            return _this3.props.showAddTaskForm(estimation);
                                        } },
                                    _react2.default.createElement('i', {
                                        className: 'fa fa-plus-circle' }),
                                    'Add Task'
                                ),
                                _react2.default.createElement(
                                    'button',
                                    { type: 'button', className: 'btn featurebtn',
                                        onClick: function onClick() {
                                            return _this3.props.showAddFeatureForm(estimation);
                                        }
                                    },
                                    _react2.default.createElement('i', { className: 'fa fa-plus-circle' }),
                                    'Add Feature'
                                )
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-3' },
                            _react2.default.createElement(
                                'div',
                                { className: 'col-md-6  esTime' },
                                _react2.default.createElement(
                                    'b',
                                    null,
                                    estimation.estimatedHours + " Hrs"
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'clock' },
                                    _react2.default.createElement('i', { className: 'fa fa-clock-o ', title: 'estimated Hours' })
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'col-md-6  esTime' },
                                _react2.default.createElement(
                                    'b',
                                    null,
                                    estimation.suggestedHours + " Hrs"
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'suggestedclock' },
                                    _react2.default.createElement('i', { className: 'fa fa-clock-o ', title: 'Suggeted Hours' })
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: ' col-md-12' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-6' },
                            _react2.default.createElement(
                                'span',
                                { className: 'customBtn' },
                                estimation.status
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-2 col-md-offset-4' },
                            _react2.default.createElement(
                                'button',
                                { style: { float: 'right' }, type: 'button', className: 'btn customBtn', onClick: function onClick() {
                                        _this3.props.refreshEstimation(estimation);
                                    } },
                                _react2.default.createElement('i', { className: 'fa fa-refresh' })
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(_containers.EstimationFeaturesContainer, { estimationStatus: estimation.status,
                            editView: editView,
                            loggedInUserRole: userRoleInThisEstimation })
                    ),
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(_containers.EstimationTasksContainer, { estimationStatus: estimation.status,
                            editView: editView,
                            loggedInUserRole: userRoleInThisEstimation })
                    ),
                    estimation.status === SC.STATUS_APPROVED && userRoleInThisEstimation === SC.ROLE_NEGOTIATOR && _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(
                            'button',
                            { type: 'button', className: 'btn customBtn', onClick: function onClick() {
                                    _this3.props.showProjectAwardForm(estimation);
                                } },
                            'Create Release'
                        ),
                        _react2.default.createElement(
                            'button',
                            { type: 'button', className: 'btn customBtn', onClick: function onClick() {
                                    _this3.props.showAddToReleaseForm(estimation);
                                } },
                            'Add to Release'
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4 estimationsection pad' },
                    _react2.default.createElement(_containers.RepositorySearchContainer, { editView: editView })
                )
            );
        }
    }]);

    return EstimationDetail;
}(_react.Component);

exports.default = EstimationDetail;

/***/ }),

/***/ "BEum":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _reduxForm = __webpack_require__("ao4a");

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        showClientCreationForm: function showClientCreationForm() {

            dispatch(A.showComponent(COC.CLIENT_FORM_DIALOG));
        },
        showClientEditForm: function showClientEditForm(client) {
            //dispatch(A.getAllClientsFromServer()),
            dispatch(A.showComponent(COC.CLIENT_FORM_DIALOG)), dispatch((0, _reduxForm.initialize)('client', client));
        },
        deleteClient: function deleteClient(clientID) {
            return dispatch(A.deleteClientOnServer(clientID)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success('Client Removed Successfully');
                } else {
                    _reactNotifications.NotificationManager.error('Client Not removed!');
                    throw new _reduxForm.SubmissionError({ client: "Client Removal Failed" });
                }
            });
        }

    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        loggedInUser: state.user.loggedIn,
        clients: state.client.all
    };
};

var ClientListContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ClientList);

exports.default = ClientListContainer;

/***/ }),

/***/ "BhD/":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _Header = __webpack_require__("m0nP");

var _Header2 = _interopRequireDefault(_Header);

var _Tabs = __webpack_require__("5XdS");

var _Tabs2 = _interopRequireDefault(_Tabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SuperAdminHome = function (_Component) {
    _inherits(SuperAdminHome, _Component);

    function SuperAdminHome() {
        _classCallCheck(this, SuperAdminHome);

        return _possibleConstructorReturn(this, (SuperAdminHome.__proto__ || Object.getPrototypeOf(SuperAdminHome)).apply(this, arguments));
    }

    _createClass(SuperAdminHome, [{
        key: 'render',
        value: function render() {
            return [_react2.default.createElement(_Header2.default, _extends({ key: 'super_admin_header' }, this.props)), _react2.default.createElement(
                'div',
                { key: 'adminhome_div', className: 'col-md-12 pad topNav' },
                _react2.default.createElement(_Tabs2.default, _extends({ match: this.props.match }, this.props))
            )];
        }
    }]);

    return SuperAdminHome;
}(_react.Component);

exports.default = SuperAdminHome;

/***/ }),

/***/ "BxOU":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _Header = __webpack_require__("m0nP");

var _Header2 = _interopRequireDefault(_Header);

var _Tabs = __webpack_require__("5XdS");

var _Tabs2 = _interopRequireDefault(_Tabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AdminHome = function (_Component) {
    _inherits(AdminHome, _Component);

    function AdminHome() {
        _classCallCheck(this, AdminHome);

        return _possibleConstructorReturn(this, (AdminHome.__proto__ || Object.getPrototypeOf(AdminHome)).apply(this, arguments));
    }

    _createClass(AdminHome, [{
        key: 'render',
        value: function render() {
            return [_react2.default.createElement(_Header2.default, _extends({ key: 'admin_header1' }, this.props)), _react2.default.createElement(
                'div',
                { key: 'admin-home_div', className: 'col-md-12 pad topNav' },
                _react2.default.createElement(_Tabs2.default, _extends({ match: this.props.match }, this.props))
            )];
        }
    }]);

    return AdminHome;
}(_react.Component);

exports.default = AdminHome;

/***/ }),

/***/ "C/qh":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToprops = function mapDispatchToprops(dispatch, ownProps) {
    return {
        getDashboardData: function getDashboardData(release) {
            dispatch(A.getReleaseForDashboard(release._id)).then(function () {
                var m = (0, _moment2.default)();
                dispatch(A.getReleaseDayPlannings(release._id, m.month(), m.year()));
            });
        },
        getReleaseDailyPlannings: function getReleaseDailyPlannings(releaseID, month, year) {
            dispatch(A.getReleaseDayPlannings(releaseID, month, year));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        plannedVsUnplannedWork: state.dashboard.plannedVsUnplannedWork,
        overallProgress: state.dashboard.overallProgress,
        completedPendingProgress: state.dashboard.completedPendingProgress,
        plannedVsReported: state.dashboard.plannedVsReported,
        hoursData: state.dashboard.hoursData,
        estimatedProgress: state.dashboard.estimatedProgress,
        progress: state.dashboard.progress,
        unplannedReport: state.dashboard.unplannedReport,
        dailyPlannings: state.dashboard.dailyPlannings,
        selectedRelease: state.release.selectedRelease,
        resetDailyPlanningMonth: state.dashboard.resetDailyPlanningMonth,
        mgmtData: state.dashboard.mgmtData
    };
};

var ReleaseDashboardSectionContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToprops)(_components.ReleaseDashboardSection);

exports.default = ReleaseDashboardSectionContainer;

/***/ }),

/***/ "CA8F":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactRouterDom = __webpack_require__("F8kA");

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _utils = __webpack_require__("DcaD");

var U = _interopRequireWildcard(_utils);

var _index = __webpack_require__("ZhKb");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LeaveList = function (_Component) {
    _inherits(LeaveList, _Component);

    function LeaveList(props) {
        _classCallCheck(this, LeaveList);

        var _this = _possibleConstructorReturn(this, (LeaveList.__proto__ || Object.getPrototypeOf(LeaveList)).call(this, props));

        _this.state = {
            showLeaveDeleteRequestDialog: false,
            row: {}
        };
        return _this;
    }

    _createClass(LeaveList, [{
        key: 'onClose',
        value: function onClose() {
            this.setState({
                showLeaveDeleteRequestDialog: false
            });
        }
    }, {
        key: 'rowClassNameFormat',
        value: function rowClassNameFormat(row, rowIdx) {
            return row.status === SC.LEAVE_STATUS_APPROVED ? 'td-row-approved' : row.status === SC.LEAVE_STATUS_CANCELLED ? 'td-row-cancelled' : '';
        }
    }, {
        key: 'formatCreatedDate',
        value: function formatCreatedDate(leave) {
            if (leave) {
                return (0, _moment2.default)(leave).format("DD-MM-YYYY ");
            }
            return '';
        }
    }, {
        key: 'formatLeaveRaisedUser',
        value: function formatLeaveRaisedUser(user) {
            if (user && user.firstName) {
                return user.firstName + ' ' + user.lastName;
            }
            return '';
        }
    }, {
        key: 'formatLeaveApproverUser',
        value: function formatLeaveApproverUser(user) {
            if (user && user.name) {
                return user.name;
            }
            return '';
        }
    }, {
        key: 'formatLeaveType',
        value: function formatLeaveType(leaveType) {
            if (leaveType) return leaveType.name;
            return '';
        }
    }, {
        key: 'viewButton',
        value: function viewButton(cell, row, enumObject, rowIndex) {
            var _this2 = this;

            return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom', type: 'button', onClick: function onClick() {
                        _this2.props.history.push('/app-home/leave-detail');
                        _this2.props.showLeaveDetails(row);
                    } },
                _react2.default.createElement('i', { className: 'fa fa-eye' })
            );
        }
    }, {
        key: 'viewDeleteButton',
        value: function viewDeleteButton(cell, row, enumObject, rowIndex) {
            var _this3 = this;

            return _react2.default.createElement(
                'button',
                {
                    className: ' btn btn-custom',
                    disabled: !row.canDelete,
                    type: 'button',
                    onClick: function onClick() {
                        _this3.setState({ showLeaveDeleteRequestDialog: true, row: row });
                    } },
                _react2.default.createElement('i', { className: 'fa fa-trash' })
            );
        }
    }, {
        key: 'viewCancelButton',
        value: function viewCancelButton(cell, row, enumObject, rowIndex) {
            var _this4 = this;

            return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom ', type: 'button',
                    disabled: !row.canCancel, onClick: function onClick() {
                        return _this4.props.cancelLeave(row);
                    } },
                _react2.default.createElement('i', { className: 'fa fa-remove' })
            );
        }
    }, {
        key: 'viewApproveButton',
        value: function viewApproveButton(cell, row, enumObject, rowIndex) {
            var _this5 = this;

            return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom',
                    type: 'button',
                    disabled: !row.canApprove,
                    onClick: function onClick() {
                        return _this5.props.approveLeave(row);
                    } },
                _react2.default.createElement('i', { className: 'fa fa-check approveLeave' })
            );
        }
    }, {
        key: 'onConfirmDeleteRequest',
        value: function onConfirmDeleteRequest() {
            this.setState({ showLeaveDeleteRequestDialog: false });
            this.props.revokeLeave(this.state.row);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this6 = this;

            var _props = this.props,
                leaves = _props.leaves,
                loggedInUser = _props.loggedInUser;

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { key: 'raise_leave_key', className: 'clearfix' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12 pad' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-12' },
                            _react2.default.createElement(
                                'div',
                                { className: 'col-md-12' },
                                _react2.default.createElement(
                                    'div',
                                    { className: 'col-md-6' },
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'col-md-6' },
                                        loggedInUser && U.userHasOnlyRole(loggedInUser, SC.ROLE_TOP_MANAGEMENT) ? null : _react2.default.createElement(
                                            'button',
                                            { className: 'btn customBtn leaveBtn',
                                                onClick: function onClick() {
                                                    return _this6.props.showRaiseLeaveForm();
                                                } },
                                            'Raise-Leave'
                                        )
                                    ),
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'col-md-6  releaseSearchContent ' },
                                        _react2.default.createElement(
                                            'div',
                                            {
                                                className: loggedInUser && U.userHasOnlyRole(loggedInUser, SC.ROLE_TOP_MANAGEMENT) ? "estimation releaseSelect  releaseSearchStatus leaveSelectHighestRole" : "estimation releaseSelect  releaseSearchStatus leaveSelect" },
                                            _react2.default.createElement(
                                                'select',
                                                { className: 'form-control', title: 'Select Status',
                                                    onChange: function onChange(status) {
                                                        return _this6.props.changeLeaveStatus(status.target.value);
                                                    } },
                                                _react2.default.createElement(
                                                    'option',
                                                    { key: SC.ALL, value: SC.ALL },
                                                    'All Status'
                                                ),
                                                SC.ALL_LEAVE_STATUS_ARRAY.map(function (leave) {
                                                    return _react2.default.createElement(
                                                        'option',
                                                        { key: leave,
                                                            value: leave },
                                                        leave
                                                    );
                                                })
                                            )
                                        )
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                {
                                    className: loggedInUser && U.userHasOnlyRole(loggedInUser, SC.ROLE_TOP_MANAGEMENT) ? "estimation" : "estimation leave" },
                                _react2.default.createElement(
                                    _reactBootstrapTable.BootstrapTable,
                                    { options: this.options, data: leaves,
                                        multiColumnSearch: true,
                                        search: true,
                                        striped: true,
                                        trClassName: this.rowClassNameFormat.bind(this),
                                        hover: true },
                                    _react2.default.createElement(
                                        _reactBootstrapTable.TableHeaderColumn,
                                        { columnTitle: true, isKey: true, dataField: '_id',
                                            hidden: true },
                                        'ID'
                                    ),
                                    _react2.default.createElement(
                                        _reactBootstrapTable.TableHeaderColumn,
                                        { width: '6%', dataField: 'button',
                                            dataFormat: this.viewButton.bind(this) },
                                        'View'
                                    ),
                                    loggedInUser && U.userHasRole(loggedInUser, SC.ROLE_TOP_MANAGEMENT) ? _react2.default.createElement(
                                        _reactBootstrapTable.TableHeaderColumn,
                                        { width: '10%', columnTitle: true, dataField: 'user',
                                            dataFormat: this.formatLeaveRaisedUser.bind(this) },
                                        'Raised By'
                                    ) : _react2.default.createElement(
                                        _reactBootstrapTable.TableHeaderColumn,
                                        { width: '8%', columnTitle: true, dataField: 'created',
                                            dataFormat: this.formatCreatedDate.bind(this) },
                                        'Created'
                                    ),
                                    _react2.default.createElement(
                                        _reactBootstrapTable.TableHeaderColumn,
                                        { columnTitle: true, width: '8%', dataField: 'startDateString'
                                        },
                                        'Start Date'
                                    ),
                                    _react2.default.createElement(
                                        _reactBootstrapTable.TableHeaderColumn,
                                        { columnTitle: true, width: '8%', dataField: 'endDateString'
                                        },
                                        'End Date'
                                    ),
                                    _react2.default.createElement(
                                        _reactBootstrapTable.TableHeaderColumn,
                                        { width: '8%', columnTitle: true, dataField: 'dayType' },
                                        'Day Type'
                                    ),
                                    _react2.default.createElement(
                                        _reactBootstrapTable.TableHeaderColumn,
                                        { columnTitle: true, dataField: 'leaveType',
                                            dataFormat: this.formatLeaveType.bind(this) },
                                        'Leave Type'
                                    ),
                                    _react2.default.createElement(
                                        _reactBootstrapTable.TableHeaderColumn,
                                        { width: '10%', columnTitle: true,
                                            dataField: 'status' },
                                        'Status'
                                    ),
                                    _react2.default.createElement(
                                        _reactBootstrapTable.TableHeaderColumn,
                                        { columnTitle: true, width: '17%', dataField: 'approver',
                                            dataFormat: this.formatLeaveApproverUser.bind(this) },
                                        'Approver'
                                    ),
                                    loggedInUser && U.userHasOnlyRole(loggedInUser, SC.ROLE_TOP_MANAGEMENT) ? null : _react2.default.createElement(
                                        _reactBootstrapTable.TableHeaderColumn,
                                        { width: '7%', dataField: 'deleteButton',
                                            dataFormat: this.viewDeleteButton.bind(this) },
                                        'Delete'
                                    ),
                                    loggedInUser && U.userHasRole(loggedInUser, SC.ROLE_TOP_MANAGEMENT) && _react2.default.createElement(
                                        _reactBootstrapTable.TableHeaderColumn,
                                        { width: '7%',
                                            dataField: 'cancelButton',
                                            dataFormat: this.viewCancelButton.bind(this) },
                                        'Reject'
                                    ),
                                    loggedInUser && U.userHasRole(loggedInUser, SC.ROLE_TOP_MANAGEMENT) && _react2.default.createElement(
                                        _reactBootstrapTable.TableHeaderColumn,
                                        { width: '7%',
                                            dataField: 'approveButton',
                                            dataFormat: this.viewApproveButton.bind(this) },
                                        'Approve'
                                    )
                                ),
                                this.state && this.state.showLeaveDeleteRequestDialog && _react2.default.createElement(_index.ConfirmationDialog, { show: true,
                                    onConfirm: this.onConfirmDeleteRequest.bind(this),
                                    title: 'Leave Delete', onClose: this.onClose.bind(this),
                                    body: 'Are you sure you want to delete this leave. Please confirm!' })
                            )
                        )
                    )
                )
            );
        }
    }]);

    return LeaveList;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)(LeaveList);

/***/ }),

/***/ "COMo":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EstimationFeatureDialog = function EstimationFeatureDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Add Feature to Estimation'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.EstimationFeatureFormContainer, null)
        )
    );
};

exports.default = EstimationFeatureDialog;

/***/ }),

/***/ "CkOn":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var initialState = {
    all: [],
    selected: {}
};

var roleReducer = function roleReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case AC.ADD_ROLES:
            return Object.assign({}, state, { all: action.roles });
        case AC.ADD_ROLE:
            return Object.assign({}, state, { all: [].concat(_toConsumableArray(state.all), [action.role]) });
        case AC.EDIT_ROLE:
            return Object.assign({}, state, { all: state.all.map(function (item) {
                    return item._id == action.role._id ? action.role : item;
                }) });
        case AC.DELETE_ROLE:
            return Object.assign({}, state, { all: state.all.filter(function (item) {
                    return item._id !== action.role._id;
                }) });
        case AC.ADMIN_EDITING_ROLE:
            // Admin has started editing this role (he can only enable/disable permissions), add appropriate needed for edit
            return Object.assign({}, state, {
                selected: Object.assign({}, action.role, { permissions: Array.isArray(action.role.permissions) ? action.role.permissions.filter(function (p) {
                        return p.enabled;
                    }) : [] }),
                permissionOptions: action.role.permissions
            });

        default:
            return state;
    }
};

exports.default = roleReducer;

/***/ }),

/***/ "D0UX":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ReleaseMoveTaskPlanFormDialog = function ReleaseMoveTaskPlanFormDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Move Task'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.ReleaseMoveTaskPlanFormContainer, null)
        )
    );
};

exports.default = ReleaseMoveTaskPlanFormDialog;

/***/ }),

/***/ "DQDW":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CreateReleaseDialog = function CreateReleaseDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'add-to-release-dialog', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Create Release'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.CreateReleaseFormContainer, null)
        )
    );
};

exports.default = CreateReleaseDialog;

/***/ }),

/***/ "Dakj":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TaskShiftDialog = function TaskShiftDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Shift Task'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.ReleaseTaskPlanningShiftFormContainer, null)
        )
    );
};

exports.default = TaskShiftDialog;

/***/ }),

/***/ "DcaD":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__serverconstants__ = __webpack_require__("Uq5S");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_timezone__ = __webpack_require__("xNPZ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_timezone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment_timezone__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash__ = __webpack_require__("M4fF");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash__);



//import logger from './logger'

const isAuthenticated = (ctx) => {
    if (ctx.isAuthenticated())
        return true
    return false
}
/* harmony export (immutable) */ __webpack_exports__["isAuthenticated"] = isAuthenticated;


const isSuperAdmin = (ctx) => {
    if (ctx.isAuthenticated()) {
        if (ctx.state.user && Array.isArray(ctx.state.user.roles) && ctx.state.user.roles.findIndex(r => r.name === __WEBPACK_IMPORTED_MODULE_0__serverconstants__["ROLE_SUPER_ADMIN"]) !== -1)
            return true
    }
    return false
}
/* harmony export (immutable) */ __webpack_exports__["isSuperAdmin"] = isSuperAdmin;


const isHighestManagementRole = (ctx) => {
    if (ctx.isAuthenticated()) {
        if (ctx.state.user && Array.isArray(ctx.state.user.roles) && ctx.state.user.roles.findIndex(r => r.name === __WEBPACK_IMPORTED_MODULE_0__serverconstants__["ROLE_TOP_MANAGEMENT"]) !== -1)
            return true
    }
    return false
}
/* harmony export (immutable) */ __webpack_exports__["isHighestManagementRole"] = isHighestManagementRole;


const isAdmin = (ctx) => {
    if (ctx.isAuthenticated()) {
        if (ctx.state.user && Array.isArray(ctx.state.user.roles) && ctx.state.user.roles.findIndex(r => r.name === __WEBPACK_IMPORTED_MODULE_0__serverconstants__["ROLE_ADMIN"]) !== -1)
            return true
    }
    return false
}
/* harmony export (immutable) */ __webpack_exports__["isAdmin"] = isAdmin;


const isAppUser = (ctx) => {
    if (ctx.isAuthenticated()) {
        if (ctx.state.user && Array.isArray(ctx.state.user.roles) && ctx.state.user.roles.findIndex(r => r.name === __WEBPACK_IMPORTED_MODULE_0__serverconstants__["ROLE_APP_USER"]) !== -1)
            return true
    }
    return false
}
/* harmony export (immutable) */ __webpack_exports__["isAppUser"] = isAppUser;


const hasRole = (ctx, roleName) => {
    if (ctx.isAuthenticated()) {
        if (ctx.state.user && Array.isArray(ctx.state.user.roles) && ctx.state.user.roles.findIndex(r => r.name === roleName) !== -1)
            return true
    }
    return false
}
/* harmony export (immutable) */ __webpack_exports__["hasRole"] = hasRole;


const userHasRole = (user, roleName) => {
    if (user && Array.isArray(user.roles) && user.roles.length && user.roles.findIndex(r => r.name === roleName) !== -1)
        return true
    return false
}
/* harmony export (immutable) */ __webpack_exports__["userHasRole"] = userHasRole;



const userHasOnlyRole = (user, roleName) => {
    if (user && Array.isArray(user.roles) && user.roles.length && user.roles.length === 1 && user.roles.findIndex(r => r.name === roleName) !== -1)
        return true
    return false
}
/* harmony export (immutable) */ __webpack_exports__["userHasOnlyRole"] = userHasOnlyRole;


const dateInUTC = (dateString) => {
    let momentDate = __WEBPACK_IMPORTED_MODULE_1_moment_timezone___default.a.tz(dateString, __WEBPACK_IMPORTED_MODULE_0__serverconstants__["DATE_FORMAT"], __WEBPACK_IMPORTED_MODULE_0__serverconstants__["UTC_TIMEZONE"]).startOf('day')
    if (momentDate.isValid())
        return momentDate.toDate()
    return undefined
}
/* harmony export (immutable) */ __webpack_exports__["dateInUTC"] = dateInUTC;


const momentInUTC = (dateString) => {
    let momentDate = __WEBPACK_IMPORTED_MODULE_1_moment_timezone___default.a.tz(dateString, __WEBPACK_IMPORTED_MODULE_0__serverconstants__["DATE_FORMAT"], __WEBPACK_IMPORTED_MODULE_0__serverconstants__["UTC_TIMEZONE"]).startOf('day')
    if (momentDate.isValid())
        return momentDate
    return undefined
}
/* harmony export (immutable) */ __webpack_exports__["momentInUTC"] = momentInUTC;



const convertUTCDateMomentToTZ = (utcMoment, timeZone) => {
    // format in utc
    console.log("utc moment found as ", utcMoment)

    let dateString = utcMoment.utc().format(__WEBPACK_IMPORTED_MODULE_0__serverconstants__["DATE_FORMAT"])
    console.log("date string in utc is ", dateString)
    // now parse it using timezone
    return __WEBPACK_IMPORTED_MODULE_1_moment_timezone___default.a.tz(dateString, __WEBPACK_IMPORTED_MODULE_0__serverconstants__["DATE_FORMAT"], timeZone).clone()

}
/* harmony export (immutable) */ __webpack_exports__["convertUTCDateMomentToTZ"] = convertUTCDateMomentToTZ;


const sameMomentInUTC = (d) => {
    return __WEBPACK_IMPORTED_MODULE_1_moment_timezone___default.a.utc().startOf('day').minute(d.getMinutes()).hour(d.getHours()).date(d.getDate()).month(d.getMonth()).year(d.getFullYear())
}
/* harmony export (immutable) */ __webpack_exports__["sameMomentInUTC"] = sameMomentInUTC;


const sameMomentInTimezone = (d, timeZone) => {
    console.log("d.getMinutes() ", d.getMinutes())
    console.log("d.getHours() ", d.getHours())
    return __WEBPACK_IMPORTED_MODULE_1_moment_timezone___default.a.tz(timeZone).startOf('day').minute(d.getMinutes()).hour(d.getHours()).date(d.getDate()).month(d.getMonth()).year(d.getFullYear())
}
/* harmony export (immutable) */ __webpack_exports__["sameMomentInTimezone"] = sameMomentInTimezone;



const momentFromDBDate = (d) => {
    return __WEBPACK_IMPORTED_MODULE_1_moment_timezone___default.a.tz(d, __WEBPACK_IMPORTED_MODULE_0__serverconstants__["UTC_TIMEZONE"])
}
/* harmony export (immutable) */ __webpack_exports__["momentFromDBDate"] = momentFromDBDate;



const momentFromDateInTimeZone = (d, timeZone) => {
    return __WEBPACK_IMPORTED_MODULE_1_moment_timezone___default.a.tz(timeZone).startOf('day').minute(d.getMinutes()).hour(d.getHours()).date(d.getDate()).month(d.getMonth()).year(d.getFullYear())
}
/* harmony export (immutable) */ __webpack_exports__["momentFromDateInTimeZone"] = momentFromDateInTimeZone;


const formatDateInUTC = (date) => {
    return __WEBPACK_IMPORTED_MODULE_1_moment_timezone___default()(date).utc().format(__WEBPACK_IMPORTED_MODULE_0__serverconstants__["DATE_FORMAT"])
}
/* harmony export (immutable) */ __webpack_exports__["formatDateInUTC"] = formatDateInUTC;


const formatDateInTimezone = (date, timeZone) => {
    return __WEBPACK_IMPORTED_MODULE_1_moment_timezone___default()(date).tz(timeZone).format(__WEBPACK_IMPORTED_MODULE_0__serverconstants__["DATE_FORMAT"])
}
/* harmony export (immutable) */ __webpack_exports__["formatDateInTimezone"] = formatDateInTimezone;


const formatDateTimeInTimezone = (date, timeZone) => {
    return __WEBPACK_IMPORTED_MODULE_1_moment_timezone___default()(date).tz(timeZone).format(__WEBPACK_IMPORTED_MODULE_0__serverconstants__["DATE_TIME_FORMAT"])
}
/* harmony export (immutable) */ __webpack_exports__["formatDateTimeInTimezone"] = formatDateTimeInTimezone;



const momentInTimeZone = (dateString, timeZone) => {
    let momentDate = __WEBPACK_IMPORTED_MODULE_1_moment_timezone___default.a.tz(dateString, __WEBPACK_IMPORTED_MODULE_0__serverconstants__["DATE_FORMAT"], timeZone)
    if (momentDate.isValid())
        return momentDate
    return undefined
}
/* harmony export (immutable) */ __webpack_exports__["momentInTimeZone"] = momentInTimeZone;


const nowMomentInTimeZone = (timeZone) => {
    let now = new Date()
    let nowString = formatDateInTimezone(now, timeZone)
    let nowMoment = __WEBPACK_IMPORTED_MODULE_1_moment_timezone___default.a.tz(nowString, __WEBPACK_IMPORTED_MODULE_0__serverconstants__["DATE_FORMAT"], timeZone)
    if (nowMoment.isValid())
        return nowMoment
    return undefined
}
/* harmony export (immutable) */ __webpack_exports__["nowMomentInTimeZone"] = nowMomentInTimeZone;


const nowMomentInIndia = () => {
    let now = new Date()
    let nowString = formatDateInTimezone(now, __WEBPACK_IMPORTED_MODULE_0__serverconstants__["INDIAN_TIMEZONE"])
    let nowMoment = __WEBPACK_IMPORTED_MODULE_1_moment_timezone___default.a.tz(nowString, __WEBPACK_IMPORTED_MODULE_0__serverconstants__["DATE_FORMAT"], __WEBPACK_IMPORTED_MODULE_0__serverconstants__["INDIAN_TIMEZONE"])
    if (nowMoment.isValid())
        return nowMoment
    return undefined
}
/* harmony export (immutable) */ __webpack_exports__["nowMomentInIndia"] = nowMomentInIndia;


const getPastMidNight = (timeZone) => {
    return __WEBPACK_IMPORTED_MODULE_1_moment_timezone___default()().tz(timeZone).startOf('day')
}
/* harmony export (immutable) */ __webpack_exports__["getPastMidNight"] = getPastMidNight;


const getNextMidNight = (timeZone) => {
    return __WEBPACK_IMPORTED_MODULE_1_moment_timezone___default()().tz(timeZone).startOf('day').add(1, 'day')
}
/* harmony export (immutable) */ __webpack_exports__["getNextMidNight"] = getNextMidNight;


const getNowMomentInUtc = () => {
    let now = new Date()
    let nowString = formatDateInTimezone(now, __WEBPACK_IMPORTED_MODULE_0__serverconstants__["DATE_FORMAT"], __WEBPACK_IMPORTED_MODULE_0__serverconstants__["UTC_TIMEZONE"])
    let nowMoment = momentInUTC(nowString)

    if (nowMoment.isValid())
        return nowMoment
    return undefined
}
/* harmony export (immutable) */ __webpack_exports__["getNowMomentInUtc"] = getNowMomentInUtc;


const getNowStringInIndia = () => {
    let now = new Date()
    let nowString = formatDateInTimezone(now, __WEBPACK_IMPORTED_MODULE_0__serverconstants__["INDIAN_TIMEZONE"])
    return nowString
}
/* harmony export (immutable) */ __webpack_exports__["getNowStringInIndia"] = getNowStringInIndia;


const getNowStringInUtc = () => {
    let now = new Date()
    let nowString = formatDateInTimezone(now, __WEBPACK_IMPORTED_MODULE_0__serverconstants__["UTC_TIMEZONE"])
    return nowString
}
/* harmony export (immutable) */ __webpack_exports__["getNowStringInUtc"] = getNowStringInUtc;


const getCurrentYear = () => {
    let now = new Date()
    return now.getFullYear()
}
/* harmony export (immutable) */ __webpack_exports__["getCurrentYear"] = getCurrentYear;


/**
 * Returns true if if array in second argument include value/values in first argument
 * @param values - primitive or array
 * @param arr - Array
 * @returns {boolean}
 */
const includeAny = (values, arr) => {
    if (!Array.isArray(arr))
        return false
    if (Array.isArray(values)) {
        let result = false;
        values.forEach(v => {
                if (__WEBPACK_IMPORTED_MODULE_2_lodash___default.a.includes(arr, v))
                    result = true
            }
        )
        return result;
    } else if (values) {
        if (__WEBPACK_IMPORTED_MODULE_2_lodash___default.a.includes(arr, values))
            return true;
    }
    return false
}
/* harmony export (immutable) */ __webpack_exports__["includeAny"] = includeAny;


const getFullName = (user) => {
    return user ? user.firstName && user.lastName ? user.firstName + ' ' + user.lastName : user.firstName ? user.firstName : user.lastName ? user.lastName : '' : ''
}
/* harmony export (immutable) */ __webpack_exports__["getFullName"] = getFullName;


const twoDecimalHours = (hours) => {
    return parseFloat(hours.toFixed(2))
}
/* harmony export (immutable) */ __webpack_exports__["twoDecimalHours"] = twoDecimalHours;


/***/ }),

/***/ "DoGw":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _AppHome = __webpack_require__("S/Cv");

var _AppHome2 = _interopRequireDefault(_AppHome);

var _reactRouterDom = __webpack_require__("F8kA");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var mapStateToProps = function mapStateToProps(state) {
    return {
        loggedInUser: state.user.loggedIn
    };
};

var AppHomeContainer = (0, _reactRouterDom.withRouter)((0, _reactRedux.connect)(mapStateToProps)(_AppHome2.default));

exports.default = AppHomeContainer;

/***/ }),

/***/ "E0gF":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.editProjectOnServer = exports.deleteProjectOnServer = exports.addProjectOnServer = exports.getAllProjectsUserEstimationsFromServer = exports.getAllProjectsUserReleasesFromServer = exports.getAllProjectsFromServer = exports.editProject = exports.deleteProject = exports.addProject = exports.addProjects = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var addProjects = exports.addProjects = function addProjects(projects) {
    return {
        type: AC.ADD_PROJECTS,
        projects: projects
    };
};

var addProject = exports.addProject = function addProject(project) {
    return {
        type: AC.ADD_PROJECT,
        project: project
    };
};

var deleteProject = exports.deleteProject = function deleteProject(projectID) {
    return {
        type: AC.DELETE_PROJECT,
        projectID: projectID
    };
};

var editProject = exports.editProject = function editProject(project) {
    return {

        type: AC.EDIT_PROJECT,
        project: project
    };
};

var getAllProjectsFromServer = exports.getAllProjectsFromServer = function getAllProjectsFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/projects', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addProjects(json.data));
            }
        });
    };
};

var getAllProjectsUserReleasesFromServer = exports.getAllProjectsUserReleasesFromServer = function getAllProjectsUserReleasesFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/projects/user-releases', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addProjects(json.data));
            }
        });
    };
};

var getAllProjectsUserEstimationsFromServer = exports.getAllProjectsUserEstimationsFromServer = function getAllProjectsUserEstimationsFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/projects/user-estimations', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addProjects(json.data));
            }
        });
    };
};

var addProjectOnServer = exports.addProjectOnServer = function addProjectOnServer(formInput) {
    return function (dispatch, getState) {
        return fetch('/api/projects', {
            method: "post",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addProject(json.data));
            }
            return json;
        });
    };
};

var deleteProjectOnServer = exports.deleteProjectOnServer = function deleteProjectOnServer(projectID) {
    return function (dispatch, getState) {
        return fetch('/api/projects/' + projectID, {
            method: "delete",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'ap plication/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(deleteProject(projectID));
                // clear user form after update is successful
            }
            return json;
        });
    };
};

var editProjectOnServer = exports.editProjectOnServer = function editProjectOnServer(project) {
    return function (dispatch, getState) {
        return fetch('/api/projects', {
            method: "put",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(project)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(editProject(json.data));
            }
            return json;
        });
    };
};

/***/ }),

/***/ "E24d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var initialState = {
    plannedVsUnplannedWork: {},
    overallProgress: {},
    completedPendingProgress: {},
    plannedVsReported: {},
    hoursData: {},
    estimatedProgress: {},
    progress: {},
    dailyPlannings: [],
    resetDailyPlanningMonth: false

};

var dashboardReducer = function dashboardReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case AC.CALCULATE_RELEASE_STATS:

            var plannedVsUnplannedWork = {};
            var overallProgress = {};
            var completedPendingProgress = {};
            var plannedVsReported = {};
            var hoursData = {};
            var estimatedProgress = {};
            var progress = {};

            var release = Object.assign({}, action.release);

            // To calculate percentage of planned work we need to iterate on all iterations of type 'planned' and then
            // sum all plannedHoursEstimatedTasks and then compare them against sum of all estimated hours
            var plannedIterations = release.iterations.filter(function (i) {
                return i.type == SC.ITERATION_TYPE_PLANNED || i.type == SC.ITERATION_TYPE_ESTIMATED;
            });

            // there should only be one unplanned iteration
            var unPlannedIteration = release.iterations.find(function (i) {
                return i.type == SC.ITERATION_TYPE_UNPLANNED;
            });

            if (plannedIterations && plannedIterations.length) {

                var s = {
                    sumPlannedHours: 0,
                    sumEstimatedHours: 0,
                    sumReportedHours: 0,
                    sumEstimatedHoursCompletedTasks: 0,
                    sumPlannedHoursReportedTasks: 0,
                    sumProgressEstimatedHours: 0,
                    sumPlannedHoursEstimatedTasks: 0
                };

                plannedIterations.forEach(function (p) {
                    s.sumPlannedHours += p.plannedHours;
                    s.sumEstimatedHours += p.estimatedHours;
                    s.sumReportedHours += p.reportedHours;
                    s.sumEstimatedHoursCompletedTasks += p.estimatedHoursCompletedTasks;
                    s.sumPlannedHoursReportedTasks += p.plannedHoursReportedTasks;
                    s.sumProgressEstimatedHours += p.estimatedHours * p.progress;
                    s.sumPlannedHoursEstimatedTasks += p.plannedHoursEstimatedTasks;
                });

                /**
                 * Overall progress
                 */

                progress['actual'] = s.sumEstimatedHours != 0 ? parseFloat((s.sumProgressEstimatedHours / s.sumEstimatedHours).toFixed(2)) : 0;
                overallProgress = {
                    ran: Math.random(),
                    total: 100,
                    progress: progress['actual'],
                    remaining: parseFloat((100 - progress['actual']).toFixed(2))

                    /**
                     * Progress Completed/Pending tasks
                     */

                };var progressCompletedTasks = s.sumEstimatedHours != 0 ? parseFloat((s.sumEstimatedHoursCompletedTasks * 100 / s.sumEstimatedHours).toFixed(2)) : 0;
                //progressCompletedTasks = parseFloat(progressCompletedTasks.toFixed(2))
                var progressPendingTasks = parseFloat((progress['actual'] - progressCompletedTasks).toFixed(2));

                completedPendingProgress = {
                    ran: Math.random(),
                    total: 100,
                    completed: progressCompletedTasks,
                    pending: progressPendingTasks,
                    remaining: parseFloat((100 - progress['actual']).toFixed(2))

                    /**
                     * Estimated progress as per reporting
                     */

                };var estimatedProgressReporting = s.sumEstimatedHours != 0 ? parseFloat((s.sumReportedHours * 100 / s.sumEstimatedHours).toFixed(2)) : 0;
                var estimatedProgressPlanning = s.sumEstimatedHours != 0 ? parseFloat((s.sumPlannedHoursReportedTasks * 100 / s.sumEstimatedHours).toFixed(2)) : 0;

                estimatedProgress = {
                    ran: Math.random(),
                    reported: estimatedProgressReporting,
                    planned: estimatedProgressPlanning,
                    remainingReported: parseFloat((100 - estimatedProgressReporting).toFixed(2)),
                    remainingPlanned: parseFloat((100 - estimatedProgressPlanning).toFixed(2))
                };

                progress['reported'] = estimatedProgressReporting;
                progress['planned'] = estimatedProgressPlanning;

                /**
                 * Planned Vs Unplanned work calculation
                 */

                var planned = s.sumEstimatedHours != 0 ? parseFloat((s.sumPlannedHoursEstimatedTasks * 100 / s.sumEstimatedHours).toFixed(2)) : 0;
                plannedVsUnplannedWork = {
                    ran: Math.random(), // added random as animation and label were not working simultaneously, need to remove this as soon as bug with rechart is fixed
                    total: 100,
                    planned: planned,
                    unplanned: parseFloat((100 - planned).toFixed(2))

                    /**
                     * Planned v/s Reported Bar graph calculations
                     */

                };plannedVsReported = {
                    ran: Math.random(),
                    base: s.sumPlannedHoursReportedTasks >= s.sumReportedHours ? s.sumReportedHours : s.sumPlannedHoursReportedTasks,
                    baseHour: s.sumPlannedHoursReportedTasks >= s.sumReportedHours ? 'reported' : 'planned',
                    extra: s.sumPlannedHoursReportedTasks >= s.sumReportedHours ? s.sumPlannedHoursReportedTasks - s.sumReportedHours : s.sumReportedHours - s.sumPlannedHoursReportedTasks

                    /**
                     * Hours comparison pie chart data
                     */

                };hoursData.plannedHours = s.sumPlannedHours;
                hoursData.reportedHours = s.sumReportedHours;
                hoursData.estimatedHours = s.sumEstimatedHours;
            }

            var unplannedReport = {
                ran: Math.random(),
                reportedHours: unPlannedIteration ? unPlannedIteration.reportedHours : 0
            };

            return Object.assign({}, state, {
                plannedVsUnplannedWork: plannedVsUnplannedWork,
                overallProgress: overallProgress,
                completedPendingProgress: completedPendingProgress,
                plannedVsReported: plannedVsReported,
                hoursData: hoursData,
                estimatedProgress: estimatedProgress,
                progress: progress,
                unplannedReport: unplannedReport,
                mgmtData: {
                    ran: Math.random(),
                    plannedAfter: action.mgmtData.plannedAfterAvg,
                    plannedBefore: -action.mgmtData.plannedBeforeAvg,
                    reportedAfter: action.mgmtData.reportedAfterAvg,
                    plannedHoursLastMinuteLeave: action.mgmtData.plannedHoursLastMinuteLeave,
                    plannedHoursOnLeave: action.mgmtData.plannedHoursOnLeave - action.mgmtData.plannedHoursLastMinuteLeave
                }
            });

        case AC.ADD_DAILY_PLANNINGS:
            return Object.assign({}, state, {
                dailyPlannings: [].concat(_toConsumableArray(action.dailyPlannings)),
                resetDailyPlanningMonth: action.resetDailyPlanningMonth,
                plannedVsUnplannedWork: Object.assign({}, state.plannedVsUnplannedWork, {
                    ran: Math.random()
                }),
                overallProgress: Object.assign({}, state.overallProgress, {
                    ran: Math.random()
                }),
                completedPendingProgress: Object.assign({}, state.completedPendingProgress, {
                    ran: Math.random()
                }),
                plannedVsReported: Object.assign({}, state.plannedVsReported, {
                    ran: Math.random()
                }),
                hoursData: Object.assign({}, state.hoursData, {
                    ran: Math.random()
                }),
                estimatedProgress: Object.assign({}, state.estimatedProgress, {
                    ran: Math.random()
                }),
                progress: Object.assign({}, state.progress, {
                    ran: Math.random()
                }),
                unplannedReport: Object.assign({}, state.unplannedReport, {
                    ran: Math.random()
                }),
                mgmtData: Object.assign({}, state.mgmtData, {
                    ran: Math.random()
                })
            });
            break;

        case AC.SET_RELEASE_ID:
            // while selection of reporting status it is set to state also
            return Object.assign({}, state, {
                selectedReleaseID: action.releaseID
            });
        case AC.ADD_USER_RELEASES:
            // All Releases where loggedIn user in involved as (manager, leader, developer)
            return Object.assign({}, state, {
                allReleases: action.releases
            });
        default:
            return state;
    }
};
exports.default = dashboardReducer;

/***/ }),

/***/ "EVox":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var initialState = {
    all: [],
    selected: {}
};

var clientReducer = function clientReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case AC.ADD_CLIENTS:
            return Object.assign({}, state, { all: action.clients });

        case AC.ADD_CLIENT:
            return Object.assign({}, state, { all: [].concat(_toConsumableArray(state.all), [action.client]) });

        case AC.DELETE_CLIENT:
            return Object.assign({}, state, { all: state.all.filter(function (item) {
                    return item._id !== action.clientID;
                }) });

        case AC.UPDATE_CLIENT:
            return Object.assign({}, state, { all: state.all.map(function (item) {
                    return item._id == action.client._id ? action.client : item;
                }) });
        default:
            return state;
    }
};

exports.default = clientReducer;

/***/ }),

/***/ "EgcK":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var now = new Date();
var nowString = (0, _moment2.default)(now).format(SC.DATE_FORMAT);
var initialState = {
    allAvailableReleases: [],
    all: [],
    releasePlans: [],
    selectedRelease: {},
    selectedReleasePlan: {},
    teamOfRelease: [],
    taskPlans: [],
    developerPlans: [],
    expanded: false,
    fromSchedule: nowString,
    schedules: [],
    employeeSetting: {},
    from: nowString,
    selectedTab: SC.RELEASE_DASHBOARD_TAB,
    taskPlansOfReleasePlanDeveloper: []
};

var releaseReducer = function releaseReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case AC.ADD_AVAILABLE_RELEASES:
            // add all releases from server

            return Object.assign({}, state, { allAvailableReleases: action.releases && Array.isArray(action.releases) && action.releases.length ? action.releases : [] });

        case AC.ADD_RELEASES:
            // add all releases from server
            var allReleases = action.releases && Array.isArray(action.releases) && action.releases.length ? action.releases.map(function (r) {
                var plannedIterations = r.iterations.filter(function (i) {
                    return i.type == SC.ITERATION_TYPE_PLANNED || i.type == SC.ITERATION_TYPE_ESTIMATED;
                });
                var s = {
                    sumPlannedHours: 0,
                    sumEstimatedHours: 0,
                    sumReportedHours: 0,
                    sumEstimatedHoursCompletedTasks: 0,
                    sumPlannedHoursReportedTasks: 0,
                    sumProgressEstimatedHours: 0,
                    sumPlannedHoursEstimatedTasks: 0,
                    sumExpectedBilledHours: 0
                };

                plannedIterations.forEach(function (p) {
                    s.sumPlannedHours += p.plannedHours;
                    s.sumEstimatedHours += p.estimatedHours;
                    s.sumReportedHours += p.reportedHours;
                    s.sumEstimatedHoursCompletedTasks += p.estimatedHoursCompletedTasks;
                    s.sumPlannedHoursReportedTasks += p.plannedHoursReportedTasks;
                    s.sumProgressEstimatedHours += p.estimatedHours * p.progress;
                    s.sumPlannedHoursEstimatedTasks += p.plannedHoursEstimatedTasks;
                    s.sumExpectedBilledHours += p.expectedBilledHours;
                });

                s.progress = s.sumEstimatedHours != 0 ? parseFloat((s.sumProgressEstimatedHours / s.sumEstimatedHours).toFixed(2)) : 0;
                r.plannedStats = s;
                return r;
            }) : [];

            return Object.assign({}, state, { all: allReleases });

        case AC.ADD_RELEASE:
            var addedRelease = action.release;
            var plannedItrs = addedRelease.iterations.filter(function (i) {
                return i.type == SC.ITERATION_TYPE_PLANNED || i.type == SC.ITERATION_TYPE_ESTIMATED;
            });
            var sums = {
                sumPlannedHours: 0,
                sumEstimatedHours: 0,
                sumReportedHours: 0,
                sumEstimatedHoursCompletedTasks: 0,
                sumPlannedHoursReportedTasks: 0,
                sumProgressEstimatedHours: 0,
                sumPlannedHoursEstimatedTasks: 0,
                sumExpectedBilledHours: 0
            };

            plannedItrs.forEach(function (p) {
                sums.sumPlannedHours += p.plannedHours;
                sums.sumEstimatedHours += p.estimatedHours;
                sums.sumReportedHours += p.reportedHours;
                sums.sumEstimatedHoursCompletedTasks += p.estimatedHoursCompletedTasks;
                sums.sumPlannedHoursReportedTasks += p.plannedHoursReportedTasks;
                sums.sumProgressEstimatedHours += p.estimatedHours * p.progress;
                sums.sumPlannedHoursEstimatedTasks += p.plannedHoursEstimatedTasks;
                sums.sumExpectedBilledHours += p.expectedBilledHours;
            });

            sums.progress = sums.sumEstimatedHours != 0 ? parseFloat((sums.sumProgressEstimatedHours / sums.sumEstimatedHours).toFixed(2)) : 0;
            addedRelease.plannedStats = sums;
            return Object.assign({}, state, { all: [].concat(_toConsumableArray(state.all), [addedRelease]) });
            break;
        case AC.RELEASE_SELECTED:
            // add selected release details from server
            // Select team

            var release = action.release;

            var plannedIterations = release.iterations.filter(function (i) {
                return i.type == SC.ITERATION_TYPE_PLANNED || i.type == SC.ITERATION_TYPE_ESTIMATED;
            });
            var sm = {
                sumPlannedHours: 0,
                sumEstimatedHours: 0,
                sumReportedHours: 0,
                sumEstimatedHoursCompletedTasks: 0,
                sumPlannedHoursReportedTasks: 0,
                sumProgressEstimatedHours: 0,
                sumPlannedHoursEstimatedTasks: 0,
                sumExpectedBilledHours: 0
            };

            plannedIterations.forEach(function (p) {
                sm.sumPlannedHours += p.plannedHours;
                sm.sumEstimatedHours += p.estimatedHours;
                sm.sumReportedHours += p.reportedHours;
                sm.sumEstimatedHoursCompletedTasks += p.estimatedHoursCompletedTasks;
                sm.sumPlannedHoursReportedTasks += p.plannedHoursReportedTasks;
                sm.sumProgressEstimatedHours += p.estimatedHours * p.progress;
                sm.sumPlannedHoursEstimatedTasks += p.plannedHoursEstimatedTasks;
                sm.sumExpectedBilledHours += p.expectedBilledHours;
            });

            sm.progress = sm.sumEstimatedHours != 0 ? parseFloat((sm.sumProgressEstimatedHours / sm.sumEstimatedHours).toFixed(2)) : 0;
            release.plannedStats = sm;
            return Object.assign({}, state, {
                selectedRelease: release,
                teamOfRelease: [].concat(_toConsumableArray(action.release.team), _toConsumableArray(action.release.nonProjectTeam))
            });

        case AC.ADD_RELEASE_PLANS:
            // adding release plan li
            return Object.assign({}, state, { releasePlans: action.releasePlans });

        case AC.RELEASE_PLAN_SELECTED:
            // selecting release plan and its initial data
            return Object.assign({}, state, {
                selectedReleasePlan: action.releasePlan,
                expanded: false,
                developerPlans: []
            });

        case AC.UPDATE_RELEASE_PLAN:
            // update release plan details
            return Object.assign({}, state, {
                selectedReleasePlan: action.releasePlan
            });

        case AC.ADD_RELEASE_TASK_PLANNINGS:
            // Stores task planning details on Release section of selected tasks
            return Object.assign({}, state, {
                taskPlans: action.taskPlans,
                expanded: false
            });

        case AC.ADD_RELEASE_TASK_PLANNING_TO_STATE:
            // Add task planning to planning list
            return Object.assign({}, state, {
                taskPlans: [].concat(_toConsumableArray(state.taskPlans), [action.taskPlan])
            });

        case AC.UPDATE_TASK_PLANNING:
            // update task planning from planning list
            return Object.assign({}, state, {
                taskPlans: state.taskPlans && Array.isArray(state.taskPlans) && state.taskPlans.length ? state.taskPlans.map(function (tp) {
                    return tp._id === action.taskPlan._id ? Object.assign({}, action.taskPlan) : tp;
                }) : []
            });

        case AC.UPDATE_TASK_PLANS:
            // update task plans from planning list
            return Object.assign({}, state, {
                taskPlans: state.taskPlans && Array.isArray(state.taskPlans) && state.taskPlans.length ? state.taskPlans.map(function (tp) {
                    if (action.taskPlans.findIndex(function (taskPlan) {
                        return taskPlan._id.toString() === tp._id.toString() === -1;
                    })) return tp;else return action.taskPlans.find(function (taskPlan) {
                        return taskPlan._id.toString() === tp._id.toString();
                    });
                }) : []

            });

        case AC.DELETE_TASK_PLAN:
            // Delete task planning from planning list
            return Object.assign({}, state, {
                taskPlans: state.taskPlans && Array.isArray(state.taskPlans) && state.taskPlans.length ? state.taskPlans.filter(function (plan) {
                    return plan._id.toString() !== action.planID.toString();
                }) : []
            });

        case AC.ADD_DEVELOPER_FILTERED:
            // Stores Developer planning details according to Developer selection  and date  selection
            return Object.assign({}, state, {
                developerPlans: action.developerPlans
            });

        case AC.UPDATE_DEVELOPER_FILTERED:
            // Update Developer Task planning details
            return Object.assign({}, state, {
                developerPlans: state.developerPlans && Array.isArray(state.developerPlans) && state.developerPlans.length ? state.developerPlans.map(function (dp) {
                    return dp._id === action.developerPlanned._id ? Object.assign({}, action.developerPlanned) : dp;
                }) : []
            });

        case AC.EXPAND_DESCRIPTION:
            return Object.assign({}, state, {
                expanded: action.flag
            });

        case AC.SET_DEVELOPERS_SCHEDULE:
            // Show Developer task planning Schedule
            return Object.assign({}, state, {
                schedules: action.schedules
            });

        case AC.SET_EMPLOYEE_SETTINGS:
            // show Developer  status according to Planned task on developer
            return Object.assign({}, state, {
                employeeSetting: action.empSetting
            });

        case AC.SET_FROM_DATE:
            return Object.assign({}, state, {
                from: action.date
            });
        case AC.ADD_TASK_PLANNINGS:
            // add all task-plannings from server
            return Object.assign({}, state, {
                taskPlans: action.taskPlannings
            });
        case AC.UPDATE_RELEASE_DATES:
            // update release dates details
            return Object.assign({}, state, {
                selectedRelease: action.releaseDates
            });
        case AC.RELEASE_TAB_SELECTED:
            return Object.assign({}, state, {
                selectedTab: action.tab
            });
        default:
            return state;
    }
};

exports.default = releaseReducer;

/***/ }),

/***/ "Emu4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(formInput) {
            logger.debug(logger.ESTIMATION_PROJECT_AWARD_FORM_SUBMIT, "formInput:", formInput);
            return dispatch(A.createReleaseOnServer(formInput)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Release Created");
                    // hide dialog
                    dispatch(A.hideComponent(COC.CREATE_RELEASE_FORM_DIALOG));
                } else {
                    _reactNotifications.NotificationManager.error("Release Creation Failed");
                }
            });
        }
    };
};
var mapStateToProps = function mapStateToProps(state) {

    var managers = [];
    var leaders = [];
    var team = [];

    if (state.user.userWithRoleCategory) {
        // Users who has role as a manager or leader or both
        managers = state.user.userWithRoleCategory && state.user.userWithRoleCategory.managers ? state.user.userWithRoleCategory.managers : [];
        leaders = state.user.userWithRoleCategory && state.user.userWithRoleCategory.leaders ? state.user.userWithRoleCategory.leaders : [];
        team = state.user.userWithRoleCategory && state.user.userWithRoleCategory.team ? state.user.userWithRoleCategory.team.map(function (dev, idx) {
            dev.name = dev.firstName + ' ' + dev.lastName;
            return dev;
        }) : [];
    }

    return {
        team: team,
        managers: managers,
        leaders: leaders,
        projects: state.project.all,
        technologies: state.technology.all,
        developmentTypes: state.developmentType.all,
        modules: state.module.all
    };
};

var CreateReleaseFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.CreateReleaseForm);

exports.default = CreateReleaseFormContainer;

/***/ }),

/***/ "Ewko":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBigCalendar = __webpack_require__("jm92");

var _reactBigCalendar2 = _interopRequireDefault(_reactBigCalendar);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactRouterDom = __webpack_require__("F8kA");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_reactBigCalendar2.default.momentLocalizer(_moment2.default);

var CalendarTaskPage = function (_React$Component) {
    _inherits(CalendarTaskPage, _React$Component);

    function CalendarTaskPage(props) {
        _classCallCheck(this, CalendarTaskPage);

        var _this = _possibleConstructorReturn(this, (CalendarTaskPage.__proto__ || Object.getPrototypeOf(CalendarTaskPage)).call(this, props));

        _this.onSelectEvent = _this.onSelectEvent.bind(_this);
        return _this;
    }

    _createClass(CalendarTaskPage, [{
        key: 'onSelectEvent',
        value: function onSelectEvent(event) {
            var _this2 = this;

            return this.props.taskSelected(event).then(function (json) {
                if (json.success) {
                    _this2.props.history.push("/app-home/calendar-task-detail");
                    _this2.props.showTaskDetailPage();
                }
                return json;
            });
        }
    }, {
        key: 'eventStyleGetter',
        value: function eventStyleGetter(event, start, end, isSelected) {

            var bg = "";
            if (event.report.status == "un-reported") {
                bg = "#9fa725";
            } else if (event.report.status == "Started") {
                bg = "#1A4ECD";
            } else if (event.report.status == "pending") {
                bg = "#FF0000";
            } else if (event.report.status == "completed") {

                bg = "#4AD938";
            } else {
                bg = "#000000";
            }

            var style = {
                backgroundColor: bg,
                borderRadius: '0px',
                opacity: 0.8,
                color: "#fff",
                border: '0px',
                display: 'block'
            };
            return {
                style: style
            };
        }
    }, {
        key: 'Event',
        value: function Event(_ref) {
            var event = _ref.event;

            return _react2.default.createElement(
                'span',
                null,
                _react2.default.createElement(
                    'p',
                    null,
                    event.title
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            /* let formats = {
                 // formats the day and week view tp '03/12'
                 dayFormat: (date, culture, localizer) =>
                     localizer.format(date, 'dddd DD-MMM', culture),
                 // formats the top of day view to '03/12'
                 dayHeaderFormat: (date, culture, localizer) =>
                     localizer.format(date, 'dddd DD-MMM', culture),
                 weekdayFormat: (date, culture, localizer) =>
                     localizer.format(date, 'dddd', culture),
                 selectRangeFormat: (date, culture, localizer) =>
                     localizer.format(date, 'dddd', culture)
             }*/

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(_reactBigCalendar2.default, {
                    views: { month: true, week: true, day: true },
                    view: this.props.selectedView,
                    date: this.props.selectedDate,
                    timeslots: 4,
                    components: { event: this.Event },
                    selectable: true,
                    popup: true,
                    onSelectEvent: function onSelectEvent(event) {

                        _this3.onSelectEvent(event);
                    },
                    events: this.props.events && this.props.events.length ? this.props.events : [],
                    startAccessor: 'start',
                    endAccessor: 'end',
                    titleAccessor: 'title',
                    eventPropGetter: this.eventStyleGetter,
                    onNavigate: function onNavigate(date, view) {
                        console.log("onNaviagate called with date ", date);
                        _this3.props.changeViewAndDate(view, date);
                    },
                    onView: function onView(view) {
                        console.log("onView called with date ");
                        _this3.props.changeViewAndDate(view, _this3.props.selectedDate);
                    }
                })
            );
        }
    }]);

    return CalendarTaskPage;
}(_react2.default.Component);

exports.default = (0, _reactRouterDom.withRouter)(CalendarTaskPage);

/***/ }),

/***/ "FQD3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _utils = __webpack_require__("DcaD");

var U = _interopRequireWildcard(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var now = new Date();
var initialState = {
    allReleases: [],
    availableReleases: [],
    taskPlan: {},
    releasePlan: {},
    release: {},
    releaseID: SC.ALL,
    reportedStatus: SC.ALL,
    iterationType: SC.ITERATION_TYPE_PLANNED,
    dateStringOfReport: U.getNowStringInIndia(),
    reportedTasks: [],
    releasesReports: [],
    reportTaskDetail: {
        taskPlan: {},
        taskPlans: [],
        release: {},
        releasePlan: {}
    }
};

var reportingReducer = function reportingReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case AC.ADD_USER_RELEASES:
            // All Releases where loggedIn user in involved as (manager, leader, developer)
            return Object.assign({}, state, {
                allReleases: action.releases
            });

        case AC.ADD_RELEASES_AND_TASKS_OF_SELECTED_DATE:
            // Releases and its task plans where loggedIn user in involved as (manager, leader, developer) for selected date
            return Object.assign({}, state, {
                availableReleases: action.releases,
                dateStringOfReport: action.date
            });
        case AC.TASK_REPORTED:
            return Object.assign({}, state, {
                availableReleases: state.availableReleases.map(function (r) {
                    if (r._id.toString() == action.task.release._id.toString()) {
                        return Object.assign({}, r, {
                            tasks: r.tasks.map(function (t) {
                                if (t._id.toString() == action.task._id.toString()) {
                                    return action.task;
                                } else return t;
                            })
                        });
                    } else return r;
                })
            });

        case AC.REPORT_TASK_SELECTED:
            // task is selected to see task detail
            return Object.assign({}, state, {
                reportTaskDetail: {
                    taskPlan: action.detail.taskPlan,
                    taskPlans: action.detail.taskPlans,
                    release: action.detail.release,
                    releasePlan: Object.assign({}, action.detail.releasePlan, {
                        estimationDescription: action.detail.estimationDescription
                    })
                }
            });

        case AC.UPDATE_SELECTED_TASK_PLAN:
            // task is selected to see task detail
            return Object.assign({}, state, {
                taskPlan: action.project.taskPlan
            });

        case AC.UPDATE_SELECTED_RELEASE_PLAN:
            // task is selected to see task detail
            return Object.assign({}, state, {
                reportTaskDetail: Object.assign({}, state.reportTaskDetail, {
                    releasePlan: action.releasePlan
                })
            });

        case AC.SET_REPORT_DATE:
            // while selection of reporting date it is set to state also
            return Object.assign({}, state, {
                dateStringOfReport: action.reportDate
            });

        case AC.SET_STATUS:
            // while selection of reporting status it is set to state also
            return Object.assign({}, state, {
                status: action.status
            });

        case AC.SET_RELEASE_ID:
            // while selection of reporting releaseID it is set to state also
            return Object.assign({}, state, {
                releaseID: action.releaseID
            });

        case AC.SET_ITERATION_TYPE:
            // while selection of reporting iteration type it is set to state also
            return Object.assign({}, state, {
                iterationType: action.iterationType
            });

        case AC.SET_REPORTS_OF_RELEASE:
            // while task plan need to see report list by manager and leader
            return Object.assign({}, state, {
                releasesReports: action.reports
            });

        default:
            return state;
    }
};

exports.default = reportingReducer;

/***/ }),

/***/ "GBJa":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _reduxForm = __webpack_require__("ao4a");

var _reactNotifications = __webpack_require__("B0Hd");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        showAdminUserEditForm: function showAdminUserEditForm(user) {
            dispatch(A.showComponentHideOthers(COC.ADMIN_USER_FORM)), dispatch((0, _reduxForm.initialize)('admin-user', user));
        },
        deleteAdminUser: function deleteAdminUser(userId) {
            return dispatch(A.deleteUserOnServer(userId)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success('User Deleted Successfully');
                } else {
                    _reactNotifications.NotificationManager.error('User Not Deleted!');
                    throw new _reduxForm.SubmissionError({ users: "User Deletion Failed" });
                }
            });
        },
        showAdminUserForm: function showAdminUserForm() {
            return dispatch(A.showComponentHideOthers(COC.ADMIN_USER_FORM));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        loggedInUser: state.user.loggedIn,
        AdminUsers: state.user.all
    };
};

var AdminUserListContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.AdminUserList);
exports.default = AdminUserListContainer;

/***/ }),

/***/ "GF1l":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HolidayListContainer = exports.HolidayFormContainer = exports.WarningListContainer = exports.ReportingDateNavBarContainer = exports.ReportingTaskDetailPageContainer = exports.ReportingTaskPageContainer = exports.ReportingCommentFormContainer = exports.CalendarTaskDetailPageContainer = exports.CalendarTaskPageContainer = exports.ReleaseTaskPlanningPageContainer = exports.ReleasePlanSectionContainer = exports.ReleasePlanListContainer = exports.ReleaseListContainer = exports.ReleasePlanAddToReleaseFormContainer = exports.UpdateReleaseDatesFormContainer = exports.ReleaseMoveTaskPlanFormContainer = exports.ReleaseTaskPlanningFormContainer = exports.ReleaseDeveloperFilterFormContainer = exports.ReleaseTaskPlanningShiftFormContainer = exports.ReleaseDevelopersSchedulesContainer = exports.ReleaseDeveloperScheduleFormContainer = exports.TaskPlanListContainer = exports.TaskReportListContainer = exports.TaskReportDetailPageContainer = exports.AttendanceSettingFormContainer = exports.LeaveSettingFormContainer = exports.LeaveApprovalReasonFormContainer = exports.LeaveDetailPageContainer = exports.LeaveListContainer = exports.LeaveRequestFormContainer = exports.ClientFormContainer = exports.ClientListContainer = exports.TechnologyFormContainer = exports.TechnologyListContainer = exports.ModuleFormContainer = exports.ModuleListContainer = exports.ProjectFormContainer = exports.ProjectListContainer = exports.CreateReleaseFormContainer = exports.ReportTaskDescriptionFormContainer = exports.EstimationFilterFormContainer = exports.EstimationAddToReleaseFormContainer = exports.EstimationProjectAwardFormContainer = exports.EstimationSuggestFeatureFormContainer = exports.EstimationSuggestTaskFormContainer = exports.MoveTaskInFeatureFormContainer = exports.EstimationFeatureFormContainer = exports.EstimationTaskFormContainer = exports.EstimationInitiateFormContainer = exports.TabSectionContainer = exports.ReleaseDashboardSectionContainer = exports.DashboardSectionContainer = exports.EstimationFeaturesContainer = exports.EstimationTasksContainer = exports.EstimationDetailContainer = exports.EstimationListContainer = exports.RepositorySearchContainer = exports.RepositoryFeatureDetailPageContainer = exports.RepositoryTaskDetailPageContainer = exports.EmployeeSettingFormContainer = exports.AdminRoleListContainer = exports.AdminRoleFormContainer = exports.UserProfileFormContainer = exports.AdminUserListContainer = exports.AdminUserFormContainer = exports.UserListContainer = exports.UserFormContainer = exports.RoleListContainer = exports.PermissionListContainer = exports.RoleFormContainer = exports.PermissionFormContainer = exports.AppHomeContainer = exports.AdminHomeContainer = exports.SuperAdminHomeContainer = exports.HomeContainer = exports.LoginFormContainer = undefined;

var _LoginFormContainer = __webpack_require__("8GKS");

Object.defineProperty(exports, 'LoginFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_LoginFormContainer).default;
  }
});

var _HomeContainer = __webpack_require__("+5we");

Object.defineProperty(exports, 'HomeContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_HomeContainer).default;
  }
});

var _SuperAdminHomeContainer = __webpack_require__("U1dz");

Object.defineProperty(exports, 'SuperAdminHomeContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_SuperAdminHomeContainer).default;
  }
});

var _AdminHomeContainer = __webpack_require__("U1E7");

Object.defineProperty(exports, 'AdminHomeContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_AdminHomeContainer).default;
  }
});

var _AppHomeContainer = __webpack_require__("DoGw");

Object.defineProperty(exports, 'AppHomeContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_AppHomeContainer).default;
  }
});

var _PermissionFormContainer = __webpack_require__("vj67");

Object.defineProperty(exports, 'PermissionFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_PermissionFormContainer).default;
  }
});

var _RoleFormContainer = __webpack_require__("X1RN");

Object.defineProperty(exports, 'RoleFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_RoleFormContainer).default;
  }
});

var _PermissionListContainer = __webpack_require__("SfoH");

Object.defineProperty(exports, 'PermissionListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_PermissionListContainer).default;
  }
});

var _RoleListContainer = __webpack_require__("2y/X");

Object.defineProperty(exports, 'RoleListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_RoleListContainer).default;
  }
});

var _UserFormContainer = __webpack_require__("K8HS");

Object.defineProperty(exports, 'UserFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_UserFormContainer).default;
  }
});

var _UserListContainer = __webpack_require__("mdcJ");

Object.defineProperty(exports, 'UserListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_UserListContainer).default;
  }
});

var _AdminUserFormContainer = __webpack_require__("i7VK");

Object.defineProperty(exports, 'AdminUserFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_AdminUserFormContainer).default;
  }
});

var _AdminUserListContainer = __webpack_require__("GBJa");

Object.defineProperty(exports, 'AdminUserListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_AdminUserListContainer).default;
  }
});

var _UserProfileFormContainer = __webpack_require__("vmTa");

Object.defineProperty(exports, 'UserProfileFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_UserProfileFormContainer).default;
  }
});

var _AdminRoleFormContainer = __webpack_require__("1vyc");

Object.defineProperty(exports, 'AdminRoleFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_AdminRoleFormContainer).default;
  }
});

var _AdminRoleListContainer = __webpack_require__("1u2K");

Object.defineProperty(exports, 'AdminRoleListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_AdminRoleListContainer).default;
  }
});

var _EmployeeSettingFormContainer = __webpack_require__("y03k");

Object.defineProperty(exports, 'EmployeeSettingFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EmployeeSettingFormContainer).default;
  }
});

var _RepositoryTaskDetailPageContainer = __webpack_require__("lD5m");

Object.defineProperty(exports, 'RepositoryTaskDetailPageContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_RepositoryTaskDetailPageContainer).default;
  }
});

var _RepositoryFeatureDetailPageContainer = __webpack_require__("PQG5");

Object.defineProperty(exports, 'RepositoryFeatureDetailPageContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_RepositoryFeatureDetailPageContainer).default;
  }
});

var _RepositorySearchContainer = __webpack_require__("30wz");

Object.defineProperty(exports, 'RepositorySearchContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_RepositorySearchContainer).default;
  }
});

var _EstimationListContainer = __webpack_require__("mywI");

Object.defineProperty(exports, 'EstimationListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationListContainer).default;
  }
});

var _EstimationDetailContainer = __webpack_require__("WtXS");

Object.defineProperty(exports, 'EstimationDetailContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationDetailContainer).default;
  }
});

var _EstimationTasksContainer = __webpack_require__("atNk");

Object.defineProperty(exports, 'EstimationTasksContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationTasksContainer).default;
  }
});

var _EstimationFeaturesContainer = __webpack_require__("VMX9");

Object.defineProperty(exports, 'EstimationFeaturesContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationFeaturesContainer).default;
  }
});

var _DashboardSectionContainer = __webpack_require__("20Ga");

Object.defineProperty(exports, 'DashboardSectionContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_DashboardSectionContainer).default;
  }
});

var _ReleaseDashboardSectionContainer = __webpack_require__("C/qh");

Object.defineProperty(exports, 'ReleaseDashboardSectionContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseDashboardSectionContainer).default;
  }
});

var _TabSectionContainer = __webpack_require__("zbU0");

Object.defineProperty(exports, 'TabSectionContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_TabSectionContainer).default;
  }
});

var _EstimationInitiateFormContainer = __webpack_require__("w7gx");

Object.defineProperty(exports, 'EstimationInitiateFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationInitiateFormContainer).default;
  }
});

var _EstimationTaskFormContainer = __webpack_require__("3cps");

Object.defineProperty(exports, 'EstimationTaskFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationTaskFormContainer).default;
  }
});

var _EstimationFeatureFormContainer = __webpack_require__("x6MS");

Object.defineProperty(exports, 'EstimationFeatureFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationFeatureFormContainer).default;
  }
});

var _MoveTaskInFeatureFormContainer = __webpack_require__("pwBP");

Object.defineProperty(exports, 'MoveTaskInFeatureFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_MoveTaskInFeatureFormContainer).default;
  }
});

var _EstimationSuggestTaskFormContainer = __webpack_require__("7NoE");

Object.defineProperty(exports, 'EstimationSuggestTaskFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationSuggestTaskFormContainer).default;
  }
});

var _EstimationSuggestFeatureFormContainer = __webpack_require__("4jZl");

Object.defineProperty(exports, 'EstimationSuggestFeatureFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationSuggestFeatureFormContainer).default;
  }
});

var _EstimationProjectAwardFormContainer = __webpack_require__("8Fbf");

Object.defineProperty(exports, 'EstimationProjectAwardFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationProjectAwardFormContainer).default;
  }
});

var _EstimationAddToReleaseFormContainer = __webpack_require__("W7Ny");

Object.defineProperty(exports, 'EstimationAddToReleaseFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationAddToReleaseFormContainer).default;
  }
});

var _EstimationFilterFormContainer = __webpack_require__("lnd2");

Object.defineProperty(exports, 'EstimationFilterFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationFilterFormContainer).default;
  }
});

var _ReportTaskDescriptionFormContainer = __webpack_require__("hAWE");

Object.defineProperty(exports, 'ReportTaskDescriptionFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReportTaskDescriptionFormContainer).default;
  }
});

var _CreateReleaseFormContainer = __webpack_require__("Emu4");

Object.defineProperty(exports, 'CreateReleaseFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_CreateReleaseFormContainer).default;
  }
});

var _ProjectListContainer = __webpack_require__("gG5n");

Object.defineProperty(exports, 'ProjectListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ProjectListContainer).default;
  }
});

var _ProjectFormContainer = __webpack_require__("mrDx");

Object.defineProperty(exports, 'ProjectFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ProjectFormContainer).default;
  }
});

var _ModuleListContainer = __webpack_require__("vZkB");

Object.defineProperty(exports, 'ModuleListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ModuleListContainer).default;
  }
});

var _ModuleFormContainer = __webpack_require__("KNwh");

Object.defineProperty(exports, 'ModuleFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ModuleFormContainer).default;
  }
});

var _TechnologyListContainer = __webpack_require__("qxSs");

Object.defineProperty(exports, 'TechnologyListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_TechnologyListContainer).default;
  }
});

var _TechnologyFormContainer = __webpack_require__("KAxj");

Object.defineProperty(exports, 'TechnologyFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_TechnologyFormContainer).default;
  }
});

var _ClientListContainer = __webpack_require__("BEum");

Object.defineProperty(exports, 'ClientListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ClientListContainer).default;
  }
});

var _ClientFormContainer = __webpack_require__("R9BS");

Object.defineProperty(exports, 'ClientFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ClientFormContainer).default;
  }
});

var _LeaveRequestFormContainer = __webpack_require__("RyBK");

Object.defineProperty(exports, 'LeaveRequestFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_LeaveRequestFormContainer).default;
  }
});

var _LeaveListContainer = __webpack_require__("y5J+");

Object.defineProperty(exports, 'LeaveListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_LeaveListContainer).default;
  }
});

var _LeaveDetailPageContainer = __webpack_require__("/saw");

Object.defineProperty(exports, 'LeaveDetailPageContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_LeaveDetailPageContainer).default;
  }
});

var _LeaveApprovalReasonFormContainer = __webpack_require__("O21F");

Object.defineProperty(exports, 'LeaveApprovalReasonFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_LeaveApprovalReasonFormContainer).default;
  }
});

var _LeaveSettingFormContainer = __webpack_require__("3tJH");

Object.defineProperty(exports, 'LeaveSettingFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_LeaveSettingFormContainer).default;
  }
});

var _AttendanceSettingFormContainer = __webpack_require__("3Hd+");

Object.defineProperty(exports, 'AttendanceSettingFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_AttendanceSettingFormContainer).default;
  }
});

var _TaskReportDetailPageContainer = __webpack_require__("8ung");

Object.defineProperty(exports, 'TaskReportDetailPageContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_TaskReportDetailPageContainer).default;
  }
});

var _TaskReportListContainer = __webpack_require__("jBCK");

Object.defineProperty(exports, 'TaskReportListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_TaskReportListContainer).default;
  }
});

var _TaskPlanListContainer = __webpack_require__("ZuQz");

Object.defineProperty(exports, 'TaskPlanListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_TaskPlanListContainer).default;
  }
});

var _ReleaseDeveloperScheduleFormContainer = __webpack_require__("RBSm");

Object.defineProperty(exports, 'ReleaseDeveloperScheduleFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseDeveloperScheduleFormContainer).default;
  }
});

var _ReleaseDevelopersSchedulesContainer = __webpack_require__("6+3V");

Object.defineProperty(exports, 'ReleaseDevelopersSchedulesContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseDevelopersSchedulesContainer).default;
  }
});

var _ReleaseTaskPlanningShiftFormContainer = __webpack_require__("QHrB");

Object.defineProperty(exports, 'ReleaseTaskPlanningShiftFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseTaskPlanningShiftFormContainer).default;
  }
});

var _ReleaseDeveloperFilterFormContainer = __webpack_require__("7+o0");

Object.defineProperty(exports, 'ReleaseDeveloperFilterFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseDeveloperFilterFormContainer).default;
  }
});

var _ReleaseTaskPlanningFormContainer = __webpack_require__("L0ES");

Object.defineProperty(exports, 'ReleaseTaskPlanningFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseTaskPlanningFormContainer).default;
  }
});

var _ReleaseMoveTaskPlanFormContainer = __webpack_require__("PqAI");

Object.defineProperty(exports, 'ReleaseMoveTaskPlanFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseMoveTaskPlanFormContainer).default;
  }
});

var _UpdateReleaseDatesFormContainer = __webpack_require__("vd9x");

Object.defineProperty(exports, 'UpdateReleaseDatesFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_UpdateReleaseDatesFormContainer).default;
  }
});

var _ReleasePlanAddToReleaseFormContainer = __webpack_require__("dEEk");

Object.defineProperty(exports, 'ReleasePlanAddToReleaseFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleasePlanAddToReleaseFormContainer).default;
  }
});

var _ReleaseListContainer = __webpack_require__("afYA");

Object.defineProperty(exports, 'ReleaseListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseListContainer).default;
  }
});

var _ReleasePlanListContainer = __webpack_require__("jE2R");

Object.defineProperty(exports, 'ReleasePlanListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleasePlanListContainer).default;
  }
});

var _ReleasePlanSectionContainer = __webpack_require__("QvHI");

Object.defineProperty(exports, 'ReleasePlanSectionContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleasePlanSectionContainer).default;
  }
});

var _ReleaseTaskPlanningPageContainer = __webpack_require__("dx+h");

Object.defineProperty(exports, 'ReleaseTaskPlanningPageContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseTaskPlanningPageContainer).default;
  }
});

var _CalendarTaskPageContainer = __webpack_require__("VGMf");

Object.defineProperty(exports, 'CalendarTaskPageContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_CalendarTaskPageContainer).default;
  }
});

var _CalendarTaskDetailPageContainer = __webpack_require__("c1j9");

Object.defineProperty(exports, 'CalendarTaskDetailPageContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_CalendarTaskDetailPageContainer).default;
  }
});

var _ReportingCommentFormContainer = __webpack_require__("0Ltu");

Object.defineProperty(exports, 'ReportingCommentFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReportingCommentFormContainer).default;
  }
});

var _ReportingTaskPageContainer = __webpack_require__("ISPm");

Object.defineProperty(exports, 'ReportingTaskPageContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReportingTaskPageContainer).default;
  }
});

var _ReportingTaskDetailPageContainer = __webpack_require__("e2eB");

Object.defineProperty(exports, 'ReportingTaskDetailPageContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReportingTaskDetailPageContainer).default;
  }
});

var _ReportingDateNavBarContainer = __webpack_require__("B+uT");

Object.defineProperty(exports, 'ReportingDateNavBarContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReportingDateNavBarContainer).default;
  }
});

var _WarningListContainer = __webpack_require__("mVPa");

Object.defineProperty(exports, 'WarningListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_WarningListContainer).default;
  }
});

var _HolidayFormContainer = __webpack_require__("vxNa");

Object.defineProperty(exports, 'HolidayFormContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_HolidayFormContainer).default;
  }
});

var _HolidayListContainer = __webpack_require__("ZD69");

Object.defineProperty(exports, 'HolidayListContainer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_HolidayListContainer).default;
  }
});

var _ReportTaskDescriptionFormContainer2 = _interopRequireDefault(_ReportTaskDescriptionFormContainer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),

/***/ "Gcv5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getReleasePlanByIdFromServer = exports.addCommentToServer = exports.reportTaskToServer = exports.getTaskReportsReleasePlanPage = exports.getDataForReportTaskDetailPageFromServer = exports.getReportingTasksForDate = exports.getUserReleasesFromServer = exports.taskReported = exports.setReportsOfRelease = exports.updateSelectedReleasePlan = exports.updateSelectedTaskPlan = exports.setReportTaskPlanDetail = exports.releaseSelectedForReporting = exports.setIterationType = exports.setReleaseID = exports.setReportedStatus = exports.setReportDate = exports.addReleasesAndTasksOfSelectedDate = exports.addUserReleases = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var addUserReleases = exports.addUserReleases = function addUserReleases(releases) {
    return {
        type: AC.ADD_USER_RELEASES,
        releases: releases
    };
};

var addReleasesAndTasksOfSelectedDate = exports.addReleasesAndTasksOfSelectedDate = function addReleasesAndTasksOfSelectedDate(releases, date) {
    return {
        type: AC.ADD_RELEASES_AND_TASKS_OF_SELECTED_DATE,
        releases: releases,
        date: date
    };
};

var setReportDate = exports.setReportDate = function setReportDate(reportDate) {
    return {
        type: AC.SET_REPORT_DATE,
        reportDate: reportDate
    };
};

var setReportedStatus = exports.setReportedStatus = function setReportedStatus(status) {
    return {
        type: AC.SET_STATUS,
        status: status
    };
};

var setReleaseID = exports.setReleaseID = function setReleaseID(releaseID) {
    return {
        type: AC.SET_RELEASE_ID,
        releaseID: releaseID
    };
};

var setIterationType = exports.setIterationType = function setIterationType(iterationType) {
    return {
        type: AC.SET_ITERATION_TYPE,
        iterationType: iterationType
    };
};

var releaseSelectedForReporting = exports.releaseSelectedForReporting = function releaseSelectedForReporting(release) {
    return {
        type: AC.RELEASE_SELECTED_FOR_REPORTING,
        release: release
    };
};

var setReportTaskPlanDetail = exports.setReportTaskPlanDetail = function setReportTaskPlanDetail(detail) {
    return {
        type: AC.REPORT_TASK_SELECTED,
        detail: detail
    };
};

var updateSelectedTaskPlan = exports.updateSelectedTaskPlan = function updateSelectedTaskPlan(taskPlan) {
    return {
        type: AC.UPDATE_SELECTED_TASK_PLAN,
        taskPlan: taskPlan
    };
};

var updateSelectedReleasePlan = exports.updateSelectedReleasePlan = function updateSelectedReleasePlan(releasePlan) {
    return {
        type: AC.UPDATE_SELECTED_RELEASE_PLAN,
        releasePlan: releasePlan
    };
};

var setReportsOfRelease = exports.setReportsOfRelease = function setReportsOfRelease(reports) {
    return {
        type: AC.SET_REPORTS_OF_RELEASE,
        reports: reports
    };
};

var taskReported = exports.taskReported = function taskReported(task) {
    return {
        type: AC.TASK_REPORTED,
        task: task
    };
};

/**
 * Gets all releases date
 */
var getUserReleasesFromServer = exports.getUserReleasesFromServer = function getUserReleasesFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/reporting/user-releases', {
            method: 'get',
            credentials: 'include',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addUserReleases(json.data));
            }
            return json.data;
        });
    };
};

/**
 * Gets tasks that user can see/report for selected date
 */
var getReportingTasksForDate = exports.getReportingTasksForDate = function getReportingTasksForDate(releaseID, date, iterationType, taskStatus) {
    return function (dispatch, getState) {
        return fetch('/api/reporting/task-plans/release/' + releaseID + '/date/' + date + '/iteration-type/' + iterationType + '/task-status/' + taskStatus, {
            method: 'get',
            credentials: 'include',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addReleasesAndTasksOfSelectedDate(json.data, date));
            }
            return json;
        });
    };
};

var getDataForReportTaskDetailPageFromServer = exports.getDataForReportTaskDetailPageFromServer = function getDataForReportTaskDetailPageFromServer(taskPlanID) {
    return function (dispatch, getState) {
        return fetch('/api/reporting/report-task-detail-page/task-plan/' + taskPlanID, {
            method: 'get',
            credentials: 'include',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(setReportTaskPlanDetail(json.data));
            }
            return json;
        });
    };
};

var getTaskReportsReleasePlanPage = exports.getTaskReportsReleasePlanPage = function getTaskReportsReleasePlanPage(releaseID) {
    return function (dispatch, getState) {
        return fetch('/api/reporting/release-plan-page/release/' + releaseID, {
            method: 'get',
            credentials: 'include',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                console.log("json-data", json.data);
                dispatch(setReportsOfRelease(json.data));
            }
            return json;
        });
    };
};

var reportTaskToServer = exports.reportTaskToServer = function reportTaskToServer(task) {
    return function (dispatch, getState) {
        return fetch('/api/reporting/task-plans/' + task._id, {
            method: 'put',
            credentials: 'include',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(task)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                if (json.data && json.data.taskPlan && json.data.taskPlan._id) {
                    // return dispatch(getTaskPlanDetailsFromServer(json.data.taskPlan._id))
                }
            }
            return json;
        });
    };
};

var addCommentToServer = exports.addCommentToServer = function addCommentToServer(comment) {
    return function (dispatch, getState) {
        return fetch('/api/reporting/comment', {
            method: 'post',
            credentials: 'include',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(comment)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.data && json.data.releasePlanID) {
                return dispatch(getReleasePlanByIdFromServer(json.data.releasePlanID));
            }
            return json;
        });
    };
};

var getReleasePlanByIdFromServer = exports.getReleasePlanByIdFromServer = function getReleasePlanByIdFromServer(releasePlanID) {
    return function (dispatch, getState) {
        return fetch('/api/releases/' + releasePlanID + '/release-plan', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(updateSelectedReleasePlan(json.data));
            }
            return json;
        });
    };
};

/***/ }),

/***/ "HSri":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactWidgetsMoment = __webpack_require__("Utwc");

var _reactWidgetsMoment2 = _interopRequireDefault(_reactWidgetsMoment);

var _reactRedux = __webpack_require__("RH2O");

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_moment2.default.locale('en');
(0, _reactWidgetsMoment2.default)();

var ReleaseDeveloperScheduleForm = function (_Component) {
    _inherits(ReleaseDeveloperScheduleForm, _Component);

    function ReleaseDeveloperScheduleForm(props) {
        _classCallCheck(this, ReleaseDeveloperScheduleForm);

        var _this = _possibleConstructorReturn(this, (ReleaseDeveloperScheduleForm.__proto__ || Object.getPrototypeOf(ReleaseDeveloperScheduleForm)).call(this, props));

        _this.state = {
            monthMoment: (0, _moment2.default)()
        };
        return _this;
    }

    _createClass(ReleaseDeveloperScheduleForm, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var props = this.props;
            var handleSubmit = props.handleSubmit,
                employeeID = props.employeeID,
                team = props.team;

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'form',
                    { onSubmit: handleSubmit },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-offset-3 col-md-6 repositoryHeading releaseDevScheduleHeading' },
                        _react2.default.createElement(
                            'span',
                            { className: "highlightText" },
                            'Employee Work Calendar'
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-offset-3 col-md-6 pad' },
                            _react2.default.createElement(_reduxForm.Field, { name: 'employeeID',
                                onChange: function onChange(event, newValue, oldValue) {
                                    props.getDeveloperSchedules(newValue, _this2.state.monthMoment.month(), _this2.state.monthMoment.year());
                                },
                                component: _fields.renderSelect,
                                noneOptionText: "Select Employee...",

                                options: team
                            })
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-3' },
                            _react2.default.createElement(
                                'button',
                                { className: "btn reportingArrow",
                                    style: { marginLeft: '-16px' },
                                    onClick: function onClick() {
                                        if (!employeeID) {
                                            return _reactNotifications.NotificationManager.error('Please select employee!');
                                        }
                                        var newMonthMoment = _this2.state.monthMoment.clone().subtract(1, 'month');
                                        props.getDeveloperSchedules(employeeID, newMonthMoment.month(), newMonthMoment.year());
                                        _this2.setState({
                                            monthMoment: newMonthMoment
                                        });
                                    },
                                    type: 'button' },
                                _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-6', style: { margin: "10px 0px", fontSize: "20", textAlign: 'center' } },
                            this.state.monthMoment.format('MMMM, YY')
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-3' },
                            _react2.default.createElement(
                                'button',
                                { className: 'btn reportingArrow',
                                    style: { marginLeft: '27px' },
                                    onClick: function onClick() {
                                        if (!employeeID) {
                                            return _reactNotifications.NotificationManager.error('Please select employee!');
                                        }
                                        var newMonthMoment = _this2.state.monthMoment.clone().add(1, 'month');
                                        props.getDeveloperSchedules(employeeID, newMonthMoment.month(), newMonthMoment.year());
                                        _this2.setState({
                                            monthMoment: newMonthMoment
                                        });
                                    },
                                    type: 'button' },
                                _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-right' })
                            )
                        )
                    )
                )
            );
        }
    }]);

    return ReleaseDeveloperScheduleForm;
}(_react.Component);

ReleaseDeveloperScheduleForm = (0, _reduxForm.reduxForm)({
    form: 'developer-Schedule'
})(ReleaseDeveloperScheduleForm);

var selector = (0, _reduxForm.formValueSelector)('developer-Schedule');

ReleaseDeveloperScheduleForm = (0, _reactRedux.connect)(function (state) {
    var _selector = selector(state, 'fromSchedule', "employeeID"),
        fromSchedule = _selector.fromSchedule,
        employeeID = _selector.employeeID;

    return {
        fromSchedule: fromSchedule,
        employeeID: employeeID
    };
})(ReleaseDeveloperScheduleForm);

exports.default = ReleaseDeveloperScheduleForm;

/***/ }),

/***/ "HYcQ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactRouterDom = __webpack_require__("F8kA");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TaskReportList = function (_Component) {
    _inherits(TaskReportList, _Component);

    function TaskReportList(props) {
        _classCallCheck(this, TaskReportList);

        var _this = _possibleConstructorReturn(this, (TaskReportList.__proto__ || Object.getPrototypeOf(TaskReportList)).call(this, props));

        _this.options = {
            sizePerPageList: [{
                text: '6', value: 6
            }, {
                text: '10', value: 10
            }, {
                text: '20', value: 20
            }, {
                text: '50', value: 50
            }],
            sizePerPage: 6, // which size per page you want to locate as default
            onRowClick: _this.onRowClick.bind(_this)

        };
        return _this;
    }

    _createClass(TaskReportList, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.props.getAllTaskReports(this.props.release);
        }
    }, {
        key: 'formatPlanningDate',
        value: function formatPlanningDate(dateString) {
            if (dateString) {
                return (0, _moment2.default)(dateString, SC.DATE_FORMAT).format(SC.DATE_DISPLAY_FORMAT);
                //return row
            }
            return '';
        }
    }, {
        key: 'formatDeveloperName',
        value: function formatDeveloperName(employee) {
            if (employee) return employee.name;
            return '';
        }
    }, {
        key: 'formatTaskName',
        value: function formatTaskName(task, row) {
            if (task) {
                if (row.iterationType == SC.ITERATION_TYPE_PLANNED) return _react2.default.createElement(
                    'span',
                    { style: { color: '#4172c1' } },
                    task.name
                );else if (row.iterationType == SC.ITERATION_TYPE_UNPLANNED) return _react2.default.createElement(
                    'span',
                    { style: { color: '#e52d8c' } },
                    task.name
                );else return _react2.default.createElement(
                    'span',
                    null,
                    task.name
                );
            }

            return '';
        }
    }, {
        key: 'formatPlannedHours',
        value: function formatPlannedHours(planning) {
            console.log("Planning---------------", planning);
            if (planning) return planning.plannedHours;
            return 0;
        }
    }, {
        key: 'formatPlannedDate',
        value: function formatPlannedDate(row) {
            if (row) {
                return (0, _moment2.default)(row).format("DD-MM-YYYY");
            }
            return '';
        }
    }, {
        key: 'formatReportedStatus',
        value: function formatReportedStatus(report) {
            if (report) return report.status;
            return '';
        }
    }, {
        key: 'formatReportedHours',
        value: function formatReportedHours(report) {
            if (report) return report.reportedHours;
            return 0;
        }
    }, {
        key: 'onRowClick',
        value: function onRowClick(row) {
            var _this2 = this;

            this.props.taskPlanSelected(row).then(function (json) {
                if (json.success) {
                    _this2.props.history.push('/app-home/task-report-detail');
                    _this2.props.showTaskDetailPage();
                }
                return json;
            });
        }
    }, {
        key: 'viewDetailButton',
        value: function viewDetailButton(cell, row, enumObject, rowIndex) {
            var _this3 = this;

            return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom ', type: 'button', onClick: function onClick() {
                        _this3.props.taskPlanSelected(row).then(function (json) {
                            if (json.success) {
                                _this3.props.history.push('/app-home/task-report-detail');
                                _this3.props.showTaskDetailPage();
                            }
                            return json;
                        });
                    } },
                _react2.default.createElement('i', { className: 'fa fa-eye' })
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var reports = this.props.reports;

            console.log("reports------------------", reports);
            return _react2.default.createElement(
                'div',
                { className: 'col-md-12 release-options' },
                _react2.default.createElement(
                    _reactBootstrapTable.BootstrapTable,
                    { options: this.options, data: reports,
                        multiColumnSearch: true,
                        search: false,
                        striped: true,
                        pagination: true,
                        hover: true,
                        height: "300px" },
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { columnTitle: true, isKey: true, dataField: '_id',
                            hidden: true },
                        'ID'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { columnTitle: true, width: "25%", dataField: 'task',
                            dataFormat: this.formatTaskName.bind(this) },
                        'Task Name'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: "25%", columnTitle: true, dataField: 'employee',
                            dataFormat: this.formatDeveloperName.bind(this) },
                        'Developer'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { columnTitle: true, width: "14%", dataField: 'planningDateString', dataFormat: this.formatPlanningDate.bind(this) },
                        'Planning Date'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { columnTitle: true, width: "12%", dataField: 'planning', dataFormat: this.formatPlannedHours.bind(this), dataAlign: "right" },
                        'Planned Hours'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '12%', columnTitle: true, dataField: 'report',
                            dataFormat: this.formatReportedHours.bind(this), dataAlign: "right" },
                        'Reported Hours'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '12%', columnTitle: true, dataField: 'report',
                            dataFormat: this.formatReportedStatus.bind(this), dataAlign: "center" },
                        'Status'
                    )
                )
            );
        }
    }]);

    return TaskReportList;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)(TaskReportList);

/***/ }),

/***/ "HndC":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getTaskAndProjectDetailsForCalendarFromServer = exports.getAllTaskPlansFromServer = exports.setCalendarTaskDetails = exports.showUsersTask = exports.changeNavigationView = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var changeNavigationView = exports.changeNavigationView = function changeNavigationView(view, date) {
    return {
        type: AC.CHANGE_CALENDAR_NAVIGATION,
        view: view,
        date: date
    };
};

var showUsersTask = exports.showUsersTask = function showUsersTask(tasks) {
    return {
        type: AC.SHOW_USERS_TASKS,
        tasks: tasks
    };
};

var setCalendarTaskDetails = exports.setCalendarTaskDetails = function setCalendarTaskDetails(detail) {
    return {
        type: AC.SET_CALENDAR_TASK_DETAILS,
        detail: detail
    };
};

var getAllTaskPlansFromServer = exports.getAllTaskPlansFromServer = function getAllTaskPlansFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/calendars/tasks', {
            method: "get",
            credentials: "include"
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(showUsersTask(json.data));
            }
        });
    };
};

var getTaskAndProjectDetailsForCalendarFromServer = exports.getTaskAndProjectDetailsForCalendarFromServer = function getTaskAndProjectDetailsForCalendarFromServer(taskPlanID) {
    return function (dispatch, getState) {
        return fetch('/api/calendars/task-details/task-plan/' + taskPlanID, {
            method: "get",
            credentials: "include"
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(setCalendarTaskDetails(json.data));
            }
            return json;
        });
    };
};

/***/ }),

/***/ "IQqA":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactRouterDom = __webpack_require__("F8kA");

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactWidgetsMoment = __webpack_require__("Utwc");

var _reactWidgetsMoment2 = _interopRequireDefault(_reactWidgetsMoment);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _lodash = __webpack_require__("M4fF");

var _lodash2 = _interopRequireDefault(_lodash);

var _containers = __webpack_require__("GF1l");

var _2 = __webpack_require__("ZhKb");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_moment2.default.locale('en');
(0, _reactWidgetsMoment2.default)();

var ReleaseTaskPlanningPage = function (_Component) {
    _inherits(ReleaseTaskPlanningPage, _Component);

    function ReleaseTaskPlanningPage(props) {
        _classCallCheck(this, ReleaseTaskPlanningPage);

        var _this = _possibleConstructorReturn(this, (ReleaseTaskPlanningPage.__proto__ || Object.getPrototypeOf(ReleaseTaskPlanningPage)).call(this, props));

        _this.state = {
            showTaskDeleteConfirmationDialog: false,
            showTaskReopenConfirmationDialog: false,
            row: {}
        };

        _this.taskListPageOptions = {
            sizePerPageList: [{
                text: '5', value: 5
            }],
            sizePerPage: 5 // which size per page you want to locate as default
        };

        return _this;
    }

    _createClass(ReleaseTaskPlanningPage, [{
        key: 'onClose',
        value: function onClose() {
            this.setState({
                showTaskDeleteConfirmationDialog: false
            });
        }
    }, {
        key: 'closeReopenTaskDialog',
        value: function closeReopenTaskDialog() {
            this.setState({
                showTaskReopenConfirmationDialog: false
            });
        }
    }, {
        key: 'deleteCellButton',
        value: function deleteCellButton(cell, row, enumObject, rowIndex) {
            var _this2 = this;

            /*
                let now = new Date()
                let nowMomentString = moment(now).format(SC.DATE_FORMAT)
                let nowMoment = moment(nowMomentString)
                let planningMoment = moment(row.planningDateString)
                if (planningMoment.isBefore(nowMoment))
                    return '' // planning date is over cannot delete now
                    */
            if (row.report.reportedOnDate) return ''; // task is already report cannot delete now
            else return _react2.default.createElement(
                    'button',
                    { className: ' pull-left btn btn-custom', type: 'button',
                        onClick: function onClick() {
                            _this2.setState({ showTaskDeleteConfirmationDialog: true, row: row });
                        } },
                    _react2.default.createElement('i', { className: 'fa fa-trash' })
                );
        }
    }, {
        key: 'editCellButton',
        value: function editCellButton(cell, row, enumObject, rowIndex) {
            var now = new Date();
            var nowMomentString = (0, _moment2.default)(now).format(SC.DATE_FORMAT);
            var nowMoment = (0, _moment2.default)(nowMomentString);
            var planningMoment = (0, _moment2.default)(row.planningDateString);
            return '';
        }
    }, {
        key: 'reopenCellButton',
        value: function reopenCellButton(cell, row, enumObject, rowIndex) {
            var _this3 = this;

            // Manager/leader can reopen task having status as completed if they think work is still pending
            if (row.report.status == SC.STATUS_COMPLETED) {
                return _react2.default.createElement(
                    'button',
                    { className: ' pull-left btn btn-custom', type: 'button',
                        onClick: function onClick() {
                            _this3.setState({ showTaskReopenConfirmationDialog: true, row: row });
                        } },
                    _react2.default.createElement('i', { className: 'fa fa-unlock' })
                );
            } else return '';
        }
    }, {
        key: 'actionCellButton',
        value: function actionCellButton(cell, row) {
            var _this4 = this;

            if (row && row.canMove) return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom customBtn mergeBtn', type: 'button',
                    onClick: function onClick() {
                        _this4.props.openMoveTaskPlanForm(row, _this4.props.workCalendarEmployeeID);
                    } },
                'Move'
            );else return '';
        }
    }, {
        key: 'formatPlanningDate',
        value: function formatPlanningDate(row) {
            if (row && !_lodash2.default.isEmpty(row)) {
                return (0, _moment2.default)(row, SC.DATE_FORMAT).format(SC.DATE_DISPLAY_FORMAT);
                //return row
            }
            return '';
        }
    }, {
        key: 'formatPlannedHours',
        value: function formatPlannedHours(planning) {
            if (planning && planning.plannedHours) return Number(planning.plannedHours);else return 0;
        }
    }, {
        key: 'formatDeveloper',
        value: function formatDeveloper(developer) {
            if (developer && developer.name) {
                return developer.name;
            }
            return '';
        }
    }, {
        key: 'formatReport',
        value: function formatReport(report) {
            if (report && report.status) {
                return report.status;
            }
            return '';
        }
    }, {
        key: 'formatTaskName',
        value: function formatTaskName(task) {
            if (task && task.name) {
                return task.name;
            }
            return '';
        }
    }, {
        key: 'onConfirmDeleteRequest',
        value: function onConfirmDeleteRequest() {
            this.setState({ showTaskDeleteConfirmationDialog: false });
            this.props.deleteTaskPlanningRow(this.state.row, this.props.workCalendarEmployeeID);
        }
    }, {
        key: 'reopenTask',
        value: function reopenTask() {
            this.setState({ showTaskReopenConfirmationDialog: false });
            this.props.reopenTask(this.state.row);
        }
    }, {
        key: 'formatFlags',
        value: function formatFlags(flags) {
            var flagImageArray = flags && flags.length ? flags.map(function (flag, idx) {
                if (flag === SC.WARNING_UNPLANNED) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "unplanned" + idx, src: '/images/unplanned.png',
                    title: 'Unplanned' });else if (flag === SC.WARNING_TOO_MANY_HOURS) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "too_many_hours" + idx,
                    src: '/images/too_many_hours.png',
                    title: 'Too Many Hours' });else if (flag === SC.WARNING_EMPLOYEE_ON_LEAVE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "employee-on-leave" + idx,
                    src: '/images/employee_on_leave.png',
                    title: 'Employee On Leave' });else if (flag === SC.WARNING_RELEASE_DATE_MISSED_1) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "release_date_missed_1" + idx,
                    src: '/images/release_date_missed_1.png',
                    title: 'Release Date Missed 1' });else if (flag === SC.WARNING_RELEASE_DATE_MISSED_2) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "release_date_missed_2" + idx,
                    src: '/images/release_date_missed_2.png',
                    title: 'Release Date Missed 2' });else if (flag === SC.WARNING_RELEASE_DATE_MISSED_3) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "release_date_missed_3" + idx,
                    src: '/images/release_date_missed_3.png',
                    title: 'Release Date Missed 3' });else if (flag === SC.WARNING_RELEASE_DATE_MISSED_4) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "release_date_missed_4" + idx,
                    src: '/images/release_date_missed_4.png',
                    title: 'Release Date Missed 4' });else if (flag === SC.WARNING_PLANNED_BEYOND_RELEASE_DATE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "planned_beyond_release_date" + idx,
                    src: '/images/planned_beyond_release_date.png',
                    title: 'Planned Beyond Release Date' });else if (flag === SC.WARNING_LESS_PLANNED_HOURS) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "less_planned_hours" + idx,
                    src: '/images/less_planned_hours.png',
                    title: 'Less Planned Hours' });else if (flag === SC.WARNING_MORE_PLANNED_HOURS) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_planned_hours" + idx,
                    src: '/images/more_planned_hours.png',
                    title: 'More Planned Hours' });else if (flag === SC.WARNING_MORE_REPORTED_HOURS_1) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_reported_hours_1" + idx,
                    src: '/images/more_reported_hours_1.png',
                    title: 'More Reported Hours 1' });else if (flag === SC.WARNING_MORE_REPORTED_HOURS_2) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_reported_hours_2" + idx,
                    src: '/images/more_reported_hours_2.png',
                    title: 'More Reported Hours 2' });else if (flag === SC.WARNING_MORE_REPORTED_HOURS_3) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_reported_hours_3" + idx,
                    src: '/images/more_reported_hours_3.png',
                    title: 'More Reported Hours 3' });else if (flag === SC.WARNING_MORE_REPORTED_HOURS_4) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_reported_hours_4" + idx,
                    src: '/images/more_reported_hours_4.png',
                    title: 'More Reported Hours 4' });else if (flag === SC.WARNING_HAS_UNREPORTED_DAYS) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "has-unreported-days" + idx,
                    src: '/images/has_unreported_days.png',
                    title: 'Has Unreported Days' });else if (flag === SC.WARNING_UNREPORTED) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "unreported" + idx,
                    src: '/images/unreported.png',
                    title: 'Unreported' });else if (flag === SC.WARNING_PENDING_ON_END_DATE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "pending-on-enddate" + idx,
                    src: '/images/pending-on-enddate.png',
                    title: 'Pending On Enddate' });else if (flag === SC.WARNING_COMPLETED_BEFORE_END_DATE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "completed-before-enddate" + idx,
                    src: '/images/completed_before_enddate.png',
                    title: 'Completed Before Enddate' });else if (flag === SC.WARNING_EMPLOYEE_ASK_FOR_LEAVE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "employee-ask-for-leave",
                    src: '/images/employee-ask-for-leave.png',
                    title: 'Employee Ask For Leave' });else return '';
            }) : null;
            return _react2.default.createElement(
                'span',
                null,
                flagImageArray
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this,
                _React$createElement;

            var _props = this.props,
                releasePlan = _props.releasePlan,
                taskPlans = _props.taskPlans,
                developerPlans = _props.developerPlans,
                expanded = _props.expanded,
                release = _props.release,
                workCalendarEmployeeID = _props.workCalendarEmployeeID;

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-8 pad' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12 estimateheader' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-6 pad' },
                            _react2.default.createElement(
                                'div',
                                { className: 'backarrow' },
                                _react2.default.createElement(
                                    'h5',
                                    null,
                                    _react2.default.createElement(
                                        'button',
                                        { className: 'btn-link', title: 'Go Back', onClick: function onClick() {
                                                _this5.props.history.push("/app-home/release-plan");
                                                _this5.props.ReleaseTaskGoBack(release);
                                            } },
                                        _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
                                    ),
                                    _react2.default.createElement(
                                        'b',
                                        { title: releasePlan && releasePlan.task ? releasePlan.task.name : '' },
                                        releasePlan.task ? releasePlan.task.name : '',
                                        ' '
                                    )
                                )
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-2 ' },
                            _react2.default.createElement(
                                'button',
                                {
                                    className: ' btn refreshBtn ',
                                    type: 'button',
                                    onClick: function onClick() {
                                        _this5.props.refreshSelectedTaskPlan(releasePlan, releasePlan.rolesInThisRelease);
                                    } },
                                _react2.default.createElement('i', { className: 'fa fa-refresh ' })
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-2  releaseClock ' },
                            _react2.default.createElement('i', { className: 'fa fa-clock-o ',
                                title: 'Estimated Hours' }),
                            _react2.default.createElement(
                                'b',
                                null,
                                releasePlan && releasePlan.task ? releasePlan.task.estimatedHours : '',
                                'Hrs'
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-2  releaseClock releasePlannedHrs' },
                            _react2.default.createElement('i', { className: 'fa fa-clock-o ',
                                title: 'Planned Hours' }),
                            _react2.default.createElement(
                                'b',
                                null,
                                releasePlan && releasePlan.planning ? releasePlan.planning.plannedHours : '',
                                'Hrs'
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12 ' },
                        _react2.default.createElement(
                            'div',
                            { className: expanded ? "expanded-release-content" : 'release-content' },
                            _react2.default.createElement(
                                'p',
                                { className: 'task-description ' },
                                releasePlan && releasePlan.task ? releasePlan.task.description : ''
                            ),
                            expanded ? _react2.default.createElement(
                                'label',
                                { className: 'div-hover releaseReadLessLabel releaseReadLessLabelClick',
                                    onClick: function onClick() {
                                        return _this5.props.expandDescription(false);
                                    } },
                                '...Read Less'
                            ) : _react2.default.createElement(
                                'label',
                                { className: 'div-hover releaseReadMoreLabel',
                                    onClick: function onClick() {
                                        return _this5.props.expandDescription(true);
                                    } },
                                '...Read More'
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12 releasePlanChkBtn' },
                        _react2.default.createElement('div', { className: 'col-md-4 planchk' }),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-4 planBtn' },
                            _react2.default.createElement(
                                'button',
                                { type: 'button', className: 'btn releasePlanTaskbtn',
                                    onClick: function onClick() {
                                        return _this5.props.showTaskPlanningCreationForm(releasePlan, workCalendarEmployeeID);
                                    } },
                                _react2.default.createElement('i', { className: 'fa fa-plus-circle' }),
                                'Plan Task'
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(
                            'div',
                            { className: 'estimation' },
                            _react2.default.createElement(
                                _reactBootstrapTable.BootstrapTable,
                                (_React$createElement = { options: this.options, data: taskPlans,
                                    striped: true,
                                    hover: true,
                                    height: "300px"
                                }, _defineProperty(_React$createElement, 'options', this.taskListPageOptions), _defineProperty(_React$createElement, 'pagination', true), _React$createElement),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { columnTitle: true, isKey: true, dataField: '_id',
                                        hidden: true },
                                    'ID'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { columnTitle: true, dataField: 'planningDateString',
                                        width: "15%",
                                        dataFormat: this.formatPlanningDate.bind(this) },
                                    'Date'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { columnTitle: true, dataField: 'planning',
                                        width: "10%",
                                        dataFormat: this.formatPlannedHours.bind(this) },
                                    'Planned Hours'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { columnTitle: true, dataField: 'employee',
                                        dataFormat: this.formatDeveloper.bind(this),
                                        width: "20%" },
                                    'Developer'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { dataField: 'flags',
                                        dataFormat: this.formatFlags.bind(this), width: "18%" },
                                    'Flags'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { columnTitle: true, dataField: 'report',
                                        dataFormat: this.formatReport.bind(this), width: "13%" },
                                    'Status'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { columnTitle: "Delete Task", width: '8%', dataField: 'button',
                                        dataFormat: this.deleteCellButton.bind(this) },
                                    _react2.default.createElement('i', {
                                        className: 'fa fa-trash' })
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { columnTitle: "Edit Task", width: '8%', dataField: 'button',
                                        dataFormat: this.editCellButton.bind(this) },
                                    _react2.default.createElement('i', {
                                        className: 'fa fa-pencil' })
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { columnTitle: "Reopen Task", width: '8%', dataField: 'button',
                                        dataFormat: this.reopenCellButton.bind(this) },
                                    _react2.default.createElement('i', {
                                        className: 'fa fa-unlock' })
                                )
                            ),
                            this.state && this.state.showTaskDeleteConfirmationDialog && _react2.default.createElement(_2.ConfirmationDialog, { show: true,
                                onConfirm: this.onConfirmDeleteRequest.bind(this),
                                title: 'Task Delete', onClose: this.onClose.bind(this),
                                body: 'Are you sure you want to delete this task plan. Please confirm!' }),
                            this.state && this.state.showTaskReopenConfirmationDialog && _react2.default.createElement(_2.ConfirmationDialog, { show: true,
                                onConfirm: this.reopenTask.bind(this),
                                title: 'Task Reopen', onClose: this.closeReopenTaskDialog.bind(this),
                                body: 'This will mark task as \'pending\' again. Please confirm.' })
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(_containers.ReleaseDeveloperFilterFormContainer, null)
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(
                            'div',
                            { className: 'estimation' },
                            _react2.default.createElement(
                                _reactBootstrapTable.BootstrapTable,
                                { options: this.options, data: developerPlans,
                                    striped: true,
                                    hover: true },
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { columnTitle: true, isKey: true, dataField: '_id',
                                        hidden: true },
                                    'ID'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { columnTitle: true, dataField: 'planningDateString',
                                        dataFormat: this.formatPlanningDate.bind(this) },
                                    'Date'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { columnTitle: true, dataField: 'task',
                                        dataFormat: this.formatTaskName.bind(this) },
                                    'Task Name'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { width: '25%', columnTitle: true, dataField: 'employee',
                                        dataFormat: this.formatDeveloper.bind(this) },
                                    'Developer'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { columnTitle: true, dataField: 'planning',
                                        dataFormat: this.formatPlannedHours.bind(this) },
                                    'Planned Effort'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { columnTitle: true, dataField: 'report',
                                        dataFormat: this.formatReport.bind(this) },
                                    'Reported'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { width: '12%', dataField: 'button',
                                        dataFormat: this.actionCellButton.bind(this) },
                                    _react2.default.createElement('i', { className: 'fa fa-plus' })
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4 estimationsection pad' },
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(_containers.ReleaseDeveloperScheduleFormContainer, null)
                    ),
                    _react2.default.createElement(_containers.ReleaseDevelopersSchedulesContainer, null)
                )
            );
        }
    }]);

    return ReleaseTaskPlanningPage;
}(_react.Component);

ReleaseTaskPlanningPage.defaultProps = {
    expanded: false
};
exports.default = (0, _reactRouterDom.withRouter)(ReleaseTaskPlanningPage);

/***/ }),

/***/ "ISPm":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _index = __webpack_require__("ZhKb");

var _index2 = __webpack_require__("81ym");

var A = _interopRequireWildcard(_index2);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _reduxForm = __webpack_require__("ao4a");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        setReleaseID: function setReleaseID(releaseID, date, iterationType, reportedStatus) {
            dispatch(A.setReleaseID(releaseID));
            dispatch(A.getReportingTasksForDate(releaseID, date, iterationType, reportedStatus));
        },
        setReportedStatus: function setReportedStatus(releaseID, date, iterationType, reportedStatus) {
            dispatch(A.setReportedStatus(reportedStatus));
            dispatch(A.getReportingTasksForDate(releaseID, date, iterationType, reportedStatus));
        },
        setIterationType: function setIterationType(releaseID, date, iterationType, reportedStatus) {
            dispatch(A.setIterationType(iterationType));
            dispatch(A.getReportingTasksForDate(releaseID, date, iterationType, reportedStatus));
        },
        taskPlanSelected: function taskPlanSelected(taskPlan) {
            return dispatch(A.getDataForReportTaskDetailPageFromServer(taskPlan._id));
        },
        showTaskDetailPage: function showTaskDetailPage() {
            dispatch(A.showComponentHideOthers(COC.REPORTING_TASK_DETAIL_PAGE));
        },
        reportTask: function reportTask(task, date, iterationType) {
            var reportData = {
                _id: task._id,
                reportedHours: parseFloat(task.reportedHours),
                status: iterationType == SC.ITERATION_TYPE_PLANNED ? task.status : SC.STATUS_PENDING,
                reportedDate: date,
                iterationType: iterationType,
                taskName: task.task.name,
                reportDescription: task.report.description
            };

            dispatch((0, _reduxForm.initialize)('report-task-description', reportData));
            dispatch(A.showComponent(COC.REPORT_TASK_DESCRIPTION_DIALOG));

            /*
            return dispatch(A.reportTaskToServer(inputTask)).then((json) => {
                if (json.success) {
                    NotificationManager.success('Task report submitted.')
                    dispatch(A.taskReported(json.data.taskPlan))
                } else
                    NotificationManager.error(json.message)
                return json
            })
            */
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        allReleases: state.report.allReleases,
        releases: state.report.availableReleases,
        dateOfReport: state.report.dateStringOfReport,
        releaseID: state.report.releaseID,
        reportedStatus: state.report.reportedStatus,
        iterationType: state.report.iterationType
    };
};

var ReportingTaskPageContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_index.ReportingTaskPage);

exports.default = ReportingTaskPageContainer;

/***/ }),

/***/ "J7fb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _redux = __webpack_require__("2KeS");

var _reduxForm = __webpack_require__("ao4a");

var _userReducer = __webpack_require__("z+DM");

var _userReducer2 = _interopRequireDefault(_userReducer);

var _appReducer = __webpack_require__("rX+A");

var _appReducer2 = _interopRequireDefault(_appReducer);

var _permissionReducer = __webpack_require__("sZnd");

var _permissionReducer2 = _interopRequireDefault(_permissionReducer);

var _roleReducer = __webpack_require__("CkOn");

var _roleReducer2 = _interopRequireDefault(_roleReducer);

var _clientReducer = __webpack_require__("EVox");

var _clientReducer2 = _interopRequireDefault(_clientReducer);

var _estimationReducer = __webpack_require__("Jzlu");

var _estimationReducer2 = _interopRequireDefault(_estimationReducer);

var _projectReducer = __webpack_require__("xY8l");

var _projectReducer2 = _interopRequireDefault(_projectReducer);

var _technologyReducer = __webpack_require__("/j9I");

var _technologyReducer2 = _interopRequireDefault(_technologyReducer);

var _leaveReducer = __webpack_require__("OryJ");

var _leaveReducer2 = _interopRequireDefault(_leaveReducer);

var _repositoryReducer = __webpack_require__("lVb/");

var _repositoryReducer2 = _interopRequireDefault(_repositoryReducer);

var _attendanceSettingReducer = __webpack_require__("OSPp");

var _attendanceSettingReducer2 = _interopRequireDefault(_attendanceSettingReducer);

var _releaseReducer = __webpack_require__("EgcK");

var _releaseReducer2 = _interopRequireDefault(_releaseReducer);

var _calendarReducer = __webpack_require__("yE3W");

var _calendarReducer2 = _interopRequireDefault(_calendarReducer);

var _reportingReducer = __webpack_require__("FQD3");

var _reportingReducer2 = _interopRequireDefault(_reportingReducer);

var _warningReducer = __webpack_require__("3fis");

var _warningReducer2 = _interopRequireDefault(_warningReducer);

var _holidayReducer = __webpack_require__("U6H3");

var _holidayReducer2 = _interopRequireDefault(_holidayReducer);

var _dashboardReducer = __webpack_require__("E24d");

var _dashboardReducer2 = _interopRequireDefault(_dashboardReducer);

var _employeeReducer = __webpack_require__("qU8w");

var _employeeReducer2 = _interopRequireDefault(_employeeReducer);

var _developmentTypeReducer = __webpack_require__("AYZt");

var _developmentTypeReducer2 = _interopRequireDefault(_developmentTypeReducer);

var _moduleReducer = __webpack_require__("A5gq");

var _moduleReducer2 = _interopRequireDefault(_moduleReducer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reducers = (0, _redux.combineReducers)({
    form: _reduxForm.reducer, // Redux form state
    user: _userReducer2.default,
    app: _appReducer2.default,
    permission: _permissionReducer2.default,
    role: _roleReducer2.default,
    client: _clientReducer2.default,
    estimation: _estimationReducer2.default,
    project: _projectReducer2.default,
    technology: _technologyReducer2.default,
    leave: _leaveReducer2.default,
    repository: _repositoryReducer2.default,
    attendanceSetting: _attendanceSettingReducer2.default,
    release: _releaseReducer2.default,
    calendar: _calendarReducer2.default,
    report: _reportingReducer2.default,
    warning: _warningReducer2.default,
    holiday: _holidayReducer2.default,
    dashboard: _dashboardReducer2.default,
    employee: _employeeReducer2.default,
    developmentType: _developmentTypeReducer2.default,
    module: _moduleReducer2.default
});
exports.default = reducers;

/***/ }),

/***/ "JNvq":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _validation = __webpack_require__("4KT+");

var _fields = __webpack_require__("NACj");

var _reduxForm = __webpack_require__("ao4a");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TechnologyForm = function TechnologyForm(props) {
    logger.debug(logger.TECHNOLOGY_FORM_RENDER, "onSubmit: props:", props);
    return _react2.default.createElement(
        "form",
        { onSubmit: props.handleSubmit },
        _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
                "div",
                { className: "col-md-4" },
                _react2.default.createElement(_reduxForm.Field, { name: "name", placeholder: "Name of Technology", component: _fields.renderText,
                    label: "Technology Name:", validate: [_validation.required] }),
                _react2.default.createElement(
                    "button",
                    { type: "submit", disabled: props.pristine || props.submitting, className: "btn customBtn" },
                    "Submit"
                )
            )
        )
    );
};

TechnologyForm = (0, _reduxForm.reduxForm)({
    form: 'technology'
})(TechnologyForm);

exports.default = TechnologyForm;

/***/ }),

/***/ "Jzlu":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var initialState = {
    all: [],
    selected: {},
    tasks: [],
    features: [],
    expandedFeatureID: undefined,
    expandedTaskID: undefined,
    filter: {
        changedByNegotiator: true,
        changedByEstimator: true,
        permissionRequested: true,
        addedFromRepository: true,
        addedByNegotiator: true,
        addedByEstimator: true,
        hasError: true

    }

};

var estimationReducer = function estimationReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case AC.ADD_ESTIMATION_TASK:
            // task is added to estimation, it would be added against selected estimation
            var addTaskFeature = {};
            if (action.task && action.task.feature && action.task.feature._id && Array.isArray(state.features)) {
                addTaskFeature = state.features.find(function (item) {
                    return item._id == action.task.feature._id;
                });
                if (addTaskFeature && Array.isArray(addTaskFeature.tasks)) {
                    addTaskFeature.tasks.push(action.task);
                } else {
                    addTaskFeature.tasks = [action.task];
                }
                return Object.assign({}, state, {
                    features: Array.isArray(state.features) ? state.features.map(function (item) {
                        return item._id == addTaskFeature._id ? Object.assign({}, addTaskFeature) : item;
                    }) : null
                });
            } else return Object.assign({}, state, {
                tasks: Array.isArray(state.tasks) ? [].concat(_toConsumableArray(state.tasks), [action.task]) : [action.task]
            });

        case AC.UPDATE_ESTIMATION_TASK:
            var feature = {};
            if (action.task && action.task.feature && action.task.feature._id && Array.isArray(state.features)) {
                feature = state.features.find(function (item) {
                    return item._id == action.task.feature._id;
                });
                if (feature && Array.isArray(feature.tasks)) {
                    feature.tasks = feature.tasks.map(function (item) {
                        return item._id == action.task._id ? Object.assign({}, action.task) : item;
                    });
                    return Object.assign({}, state, {
                        features: Array.isArray(state.features) ? state.features.map(function (item) {
                            return item._id == feature._id ? Object.assign({}, feature) : item;
                        }) : null
                    });
                }
            } else return Object.assign({}, state, {
                tasks: Array.isArray(state.tasks) ? state.tasks.map(function (item) {
                    return item._id == action.task._id ? Object.assign({}, action.task) : item;
                }) : null
            });

        case AC.ADD_ESTIMATION_FEATURE:
            // feature is added to estimation, it would be added against selected estimation
            return Object.assign({}, state, {
                features: Array.isArray(state.features) ? [].concat(_toConsumableArray(state.features), [action.feature]) : [action.feature]
            });

        case AC.UPDATE_ESTIMATION_FEATURE:
            // feature is updated to  selected estimation
            if (action.feature && action.feature.tasks && action.feature.tasks.length) {
                return Object.assign({}, state, {
                    features: Array.isArray(state.features) ? state.features.map(function (item) {
                        if (item._id == action.feature._id) {
                            return Object.assign({}, action.feature);
                        } else return item;
                    }) : null,
                    tasks: action.feature && action.feature.tasks ? {} : state.tasks
                });
            } else return Object.assign({}, state, {
                features: Array.isArray(state.features) ? state.features.map(function (item) {
                    if (item._id == action.feature._id) {
                        action.feature.tasks = item.tasks;
                        return Object.assign({}, action.feature);
                    } else return item;
                }) : null
            });

        case AC.MOVE_TASK_IN_FEATURE:
            return Object.assign({}, state, {
                tasks: state.tasks.filter(function (item) {
                    return item._id != action.task._id;
                }),
                features: Array.isArray(state.features) && state.features.length > 0 ? state.features.map(function (feature, idx) {
                    if (feature._id == action.task.feature._id) {
                        return Object.assign({}, feature, {
                            tasks: Array.isArray(feature.tasks) ? [].concat(_toConsumableArray(feature.tasks), [Object.assign({}, action.task)]) : [Object.assign({}, action.task)]
                        });
                    }
                    return feature;
                }) : []
            });

        case AC.MOVE_TASK_OUTOF_FEATURE:
            /*
                As task is moved out, task would be added to tasks array and would be removed from feature it was part of
             */
            return Object.assign({}, state, {
                tasks: [].concat(_toConsumableArray(state.tasks), [Object.assign({}, action.task)]),
                features: Array.isArray(state.features) && state.features.length > 0 ? state.features.map(function (feature, idx) {
                    if (feature._id == action.featureID) {
                        return Object.assign({}, feature, {
                            tasks: Array.isArray(feature.tasks) ? feature.tasks.filter(function (t) {
                                return t._id != action.task._id;
                            }) : []
                        });
                    }
                    return feature;
                }) : []
            });

        case AC.DELETE_ESTIMATION_TASK:
            var featureTask = {};
            if (action.task && action.task.feature && action.task.feature._id && Array.isArray(state.features)) {
                featureTask = state.features.find(function (item) {
                    return item._id == action.task.feature._id;
                });
                if (featureTask && Array.isArray(featureTask.tasks)) {
                    featureTask.tasks = featureTask.tasks.filter(function (item) {
                        return item._id != action.task._id;
                    });
                    return Object.assign({}, state, {
                        features: Array.isArray(state.features) ? state.features.map(function (item) {
                            return item._id == featureTask._id ? Object.assign({}, featureTask) : item;
                        }) : null
                    });
                }
            } else return Object.assign({}, state, { tasks: state.tasks.filter(function (item) {
                    return item._id != action.task._id;
                }) });

        case AC.ADD_ESTIMATIONS:
            return Object.assign({}, state, { all: action.estimations });

        case AC.ADD_ESTIMATION:
            return Object.assign({}, state, { all: [].concat(_toConsumableArray(state.all), [action.estimation]) });

        case AC.EDIT_ESTIMATION:
            return Object.assign({}, state, {
                all: state.all.map(function (item) {
                    return item._id == action.estimation._id ? action.estimation : item;
                }),
                selected: Object.assign({}, action.estimation)
            });

        case AC.SELECT_ESTIMATION:
            return Object.assign({}, state, {
                selected: Object.assign({}, action.estimation, {
                    tasks: undefined,
                    features: undefined
                }),
                tasks: Array.isArray(action.estimation.tasks) && action.estimation.tasks.length > 0 ? action.estimation.tasks.filter(function (t) {
                    return t.isDeleted == false;
                }) : [],
                features: Array.isArray(action.estimation.features) && action.estimation.features.length > 0 ? action.estimation.features.filter(function (f) {
                    if (f.isDeleted == false) {
                        if (Array.isArray(f.tasks) && f.tasks.length > 0) f.tasks = f.tasks.filter(function (t) {
                            return t.isDeleted == false;
                        });

                        return true;
                    } else return false;
                }) : [],

                expandedFeatureID: undefined,
                expandedTaskID: undefined,
                filter: {
                    changedByNegotiator: true,
                    changedByEstimator: true,
                    permissionRequested: true,
                    addedFromRepository: true,
                    addedByNegotiator: true,
                    addedByEstimator: true,
                    hasError: true

                }
            });

        case AC.UPDATE_SELECTED_ESTIMATION:
            return Object.assign({}, state, {
                selected: Object.assign({}, action.estimation, {
                    tasks: undefined,
                    features: undefined
                })
            });

        case AC.DELETE_ESTIMATION:
            return Object.assign({}, state, { estimation: state.all && state.all.length ? state.all.filter(function (item) {
                    return item._id != action.estimationID;
                }) : [] });

        case AC.DELETE_ESTIMATION_FEATURE:
            return Object.assign({}, state, { features: state.features.filter(function (item) {
                    return item._id != action.feature._id;
                }) });

        case AC.EXPAND_FEATURE:
            // Compare expanded feature ID with expanded feature id of state

            if (state.expandedFeatureID && state.expandedFeatureID == action.featureID) {
                // Feature was expanded and clicked again, so contract
                return Object.assign({}, state, {
                    expandedFeatureID: undefined,
                    expandedTaskID: undefined
                });
            }

            return Object.assign({}, state, {
                expandedFeatureID: action.featureID,
                expandedTaskID: undefined
            });

        case AC.EXPAND_TASK:
            // Compare expanded task ID with expanded task id of state
            if (state.expandedTaskID && state.expandedTaskID == action.taskID) {
                // Feature was expanded and clicked again, so contract
                return Object.assign({}, state, {
                    expandedFeatureID: undefined,
                    expandedTaskID: undefined
                });
            }
            return Object.assign({}, state, {
                expandedFeatureID: undefined,
                expandedTaskID: action.taskID
            });

        case AC.EXPAND_TASK_AND_FEATURE:
            // Compare expanded task ID with expanded task id of state
            if (state.expandedTaskID && state.expandedTaskID == action.taskID && state.expandedFeatureID && state.expandedFeatureID == action.featureID) {
                // Feature was expanded and clicked again, so contract
                return Object.assign({}, state, {
                    expandedFeatureID: action.featureID,
                    expandedTaskID: undefined
                });
            } else if (state.expandedFeatureID && state.expandedFeatureID == action.featureID) {
                return Object.assign({}, state, {
                    expandedFeatureID: action.featureID,
                    expandedTaskID: action.taskID
                });
            } else return state;

        case AC.ADD_FILTERED_ESTIMATIONS:
            return Object.assign({}, state, {
                filter: {
                    changedByNegotiator: action.filter && action.filter.changedByNegotiator ? true : false,
                    changedByEstimator: action.filter && action.filter.changedByEstimator ? true : false,
                    permissionRequested: action.filter && action.filter.permissionRequested ? true : false,
                    addedFromRepository: action.filter && action.filter.addedFromRepository ? true : false,
                    addedByEstimator: action.filter && action.filter.addedByEstimator ? true : false,
                    addedByNegotiator: action.filter && action.filter.addedByNegotiator ? true : false,
                    hasError: action.filter && action.filter.hasError ? true : false
                }
            });

        case AC.CLEAR_FILTER_FROM_ESTIMATION:
            return Object.assign({}, state, {
                filter: {
                    changedByNegotiator: false,
                    changedByEstimator: false,
                    permissionRequested: false,
                    addedFromRepository: false,
                    addedByNegotiator: false,
                    addedByEstimator: false,
                    hasError: false
                }
            });
        case AC.SELECT_ALL_FILTER_FROM_ESTIMATION:
            return Object.assign({}, state, {
                filter: {
                    changedByNegotiator: true,
                    changedByEstimator: true,
                    permissionRequested: true,
                    addedFromRepository: true,
                    addedByNegotiator: true,
                    addedByEstimator: true,
                    hasError: true
                }
            });

        default:
            return state;
    }
};

exports.default = estimationReducer;

/***/ }),

/***/ "K8HS":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _UserForm = __webpack_require__("QiyI");

var _UserForm2 = _interopRequireDefault(_UserForm);

var _reactNotifications = __webpack_require__("B0Hd");

var _reduxForm = __webpack_require__("ao4a");

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            if (!values._id) {
                return dispatch(A.addUserOnServer(values)).then(function (json) {
                    if (json.success) {
                        dispatch(A.showComponentHideOthers(COC.USER_LIST));
                        _reactNotifications.NotificationManager.success('User Added Successful');
                    } else {
                        _reactNotifications.NotificationManager.error('User Added Failed');
                        if (json.code && json.code == EC.ALREADY_EXISTS) {
                            // role already exists throw SubmissionError to show appropriate error
                            throw new _reduxForm.SubmissionError({ email: 'Email already exists' });
                        }
                        throw new _reduxForm.SubmissionError(json.errors);
                    }
                });
            } else {
                return dispatch(A.editUserOnServer(values)).then(function (json) {
                    if (json.success) {
                        dispatch(A.showComponentHideOthers(COC.USER_LIST));
                        _reactNotifications.NotificationManager.success('User Updated Successful');
                    } else {
                        _reactNotifications.NotificationManager.error('User Updated Failed');
                        if (json.code && json.code == EC.EMAIL_ALREADY_USED) {
                            throw new _reduxForm.SubmissionError({ email: 'Email already exists' });
                            // role already exists throw SubmissionError to show appropriate error
                        } else if (json.code && json.code == EC.PASSWORD_NOT_MATCHED) {
                            throw new _reduxForm.SubmissionError({ password: 'Password not matched' });
                        } else throw new _reduxForm.SubmissionError(json.errors);
                    }
                });
            }
        },
        showUserList: function showUserList() {
            return dispatch(A.showComponentHideOthers(COC.USER_LIST));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        roles: state.role.all

        // roles:state.users.roles
    };
};

var UserFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_UserForm2.default);

exports.default = UserFormContainer;

/***/ }),

/***/ "KAxj":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

var _reduxForm = __webpack_require__("ao4a");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            logger.debug(logger.TECHNOLOGY_FORM_CONNECT, "onSubmit:values:", values);
            return dispatch(A.addTechnologyOnServer(values)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success('Technology Added Successfully');
                    dispatch(A.hideComponent(COC.TECHNOLOGY_FORM_DIALOG));
                } else {
                    _reactNotifications.NotificationManager.error('Technology Not Added!');
                    if (json.code == EC.ALREADY_EXISTS) throw new _reduxForm.SubmissionError({ name: "Technology Already Exists" });
                }
                return json;
            });
        }
    };
};
var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        //clients: state.client.all,
        technologies: state.technology.all

    };
};

var TechnologyFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.TechnologyForm);

exports.default = TechnologyFormContainer;

/***/ }),

/***/ "KNwh":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

var _reduxForm = __webpack_require__("ao4a");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            if (!values._id) {
                return dispatch(A.addModuleOnServer(values)).then(function (json) {
                    if (json.success) {
                        _reactNotifications.NotificationManager.success('Module Added Successfully');
                        dispatch(A.hideComponent(COC.MODULE_FORM_DIALOG));
                    } else {
                        _reactNotifications.NotificationManager.error('Module Not Added!');
                        if (json.code == EC.ALREADY_EXISTS) throw new _reduxForm.SubmissionError({ name: "Module Already Exists" });
                    }
                    return json;
                });
            } else {
                return dispatch(A.editModuleOnServer(values)).then(function (response) {
                    if (response.success) {
                        dispatch(A.hideComponent(COC.MODULE_FORM_DIALOG)), _reactNotifications.NotificationManager.success('Module Updated Successfully');
                    } else {
                        _reactNotifications.NotificationManager.error('Module Updated Failed');
                        if (response.code == EC.ALREADY_EXISTS) throw new _reduxForm.SubmissionError({ name: "Module Already Exists" });
                    }
                    return json;
                });
            }
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        clients: state.client.all,
        projects: state.project.all

    };
};

var ModuleFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ModuleForm);

exports.default = ModuleFormContainer;

/***/ }),

/***/ "Khh2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ReportTaskDescriptionFormDialog = function ReportTaskDescriptionFormDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Report Details'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.ReportTaskDescriptionFormContainer, null)
        )
    );
};

exports.default = ReportTaskDescriptionFormDialog;

/***/ }),

/***/ "L0ES":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(taskPlan) {
            taskPlan.planning.plannedHours = Number(taskPlan.planning.plannedHours);
            return dispatch(A.addTaskPlanningOnServer(taskPlan)).then(function (json) {
                if (json.success) {
                    console.log("==== taskPlan Planning added ==== ", taskPlan.employee._id, taskPlan.workCalendarEmployeeID);
                    _reactNotifications.NotificationManager.success("taskPlan Planning Added");
                    dispatch(A.hideComponent(COC.RELEASE_TASK_PLANNING_FORM_DIALOG));
                    // If workCalendar employee id matches with task planning employee id fetch work calendar
                    if (taskPlan.employee._id.toString() == taskPlan.workCalendarEmployeeID.toString()) dispatch(A.getEmployeeWorkCalendarFromServer(taskPlan.workCalendarEmployeeID));
                    return json;
                } else {
                    return _reactNotifications.NotificationManager.error(json.message);
                }
            });
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        releaseTeam: state.release && state.release.selectedRelease && state.release.selectedRelease.team && state.release.selectedRelease.team.length ? state.release.selectedRelease.team : [],
        allTeam: state.user.allDevelopers && state.user.allDevelopers ? state.user.allDevelopers : [],
        initial: state.release.selectedRelease.iterations[state.release.selectedReleasePlan.release.iteration.idx],
        releasePlan: state.release.selectedReleasePlan
    };
};

var ReleaseTaskPlanningFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ReleaseTaskPlanningForm);

exports.default = ReleaseTaskPlanningFormContainer;

/***/ }),

/***/ "L0wf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _fields = __webpack_require__("NACj");

var _reduxForm = __webpack_require__("ao4a");

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactRedux = __webpack_require__("RH2O");

var _reactWidgetsMoment = __webpack_require__("Utwc");

var _reactWidgetsMoment2 = _interopRequireDefault(_reactWidgetsMoment);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_moment2.default.locale('en');
(0, _reactWidgetsMoment2.default)();

var ReportingDateNavBar = function (_React$Component) {
    _inherits(ReportingDateNavBar, _React$Component);

    function ReportingDateNavBar(props) {
        _classCallCheck(this, ReportingDateNavBar);

        return _possibleConstructorReturn(this, (ReportingDateNavBar.__proto__ || Object.getPrototypeOf(ReportingDateNavBar)).call(this, props));
    }

    _createClass(ReportingDateNavBar, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                reportedStatus = _props.reportedStatus,
                releaseID = _props.releaseID,
                dateOfReport = _props.dateOfReport,
                iterationType = _props.iterationType;
            var change = this.props.change;

            return _react2.default.createElement(
                'form',
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-12' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-2 div-hover' },
                        _react2.default.createElement(
                            'button',
                            { className: 'btn reportingArrow',
                                style: { marginLeft: '117px' },
                                onClick: function onClick() {
                                    var prevDate = (0, _moment2.default)(dateOfReport).clone().subtract(1, 'days').format(SC.DATE_FORMAT);
                                    _this2.props.setReportDate(prevDate);
                                    _this2.props.onReleaseSelected(releaseID, prevDate, iterationType, reportedStatus);
                                    change("dateOfReport", (0, _moment2.default)(prevDate).clone().toDate());
                                },
                                type: 'button' },
                            _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-3 reportingDatePicker' },
                        _react2.default.createElement(_reduxForm.Field, { name: 'dateOfReport',
                            onChange: function onChange(event, newValue, oldValue) {
                                _this2.props.setReportDate(newValue);
                                _this2.props.onReleaseSelected(releaseID, newValue, iterationType, reportedStatus);
                            },
                            label: '',
                            component: _fields.renderDateTimePickerString,
                            showTime: false
                        })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-2 div-hover' },
                        _react2.default.createElement(
                            'button',
                            { className: 'btn reportingArrow',
                                style: { marginLeft: '150px' },
                                onClick: function onClick() {
                                    var nextDate = (0, _moment2.default)(dateOfReport).clone().add(1, 'days').format('YYYY-MM-DD');

                                    _this2.props.setReportDate(nextDate);
                                    _this2.props.onReleaseSelected(releaseID, nextDate, iterationType, reportedStatus);
                                    change("dateOfReport", (0, _moment2.default)(nextDate).clone().toDate());
                                },
                                type: 'button' },
                            _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-right' })
                        )
                    ),
                    _react2.default.createElement('hr', null)
                )
            );
        }
    }]);

    return ReportingDateNavBar;
}(_react2.default.Component);

ReportingDateNavBar = (0, _reduxForm.reduxForm)({
    form: 'reporting-date'
})(ReportingDateNavBar);

var selector = (0, _reduxForm.formValueSelector)('reporting-date');

ReportingDateNavBar = (0, _reactRedux.connect)(function (state) {
    var dateOfReport = selector(state, 'dateOfReport');
    return {
        dateOfReport: dateOfReport
    };
})(ReportingDateNavBar);

exports.default = ReportingDateNavBar;

/***/ }),

/***/ "LKcW":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _validation = __webpack_require__("4KT+");

var _fields = __webpack_require__("NACj");

var _reduxForm = __webpack_require__("ao4a");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ProjectForm = function ProjectForm(props) {
    var reset = props.reset,
        pristine = props.pristine,
        submitting = props.submitting,
        handleSubmit = props.handleSubmit,
        clients = props.clients;

    return _react2.default.createElement(
        "form",
        { onSubmit: handleSubmit },
        _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
                "div",
                { className: "col-md-4" },
                _react2.default.createElement(_reduxForm.Field, { name: "name", placeholder: "Name of project", component: _fields.renderText,
                    label: "Project Name:", validate: [_validation.required] }),
                _react2.default.createElement(_reduxForm.Field, { name: "client._id", component: _fields.renderSelect, label: "Client :", options: clients,
                    validate: [_validation.required] }),
                _react2.default.createElement(
                    "button",
                    { type: "submit", disabled: pristine || submitting, className: "btn customBtn" },
                    " Submit"
                )
            )
        )
    );
};

ProjectForm = (0, _reduxForm.reduxForm)({
    form: 'project'
})(ProjectForm);

exports.default = ProjectForm;

/***/ }),

/***/ "Lp/s":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ReleasePlanAddToReleaseDialog = function ReleasePlanAddToReleaseDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Add To ReleasePlan'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.ReleasePlanAddToReleaseFormContainer, null)
        )
    );
};

exports.default = ReleasePlanAddToReleaseDialog;

/***/ }),

/***/ "LwYR":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactRouterDom = __webpack_require__("F8kA");

var _index = __webpack_require__("ZhKb");

var _clientMsg = __webpack_require__("jURI");

var CM = _interopRequireWildcard(_clientMsg);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleList = function (_Component) {
    _inherits(ModuleList, _Component);

    function ModuleList(props) {
        _classCallCheck(this, ModuleList);

        var _this = _possibleConstructorReturn(this, (ModuleList.__proto__ || Object.getPrototypeOf(ModuleList)).call(this, props));

        _this.state = {
            showModuleDeletionDialog: false,
            addRow: null

        };
        return _this;
    }

    _createClass(ModuleList, [{
        key: 'onClose',
        value: function onClose() {
            this.setState({ showModuleDeletionDialog: false });
        }
    }, {
        key: 'OkConfirmationForDeletingModule',
        value: function OkConfirmationForDeletingModule() {
            this.setState({ showModuleDeletionDialog: false });
            this.props.deleteModule(this.state.addRow);
        }
    }, {
        key: 'viewDeleteButton',
        value: function viewDeleteButton(cell, row, enumObject, rowIndex) {
            var _this2 = this;

            return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom ', type: 'button', onClick: function onClick() {
                        _this2.setState({ showModuleDeletionDialog: true }), _this2.setState({ addRow: row._id });
                    } },
                _react2.default.createElement('i', { className: 'fa fa-trash' })
            );
        }
    }, {
        key: 'viewEditButton',
        value: function viewEditButton(cell, row, enumObject, rowIndex) {
            var _this3 = this;

            return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom', type: 'button', onClick: function onClick() {
                        _this3.props.showModuleEditForm(row);
                    } },
                _react2.default.createElement('i', { className: 'fa fa-pencil' })
            );
        }
    }, {
        key: 'formatProject',
        value: function formatProject(project) {
            if (project) return project.name;
            return '';
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            return _react2.default.createElement(
                'div',
                null,
                this.state.showModuleDeletionDialog && _react2.default.createElement(_index.ConfirmationDialog, { show: true, onConfirm: this.OkConfirmationForDeletingModule.bind(this),
                    title: CM.DELETE_MODULE, onClose: this.onClose.bind(this),
                    body: CM.DELETE_MODULE_BODY }),
                _react2.default.createElement(
                    'div',
                    { key: 'project_list', className: 'clearfix' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-12 pad' },
                            _react2.default.createElement(
                                'div',
                                { className: 'col-md-12' },
                                _react2.default.createElement(
                                    'button',
                                    { className: 'btn customBtn',
                                        onClick: function onClick() {
                                            return _this4.props.showModuleCreationForm();
                                        } },
                                    'Create Module'
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'estimation' },
                                    _react2.default.createElement(
                                        _reactBootstrapTable.BootstrapTable,
                                        { options: this.options, data: this.props.modules,
                                            striped: true,
                                            hover: true },
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { columnTitle: true, isKey: true, dataField: '_id',
                                                hidden: true },
                                            'ID'
                                        ),
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { columnTitle: true, dataField: 'name' },
                                            'Module Name'
                                        ),
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { columnTitle: true, dataField: 'project',
                                                dataFormat: this.formatProject.bind(this) },
                                            'Project Name'
                                        ),
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { width: '15%', dataField: 'editButton',
                                                dataFormat: this.viewEditButton.bind(this) },
                                            'Edit Module'
                                        ),
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { width: '15%', dataField: 'deleteButton',
                                                dataFormat: this.viewDeleteButton.bind(this) },
                                            'Delete Module'
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return ModuleList;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)(ModuleList);

/***/ }),

/***/ "MD1s":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _validation = __webpack_require__("4KT+");

var _fields = __webpack_require__("NACj");

var _reduxForm = __webpack_require__("ao4a");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ModuleForm = function ModuleForm(props) {
    var reset = props.reset,
        pristine = props.pristine,
        submitting = props.submitting,
        handleSubmit = props.handleSubmit,
        projects = props.projects;

    return _react2.default.createElement(
        "form",
        { onSubmit: handleSubmit },
        _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
                "div",
                { className: "col-md-4" },
                _react2.default.createElement(_reduxForm.Field, { name: "name", placeholder: "Name of Module", component: _fields.renderText,
                    label: "Module Name:", validate: [_validation.required] }),
                _react2.default.createElement(_reduxForm.Field, { name: "project._id", component: _fields.renderSelect, label: "Project :", options: projects,
                    validate: [_validation.required] }),
                _react2.default.createElement(
                    "button",
                    { type: "submit", disabled: pristine || submitting, className: "btn customBtn" },
                    "Submit"
                )
            )
        )
    );
};

ModuleForm = (0, _reduxForm.reduxForm)({
    form: 'module'
})(ModuleForm);

exports.default = ModuleForm;

/***/ }),

/***/ "NACj":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.renderDateTimeStringShow = exports.renderDateTimePicker = exports.renderDateTimePickerString = exports.renderField = exports.renderMultiSelect = exports.renderLoginField = exports.renderError = exports.renderTextArea = exports.renderSelect = exports.renderCheckBox = exports.renderText = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _Multiselect = __webpack_require__("Rkmq");

var _Multiselect2 = _interopRequireDefault(_Multiselect);

var _DateTimePicker = __webpack_require__("N3l9");

var _DateTimePicker2 = _interopRequireDefault(_DateTimePicker);

var _lodash = __webpack_require__("M4fF");

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
Form Field components
 */

var renderText = exports.renderText = function renderText(_ref) {
    var input = _ref.input,
        label = _ref.label,
        _ref$readOnly = _ref.readOnly,
        readOnly = _ref$readOnly === undefined ? false : _ref$readOnly,
        _ref$disbled = _ref.disbled,
        disbled = _ref$disbled === undefined ? false : _ref$disbled,
        type = _ref.type,
        placeholder = _ref.placeholder,
        _ref$meta = _ref.meta,
        touched = _ref$meta.touched,
        error = _ref$meta.error,
        warning = _ref$meta.warning;
    return _react2.default.createElement(
        'div',
        { className: 'form-group' },
        _react2.default.createElement(
            'label',
            { htmlFor: input.name },
            label,
            ' ',
            touched && error && _react2.default.createElement(
                'span',
                { className: 'validation-error' },
                error
            )
        ),
        _react2.default.createElement('input', _extends({}, input, { readOnly: readOnly, disabled: disbled, placeholder: placeholder, type: type,
            className: 'form-control ' + (touched && (!error && 'valid-field' || error && 'invalid-field')) }))
    );
};

var renderCheckBox = exports.renderCheckBox = function renderCheckBox(_ref2) {
    var input = _ref2.input,
        label = _ref2.label,
        readOnly = _ref2.readOnly,
        _ref2$className = _ref2.className,
        className = _ref2$className === undefined ? "input checkbox" : _ref2$className,
        _ref2$meta = _ref2.meta,
        touched = _ref2$meta.touched,
        error = _ref2$meta.error,
        warning = _ref2$meta.warning;
    return _react2.default.createElement(
        'div',
        { className: className },
        touched && error && _react2.default.createElement(
            'span',
            { className: 'validation-error' },
            error
        ),
        _react2.default.createElement(
            'label',
            null,
            _react2.default.createElement('input', _extends({}, input, { readOnly: readOnly, checked: input && input.value ? true : false,
                onChange: input.onChange, type: 'checkbox' })),
            label
        )
    );
};
/*
export const renderCheckBox = ({
                                   input,
                                   label,
                                   readOnly,
                                   meta: {touched, error, warning}
                               }) =>
            <div className="input checkbox">
        {touched &&
        ((error &&
            <span className="validation-error">
        {error}
            </span>))
        }
         <label>
             <input {...input} readOnly={readOnly} type="checkbox"/>
              {label}
            </label>

                </div>*/

var renderSelect = exports.renderSelect = function renderSelect(_ref3) {
    var input = _ref3.input,
        onChange = _ref3.onChange,
        label = _ref3.label,
        options = _ref3.options,
        _ref3$readOnly = _ref3.readOnly,
        readOnly = _ref3$readOnly === undefined ? false : _ref3$readOnly,
        _ref3$noneOptionText = _ref3.noneOptionText,
        noneOptionText = _ref3$noneOptionText === undefined ? 'Select ...' : _ref3$noneOptionText,
        _ref3$noneOptionValue = _ref3.noneOptionValue,
        noneOptionValue = _ref3$noneOptionValue === undefined ? '' : _ref3$noneOptionValue,
        _ref3$showNoneOption = _ref3.showNoneOption,
        showNoneOption = _ref3$showNoneOption === undefined ? true : _ref3$showNoneOption,
        _ref3$displayField = _ref3.displayField,
        displayField = _ref3$displayField === undefined ? 'name' : _ref3$displayField,
        _ref3$optionalDisplay = _ref3.optionalDisplayField,
        optionalDisplayField = _ref3$optionalDisplay === undefined ? 'name' : _ref3$optionalDisplay,
        _ref3$disabled = _ref3.disabled,
        disabled = _ref3$disabled === undefined ? false : _ref3$disabled,
        _ref3$valueField = _ref3.valueField,
        valueField = _ref3$valueField === undefined ? "_id" : _ref3$valueField,
        hoverEnabledMsg = _ref3.hoverEnabledMsg,
        hoverDisabledMsg = _ref3.hoverDisabledMsg,
        _ref3$meta = _ref3.meta,
        touched = _ref3$meta.touched,
        error = _ref3$meta.error,
        warning = _ref3$meta.warning;


    return _react2.default.createElement(
        'div',
        { className: 'form-group', style: { position: "relative" } },
        _react2.default.createElement(
            'label',
            { htmlFor: input.name },
            label,
            ' ',
            touched && error && _react2.default.createElement(
                'span',
                { className: 'validation-error' },
                error
            )
        ),
        _react2.default.createElement(
            'select',
            _extends({}, input, {
                className: "form-control hoverTooltip " + (touched && (!error && "valid-field" || error && "invalid-field")),
                disabled: disabled, readOnly: readOnly }),
            showNoneOption && _react2.default.createElement(
                'option',
                { value: noneOptionValue },
                noneOptionText
            ),
            options && options.map(function (option) {
                return _react2.default.createElement(
                    'option',
                    { value: _lodash2.default.get(option, valueField),
                        key: option[valueField] },
                    _lodash2.default.get(option, displayField) ? _lodash2.default.get(option, displayField) : _lodash2.default.get(option, optionalDisplayField)
                );
            })
        ),
        hoverEnabledMsg && _react2.default.createElement(
            'span',
            { className: 'enabledMsg' },
            hoverEnabledMsg
        ),
        hoverDisabledMsg && _react2.default.createElement(
            'span',
            { className: 'disabledMsg' },
            hoverDisabledMsg
        )
    );
};

var renderTextArea = exports.renderTextArea = function renderTextArea(_ref4) {
    var input = _ref4.input,
        label = _ref4.label,
        placeholder = _ref4.placeholder,
        _ref4$disabled = _ref4.disabled,
        disabled = _ref4$disabled === undefined ? false : _ref4$disabled,
        _ref4$readOnly = _ref4.readOnly,
        readOnly = _ref4$readOnly === undefined ? false : _ref4$readOnly,
        rows = _ref4.rows,
        hoverEnabledMsg = _ref4.hoverEnabledMsg,
        hoverDisabledMsg = _ref4.hoverDisabledMsg,
        _ref4$meta = _ref4.meta,
        touched = _ref4$meta.touched,
        error = _ref4$meta.error,
        warning = _ref4$meta.warning;
    return _react2.default.createElement(
        'div',
        { className: 'form-group' },
        _react2.default.createElement(
            'label',
            { htmlFor: input.name },
            label,
            ' ',
            touched && error && _react2.default.createElement(
                'span',
                { className: 'validation-error' },
                error
            )
        ),
        _react2.default.createElement('textarea', _extends({ rows: rows }, input, { placeholder: placeholder, readOnly: readOnly, disabled: disabled,
            className: "form-control hoverToolTip " + (touched && (!error && "valid-field" || error && "invalid-field")) }))
    );
};
var renderError = exports.renderError = function renderError(_ref5) {
    var input = _ref5.input,
        label = _ref5.label,
        _ref5$meta = _ref5.meta,
        touched = _ref5$meta.touched,
        error = _ref5$meta.error,
        warning = _ref5$meta.warning;
    return _react2.default.createElement(
        'h3',
        null,
        _react2.default.createElement(
            'span',
            { className: 'label label-danger' },
            error
        )
    );
};

var renderLoginField = exports.renderLoginField = function renderLoginField(_ref6) {
    var input = _ref6.input,
        label = _ref6.label,
        readOnly = _ref6.readOnly,
        type = _ref6.type,
        placeholder = _ref6.placeholder,
        _ref6$meta = _ref6.meta,
        touched = _ref6$meta.touched,
        error = _ref6$meta.error,
        warning = _ref6$meta.warning;
    return _react2.default.createElement(
        'div',
        { className: 'col-md-12' },
        _react2.default.createElement(
            'label',
            { htmlFor: input.name },
            label,
            ' ',
            touched && error && _react2.default.createElement(
                'span',
                { className: 'validation-error' },
                error
            )
        ),
        _react2.default.createElement('input', _extends({}, input, { className: 'form-control', type: type }))
    );
};

var renderMultiSelect = exports.renderMultiSelect = function renderMultiSelect(_ref7) {
    var input = _ref7.input,
        data = _ref7.data,
        _ref7$valueField = _ref7.valueField,
        valueField = _ref7$valueField === undefined ? "_id" : _ref7$valueField,
        _ref7$disabled = _ref7.disabled,
        disabled = _ref7$disabled === undefined ? false : _ref7$disabled,
        _ref7$textField = _ref7.textField,
        textField = _ref7$textField === undefined ? "name" : _ref7$textField,
        label = _ref7.label,
        placeholder = _ref7.placeholder,
        _ref7$meta = _ref7.meta,
        touched = _ref7$meta.touched,
        error = _ref7$meta.error,
        warning = _ref7$meta.warning;
    return _react2.default.createElement(
        'div',
        { className: 'form-group' },
        _react2.default.createElement(
            'label',
            { htmlFor: input.name },
            label,
            ' ',
            touched && error && _react2.default.createElement(
                'span',
                { className: 'validation-error' },
                error
            )
        ),
        _react2.default.createElement(_Multiselect2.default, _extends({}, input, {
            onBlur: function onBlur() {
                return input.onBlur();
            },
            value: input.value || [] // requires value to be an array
            , data: data,
            disabled: disabled,
            valueField: valueField,
            label: label,
            textField: textField,
            placeholder: placeholder
        }))
    );
};

var renderField = exports.renderField = function renderField(_ref8) {
    var input = _ref8.input,
        label = _ref8.label,
        readOnly = _ref8.readOnly,
        type = _ref8.type,
        placeholder = _ref8.placeholder,
        _ref8$meta = _ref8.meta,
        touched = _ref8$meta.touched,
        error = _ref8$meta.error,
        warning = _ref8$meta.warning,
        _ref8$disabled = _ref8.disabled,
        disabled = _ref8$disabled === undefined ? false : _ref8$disabled;
    return _react2.default.createElement(
        'div',
        { className: 'form-group' },
        _react2.default.createElement(
            'label',
            { htmlFor: input.name },
            label,
            ' ',
            touched && error && _react2.default.createElement(
                'span',
                { className: 'validation-error' },
                error
            )
        ),
        _react2.default.createElement('input', _extends({}, input, { readOnly: readOnly, disabled: disabled, placeholder: placeholder, type: type,
            className: 'form-control ' + (touched && (!error && 'valid-field' || error && 'invalid-field')) }))
    );
};

var renderDateTimePickerString = exports.renderDateTimePickerString = function renderDateTimePickerString(_ref9) {
    var _ref9$input = _ref9.input,
        _onChange = _ref9$input.onChange,
        value = _ref9$input.value,
        name = _ref9$input.name,
        _onBlur = _ref9$input.onBlur,
        label = _ref9.label,
        readOnly = _ref9.readOnly,
        _ref9$timeZone = _ref9.timeZone,
        timeZone = _ref9$timeZone === undefined ? 'America/New_York' : _ref9$timeZone,
        _ref9$dropUp = _ref9.dropUp,
        dropUp = _ref9$dropUp === undefined ? false : _ref9$dropUp,
        info = _ref9.info,
        _ref9$showTime = _ref9.showTime,
        showTime = _ref9$showTime === undefined ? false : _ref9$showTime,
        _ref9$showCalendar = _ref9.showCalendar,
        showCalendar = _ref9$showCalendar === undefined ? true : _ref9$showCalendar,
        min = _ref9.min,
        max = _ref9.max,
        type = _ref9.type,
        placeholder = _ref9.placeholder,
        _ref9$disabled = _ref9.disabled,
        disabled = _ref9$disabled === undefined ? false : _ref9$disabled,
        currentDate = _ref9.currentDate,
        _ref9$meta = _ref9.meta,
        touched = _ref9$meta.touched,
        error = _ref9$meta.error,
        warning = _ref9$meta.warning,
        hoverEnabledMsg = _ref9.hoverEnabledMsg,
        hoverDisabledMsg = _ref9.hoverDisabledMsg;


    var val = undefined;

    if (value) {
        if (showCalendar && showTime) val = (0, _moment2.default)(value, 'YYYY-MM-DD').toDate();else if (showCalendar) val = (0, _moment2.default)(value, 'YYYY-MM-DD').toDate();else if (showTime) val = (0, _moment2.default)(value, 'YYYY-MM-DD').toDate();
    }

    var parse = function parse(event) {
        if (event) {
            if (showCalendar) {
                if (showTime) {
                    if ((typeof event === 'undefined' ? 'undefined' : _typeof(event)) === 'object' && event.target && event.target.value) {
                        var v = (0, _moment2.default)(event.target.value).format('YYYY-MM-DD');
                        return v;
                    } else {
                        var _v = (0, _moment2.default)(event).format('YYYY-MM-DD');
                        return _v;
                    }
                } else {
                    if ((typeof event === 'undefined' ? 'undefined' : _typeof(event)) === 'object' && event.target && event.target.value) {
                        var _v2 = (0, _moment2.default)(event.target.value).format('YYYY-MM-DD');
                        return _v2;
                    } else {
                        var _v3 = (0, _moment2.default)(event).format('YYYY-MM-DD');
                        return _v3;
                    }
                }
            } else {
                if (showTime) {
                    if ((typeof event === 'undefined' ? 'undefined' : _typeof(event)) === 'object' && event.target && event.target.value) {
                        if (event.target.value.length == 7) event.target.value = '0' + event.target.value;
                        return event.target.value;
                    } else {
                        if (event && event.length == 7) event = '0' + event;
                        var _v4 = (0, _moment2.default)(event).format('YYYY-MM-DD');
                        return _v4;
                    }
                }
            }
        }
        return undefined;
    };

    return _react2.default.createElement(
        'div',
        { className: 'form-group', style: { position: "relative" } },
        _react2.default.createElement(
            'label',
            { htmlFor: name },
            label,
            ' ',
            touched && error && _react2.default.createElement(
                'span',
                { className: 'validation-error' },
                error
            ),
            info && _react2.default.createElement(
                'span',
                { className: 'field-info' },
                info
            )
        ),
        _react2.default.createElement(_DateTimePicker2.default, {
            className: ' hoverTooltip',
            min: min,
            max: max,
            readOnly: readOnly,
            disabled: disabled,
            onChange: function onChange(event) {
                return _onChange(parse(event));
            },
            onBlur: function onBlur(event) {
                return _onBlur(parse(event));
            },
            time: showTime,
            calendar: showCalendar,
            value: val,
            dropUp: dropUp,
            currentDate: currentDate,
            onKeyPress: function onKeyPress(event) {
                return event.preventDefault();
            },
            onKeyDown: function onKeyDown(event) {
                return event.preventDefault();
            }
        }),
        hoverEnabledMsg && _react2.default.createElement(
            'span',
            { className: 'enabledMsg', style: { width: 250 } },
            hoverEnabledMsg
        ),
        hoverDisabledMsg && _react2.default.createElement(
            'span',
            { className: 'disabledMsg' },
            hoverDisabledMsg
        )
    );
};

var renderDateTimePicker = exports.renderDateTimePicker = function renderDateTimePicker(_ref10) {
    var _ref10$input = _ref10.input,
        onChange = _ref10$input.onChange,
        value = _ref10$input.value,
        name = _ref10$input.name,
        onBlur = _ref10$input.onBlur,
        label = _ref10.label,
        readOnly = _ref10.readOnly,
        info = _ref10.info,
        showTime = _ref10.showTime,
        showCalendar = _ref10.showCalendar,
        min = _ref10.min,
        max = _ref10.max,
        type = _ref10.type,
        _ref10$dropUp = _ref10.dropUp,
        dropUp = _ref10$dropUp === undefined ? false : _ref10$dropUp,
        placeholder = _ref10.placeholder,
        _ref10$disabled = _ref10.disabled,
        disabled = _ref10$disabled === undefined ? false : _ref10$disabled,
        _ref10$meta = _ref10.meta,
        touched = _ref10$meta.touched,
        error = _ref10$meta.error,
        warning = _ref10$meta.warning;

    return _react2.default.createElement(
        'div',
        { className: 'form-group' },
        _react2.default.createElement(
            'label',
            { htmlFor: name },
            label,
            ' ',
            touched && error && _react2.default.createElement(
                'span',
                { className: 'validation-error' },
                error
            ),
            info && _react2.default.createElement(
                'span',
                { className: 'field-info' },
                info
            )
        ),
        _react2.default.createElement(_DateTimePicker2.default, {
            min: min,
            max: max,
            format: 'MM-DD-YYYY',
            readOnly: readOnly,
            disabled: disabled,
            onChange: onChange,
            onBlur: onBlur,
            time: showTime,
            calendar: showCalendar,
            value: !value ? null : new Date(value)

        })
    );
};

var renderDateTimeStringShow = exports.renderDateTimeStringShow = function renderDateTimeStringShow(_ref11) {
    var _ref11$input = _ref11.input,
        onChange = _ref11$input.onChange,
        value = _ref11$input.value,
        name = _ref11$input.name,
        label = _ref11.label,
        readOnly = _ref11.readOnly,
        info = _ref11.info,
        showTime = _ref11.showTime,
        showCalendar = _ref11.showCalendar,
        min = _ref11.min,
        max = _ref11.max,
        _ref11$formate = _ref11.formate,
        formate = _ref11$formate === undefined ? "DD-MM-YYYY" : _ref11$formate,
        type = _ref11.type,
        _ref11$dropUp = _ref11.dropUp,
        dropUp = _ref11$dropUp === undefined ? false : _ref11$dropUp,
        placeholder = _ref11.placeholder,
        _ref11$disabled = _ref11.disabled,
        disabled = _ref11$disabled === undefined ? false : _ref11$disabled,
        _ref11$meta = _ref11.meta,
        touched = _ref11$meta.touched,
        error = _ref11$meta.error,
        warning = _ref11$meta.warning;

    // console.log("value", value)
    return _react2.default.createElement(
        'div',
        { className: 'form-group' },
        _react2.default.createElement(
            'label',
            { htmlFor: name },
            label,
            ' ',
            touched && error && _react2.default.createElement(
                'span',
                { className: 'validation-error' },
                error
            ),
            info && _react2.default.createElement(
                'span',
                { className: 'field-info' },
                info
            )
        ),
        _react2.default.createElement(
            'label',
            null,
            (0, _moment2.default)(value).format(formate)
        )
    );
};

/*
export const renderDateTimePickerWithLeave = ({
                                                  input: {onChange, value, name},
                                                  label,
                                                  readOnly,
                                                  info,
                                                  showTime = false,
                                                  showCalendar,
                                                  leaveDays = ["Sunday", "Saturday"],
                                                  min,
                                                  max,
                                                  type,
                                                  dropUp = false,
                                                  placeholder,
                                                  disabled = false,
                                                  meta: {touched, error, warning}
                                              }) => {

    const filter = event => {
        if (event) {
            console.log("event", event)
             console.log("event.target.value", event.target.value)
             if (showCalendar) {
                 if (showTime) {
                     console.log("under Development")
                 } else {
                     if (typeof(event) === 'object' && event.target && event.target.value) {
                         let v = moment(event.target.value).format('YYYY-MM-DD')
                         return v
                     } else {
                         let v = moment(event).format('YYYY-MM-DD')
                         return v
                     }
                 }
             } else {
                 if (showTime) {
                     if (typeof(event) === 'object' && event.target && event.target.value) {
                         if (event.target.value.length == 7)
                             event.target.value = '0' + event.target.value
                         return event.target.value;
                     } else {
                         if (event && event.length == 7)
                             event = '0' + event
                         let v = moment(event).format('YYYY-MM-DD')
                         return v
                     }
                 }
             }
            console.log("moment(event).format", moment(event).format('YYYY-MM-DD'))
            console.log("day", moment("9-18-2016").format('dddd'))
            console.log("day Comparision", _.includes(leaveDays, moment("9-18-2016").format('dddd')))
            console.log(" new Date(event).getDay()", new Date(event).getDay())

            //  console.log("moment(event).format",_.include("") moment(event).hour(0).minute(0).second(0).millisecond(0))
            return moment(event).format('YYYY-MM-DD')
        }
        return undefined
    }
    return <div className="form-group">
        <label htmlFor={name}>{label} {touched &&
        ((error &&
            <span className="validation-error">
            {error}
          </span>))

        }{(info &&
            <span className="field-info">
            {info}
          </span>)}</label>
        <DateTimePicker
            min={min}
            max={max}
            format={'MM-DD-YYYY'}
            readOnly={readOnly}
            disabled={disabled}
            onChange={event => onChange(filter(event))}
            time={showTime}
            calendar={showCalendar}
            value={!value ? null : new Date(value)}

        />
    </div>
}
*/

/***/ }),

/***/ "NfZE":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getReleaseDayPlannings = exports.getReleaseForDashboard = exports.addReleaseDailyPlannings = exports.calculateReleaseStats = undefined;

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var calculateReleaseStats = exports.calculateReleaseStats = function calculateReleaseStats(data) {
    return {
        type: AC.CALCULATE_RELEASE_STATS,
        release: data.release,
        mgmtData: data.mgmtData
    };
};

var addReleaseDailyPlannings = exports.addReleaseDailyPlannings = function addReleaseDailyPlannings(dailyPlannings, resetDailyPlanningMonth) {
    return {
        type: AC.ADD_DAILY_PLANNINGS,
        dailyPlannings: dailyPlannings,
        resetDailyPlanningMonth: resetDailyPlanningMonth ? true : false
    };
};

var getReleaseForDashboard = exports.getReleaseForDashboard = function getReleaseForDashboard(releaseID) {
    console.log("releaseID", releaseID);
    return function (dispatch) {
        return fetch('/api/dashboard/release-data', {
            method: "post",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                releaseID: releaseID
            })
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(calculateReleaseStats(json.data));
            }
            return json;
        });
    };
};

var getReleaseDayPlannings = exports.getReleaseDayPlannings = function getReleaseDayPlannings(releaseID, month, year, resetDailyPlanningMonth) {
    return function (dispatch) {
        return fetch('/api/dashboard/day-plannings/' + releaseID + '/month/' + month + '/year/' + year, {
            method: "get",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addReleaseDailyPlannings(json.data, resetDailyPlanningMonth));
            }
            return json;
        });
    };
};

/***/ }),

/***/ "Njw/":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactRouterDom = __webpack_require__("F8kA");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WarningList = function (_Component) {
    _inherits(WarningList, _Component);

    function WarningList(props) {
        _classCallCheck(this, WarningList);

        var _this = _possibleConstructorReturn(this, (WarningList.__proto__ || Object.getPrototypeOf(WarningList)).call(this, props));

        _this.options = {
            sizePerPageList: [{
                text: '6', value: 6
            }, {
                text: '10', value: 10
            }, {
                text: '20', value: 20
            }, {
                text: '50', value: 50
            }],
            sizePerPage: 6 // which size per page you want to locate as default

        };
        return _this;
    }

    _createClass(WarningList, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.props.getAllWarnings(this.props.release);
        }
    }, {
        key: 'formatFlag',
        value: function formatFlag(flag) {
            if (flag === SC.WARNING_UNPLANNED) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "unplanned", src: '/images/unplanned.png',
                title: 'Unplanned' });else if (flag === SC.WARNING_TOO_MANY_HOURS) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "too_many_hours",
                src: '/images/too_many_hours.png',
                title: 'Too Many Hours' });else if (flag === SC.WARNING_EMPLOYEE_ON_LEAVE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "employee-on-leave",
                src: '/images/employee_on_leave.png',
                title: 'Employee On Leave' });else if (flag === SC.WARNING_RELEASE_DATE_MISSED_1) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "release_date_missed_1",
                src: '/images/release_date_missed_1.png',
                title: 'Release Date Missed 1' });else if (flag === SC.WARNING_RELEASE_DATE_MISSED_2) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "release_date_missed_2",
                src: '/images/release_date_missed_2.png',
                title: 'Release Date Missed 2' });else if (flag === SC.WARNING_RELEASE_DATE_MISSED_3) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "release_date_missed_3",
                src: '/images/release_date_missed_3.png',
                title: 'Release Date Missed 3' });else if (flag === SC.WARNING_RELEASE_DATE_MISSED_4) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "release_date_missed_4",
                src: '/images/release_date_missed_4.png',
                title: 'Release Date Missed 4' });else if (flag === SC.WARNING_PLANNED_BEYOND_RELEASE_DATE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "planned_beyond_release_date",
                src: '/images/planned_beyond_release_date.png',
                title: 'Planned Beyond Release Date' });else if (flag === SC.WARNING_LESS_PLANNED_HOURS) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "less_planned_hours",
                src: '/images/less_planned_hours.png',
                title: 'Less Planned Hours' });else if (flag === SC.WARNING_MORE_PLANNED_HOURS) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_planned_hours",
                src: '/images/more_planned_hours.png',
                title: 'More Planned Hours' });else if (flag === SC.WARNING_MORE_REPORTED_HOURS_1) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_reported_hours_1",
                src: '/images/more_reported_hours_1.png',
                title: 'More Reported Hours 1' });else if (flag === SC.WARNING_MORE_REPORTED_HOURS_2) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_reported_hours_2",
                src: '/images/more_reported_hours_2.png',
                title: 'More Reported Hours 2' });else if (flag === SC.WARNING_MORE_REPORTED_HOURS_3) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_reported_hours_3",
                src: '/images/more_reported_hours_3.png',
                title: 'More Reported Hours 3' });else if (flag === SC.WARNING_MORE_REPORTED_HOURS_4) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_reported_hours_4",
                src: '/images/more_reported_hours_4.png',
                title: 'More Reported Hours 4' });else if (flag === SC.WARNING_HAS_UNREPORTED_DAYS) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "has-unreported-days",
                src: '/images/has_unreported_days.png',
                title: 'Has Unreported Days' });else if (flag === SC.WARNING_UNREPORTED) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "unreported",
                src: '/images/unreported.png',
                title: 'Unreported' });else if (flag === SC.WARNING_PENDING_ON_END_DATE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "pending-on-enddate",
                src: '/images/pending-on-enddate.png',
                title: 'Pending On Enddate' });else if (flag === SC.WARNING_COMPLETED_BEFORE_END_DATE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "completed-before-enddate",
                src: '/images/completed_before_enddate.png',
                title: 'Completed Before Enddate' });else if (flag === SC.WARNING_EMPLOYEE_ASK_FOR_LEAVE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "employee-ask-for-leave",
                src: '/images/employee-ask-for-leave.png',
                title: 'Employee Ask For Leave' });
        }
    }, {
        key: 'formatReleases',
        value: function formatReleases(releases) {
            if (releases && releases.length > 0) return releases.map(function (release) {
                return release.project && release.project.name ? release.project.name : "project";
            }).join(", ");else return '';
        }
    }, {
        key: 'formatReleasePlans',
        value: function formatReleasePlans(releasePlans) {
            if (releasePlans && releasePlans.length > 0) return releasePlans.map(function (releasePlan) {
                return releasePlan.task && releasePlan.task.name ? releasePlan.task.name : "releasePlan";
            }).join(", ");else return '';
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                warnings = _props.warnings,
                release = _props.release;


            return [_react2.default.createElement(
                'div',
                { key: "warning-search", className: 'col-md-12 release-options' },
                _react2.default.createElement(
                    'div',
                    { className: 'search-btn-container' },
                    _react2.default.createElement(
                        'select',
                        { className: 'form-control', title: 'Select Flag', onChange: function onChange(flag) {
                                return _this2.props.fetchWarningOnFlags(flag.target.value, release);
                            } },
                        _react2.default.createElement(
                            'option',
                            { value: SC.ALL },
                            'All Flags'
                        ),
                        SC.ALL_WARNING_NAME_ARRAY.map(function (warning, idx) {
                            return _react2.default.createElement(
                                'option',
                                {
                                    key: warning + idx, value: warning },
                                warning
                            );
                        })
                    )
                )
            ), _react2.default.createElement(
                'div',
                { key: "warning-table", className: 'col-md-12 estimation release-plan-table' },
                _react2.default.createElement(
                    _reactBootstrapTable.BootstrapTable,
                    { options: this.options, data: warnings,
                        multiColumnSearch: true,
                        search: false,
                        striped: true,
                        pagination: true,
                        hover: true,
                        height: "300px" },
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { columnTitle: true, isKey: true, dataField: '_id',
                            hidden: true },
                        'ID'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '20%', columnTitle: true, dataField: 'type' },
                        'Warning'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '12%', columnTitle: true, dataField: 'type',
                            dataFormat: this.formatFlag.bind(this) },
                        'Warning Flag'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '15%', columnTitle: true, dataField: 'releases',
                            dataFormat: this.formatReleases.bind(this) },
                        'Projects'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { columnTitle: true, dataField: 'releasePlans',
                            dataFormat: this.formatReleasePlans.bind(this) },
                        'Tasks'
                    )
                )
            )];
        }
    }]);

    return WarningList;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)(WarningList);

/***/ }),

/***/ "NtnM":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__("F8kA");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tab = function (_React$Component) {
    _inherits(Tab, _React$Component);

    function Tab() {
        _classCallCheck(this, Tab);

        return _possibleConstructorReturn(this, (Tab.__proto__ || Object.getPrototypeOf(Tab)).apply(this, arguments));
    }

    _createClass(Tab, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'li',
                { className: this.props.isActive ? "active" : null },
                _react2.default.createElement(
                    _reactRouterDom.Link,
                    { onClick: this.props.handleClick,
                        to: this.props.match.url + this.props.data.url },
                    this.props.data.displayName ? this.props.data.displayName : this.props.data.name
                )
            );
        }
    }]);

    return Tab;
}(_react2.default.Component);

exports.default = Tab;

/***/ }),

/***/ "O21F":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _reduxForm = __webpack_require__("ao4a");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        saveIsApproved: function saveIsApproved(isApproved) {
            return dispatch((0, _reduxForm.change)("leave-approval", "isApproved", isApproved));
        },
        onSubmit: function onSubmit(values) {
            if (!values.leaveID || !values.reason) {
                return _reactNotifications.NotificationManager.error('Reason not provided');
            }
            if (values.isApproved) {
                return dispatch(A.approveLeaveRequestFromServer(values.leaveID, values.reason)).then(function (json) {
                    if (json.success) {
                        _reactNotifications.NotificationManager.success('Leave request Approved Successfully');
                        dispatch(A.hideComponent(COC.LEAVE_APPROVE_DIALOG));
                    } else {
                        _reactNotifications.NotificationManager.error('Leave request Approval failed');
                    }
                    return json;
                });
            } else {
                return dispatch(A.rejectLeaveRequestFromServer(values.leaveID, values.reason)).then(function (json) {
                    if (json.success) {
                        _reactNotifications.NotificationManager.success('Leave request Cancelled Successfully');
                        dispatch(A.hideComponent(COC.LEAVE_REJECT_DIALOG));
                    } else {
                        _reactNotifications.NotificationManager.error('process failed');
                    }
                    return json;
                });
            }
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        initialValues: {
            "leaveID": state.leave.selected._id
        }
    };
};

var LeaveApprovalReasonFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.LeaveApprovelResonForm);

exports.default = LeaveApprovalReasonFormContainer;

/***/ }),

/***/ "OSPp":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var initialState = {
    all: [],
    selected: {}
};

var attendanceSettingReducer = function attendanceSettingReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case AC.ADD_UPDATE_ATTENDANCE_SETTING:
            return Object.assign({}, state, {
                selected: Object.assign(action.attendanceSetting)
            });

        default:
            return state;
    }
};

exports.default = attendanceSettingReducer;

/***/ }),

/***/ "OryJ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var initialState = {
    all: [],
    selected: {},
    leaveTypes: []

};

var leaveReducer = function leaveReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {

        case AC.ADD_LEAVE_TYPES:
            return Object.assign({}, state, { leaveTypes: action.leaveTypes });

        case AC.ADD_LEAVES:
            return Object.assign({}, state, { all: action.leaves });

        case AC.LEAVE_SELECTED:
            return Object.assign({}, state, { selected: action.leave });

        case AC.ADD_LEAVE:
            return Object.assign({}, state, { all: [].concat(_toConsumableArray(state.all), [action.leave]) });

        case AC.UPDATE_LEAVE:
            return Object.assign({}, state, {
                all: state.all.map(function (item) {
                    return item._id.toString() === action.leave._id.toString() ? Object.assign({}, action.leave) : item;
                })
            });

        case AC.REVOKE_LEAVE:
            return Object.assign({}, state, { all: state.all.filter(function (item) {
                    return item._id.toString() !== action.leave._id.toString();
                }) });

        default:
            return state;
    }
};

exports.default = leaveReducer;

/***/ }),

/***/ "P4i5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EstimationFilterDialog = function EstimationFilterDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal filterDialog', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Filters'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.EstimationFilterFormContainer, null)
        )
    );
};

exports.default = EstimationFilterDialog;

/***/ }),

/***/ "POAP":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.approveLeaveRequestFromServer = exports.rejectLeaveRequestFromServer = exports.deleteLeaveFromServer = exports.addLeaveRequestOnServer = exports.getAllLeavesFromServer = exports.getAllLeaveTypesFromServer = exports.updateLeaveSettingOnServer = exports.addLeaveSettingOnServer = exports.getLeaveSettingFromServer = exports.addLeaveTypes = exports.revokeLeave = exports.updateLeave = exports.addLeave = exports.leaveSelected = exports.addLeaves = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

var _reduxForm = __webpack_require__("ao4a");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var addLeaves = exports.addLeaves = function addLeaves(leaves) {
    return {
        type: AC.ADD_LEAVES,
        leaves: leaves
    };
};

var leaveSelected = exports.leaveSelected = function leaveSelected(leave) {
    return {
        type: AC.LEAVE_SELECTED,
        leave: leave
    };
};

var addLeave = exports.addLeave = function addLeave(leave) {
    return {
        type: AC.ADD_LEAVE,
        leave: leave
    };
};

var updateLeave = exports.updateLeave = function updateLeave(leave) {
    return {
        type: AC.UPDATE_LEAVE,
        leave: leave
    };
};

var revokeLeave = exports.revokeLeave = function revokeLeave(leave) {
    return {
        type: AC.REVOKE_LEAVE,
        leave: leave
    };
};

var addLeaveTypes = exports.addLeaveTypes = function addLeaveTypes(leaveTypes) {
    return {
        type: AC.ADD_LEAVE_TYPES,
        leaveTypes: leaveTypes
    };
};

/*-----------------------  LEAVE SETTING SECTION ---------------------------------*/

var getLeaveSettingFromServer = exports.getLeaveSettingFromServer = function getLeaveSettingFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/leave/leave-setting', {
            method: "get",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch((0, _reduxForm.initialize)("leave-setting", json.data));
            }
            return json;
        });
    };
};

var addLeaveSettingOnServer = exports.addLeaveSettingOnServer = function addLeaveSettingOnServer(leaveSetting) {
    return function (dispatch, getState) {
        return fetch('/api/leave/leave-setting', {
            method: "post",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(leaveSetting)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch((0, _reduxForm.initialize)("leave-setting", json.data));
            }
            return json;
        });
    };
};

var updateLeaveSettingOnServer = exports.updateLeaveSettingOnServer = function updateLeaveSettingOnServer(leaveSetting) {
    return function (dispatch, getState) {
        return fetch('/api/leave/leave-setting', {
            method: "put",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, *!/!*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(leaveSetting)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch((0, _reduxForm.initialize)("leave-setting", json.data));
            }
            return json;
        });
    };
};

/*---------------------------  LEAVE SECTION --------------------------------------*/

var getAllLeaveTypesFromServer = exports.getAllLeaveTypesFromServer = function getAllLeaveTypesFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/leave/leave-types', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addLeaveTypes(json.data));
            }
        });
    };
};

var getAllLeavesFromServer = exports.getAllLeavesFromServer = function getAllLeavesFromServer(status) {
    return function (dispatch, getState) {
        return fetch('/api/leave/' + status, {
            method: "get",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addLeaves(json.data));
            }
            return json;
        });
    };
};

var addLeaveRequestOnServer = exports.addLeaveRequestOnServer = function addLeaveRequestOnServer(formInput) {
    return function (dispatch, getState) {
        return fetch('/api/leave', {
            method: "post",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                if (json.data.leave) {
                    dispatch(addLeave(json.data.leave));
                }
            }
            return json;
        });
    };
};

var deleteLeaveFromServer = exports.deleteLeaveFromServer = function deleteLeaveFromServer(leaveID) {
    return function (dispatch, getState) {
        return fetch('/api/leave/' + leaveID, {
            method: "delete",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                if (json.data.leave) {
                    dispatch(revokeLeave(json.data.leave));
                }
            }
            return json;
        });
    };
};

var rejectLeaveRequestFromServer = exports.rejectLeaveRequestFromServer = function rejectLeaveRequestFromServer(leaveID, reason) {
    return function (dispatch) {
        return fetch('/api/leave/' + leaveID + '/reject', {
            method: "put",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ reason: reason })
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                if (json.data.leave) {
                    dispatch(updateLeave(json.data.leave));
                }
            }
            return json;
        });
    };
};

var approveLeaveRequestFromServer = exports.approveLeaveRequestFromServer = function approveLeaveRequestFromServer(leaveID, reason) {
    console.log("leaveID", leaveID);
    return function (dispatch, getState) {
        return fetch('/api/leave/' + leaveID + '/approve/', {
            method: "put",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ reason: reason })
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                if (json.data.leave) {
                    dispatch(updateLeave(json.data.leave));
                }
            }
            return json;
        });
    };
};

/***/ }),

/***/ "PQG5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        addFeature: function addFeature(EstimationId, featureId) {
            return dispatch(A.addFeatureFromRepositoryToEstimationOnServer(EstimationId, featureId)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Feature Added");
                    // hide dialog
                    dispatch(A.hideComponent(COC.REPOSITORY_FEATURE_DETAIL_DIALOG));
                } else {
                    if (json.code == EC.ALREADY_EXISTS) _reactNotifications.NotificationManager.error("Feature Already Added ");else _reactNotifications.NotificationManager.error("Feature Addition Failed");
                }
            });
        },
        copyFeature: function copyFeature(EstimationId, featureId) {
            return dispatch(A.copyFeatureFromRepositoryToEstimationOnServer(EstimationId, featureId)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Feature Copied");
                    // hide dialog
                    dispatch(A.hideComponent(COC.REPOSITORY_FEATURE_DETAIL_DIALOG));
                } else {
                    if (json.code == EC.ALREADY_EXISTS) _reactNotifications.NotificationManager.error("Feature Already Available");else _reactNotifications.NotificationManager.error("Feature Addition Failed");
                }
            });
        }
    };
};

var mapStateToProps = function mapStateToProps(state) {
    return {
        feature: state.repository.feature,
        estimationId: state.estimation.selected && state.estimation.selected._id ? state.estimation.selected._id : undefined
    };
};

var RepositoryFeatureDetailPageContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.RepositoryFeatureDetailPage);

exports.default = RepositoryFeatureDetailPageContainer;

/***/ }),

/***/ "PfOk":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactRouterDom = __webpack_require__("F8kA");

var _index = __webpack_require__("ZhKb");

var _clientMsg = __webpack_require__("jURI");

var CM = _interopRequireWildcard(_clientMsg);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ProjectList = function (_Component) {
    _inherits(ProjectList, _Component);

    function ProjectList(props) {
        _classCallCheck(this, ProjectList);

        var _this = _possibleConstructorReturn(this, (ProjectList.__proto__ || Object.getPrototypeOf(ProjectList)).call(this, props));

        _this.state = {
            showProjectDeletionDialog: false,
            addRow: null

        };
        return _this;
    }

    _createClass(ProjectList, [{
        key: 'onClose',
        value: function onClose() {
            this.setState({ showProjectDeletionDialog: false });
        }
    }, {
        key: 'OkConfirmationForDeletingProject',
        value: function OkConfirmationForDeletingProject() {
            this.setState({ showProjectDeletionDialog: false });
            this.props.deleteProject(this.state.addRow);
        }
    }, {
        key: 'viewDeleteButton',
        value: function viewDeleteButton(cell, row, enumObject, rowIndex) {
            var _this2 = this;

            return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom ', type: 'button', onClick: function onClick() {
                        _this2.setState({ showProjectDeletionDialog: true }), _this2.setState({ addRow: row._id });
                    } },
                _react2.default.createElement('i', { className: 'fa fa-trash' })
            );
        }
    }, {
        key: 'viewEditButton',
        value: function viewEditButton(cell, row, enumObject, rowIndex) {
            var _this3 = this;

            return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom', type: 'button', onClick: function onClick() {
                        _this3.props.showPorjectEditForm(row);
                    } },
                _react2.default.createElement('i', { className: 'fa fa-pencil' })
            );
        }
    }, {
        key: 'formatClient',
        value: function formatClient(client) {
            if (client) return client.name;
            return '';
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            return _react2.default.createElement(
                'div',
                null,
                this.state.showProjectDeletionDialog && _react2.default.createElement(_index.ConfirmationDialog, { show: true, onConfirm: this.OkConfirmationForDeletingProject.bind(this),
                    title: CM.DELETE_PROJECT, onClose: this.onClose.bind(this),
                    body: CM.DELETE_PROJECT_BODY }),
                _react2.default.createElement(
                    'div',
                    { key: 'project_list', className: 'clearfix' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-12 pad' },
                            _react2.default.createElement(
                                'div',
                                { className: 'col-md-12' },
                                _react2.default.createElement(
                                    'button',
                                    { className: 'btn customBtn',
                                        onClick: function onClick() {
                                            return _this4.props.showProjectCreationForm();
                                        } },
                                    'Create Project'
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'estimation' },
                                    _react2.default.createElement(
                                        _reactBootstrapTable.BootstrapTable,
                                        { options: this.options, data: this.props.projects,
                                            striped: true,
                                            hover: true },
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { columnTitle: true, isKey: true, dataField: '_id',
                                                hidden: true },
                                            'ID'
                                        ),
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { columnTitle: true, dataField: 'name' },
                                            'Project Name'
                                        ),
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { columnTitle: true, dataField: 'client',
                                                dataFormat: this.formatClient.bind(this) },
                                            'Client Name'
                                        ),
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { width: '15%', dataField: 'editButton',
                                                dataFormat: this.viewEditButton.bind(this) },
                                            'Edit project'
                                        ),
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { width: '15%', dataField: 'deleteButton',
                                                dataFormat: this.viewDeleteButton.bind(this) },
                                            'Delete project'
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return ProjectList;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)(ProjectList);

/***/ }),

/***/ "PqAI":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(newTaskPlanning) {
            //console.log("release move ", newTaskPlanning)
            return dispatch(A.moveTaskPlanOnServer(newTaskPlanning)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Task Planning Merged");
                    dispatch(A.hideComponent(COC.MOVE_TASK_PLAN_DIALOG));

                    if (newTaskPlanning.employee._id.toString() == newTaskPlanning.workCalendarEmployeeID.toString()) dispatch(A.getEmployeeWorkCalendarFromServer(newTaskPlanning.workCalendarEmployeeID));
                    return json;
                } else _reactNotifications.NotificationManager.error(json.message);

                return json;
            });
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        initial: state.release.selectedRelease.iterations[0]
    };
};

var ReleaseMoveTaskPlanFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ReleaseMoveTaskPlanForm);

exports.default = ReleaseMoveTaskPlanFormContainer;

/***/ }),

/***/ "Q8cv":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactWidgetsMoment = __webpack_require__("Utwc");

var _reactWidgetsMoment2 = _interopRequireDefault(_reactWidgetsMoment);

var _momentTimezone = __webpack_require__("xNPZ");

var _momentTimezone2 = _interopRequireDefault(_momentTimezone);

var _reactRedux = __webpack_require__("RH2O");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_moment2.default.locale('en');
(0, _reactWidgetsMoment2.default)();
var ReleaseTaskPlanningShiftForm = function ReleaseTaskPlanningShiftForm(props) {
    var day = props.day,
        month = props.month,
        handleSubmit = props.handleSubmit,
        employee = props.employee,
        daysToShift = props.daysToShift,
        year = props.year,
        days = props.days,
        release = props.release;

    //let m =

    var m = (0, _moment2.default)();
    m.date(day);
    m.month(month);
    m.year(year);

    return _react2.default.createElement(
        'form',
        { onSubmit: handleSubmit },
        _react2.default.createElement(
            'div',
            { className: "row" },
            _react2.default.createElement(
                'div',
                { className: "col-md-4" },
                _react2.default.createElement(
                    'span',
                    null,
                    'From Date: ',
                    _react2.default.createElement(
                        'span',
                        { className: "highlightText" },
                        m.format('Do, MMM, YY')
                    )
                )
            ),
            _react2.default.createElement(
                'div',
                { className: "col-md-offset-4 col-md-4" },
                _react2.default.createElement(
                    'span',
                    null,
                    'Employee: ',
                    _react2.default.createElement(
                        'span',
                        { className: "highlightText" },
                        employee.name
                    )
                )
            )
        ),
        _react2.default.createElement(
            'div',
            { className: "row" },
            _react2.default.createElement(
                'div',
                { className: 'col-md-12 planDivider' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-offset-8 col-md-4' },
                    _react2.default.createElement(
                        'span',
                        null,
                        'Days to Shift'
                    ),
                    _react2.default.createElement(_reduxForm.Field, { name: 'daysToShift', placeholder: "select days",
                        displayField: "day",
                        valueField: "day",
                        component: _fields.renderSelect, options: days
                    })
                )
            )
        ),
        _react2.default.createElement(
            'div',
            { className: "row" },
            _react2.default.createElement(
                'div',
                { className: 'col-md-offset-4 col-md-8' },
                _react2.default.createElement(
                    'div',
                    { style: { float: "right" } },
                    _react2.default.createElement(
                        'button',
                        {
                            type: 'button',
                            className: 'btn customBtn Past ',
                            onClick: function onClick() {
                                props.shiftTasksToPast(release._id, employee._id, day, month, year, daysToShift);
                            } },
                        _react2.default.createElement('span', { className: 'glyphicon glyphicon-chevron-left' }),
                        'Shift in Past'
                    ),
                    _react2.default.createElement(
                        'button',
                        {
                            type: 'button',
                            className: 'btn customBtn Future',
                            onClick: function onClick() {
                                props.shiftTasksToFuture(release._id, employee._id, day, month, year, daysToShift);
                            } },
                        'Shift in Future',
                        _react2.default.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })
                    )
                )
            )
        )
    );
};

ReleaseTaskPlanningShiftForm = (0, _reduxForm.reduxForm)({
    form: 'task-plan-shift'
})(ReleaseTaskPlanningShiftForm);

var selector = (0, _reduxForm.formValueSelector)('task-plan-shift');

ReleaseTaskPlanningShiftForm = (0, _reactRedux.connect)(function (state) {
    var _selector = selector(state, 'employee', 'month', 'day', 'year', 'daysToShift', 'release'),
        employee = _selector.employee,
        month = _selector.month,
        day = _selector.day,
        year = _selector.year,
        daysToShift = _selector.daysToShift;

    return {
        employee: employee,
        month: month,
        day: day,
        year: year,
        daysToShift: daysToShift
    };
})(ReleaseTaskPlanningShiftForm);

exports.default = ReleaseTaskPlanningShiftForm;

/***/ }),

/***/ "QBXJ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _validation = __webpack_require__("4KT+");

var _fields = __webpack_require__("NACj");

var _reduxForm = __webpack_require__("ao4a");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactWidgetsMoment = __webpack_require__("Utwc");

var _reactWidgetsMoment2 = _interopRequireDefault(_reactWidgetsMoment);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_moment2.default.locale('en');
(0, _reactWidgetsMoment2.default)();

var LeaveApprovalReasonForm = function (_React$Component) {
    _inherits(LeaveApprovalReasonForm, _React$Component);

    function LeaveApprovalReasonForm(props) {
        _classCallCheck(this, LeaveApprovalReasonForm);

        return _possibleConstructorReturn(this, (LeaveApprovalReasonForm.__proto__ || Object.getPrototypeOf(LeaveApprovalReasonForm)).call(this, props));
    }

    _createClass(LeaveApprovalReasonForm, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            this.props.saveIsApproved(this.props.isApproved);
        }
    }, {
        key: "render",
        value: function render() {
            var _props = this.props,
                pristine = _props.pristine,
                submitting = _props.submitting,
                reset = _props.reset,
                handleSubmit = _props.handleSubmit,
                isApproved = _props.isApproved;

            return _react2.default.createElement(
                "form",
                { onSubmit: handleSubmit },
                _react2.default.createElement(
                    "div",
                    { className: "row" },
                    _react2.default.createElement(
                        "div",
                        { className: "col-md-6" },
                        _react2.default.createElement(_reduxForm.Field, { name: "leaveID", component: "input", type: "hidden" }),
                        _react2.default.createElement(_reduxForm.Field, { name: "isApproved", component: "input", type: "hidden" }),
                        _react2.default.createElement(_reduxForm.Field, { width: "80%", name: "reason", validate: [_validation.required], component: _fields.renderTextArea,
                            label: "Reason:" }),
                        _react2.default.createElement(
                            "button",
                            { type: "submit", disabled: pristine || submitting, className: "btn customBtn" },
                            " Submit"
                        )
                    )
                )
            );
        }
    }]);

    return LeaveApprovalReasonForm;
}(_react2.default.Component);

LeaveApprovalReasonForm = (0, _reduxForm.reduxForm)({
    form: 'leave-approval'

})(LeaveApprovalReasonForm);

exports.default = LeaveApprovalReasonForm;

/***/ }),

/***/ "QE73":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EstimationAddToReleaseDialog = function EstimationAddToReleaseDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'add-to-release-dialog', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Add To Release'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.EstimationAddToReleaseFormContainer, null)
        )
    );
};

exports.default = EstimationAddToReleaseDialog;

/***/ }),

/***/ "QHrB":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _reactNotifications = __webpack_require__("B0Hd");

var _componentConsts = __webpack_require__("8Ojg");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        shiftTasksToFuture: function shiftTasksToFuture(releaseId, employeeId, day, month, year, daysToShift) {
            if (!daysToShift) return _reactNotifications.NotificationManager.error('Please select Number of days to shift');

            return dispatch(A.shiftTasksToFutureOnServer({
                releaseId: releaseId,
                employeeId: employeeId,
                day: day,
                month: month,
                year: year,
                daysToShift: Number(daysToShift)
            })).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success('Shifting to future date completed...');
                    dispatch(A.hideComponent(_componentConsts.TASK_SHIFT_DIALOG));
                    dispatch(A.getEmployeeWorkCalendarFromServer(employeeId, month, year));
                } else _reactNotifications.NotificationManager.error(json.message);
            });
        },
        shiftTasksToPast: function shiftTasksToPast(releaseId, employeeId, day, month, year, daysToShift) {
            if (!daysToShift) return _reactNotifications.NotificationManager.error('Please select Number of days to shift');

            return dispatch(A.shiftTasksToPastOnServer({
                releaseId: releaseId,
                employeeId: employeeId,
                day: day,
                month: month,
                year: year,
                daysToShift: Number(daysToShift)
            })).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success('Shifting to past date completed...');
                    dispatch(A.hideComponent(_componentConsts.TASK_SHIFT_DIALOG));
                    dispatch(A.getEmployeeWorkCalendarFromServer(employeeId, month, year));
                } else _reactNotifications.NotificationManager.error(json.message);
            });
            /*
            if (!employeeId || !baseDate || !Number(daysToShift)) {
                if (!employeeId)
                    return NotificationManager.error('Please select employee')
                else if (!baseDate)
                    return NotificationManager.error('Please select base date')
                  else if (!daysToShift)
                    return NotificationManager.error('Please select Number of days to shift')
              }
            else return dispatch(A.shiftTasksToPastOnServer({
                employeeId: employeeId,
                baseDate: baseDate,
                daysToShift: Number(daysToShift),
                releasePlanID: releasePlanID
            })).then(json => {
                if (json.success) {
                    NotificationManager.success('Plan shifted to past')
                }
                else NotificationManager.error('Plan shifting failed')
            })
            */
        }

    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    var days = [{ 'day': 1 }, { 'day': 2 }, { 'day': 3 }, { 'day': 4 }, { 'day': 5 }, { 'day': 6 }, { 'day': 7 }, { 'day': 8 }, { 'day': 9 }, { 'day': 10 }, { 'day': 11 }, { 'day': 12 }, { 'day': 13 }, { 'day': 14 }, { 'day': 15 }, { 'day': 16 }, { 'day': 17 }, { 'day': 18 }, { 'day': 19 }, { 'day': 20 }, { 'day': 21 }, { 'day': 22 }, { 'day': 23 }, { 'day': 24 }, { 'day': 25 }, { 'day': 26 }, { 'day': 27 }, { 'day': 28 }, { 'day': 29 }, { 'day': 30 }];
    return {
        release: state.release.selectedRelease,
        team: state.user && state.user.allDevelopers && state.user.allDevelopers.length ? state.user.allDevelopers : [],
        days: days
    };
};

var ReleaseTaskPlanningShiftFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ReleaseTaskPlanningShiftForm);

exports.default = ReleaseTaskPlanningShiftFormContainer;

/***/ }),

/***/ "QggF":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ReleasePlanningUpdateFormDialog = function ReleasePlanningUpdateFormDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Update Planning Date'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.UpdateReleaseDatesFormContainer, null)
        )
    );
};

exports.default = ReleasePlanningUpdateFormDialog;

/***/ }),

/***/ "QiyI":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

var _validation = __webpack_require__("4KT+");

var _reactRedux = __webpack_require__("RH2O");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var passwordMatch = function passwordMatch(value, values) {

    return value != values.password ? 'Should match password value' : undefined;
};

var UserForm = function (_Component) {
    _inherits(UserForm, _Component);

    function UserForm(props) {
        _classCallCheck(this, UserForm);

        return _possibleConstructorReturn(this, (UserForm.__proto__ || Object.getPrototypeOf(UserForm)).call(this, props));
    }

    _createClass(UserForm, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            logger.debug(logger.USER_FORM_RENDER, 'props', this.props);
            var _props = this.props,
                _id = _props._id,
                changeCredentials = _props.changeCredentials;


            return [_react2.default.createElement(
                'div',
                { key: 'UserFormBackButton' },
                _react2.default.createElement(
                    'button',
                    { type: 'button',
                        onClick: function onClick() {
                            return _this2.props.showUserList();
                        } },
                    _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
                )
            ), _react2.default.createElement(
                'form',
                { key: 'UserForm', onSubmit: this.props.handleSubmit },
                _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-4' },
                        _react2.default.createElement(_reduxForm.Field, { name: '_id', component: 'input', className: 'form-control', type: 'hidden' }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'firstName', label: 'First Name:', component: _fields.renderText, type: 'text',
                            validate: [_validation.required] }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'lastName', label: 'Last Name:', component: _fields.renderText, type: 'text',
                            validate: [_validation.required] }),
                        _react2.default.createElement(_reduxForm.Field, {
                            name: 'roles',
                            component: _fields.renderMultiSelect, label: 'Roles:',
                            data: this.props.roles, validate: [_validation.required], valueField: '_id', textField: 'name' }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'email', label: 'Email:', component: _fields.renderText, type: 'email',
                            validate: [_validation.required, _validation.email] }),
                        this.props._id && _react2.default.createElement(
                            'div',
                            null,
                            _react2.default.createElement(
                                'label',
                                null,
                                _react2.default.createElement(_reduxForm.Field, { name: 'changeCredentials', component: 'input', type: 'checkbox' }),
                                'Change Credentials'
                            )
                        ),
                        (!this.props._id || changeCredentials) && _react2.default.createElement(_reduxForm.Field, { name: 'password', label: 'Password:', component: _fields.renderText, type: 'password',
                            validate: [_validation.required, _validation.passwordLength] }),
                        (!this.props._id || changeCredentials) && _react2.default.createElement(_reduxForm.Field, { name: 'confirmPassword', label: 'Confirm Password:', component: _fields.renderText, type: 'password',
                            validate: [_validation.required, _validation.passwordLength, passwordMatch] }),
                        _react2.default.createElement(
                            'button',
                            { type: 'submit',
                                className: 'btn btn-submit' },
                            ' ',
                            !this.props._id && "Add" || this.props._id && "Update",
                            ' '
                        )
                    )
                )
            )];
        }
    }]);

    return UserForm;
}(_react.Component);

UserForm = (0, _reduxForm.reduxForm)({
    form: 'user'
})(UserForm);

var selector = (0, _reduxForm.formValueSelector)('user');

UserForm = (0, _reactRedux.connect)(function (state) {
    var _selector = selector(state, '_id', 'changeCredentials'),
        _id = _selector._id,
        changeCredentials = _selector.changeCredentials;

    var selectedRoles = selector(state, 'roles');
    return {
        _id: _id,
        changeCredentials: changeCredentials,
        selectedRoles: selectedRoles
    };
})(UserForm);

exports.default = UserForm;

/***/ }),

/***/ "QpGQ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*----------------------------- ACTION CONSTANTS -----------------------------*/

//LOGIN CONSTANTS
var ADD_LOGIN_USER = exports.ADD_LOGIN_USER = "ADD_LOGIN_USER";
var LOGIN_FAILED = exports.LOGIN_FAILED = "LOGIN_FAILED";

//SYSYTEM CONSTANTS
var SHOW_COMPONENT_HIDE_OTHER = exports.SHOW_COMPONENT_HIDE_OTHER = "SHOW_COMPONENT_HIDE_OTHER";
var SHOW_COMPONENT = exports.SHOW_COMPONENT = "SHOW_COMPONENT";
var HIDE_COMPONENT = exports.HIDE_COMPONENT = "HIDE_COMPONENT";
var ADD_SSR_FLAG = exports.ADD_SSR_FLAG = "ADD_SSR_FLAG";
var CLEAR_SSR_FLAG = exports.CLEAR_SSR_FLAG = "CLEAR_SSR_FLAG";
var SHOW_LOADER = exports.SHOW_LOADER = "SHOW_LOADER";
var HIDE_LOADER = exports.HIDE_LOADER = "HIDE_LOADER";

//PERMISSIONS CONSTANTS
var ADD_PERMISSIONS = exports.ADD_PERMISSIONS = "ADD_PERMISSIONS";
var ADD_PERMISSION = exports.ADD_PERMISSION = "ADD_PERMISSION";
var EDIT_PERMISSION = exports.EDIT_PERMISSION = "EDIT_PERMISSION";
var DELETE_PERMISSION = exports.DELETE_PERMISSION = "DELETE_PERMISSION";

//ROLES CONSTANTS
var ADD_ROLES = exports.ADD_ROLES = "ADD_ROLES";
var ADD_ROLE = exports.ADD_ROLE = "ADD_ROLE";
var EDIT_ROLE = exports.EDIT_ROLE = "EDIT_ROLE";
var DELETE_ROLE = exports.DELETE_ROLE = "DELETE_ROLE";

//USER CONSTANTS
var ADD_USERS = exports.ADD_USERS = "ADD_USERS";
var ADD_USERS_WITH_ROLE_CATEGORY = exports.ADD_USERS_WITH_ROLE_CATEGORY = "ADD_USERS_WITH_ROLE_CATEGORY";
var ADD_USERS_WITH_ROLE_DEVELOPER = exports.ADD_USERS_WITH_ROLE_DEVELOPER = "ADD_USERS_WITH_ROLE_DEVELOPER";
var ADD_DEVELOPERS_TO_STATE = exports.ADD_DEVELOPERS_TO_STATE = "ADD_DEVELOPERS_TO_STATE";
var ADD_USER = exports.ADD_USER = "ADD_USER";
var EDIT_USER = exports.EDIT_USER = "EDIT_USER";
var DELETE_USER = exports.DELETE_USER = "DELETE_USER";
var ADD_ADMIN_USER = exports.ADD_ADMIN_USER = "ADD_ADMIN_USER";
var UPDATE_ADMIN_USER = exports.UPDATE_ADMIN_USER = "UPDATE_ADMIN_USER";
var DELETE_ADMIN_USER = exports.DELETE_ADMIN_USER = "DELETE_ADMIN_USER";
var ADMIN_EDITING_ROLE = exports.ADMIN_EDITING_ROLE = "ADMIN_EDITING_ROLE";
var ADD_CLIENTS = exports.ADD_CLIENTS = "ADD_CLIENTS";
var ADD_CLIENT = exports.ADD_CLIENT = "ADD_CLIENT";
var UPDATE_CLIENT = exports.UPDATE_CLIENT = "UPDATE_CLIENT";
var DELETE_CLIENT = exports.DELETE_CLIENT = "DELETE_CLIENT";

//ESTIMATION CONSTANTS
var ADD_ESTIMATIONS = exports.ADD_ESTIMATIONS = "ADD_ESTIMATIONS";
var ADD_ESTIMATION = exports.ADD_ESTIMATION = "ADD_ESTIMATION";
var EDIT_ESTIMATION = exports.EDIT_ESTIMATION = "EDIT_ESTIMATION";
var DELETE_ESTIMATION = exports.DELETE_ESTIMATION = "DELETE_ESTIMATION";
var SELECT_ESTIMATION = exports.SELECT_ESTIMATION = "SELECT_ESTIMATION";
var ADD_ESTIMATION_TASK = exports.ADD_ESTIMATION_TASK = "ADD_ESTIMATION_TASK";
var UPDATE_ESTIMATION_TASK = exports.UPDATE_ESTIMATION_TASK = "UPDATE_ESTIMATION_TASK";
var ADD_ESTIMATION_FEATURE = exports.ADD_ESTIMATION_FEATURE = "ADD_ESTIMATION_FEATURE";
var UPDATE_ESTIMATION_FEATURE = exports.UPDATE_ESTIMATION_FEATURE = "UPDATE_ESTIMATION_FEATURE";
var MOVE_TASK_IN_FEATURE = exports.MOVE_TASK_IN_FEATURE = "MOVE_TASK_IN_FEATURE";
var MOVE_TASK_OUTOF_FEATURE = exports.MOVE_TASK_OUTOF_FEATURE = "MOVE_TASK_OUTOF_FEATURE";
var UPDATE_SELECTED_ESTIMATION = exports.UPDATE_SELECTED_ESTIMATION = "UPDATE_SELECTED_ESTIMATION";

var ESTIMATION_TASK_DELETE = exports.ESTIMATION_TASK_DELETE = "ESTIMATION_TASK_DELETE";
var REQUEST_FOR_TASK_EDIT_PERMISSION = exports.REQUEST_FOR_TASK_EDIT_PERMISSION = "REQUEST_FOR_TASK_EDIT_PERMISSION";
var DELETE_ESTIMATION_TASK = exports.DELETE_ESTIMATION_TASK = "DELETE_ESTIMATION_TASK";
var DELETE_ESTIMATION_FEATURE = exports.DELETE_ESTIMATION_FEATURE = "DELETE_ESTIMATION_FEATURE";
var UPDATE_USER_PROFILE_STATE = exports.UPDATE_USER_PROFILE_STATE = "UPDATE_USER_PROFILE_STATE";
var EXPAND_FEATURE = exports.EXPAND_FEATURE = "EXPAND_FEATURE";
var EXPAND_TASK = exports.EXPAND_TASK = "EXPAND_TASK";
var EXPAND_TASK_AND_FEATURE = exports.EXPAND_TASK_AND_FEATURE = "EXPAND_TASK_AND_FEATURE";
var ADD_FILTERED_ESTIMATIONS = exports.ADD_FILTERED_ESTIMATIONS = "ADD_FILTERED_ESTIMATIONS";
var CLEAR_FILTER_FROM_ESTIMATION = exports.CLEAR_FILTER_FROM_ESTIMATION = "CLEAR_FILTER_FROM_ESTIMATION";
var SELECT_ALL_FILTER_FROM_ESTIMATION = exports.SELECT_ALL_FILTER_FROM_ESTIMATION = "SELECT_ALL_FILTER_FROM_ESTIMATION";

//project constants
var ADD_PROJECTS = exports.ADD_PROJECTS = "ADD_PROJECTS";
var ADD_PROJECT = exports.ADD_PROJECT = "ADD_PROJECT";
var EDIT_PROJECT = exports.EDIT_PROJECT = "EDIT_PROJECT";
var DELETE_PROJECT = exports.DELETE_PROJECT = "DELETE_PROJECT";

//module constants
var ADD_MODULES = exports.ADD_MODULES = "ADD_MODULES";
var ADD_MODULE = exports.ADD_MODULE = "ADD_MODULE";
var EDIT_MODULE = exports.EDIT_MODULE = "EDIT_MODULE ";
var DELETE_MODULE = exports.DELETE_MODULE = "DELETE_MODULE ";

//TECHNOLOGY CONSTANTS
var ADD_TECHNOLOGIES = exports.ADD_TECHNOLOGIES = "ADD_TECHNOLOGIES";
var ADD_TECHNOLOGY = exports.ADD_TECHNOLOGY = "ADD_TECHNOLOGY";
var DELETE_TECHNOLOGY = exports.DELETE_TECHNOLOGY = "DELETE_TECHNOLOGY";

//LEAVE CONSTANTS
var ADD_LEAVE_TYPES = exports.ADD_LEAVE_TYPES = "ADD_LEAVE_TYPES";
var ADD_LEAVES = exports.ADD_LEAVES = "ADD_LEAVES";
var LEAVE_SELECTED = exports.LEAVE_SELECTED = "LEAVE_SELECTED";
var ADD_LEAVE = exports.ADD_LEAVE = "ADD_LEAVE";
var UPDATE_LEAVE = exports.UPDATE_LEAVE = "UPDATE_LEAVE";
var REVOKE_LEAVE = exports.REVOKE_LEAVE = "REVOKE_LEAVE";

//RELEASE CONSTANTS
var ADD_AVAILABLE_RELEASES = exports.ADD_AVAILABLE_RELEASES = "ADD_AVAILABLE_RELEASES";
var ADD_RELEASES = exports.ADD_RELEASES = "ADD_RELEASES";
var RELEASE_SELECTED = exports.RELEASE_SELECTED = "RELEASE_SELECTED";
var ADD_RELEASE = exports.ADD_RELEASE = "ADD_RELEASE";
var ADD_RELEASE_PLANS = exports.ADD_RELEASE_PLANS = "ADD_RELEASE_PLANS";
var RELEASE_PLAN_SELECTED = exports.RELEASE_PLAN_SELECTED = "RELEASE_PLAN_SELECTED";
var ADD_RELEASE_TASK_PLANNINGS = exports.ADD_RELEASE_TASK_PLANNINGS = "ADD_RELEASE_TASK_PLANNINGS";
var DELETE_TASK_PLAN = exports.DELETE_TASK_PLAN = "DELETE_TASK_PLAN";
var ADD_DEVELOPER_FILTERED = exports.ADD_DEVELOPER_FILTERED = "ADD_DEVELOPER_FILTERED";
var UPDATE_DEVELOPER_FILTERED = exports.UPDATE_DEVELOPER_FILTERED = "UPDATE_DEVELOPER_FILTERED";
var ADD_RELEASE_TASK_PLANNING_TO_STATE = exports.ADD_RELEASE_TASK_PLANNING_TO_STATE = "ADD_RELEASE_TASK_PLANNING_TO_STATE";
var UPDATE_TASK_PLANNING = exports.UPDATE_TASK_PLANNING = "UPDATE_TASK_PLANNING";
var UPDATE_TASK_PLANS = exports.UPDATE_TASK_PLANS = "UPDATE_TASK_PLANS";
var EXPAND_DESCRIPTION = exports.EXPAND_DESCRIPTION = "EXPAND_DESCRIPTION";
var SET_DEVELOPERS_SCHEDULE = exports.SET_DEVELOPERS_SCHEDULE = "SET_DEVELOPERS_SCHEDULE";
var SET_FROM_DATE = exports.SET_FROM_DATE = "SET_FROM_DATE";
var UPDATE_RELEASE_PLAN = exports.UPDATE_RELEASE_PLAN = "UPDATE_RELEASE_PLAN";
var ADD_TASK_PLANNINGS = exports.ADD_TASK_PLANNINGS = "ADD_TASK_PLANNINGS";
var UPDATE_RELEASE_DATES = exports.UPDATE_RELEASE_DATES = "UPDATE_RELEASE_DATES";
var RELEASE_TAB_SELECTED = exports.RELEASE_TAB_SELECTED = "RELEASE_TAB_SELECTED";

//REPOSITORY CONSTANTS
var SELECT_REPOSITORY = exports.SELECT_REPOSITORY = "SELECT_REPOSITORY";
var SELECT_TASK_FROM_REPOSITORY = exports.SELECT_TASK_FROM_REPOSITORY = "SELECT_TASK_FROM_REPOSITORY";
var SELECT_FEATURE_FROM_REPOSITORY = exports.SELECT_FEATURE_FROM_REPOSITORY = "SELECT_FEATURE_FROM_REPOSITORY";

//ATTENDANCE CONSTANTS
var ADD_UPDATE_ATTENDANCE_SETTING = exports.ADD_UPDATE_ATTENDANCE_SETTING = "ADD_UPDATE_ATTENDANCE_SETTING";

//REPORTING CONSTANTS
var CHANGE_CALENDAR_NAVIGATION = exports.CHANGE_CALENDAR_NAVIGATION = "CHANGE_CALENDAR_NAVIGATION";
var SHOW_USERS_TASKS = exports.SHOW_USERS_TASKS = "SHOW_USERS_TASKS";
var SET_CALENDAR_TASK_DETAILS = exports.SET_CALENDAR_TASK_DETAILS = "SET_CALENDAR_TASK_DETAILS";

//REPORTING CONSTANTS
var ADD_USER_RELEASES = exports.ADD_USER_RELEASES = "ADD_USER_RELEASES";
var ADD_RELEASES_AND_TASKS_OF_SELECTED_DATE = exports.ADD_RELEASES_AND_TASKS_OF_SELECTED_DATE = "ADD_RELEASES_AND_TASKS_OF_SELECTED_DATE";
var RELEASE_SELECTED_FOR_REPORTING = exports.RELEASE_SELECTED_FOR_REPORTING = "RELEASE_SELECTED_FOR_REPORTING";
var NO_PROJECT_SELECTED = exports.NO_PROJECT_SELECTED = "NO_PROJECT_SELECTED";
var REPORT_TASK_SELECTED = exports.REPORT_TASK_SELECTED = "REPORT_TASK_SELECTED";
var ADD_TASK_COMMENT = exports.ADD_TASK_COMMENT = "ADD_TASK_COMMENT";
var SET_STATUS = exports.SET_STATUS = "SET_STATUS";
var SET_REPORT_DATE = exports.SET_REPORT_DATE = "SET_REPORT_DATE";
var SET_RELEASE_ID = exports.SET_RELEASE_ID = "SET_RELEASE_ID";
var SET_ITERATION_TYPE = exports.SET_ITERATION_TYPE = "SET_ITERATION_TYPE";
var UPDATE_SELECTED_TASK_PLAN = exports.UPDATE_SELECTED_TASK_PLAN = "UPDATE_SELECTED_TASK_PLAN";
var UPDATE_SELECTED_RELEASE_PLAN = exports.UPDATE_SELECTED_RELEASE_PLAN = "UPDATE_SELECTED_RELEASE_PLAN";
var SET_REPORTS_OF_RELEASE = exports.SET_REPORTS_OF_RELEASE = "SET_REPORTS_OF_RELEASE";
var TASK_REPORTED = exports.TASK_REPORTED = "TASK_REPORTED";

//WARNING CONSTANTS
var ADD_WARNINGS = exports.ADD_WARNINGS = "ADD_WARNINGS";

//HOLIDAY CONSTANTS
var ADD_HOLIDAY = exports.ADD_HOLIDAY = "ADD_HOLIDAY";
var ADD_HOLIDAYS = exports.ADD_HOLIDAYS = "ADD_HOLIDAYS";
var ADD_ALL_YEARS = exports.ADD_ALL_YEARS = "ADD_ALL_YEARS";
var DELETE_HOLIDAY = exports.DELETE_HOLIDAY = "DELETE_HOLIDAY";
var UPDATE_HOLIDAY = exports.UPDATE_HOLIDAY = "UPDATE_HOLIDAY";

//EMPLOYEE CONSTANTS
var SET_EMPLOYEE_SETTINGS = exports.SET_EMPLOYEE_SETTINGS = "SET_EMPLOYEE_SETTINGS";
var ADD_WORK_CALENDAR = exports.ADD_WORK_CALENDAR = "ADD_WORK_CALENDAR";

// DEVELOPMENT TYPE
var ADD_DEVELOPMENT_TYPES = exports.ADD_DEVELOPMENT_TYPES = "ADD_DEVELOPMENT_TYPES";
var ADD_DEVELOPMENT_TYPE = exports.ADD_DEVELOPMENT_TYPE = "ADD_DEVELOPMENT_TYPE";
var DELETE_DEVELOPMENT_TYPE = exports.DELETE_DEVELOPMENT_TYPE = "DELETE_DEVELOPMENT_TYPE";

var CALCULATE_RELEASE_STATS = exports.CALCULATE_RELEASE_STATS = "CALCULATE_RELEASE_STATS";
var ADD_DAILY_PLANNINGS = exports.ADD_DAILY_PLANNINGS = "ADD_DAILY_PLANNINGS";
var SET_PLANNING_MONTH = exports.SET_PLANNING_MONTH = "SET_PLANNING_MONTH";

/***/ }),

/***/ "QvHI":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _index = __webpack_require__("81ym");

var A = _interopRequireWildcard(_index);

var _components = __webpack_require__("ZhKb");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactRouterDom = __webpack_require__("F8kA");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _reduxForm = __webpack_require__("ao4a");

var _utils = __webpack_require__("DcaD");

var U = _interopRequireWildcard(_utils);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        ReleaseProjectGoBack: function ReleaseProjectGoBack(release) {
            dispatch(A.getReleaseFromServer(release._id)).then(function (json) {
                if (json.success) {
                    dispatch(A.showComponentHideOthers(COC.RELEASE_LIST));
                }
            });
            dispatch(A.getAllReleasesFromServer(SC.ALL));
        },
        tabSelected: function tabSelected(tab) {
            return dispatch(A.releaseTabSelected(tab));
        },
        openUpdateReleaseDatesForm: function openUpdateReleaseDatesForm(release) {
            dispatch((0, _reduxForm.initialize)("update-release-dates", {
                _id: release._id
            }));
            dispatch(A.showComponent(COC.UPDATE_RELEASE_DATES_DIALOG));
        }
    };
};

var mapStateToProps = function mapStateToProps(state) {
    return {
        loggedInUser: state.user.loggedIn,
        release: state.release.selectedRelease,
        selectedTab: state.release.selectedTab
    };
};

var ReleasePlanSectionContainer = (0, _reactRouterDom.withRouter)((0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ReleasePlanSection));

exports.default = ReleasePlanSectionContainer;

/***/ }),

/***/ "R9BS":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _reduxForm = __webpack_require__("ao4a");

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

var _reactNotifications = __webpack_require__("B0Hd");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            if (!values._id) {
                logger.debug(logger.CLIENT_FORM_CONNECT, "onSubmit:values:", values);
                return dispatch((0, _actions.addClientOnServer)(values)).then(function (json) {
                    if (json.success) {
                        _reactNotifications.NotificationManager.success('Client Added Successfully');
                        dispatch(A.hideComponent(COC.CLIENT_FORM_DIALOG));
                    } else {
                        _reactNotifications.NotificationManager.error('Client Not Added!');
                        if (json.code == EC.ALREADY_EXISTS) throw new _reduxForm.SubmissionError({ name: "Client Already Exists" });
                    }
                    return json;
                });
            } else {
                return dispatch((0, _actions.editClientOnServer)(values)).then(function (response) {
                    if (response.success) {
                        dispatch(A.hideComponent(COC.CLIENT_FORM_DIALOG)), _reactNotifications.NotificationManager.success('Client Updated Successfully');
                    } else {
                        _reactNotifications.NotificationManager.error('Client Updated Failed');
                        if (response.code == EC.ALREADY_EXISTS) throw new _reduxForm.SubmissionError({ name: "Client Already Exists" });
                    }
                    return json;
                });
            }
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {};
};

var ClientFormContainer = (0, _reactRedux.connect)(null, mapDispatchToProps)(_components.ClientForm);

exports.default = ClientFormContainer;

/***/ }),

/***/ "RBSm":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        getDeveloperSchedules: function getDeveloperSchedules(employeeID, month, year) {
            console.log("employee id is ", employeeID);
            console.log("month is ", month);
            if (employeeID !== undefined) {
                if (employeeID === '')
                    // clearing work calendar
                    return dispatch(A.addWorkCalendar({}));else return dispatch(A.getEmployeeWorkCalendarFromServer(employeeID.toString(), month, year));
            } else if (employeeID == undefined) {
                return _reactNotifications.NotificationManager.error('Please select employee!');
            } else return _reactNotifications.NotificationManager.error('Date is not picked up properly!');
        }
    };
};

var mapStateToProps = function mapStateToProps(state) {
    return {
        team: state.release.teamOfRelease,
        initialValues: {
            'employeeId': undefined
        }
    };
};

var ReleaseDeveloperScheduleFormContainerContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ReleaseDeveloperScheduleForm);

exports.default = ReleaseDeveloperScheduleFormContainerContainer;

/***/ }),

/***/ "RyBK":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

var _reduxForm = __webpack_require__("ao4a");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            return dispatch(A.addLeaveRequestOnServer(values)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success('leave Request Added Successfully');
                    dispatch(A.hideComponent(COC.LEAVE_REQUEST_FORM_DIALOG));
                } else {
                    _reactNotifications.NotificationManager.error(json.message);
                }
                return json;
            });
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        leaveTypes: state.leave.leaveTypes
    };
};

var LeaveRequestFormCOntainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.LeaveRequestForm);

exports.default = LeaveRequestFormCOntainer;

/***/ }),

/***/ "S/Cv":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _sections = __webpack_require__("zyxl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AppHome = function (_Component) {
    _inherits(AppHome, _Component);

    function AppHome() {
        _classCallCheck(this, AppHome);

        return _possibleConstructorReturn(this, (AppHome.__proto__ || Object.getPrototypeOf(AppHome)).apply(this, arguments));
    }

    _createClass(AppHome, [{
        key: "render",
        value: function render() {
            return _react2.default.createElement(
                "div",
                { className: "container-fluid" },
                _react2.default.createElement(
                    "div",
                    { className: "row no-gutter" },
                    _react2.default.createElement(_sections.Sidebar, { loggedInUser: this.props.loggedInUser }),
                    _react2.default.createElement(
                        "div",
                        { className: "col-md-9 rightContent" },
                        _react2.default.createElement(_sections.ContentMain, this.props)
                    )
                )
            );
        }
    }]);

    return AppHome;
}(_react.Component);

exports.default = AppHome;

/***/ }),

/***/ "S8q0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__("F8kA");

var _recharts = __webpack_require__("zyQQ");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var addPercentage = function addPercentage(value) {
    console.log("formatter called with value ", value);
    if (value == 0) return '';
    return value + '%';
};

var getHoursAngles = function getHoursAngles(estimatedHours, plannedHours, reportedHours) {
    var maxHours = Math.max(estimatedHours, plannedHours, reportedHours);
    var estimatedStartAngle = 180,
        plannedStartAngle = 180,
        reportedStartAngle = 180;
    var estimatedEndAngle = 0,
        plannedEndAngle = 0,
        reportedEndAngle = 0;

    if (maxHours == estimatedHours) {
        // estimated hours are maximum
        estimatedEndAngle = -180;
        plannedEndAngle = 180 - plannedHours / maxHours * 360;
        reportedEndAngle = 180 - reportedHours * 360 / maxHours;
    } else if (maxHours == plannedHours) {
        plannedEndAngle = -180;
        estimatedEndAngle = 180 - estimatedHours * 360 / maxHours;
        reportedEndAngle = 180 - reportedHours * 360 / maxHours;
    } else {
        reportedEndAngle = -180;
        estimatedEndAngle = 180 - estimatedHours * 360 / maxHours;
        plannedEndAngle = 180 - plannedHours * 360 / maxHours;
    }

    return {
        estimatedStartAngle: estimatedStartAngle,
        estimatedEndAngle: estimatedEndAngle,
        plannedStartAngle: plannedStartAngle,
        plannedEndAngle: plannedEndAngle,
        reportedStartAngle: reportedStartAngle,
        reportedEndAngle: reportedEndAngle
    };
};

var RADIAN = Math.PI / 180;

var renderCustomizedLabel = function renderCustomizedLabel(_ref) {
    var cx = _ref.cx,
        cy = _ref.cy,
        value = _ref.value;

    return _react2.default.createElement(
        'text',
        { x: cx, y: cy, fill: '#d35ba1', fontWeight: "bold", textAnchor: 'middle', dominantBaseline: 'middle' },
        '' + value
    );
};

var DashboardSection = function (_Component) {
    _inherits(DashboardSection, _Component);

    function DashboardSection(props) {
        _classCallCheck(this, DashboardSection);

        return _possibleConstructorReturn(this, (DashboardSection.__proto__ || Object.getPrototypeOf(DashboardSection)).call(this, props));
    }

    _createClass(DashboardSection, [{
        key: 'onReleaseSelect',
        value: function onReleaseSelect(releaseID) {
            this.props.setReleaseID(releaseID);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            console.log("DashboardSection->render() called", window.innerWidth, window.innerHeight);

            var dashboardWidth = window.innerWidth * 0.8; // as content section has 80% width

            console.log("dashboard width is ", dashboardWidth);
            var barMargin = { top: 20, right: 20, left: 30, bottom: 30 };
            var barWidth = (dashboardWidth - barMargin.left * 2 - barMargin.right * 2) / 2;
            console.log("bar width calculated as ", barWidth);

            var _getHoursAngles = getHoursAngles(this.props.hoursData.estimatedHours, this.props.hoursData.plannedHours, this.props.hoursData.reportedHours),
                estimatedStartAngle = _getHoursAngles.estimatedStartAngle,
                estimatedEndAngle = _getHoursAngles.estimatedEndAngle,
                plannedStartAngle = _getHoursAngles.plannedStartAngle,
                plannedEndAngle = _getHoursAngles.plannedEndAngle,
                reportedStartAngle = _getHoursAngles.reportedStartAngle,
                reportedEndAngle = _getHoursAngles.reportedEndAngle;

            console.log(estimatedEndAngle, plannedEndAngle, reportedEndAngle);

            var baseHour = this.props.plannedVsReported.baseHour;

            var _props = this.props,
                selectedReleaseID = _props.selectedReleaseID,
                allReleases = _props.allReleases;

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-12' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-4 ' },
                        _react2.default.createElement(
                            'div',
                            null,
                            _react2.default.createElement(
                                'select',
                                {
                                    value: selectedReleaseID,
                                    className: 'form-control',
                                    title: 'Select Flag',

                                    onChange: function onChange(release) {
                                        return _this2.onReleaseSelect(release.target.value);
                                    } },
                                allReleases && allReleases.length ? allReleases.map(function (release, idx) {
                                    return _react2.default.createElement(
                                        'option',
                                        {
                                            key: idx,
                                            value: release._id },
                                        release.project.name,
                                        ' (',
                                        release.name,
                                        ')'
                                    );
                                }) : null
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: "col-md-6", style: { marginRight: "0px" } },
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.BarChart,
                            { data: [this.props.overallProgress],
                                height: 80, width: barWidth, layout: "vertical", margin: barMargin },
                            _react2.default.createElement(_recharts.XAxis, { type: 'number', hide: true }),
                            _react2.default.createElement(_recharts.YAxis, { type: 'category', dataKey: "name", hide: true }),
                            _react2.default.createElement(_recharts.Tooltip, null),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'progress', stackId: 'a', fill: '#6CE190', name: "Overall Progress" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'progress', position: 'top', formatter: addPercentage })
                            ),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'remaining', stackId: 'a', fill: '#E25858', name: "Unfinished" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'remaining', position: 'top', formatter: addPercentage })
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.BarChart,
                            { data: [this.props.completedPendingProgress],
                                height: 80, width: barWidth, margin: barMargin,
                                layout: "vertical" },
                            _react2.default.createElement(_recharts.XAxis, { type: 'number', hide: true }),
                            _react2.default.createElement(_recharts.YAxis, { type: 'category', dataKey: "name", hide: true }),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'completed', stackId: 'a', fill: '#6CE190',
                                    name: "Progress (Completed Tasks)" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'completed', position: 'top', formatter: addPercentage })
                            ),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'pending', stackId: 'a', fill: '#f5f968',
                                    name: "Progress (Pending Tasks)" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'pending', position: 'top', formatter: addPercentage })
                            ),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'remaining', stackId: 'a', fill: '#E25858', name: "Unfinished" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'remaining', position: 'top', formatter: addPercentage })
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.BarChart,
                            { data: [this.props.estimatedProgress],
                                height: 80, width: barWidth, margin: barMargin,
                                layout: "vertical", barGap: 30 },
                            _react2.default.createElement(_recharts.XAxis, { type: 'number', hide: true }),
                            _react2.default.createElement(_recharts.YAxis, { type: 'category', dataKey: "name", hide: true }),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'planned', fill: '#f2e974', stackId: 'planned',
                                    name: "Estimated Progress (Per Planned)" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'planned', position: 'top', formatter: addPercentage })
                            ),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'remainingPlanned', stackId: 'planned', fill: '#E25858',
                                    name: "Remaining (Planned)" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'remainingPlanned', position: 'top', formatter: addPercentage })
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.BarChart,
                            { data: [this.props.estimatedProgress],
                                height: 80, width: barWidth, margin: barMargin,
                                layout: "vertical", barGap: 30 },
                            _react2.default.createElement(_recharts.XAxis, { type: 'number', hide: true }),
                            _react2.default.createElement(_recharts.YAxis, { type: 'category', dataKey: "name", hide: true }),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'reported', fill: '#5cd1d1', stackId: 'reported',
                                    name: "Estimated Progress (Per Reporting)" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'reported', position: 'top', formatter: addPercentage })
                            ),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'remainingReported', stackId: 'reported', fill: '#E25858',
                                    name: "Remaining (Report)" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'remainingReported', position: 'top', formatter: addPercentage })
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: "col-md-6" },
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.BarChart,
                            { data: [this.props.plannedVsUnplannedWork],
                                height: 80, width: barWidth, layout: "vertical", margin: barMargin },
                            _react2.default.createElement(_recharts.XAxis, { type: 'number', hide: true }),
                            _react2.default.createElement(_recharts.YAxis, { type: 'category', dataKey: "name", hide: true }),
                            _react2.default.createElement(_recharts.Tooltip, null),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'planned', stackId: 'a', fill: '#6CE190', name: "Planned Work" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'planned', position: 'top', formatter: addPercentage })
                            ),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'unplanned', stackId: 'a', fill: '#E25858', name: "Unplanned Work" },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'unplanned', position: 'top', formatter: addPercentage })
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.BarChart,
                            { data: [this.props.plannedVsReported],
                                height: 80, width: barWidth, layout: "vertical", margin: barMargin },
                            _react2.default.createElement(_recharts.XAxis, { type: 'number', hide: true,
                                domain: [0, this.props.plannedVsReported.base + this.props.plannedVsReported.extra] }),
                            _react2.default.createElement(_recharts.YAxis, { type: 'category', dataKey: "name", hide: true }),
                            _react2.default.createElement(_recharts.Tooltip, null),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'base', stackId: 'a',
                                    fill: baseHour === 'planned' ? '#f2e974' : '#5cd1d1',
                                    name: baseHour === 'planned' ? 'Planned Hours' : 'Reported Hours' },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'base', position: 'top' })
                            ),
                            _react2.default.createElement(
                                _recharts.Bar,
                                { barSize: 10, dataKey: 'extra', stackId: 'a', fill: '#E25858',
                                    name: baseHour === 'planned' ? 'Extra Reported Hours' : 'Extra Planned Hours' },
                                _react2.default.createElement(_recharts.LabelList, { dataKey: 'extra', position: 'top' })
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: "chartSection" },
                        _react2.default.createElement(
                            _recharts.PieChart,
                            { width: barWidth, height: 240, margin: barMargin },
                            _react2.default.createElement(_recharts.Pie, { isAnimationActive: false,
                                dataKey: "value",
                                data: [{ name: 'Estimated Hours', value: this.props.hoursData.estimatedHours }],
                                cx: barWidth / 2,
                                cy: 80, outerRadius: 60, innerRadius: 40, startAngle: estimatedStartAngle,
                                endAngle: estimatedEndAngle, fill: '#d35ba1',
                                label: renderCustomizedLabel,
                                labelLine: false }),
                            _react2.default.createElement(_recharts.Pie, { isAnimationActive: false,
                                dataKey: "value",
                                data: [{ name: 'Planned Hours', value: this.props.hoursData.plannedHours }],
                                cx: barWidth / 2,
                                cy: 80, outerRadius: 70, innerRadius: 62, startAngle: plannedStartAngle,
                                endAngle: plannedEndAngle, fill: '#f2e974',
                                label: true }),
                            _react2.default.createElement(_recharts.Pie, { isAnimationActive: false,
                                dataKey: "value",
                                data: [{ name: 'Reported Hours', value: this.props.hoursData.reportedHours }],
                                cx: barWidth / 2,
                                cy: 80, outerRadius: 80, innerRadius: 72, startAngle: reportedStartAngle,
                                endAngle: reportedEndAngle, fill: '#5cd1d1',
                                label: true }),
                            _react2.default.createElement(_recharts.Legend, null),
                            _react2.default.createElement(_recharts.Tooltip, null)
                        )
                    )
                )
            );
        }
    }]);

    return DashboardSection;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)(DashboardSection);

/***/ }),

/***/ "SG2m":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EstimationSuggestTaskDialog = function EstimationSuggestTaskDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal suggestDialog', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Suggest Task Detail For Estimation'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.EstimationSuggestTaskFormContainer, null)
        )
    );
};

exports.default = EstimationSuggestTaskDialog;

/***/ }),

/***/ "STEj":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RepositoryTaskDetailDialog = function RepositoryTaskDetailDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Task Detail Page'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.RepositoryTaskDetailPageContainer, null)
        )
    );
};

exports.default = RepositoryTaskDetailDialog;

/***/ }),

/***/ "SVfc":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getAllPermissionsFromServer = exports.deletePermissionOnServer = exports.editPermissionOnServer = exports.addPermissionOnServer = exports.deletePermission = exports.editPermission = exports.addPermission = exports.addAllPermissions = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var addAllPermissions = exports.addAllPermissions = function addAllPermissions(permissions) {
    return {
        type: AC.ADD_PERMISSIONS,
        permissions: permissions
    };
};

var addPermission = exports.addPermission = function addPermission(permission) {
    return {
        type: AC.ADD_PERMISSION,
        permission: permission
    };
};

var editPermission = exports.editPermission = function editPermission(permission) {
    return {
        type: AC.EDIT_PERMISSION,
        permission: permission
    };
};
var deletePermission = exports.deletePermission = function deletePermission(PermissionID) {
    return {
        type: AC.DELETE_PERMISSION,
        PermissionID: PermissionID
    };
};

var addPermissionOnServer = exports.addPermissionOnServer = function addPermissionOnServer(formInput) {
    logger.debug(logger.PERMISSION_THUNK, 'addPermissionOnServer()');
    return function (dispatch, getState) {
        return fetch('/api/permissions', {
            method: "post",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addPermission(json.data));
            }
            return json;
        });
    };
};

var editPermissionOnServer = exports.editPermissionOnServer = function editPermissionOnServer(formInput) {
    logger.debug(logger.PERMISSION_THUNK, 'editPermissionOnServer()');
    return function (dispatch, getState) {
        return fetch('/api/permissions', {
            method: "put",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(editPermission(json.data));
            }
            return json;
        });
    };
};

var deletePermissionOnServer = exports.deletePermissionOnServer = function deletePermissionOnServer(PermissionId) {
    return function (dispatch, getState) {
        return fetch('/api/permissions/' + PermissionId, {
            method: "delete",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(deletePermission(PermissionId));
                // clear user form after update is successful
            }
            return json;
        });
    };
};

var getAllPermissionsFromServer = exports.getAllPermissionsFromServer = function getAllPermissionsFromServer() {
    logger.debug(logger.PERMISSION_THUNK, 'getAllPermissionsFromServer()');
    return function (dispatch, getState) {
        return fetch('/api/permissions', {
            method: "get",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addAllPermissions(json.data));
            }
            return json;
        });
    };
};

/***/ }),

/***/ "SfoH":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _reduxForm = __webpack_require__("ao4a");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    logger.debug(logger.PERMISSION_LIST_CONNECT, "mapDispatchToProps()");
    return {
        getAllPermissions: function getAllPermissions() {
            return dispatch(A.getAllPermissionsFromServer());
        },
        showPermissionForm: function showPermissionForm() {
            return dispatch(A.showComponentHideOthers(COC.PERMISSION_FORM));
        },
        editPermission: function editPermission(permission, rowIdx) {
            dispatch((0, _reduxForm.initialize)("permission", permission));
            dispatch(A.showComponentHideOthers(COC.PERMISSION_FORM));
        },
        deleteUser: function deleteUser(userId) {
            return dispatch(A.deletePermissionOnServer(userId));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    var childProps = {
        loggedInUser: state.user.loggedIn,
        permissions: state.permission.all
    };
    logger.debug(logger.PERMISSION_LIST_CONNECT, "mapStateToProps(): ", childProps);
    return childProps;
};

var PermissionListContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.PermissionList);

exports.default = PermissionListContainer;

/***/ }),

/***/ "T6KT":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__("F8kA");

var _reactRedux = __webpack_require__("RH2O");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _utils = __webpack_require__("DcaD");

var U = _interopRequireWildcard(_utils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SidebarSection = function SidebarSection(props) {
    var roles = [];
    if (props && props.loggedInUser && props.loggedInUser.roleNames && props.loggedInUser.roleNames.length) roles = props.loggedInUser.roleNames;

    return _react2.default.createElement(
        'section',
        { className: 'sidebar' },
        _react2.default.createElement(
            'div',
            { className: 'clearfix' },
            _react2.default.createElement(
                'div',
                { className: 'sidebarContent' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-12 pad' },
                    _react2.default.createElement(
                        'ul',
                        { className: 'list-unstyled' },
                        (roles.indexOf(SC.ROLE_MANAGER) > -1 || roles.indexOf(SC.ROLE_LEADER) > -1 || roles.indexOf('Developer') > -1) && _react2.default.createElement(
                            'li',
                            null,
                            _react2.default.createElement(
                                _reactRouterDom.Link,
                                { to: '/app-home/calendar', onClick: function onClick() {
                                        props.dispatch(A.getAllTaskPlansFromServer());
                                        props.dispatch(A.showComponentHideOthers(COC.CALENDAR_TASK_PAGE));
                                    } },
                                'Calendar'
                            )
                        ),
                        (roles.indexOf(SC.ROLE_MANAGER) > -1 || roles.indexOf(SC.ROLE_LEADER) > -1) && _react2.default.createElement(
                            'li',
                            null,
                            _react2.default.createElement(
                                _reactRouterDom.Link,
                                { to: '/app-home/release', onClick: function onClick() {
                                        props.dispatch(A.getAllReleasesFromServer(SC.ALL));
                                        props.dispatch(A.showComponentHideOthers(COC.RELEASE_LIST));
                                    } },
                                'Release'
                            )
                        ),
                        (roles.indexOf(SC.ROLE_MANAGER) > -1 || roles.indexOf(SC.ROLE_LEADER) > -1 || roles.indexOf(SC.ROLE_DEVELOPER) > -1 || roles.indexOf(SC.ROLE_NON_PROJECT_DEVELOPER) > -1) && _react2.default.createElement(
                            'li',
                            null,
                            _react2.default.createElement(
                                _reactRouterDom.Link,
                                { to: '/app-home/reporting', onClick: function onClick() {
                                        props.dispatch(A.getUserReleasesFromServer(SC.ALL));
                                        /*on reporting click by default all task plans and projects will be there with params
                                        releaseID,
                                         * @param releaseID - releaseId by default all release will be fetched
                                         * @param nowString - Current Date Of Indian Time-ZOne
                                         * @param 'planned' - release-plan iteration type
                                         * @param task status - 'all'
                                         */
                                        props.dispatch(A.getReportingTasksForDate(SC.ALL, U.getNowStringInIndia(), SC.ITERATION_TYPE_PLANNED, SC.ALL));
                                        props.dispatch(A.setReleaseID(SC.ALL));
                                        props.dispatch(A.setReportDate(U.getNowStringInIndia()));
                                        props.dispatch(A.setReportedStatus(SC.ALL));
                                        props.dispatch(A.setIterationType(SC.ITERATION_TYPE_PLANNED));
                                        props.dispatch(A.showComponentHideOthers(COC.REPORTING_TASK_PAGE));
                                    } },
                                'Reporting'
                            )
                        ),
                        (roles.indexOf(SC.ROLE_NEGOTIATOR) > -1 || roles.indexOf(SC.ROLE_ESTIMATOR) > -1) && _react2.default.createElement(
                            'li',
                            null,
                            _react2.default.createElement(
                                _reactRouterDom.Link,
                                { to: '/app-home/estimation', onClick: function onClick() {
                                        props.dispatch(A.getAllEstimationsFromServer(SC.ALL, SC.ALL));
                                        props.dispatch(A.getAllProjectsUserEstimationsFromServer());
                                        props.dispatch(A.showComponentHideOthers(COC.ESTIMATION_LIST));
                                    } },
                                'Estimation'
                            )
                        ),
                        roles.indexOf(SC.ROLE_NEGOTIATOR) > -1 && _react2.default.createElement(
                            'li',
                            null,
                            _react2.default.createElement(
                                _reactRouterDom.Link,
                                { to: '/app-home/client', onClick: function onClick() {
                                        props.dispatch(A.getAllClientsFromServer());
                                        props.dispatch(A.showComponentHideOthers(COC.CLIENT_LIST));
                                    } },
                                'Client'
                            )
                        ),
                        roles.indexOf(SC.ROLE_NEGOTIATOR) > -1 && _react2.default.createElement(
                            'li',
                            null,
                            _react2.default.createElement(
                                _reactRouterDom.Link,
                                { to: '/app-home/projects', onClick: function onClick() {
                                        props.dispatch(A.getAllClientsFromServer());
                                        props.dispatch(A.getAllProjectsFromServer());
                                        props.dispatch(A.showComponentHideOthers(COC.PROJECT_LIST));
                                    } },
                                'Projects'
                            )
                        ),
                        roles.indexOf(SC.ROLE_NEGOTIATOR) > -1 && _react2.default.createElement(
                            'li',
                            null,
                            _react2.default.createElement(
                                _reactRouterDom.Link,
                                { to: '/app-home/modules', onClick: function onClick() {
                                        props.dispatch(A.getAllProjectsFromServer());
                                        props.dispatch(A.getAllModulesFromServer());
                                        props.dispatch(A.showComponentHideOthers(COC.MODULE_LIST));
                                    } },
                                'Modules'
                            )
                        ),
                        roles.indexOf(SC.ROLE_NEGOTIATOR) > -1 && _react2.default.createElement(
                            'li',
                            null,
                            _react2.default.createElement(
                                _reactRouterDom.Link,
                                { to: '/app-home/technology', onClick: function onClick() {
                                        props.dispatch(A.getAllTechnologiesFromServer());
                                        props.dispatch(A.showComponentHideOthers(COC.TECHNOLOGIES_LIST));
                                    } },
                                'Technology'
                            )
                        ),
                        (roles.indexOf(SC.ROLE_MANAGER) > -1 || roles.indexOf(SC.ROLE_LEADER) > -1 || roles.indexOf(SC.ROLE_DEVELOPER) > -1 || roles.indexOf(SC.ROLE_NON_PROJECT_DEVELOPER) > -1 || roles.indexOf(SC.ROLE_TOP_MANAGEMENT) > -1) && _react2.default.createElement(
                            'li',
                            null,
                            _react2.default.createElement(
                                _reactRouterDom.Link,
                                { to: '/app-home/leave', onClick: function onClick() {
                                        props.dispatch(A.getAllLeavesFromServer(SC.ALL));
                                        props.dispatch(A.getAllLeaveTypesFromServer());
                                        props.dispatch(A.showComponentHideOthers(COC.LEAVE_LIST));
                                    } },
                                'Leave'
                            )
                        ),
                        roles.indexOf(SC.ROLE_TOP_MANAGEMENT) > -1 && _react2.default.createElement(
                            'li',
                            null,
                            _react2.default.createElement(
                                _reactRouterDom.Link,
                                { to: '/app-home/attendance', onClick: function onClick() {
                                        props.dispatch(A.getAttendanceSettingFromServer());
                                        props.dispatch(A.showComponentHideOthers(COC.ATTENDANCE_SETTING_FORM));
                                    } },
                                'Attendance Setting'
                            )
                        )
                    )
                )
            )
        )
    );
};

exports.default = (0, _reactRedux.connect)()(SidebarSection);

/***/ }),

/***/ "T84z":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactBootstrapDialog = __webpack_require__("OLzJ");

var _reactBootstrapDialog2 = _interopRequireDefault(_reactBootstrapDialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AdminUserList = function (_Component) {
    _inherits(AdminUserList, _Component);

    function AdminUserList(props) {
        _classCallCheck(this, AdminUserList);

        return _possibleConstructorReturn(this, (AdminUserList.__proto__ || Object.getPrototypeOf(AdminUserList)).call(this, props));
    }

    _createClass(AdminUserList, [{
        key: 'editCellButton',
        value: function editCellButton(cell, row, enumObject, rowIndex) {
            var _this2 = this;

            return _react2.default.createElement('button', { className: 'glyphicon glyphicon-pencil pull-left btn btn-custom', type: 'button',
                onClick: function onClick() {
                    return _this2.onClickUserEditSelected(cell, row, rowIndex);
                } });
        }
    }, {
        key: 'onClickUserEditSelected',
        value: function onClickUserEditSelected(cell, row, rowIndex) {
            this.props.showAdminUserEditForm(row);
        }
    }, {
        key: 'deleteCellButton',
        value: function deleteCellButton(cell, row, enumObject, rowIndex) {
            var _this3 = this;

            return _react2.default.createElement('button', { className: 'glyphicon glyphicon-trash pull-left btn btn-custom', type: 'button',
                onClick: function onClick() {
                    return _this3.onClickCaseTypeDeleteSelected(cell, row, rowIndex);
                } });
        }
    }, {
        key: 'onClickCaseTypeDeleteSelected',
        value: function onClickCaseTypeDeleteSelected(cell, row, rowIndex) {
            var _this4 = this;

            this.dialog.show({
                title: "Remove Permission",
                body: "Remove Permission",
                actions: [_reactBootstrapDialog2.default.DefaultAction('Remove', function () {
                    _this4.props.deleteAdminUser(row._id);
                }, 'btn-custom'), _reactBootstrapDialog2.default.DefaultAction('Close', function () {
                    _this4.dialog.hide();
                }, 'btn-custom')],
                bsSize: 'small',
                onHide: function onHide(dialog) {
                    _this4.dialog.hide();
                }
            });
        }
    }, {
        key: 'formatRole',
        value: function formatRole(roles, row) {
            if (roles && roles.length > 0) return roles.map(function (role) {
                return role.role;
            }).join(", ");else return '';
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            return _react2.default.createElement(
                'div',
                { className: 'col-md-10' },
                _react2.default.createElement(_reactBootstrapDialog2.default, { ref: function ref(el) {
                        _this5.dialog = el;
                    } }),
                //(this.props.loggedInUser.isSuperAdmin) ?
                _react2.default.createElement(
                    'button',
                    { className: 'btn btn-default btn-submit', onClick: function onClick() {
                            return _this5.props.showAdminUserForm();
                        } },
                    'Create User'
                )
                //: <div style={{height: '10px'}}></div>
                ,
                _react2.default.createElement(
                    _reactBootstrapTable.BootstrapTable,
                    { options: this.options, data: this.props.AdminUsers, striped: true,
                        hoveNr: true },
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { isKey: true, dataField: '_id', hidden: true },
                        'ID'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '20%', dataField: 'firstName', dataSort: true },
                        'First Name'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '20%', dataField: 'lastName' },
                        'Last Name'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '26%', dataField: 'roles',
                            dataFormat: this.formatRole },
                        'Roles'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '22%', dataField: 'email' },
                        'Email'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '8%', dataField: 'button', dataFormat: this.editCellButton.bind(this) },
                        _react2.default.createElement('i', {
                            className: 'fa fa-pencil' })
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '8%', dataField: 'button',
                            dataFormat: this.deleteCellButton.bind(this) },
                        _react2.default.createElement('i', { className: 'fa fa-trash' })
                    )
                )
            );
        }
    }]);

    return AdminUserList;
}(_react.Component);

exports.default = AdminUserList;

/***/ }),

/***/ "TEWQ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reduxForm = __webpack_require__("ao4a");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _fields = __webpack_require__("NACj");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _validation = __webpack_require__("4KT+");

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactWidgetsMoment = __webpack_require__("Utwc");

var _reactWidgetsMoment2 = _interopRequireDefault(_reactWidgetsMoment);

var _reactRedux = __webpack_require__("RH2O");

var _lodash = __webpack_require__("M4fF");

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_moment2.default.locale('en');
(0, _reactWidgetsMoment2.default)();

var EstimationProjectAwardForm = function EstimationProjectAwardForm(props) {
    //logger.debug(logger.ESTIMATION_PROJECT_AWARD_FORM_RENDER, props)
    var pristine = props.pristine,
        submitting = props.submitting,
        reset = props.reset,
        change = props.change;
    var team = props.team,
        managers = props.managers,
        leaders = props.leaders,
        devStartDate = props.devStartDate,
        devReleaseDate = props.devReleaseDate,
        clientReleaseDate = props.clientReleaseDate,
        manager = props.manager,
        leader = props.leader;

    var max = !_lodash2.default.isEmpty(devReleaseDate) ? (0, _moment2.default)(devReleaseDate).toDate() : !_lodash2.default.isEmpty(clientReleaseDate) ? (0, _moment2.default)(clientReleaseDate).toDate() : undefined;
    var maxRelease = !_lodash2.default.isEmpty(clientReleaseDate) ? (0, _moment2.default)(clientReleaseDate).toDate() : undefined;

    /*
        While creating/adding release to an estimation, an user which is chosen as a Manager cannot be chosen as Leader and vice versa.
        A manager/leader can be chose as Developer if they have that role as well.
    */

    var updatedManagerList = leader && leader._id ? managers.filter(function (m) {
        return m._id.toString() !== leader._id.toString();
    }) : managers;
    var updatedLeaderList = manager && manager._id ? leaders.filter(function (l) {
        return l._id.toString() !== manager._id.toString();
    }) : leaders;
    var now = new Date();
    return _react2.default.createElement(
        'form',
        { onSubmit: props.handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(_reduxForm.Field, { name: 'estimation._id', component: 'input', type: 'hidden' }),
            _react2.default.createElement(_reduxForm.Field, { name: '_id', component: 'input', type: 'hidden' }),
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'billedHours', component: _fields.renderText, label: "Negotiated Billed Hours:",
                        validate: [_validation.required, _validation.number] })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'releaseVersionName', component: _fields.renderText, validate: [_validation.required],
                        label: "Name (Relese Version):" })
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'devStartDate', component: _fields.renderDateTimePickerString,
                        min: now,
                        max: max,
                        showTime: false,
                        label: "Expected Start Date For Developer:", validate: [_validation.required] })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'devReleaseDate', component: _fields.renderDateTimePickerString,
                        min: (0, _moment2.default)(devStartDate).toDate(),
                        max: maxRelease,
                        showTime: false,
                        label: "Expected Developer Release Date:", validate: [_validation.required] })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'clientReleaseDate', component: _fields.renderDateTimePickerString,
                        min: (0, _moment2.default)(devReleaseDate).toDate(),
                        showTime: false,
                        label: "Expected Client Release Date:",
                        validate: _validation.required })
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'manager._id',
                        component: _fields.renderSelect,
                        label: "Manager Of Release:",
                        options: updatedManagerList,
                        validate: _validation.required,
                        valueField: '_id',
                        displayField: 'Name'
                    })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'leader._id',
                        component: _fields.renderSelect,
                        label: "Leader Of Release:",
                        options: updatedLeaderList,
                        validate: _validation.required,
                        valueField: '_id',
                        displayField: 'Name'
                    })
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-12' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'team',
                        component: _fields.renderMultiSelect,
                        label: "Planned Employees For Release:",
                        data: team,
                        validate: _validation.required,
                        textField: 'name',
                        valueField: '_id'
                    })
                )
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'row initiatEstimation' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-6 text-center' },
                _react2.default.createElement(
                    'button',
                    { type: 'submit', disabled: pristine || submitting, className: 'btn customBtn' },
                    'Submit'
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-6 text-center' },
                _react2.default.createElement(
                    'button',
                    { type: 'button', disabled: pristine || submitting, onClick: reset, className: 'btn customBtn' },
                    'Reset'
                )
            )
        )
    );
};

EstimationProjectAwardForm = (0, _reduxForm.reduxForm)({
    form: 'estimation-project-award'
})(EstimationProjectAwardForm);

var selector = (0, _reduxForm.formValueSelector)('estimation-project-award');

EstimationProjectAwardForm = (0, _reactRedux.connect)(function (state) {
    var _selector = selector(state, 'devStartDate', 'devReleaseDate', 'clientReleaseDate'),
        devStartDate = _selector.devStartDate,
        devReleaseDate = _selector.devReleaseDate,
        clientReleaseDate = _selector.clientReleaseDate;

    var manager = selector(state, 'manager');
    var leader = selector(state, 'leader');
    return {
        devStartDate: devStartDate,
        devReleaseDate: devReleaseDate,
        clientReleaseDate: clientReleaseDate,
        manager: manager,
        leader: leader
    };
})(EstimationProjectAwardForm);

exports.default = EstimationProjectAwardForm;

/***/ }),

/***/ "Tn4U":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _sections = __webpack_require__("zyxl");

var mapStateToProps = function mapStateToProps(state) {
    return {
        loggedInUser: state.user.loggedIn
    };
};
var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {};
};

var SidebarSectionContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_sections.SidebarSection);

exports.default = SidebarSectionContainer;

/***/ }),

/***/ "U1E7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _AdminHome = __webpack_require__("BxOU");

var _AdminHome2 = _interopRequireDefault(_AdminHome);

var _reactRouterDom = __webpack_require__("F8kA");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var mapStateToProps = function mapStateToProps(state) {
    return {
        loggedInUser: state.user.loggedIn
    };
};

var AdminHomeContainer = (0, _reactRouterDom.withRouter)((0, _reactRedux.connect)(mapStateToProps)(_AdminHome2.default));

exports.default = AdminHomeContainer;

/***/ }),

/***/ "U1dz":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _SuperAdminHome = __webpack_require__("BhD/");

var _SuperAdminHome2 = _interopRequireDefault(_SuperAdminHome);

var _reactRouterDom = __webpack_require__("F8kA");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var mapStateToProps = function mapStateToProps(state) {
    return {
        loggedInUser: state.user.loggedIn
    };
};

var SuperAdminHomeContainer = (0, _reactRouterDom.withRouter)((0, _reactRedux.connect)(mapStateToProps)(_SuperAdminHome2.default));

exports.default = SuperAdminHomeContainer;

/***/ }),

/***/ "U3TS":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.deleteTechnologyOnServer = exports.addTechnologyOnServer = exports.getAllTechnologiesFromServer = exports.deleteTechnology = exports.addTechnology = exports.addTechnologies = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var addTechnologies = exports.addTechnologies = function addTechnologies(technologies) {
    return {
        type: AC.ADD_TECHNOLOGIES,
        technologies: technologies
    };
};

var addTechnology = exports.addTechnology = function addTechnology(technology) {
    return {
        type: AC.ADD_TECHNOLOGY,
        technology: technology
    };
};

var deleteTechnology = exports.deleteTechnology = function deleteTechnology(TechnologyID) {
    return {
        type: AC.DELETE_TECHNOLOGY,
        TechnologyID: TechnologyID
    };
};

var getAllTechnologiesFromServer = exports.getAllTechnologiesFromServer = function getAllTechnologiesFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/technologies', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addTechnologies(json.data));
            }
        });
    };
};

var addTechnologyOnServer = exports.addTechnologyOnServer = function addTechnologyOnServer(formInput) {
    return function (dispatch, getState) {
        return fetch('/api/technologies', {
            method: "post",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addTechnology(json.data));
            }
            return json;
        });
    };
};

var deleteTechnologyOnServer = exports.deleteTechnologyOnServer = function deleteTechnologyOnServer(TechnologyID) {
    return function (dispatch, getState) {
        return fetch('/api/technologies/' + TechnologyID, {
            method: "delete",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'ap plication/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(deleteTechnology(TechnologyID));
                // clear user form after update is successful
            }
            return json;
        });
    };
};

/***/ }),

/***/ "U4Zl":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

var _validation = __webpack_require__("4KT+");

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactWidgetsMoment = __webpack_require__("Utwc");

var _reactWidgetsMoment2 = _interopRequireDefault(_reactWidgetsMoment);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_moment2.default.locale('en');
(0, _reactWidgetsMoment2.default)();
var ReleaseMoveTaskPlanForm = function ReleaseMoveTaskPlanForm(props) {
    var change = props.change,
        team = props.team,
        handleSubmit = props.handleSubmit,
        submitting = props.submitting,
        pristine = props.pristine,
        reset = props.reset,
        initial = props.initial,
        workCalendarEmployeeID = props.workCalendarEmployeeID;

    var today = new Date();
    var todayMoment = (0, _moment2.default)(today).hour(0).minute(0).second(0).milliseconds(0);
    var devStartDateMoment = (0, _moment2.default)(initial.devStartDate).hour(0).minute(0).second(0).milliseconds(0);
    var devEndDateMoment = (0, _moment2.default)(initial.devEndDate).hour(0).minute(0).second(0).milliseconds(0);

    var min = devStartDateMoment.isSameOrAfter(todayMoment) ? devStartDateMoment.toDate() : todayMoment.toDate();
    var max = devEndDateMoment.toDate();
    return _react2.default.createElement(
        'form',
        { onSubmit: handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-10' },
                _react2.default.createElement(_reduxForm.Field, { name: 'release._id', component: 'input', type: 'hidden' }),
                _react2.default.createElement(_reduxForm.Field, { name: 'task.name',
                    readOnly: true,
                    component: _fields.renderField,
                    label: " Task Name : ",
                    validate: [_validation.required]
                }),
                _react2.default.createElement(_reduxForm.Field, { name: 'planningDateString',
                    placeholder: "Date",
                    component: _fields.renderDateTimeStringShow,
                    showTime: false,
                    min: min,
                    max: max,
                    formate: SC.DATE_AND_DAY_SHOW_FORMAT,
                    label: "Planning Date : ",
                    validate: [_validation.required]
                }),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-8' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'rePlanningDate',
                        placeholder: "Date",
                        component: _fields.renderDateTimePickerString,
                        showTime: false,
                        min: min,
                        max: max,
                        label: "Move to Date :",
                        validate: [_validation.required]
                    })
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4' },
                    _react2.default.createElement(
                        'button',
                        { type: 'submit', className: 'btn customBtn', disabled: submitting || pristine },
                        'Move'
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-4' },
                    _react2.default.createElement(
                        'button',
                        { type: 'button', className: 'btn customBtn', disabled: submitting || pristine, onClick: reset },
                        'Reset'
                    )
                )
            )
        )
    );
};

ReleaseMoveTaskPlanForm = (0, _reduxForm.reduxForm)({
    form: 'move-task-planning'
})(ReleaseMoveTaskPlanForm);

exports.default = ReleaseMoveTaskPlanForm;

/***/ }),

/***/ "U6H3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

var _utils = __webpack_require__("DcaD");

var U = _interopRequireWildcard(_utils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var initialState = {
    all: [],
    allYears: []

};

var holidayReducer = function holidayReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case AC.ADD_HOLIDAY:
            return Object.assign({}, state, { all: [].concat(_toConsumableArray(state.all), [action.holiday]) });

        case AC.ADD_HOLIDAYS:
            return Object.assign({}, state, { all: action.holidays });

        case AC.ADD_ALL_YEARS:
            var currentYear = U.getCurrentYear();
            var years = action.years && action.years.length ? action.years.map(function (y) {
                return y.calendarYear;
            }) : [];
            return Object.assign({}, state, { allYears: years && years.length && years.findIndex(function (y) {
                    return y == currentYear;
                }) != -1 ? years : [].concat(_toConsumableArray(years), [currentYear]) });

        case AC.DELETE_HOLIDAY:
            var holidayDateMoment = U.momentInUTC(action.holidayDateString);
            return Object.assign({}, state, { all: state.all.filter(function (item) {
                    return !U.momentInUTC(item.dateString).isSame(holidayDateMoment);
                }) });

        case AC.UPDATE_HOLIDAY:
            return Object.assign({}, state, {
                all: state.all.map(function (item) {
                    return item._id.toString() == action.holiday._id.toString() ? action.holiday : item;
                })
            });

        default:
            return state;
    }
};

exports.default = holidayReducer;

/***/ }),

/***/ "ULTU":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _validation = __webpack_require__("4KT+");

var _fields = __webpack_require__("NACj");

var _reduxForm = __webpack_require__("ao4a");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactWidgetsMoment = __webpack_require__("Utwc");

var _reactWidgetsMoment2 = _interopRequireDefault(_reactWidgetsMoment);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _utils = __webpack_require__("DcaD");

var U = _interopRequireWildcard(_utils);

var _reactRedux = __webpack_require__("RH2O");

var _lodash = __webpack_require__("M4fF");

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_moment2.default.locale('en');
(0, _reactWidgetsMoment2.default)();

var LeaveRequestForm = function LeaveRequestForm(props) {
    var pristine = props.pristine,
        submitting = props.submitting,
        reset = props.reset,
        handleSubmit = props.handleSubmit,
        startDate = props.startDate,
        endDate = props.endDate;

    var now = new Date();
    var startDateMoment = startDate && !_lodash2.default.isEmpty(startDate) ? U.momentInTimeZone(startDate, SC.INDIAN_TIMEZONE) : undefined;
    var endDateMoment = endDate && !_lodash2.default.isEmpty(endDate) ? U.momentInTimeZone(endDate, SC.INDIAN_TIMEZONE) : undefined;
    var startDateMomentDate = startDateMoment && startDateMoment.isValid() ? startDateMoment.toDate() : undefined;
    var endDateMomentDate = endDateMoment && endDateMoment.isValid() ? endDateMoment.toDate() : undefined;

    return _react2.default.createElement(
        "form",
        { onSubmit: handleSubmit },
        _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
                "div",
                { className: "col-md-6" },
                _react2.default.createElement(_reduxForm.Field, { name: "_id", component: "input", type: "hidden" }),
                _react2.default.createElement(_reduxForm.Field, { name: "dayType", placeholder: "Leave day", displayField: "name", valueField: "name",
                    component: _fields.renderSelect, options: SC.LEAVE_TYPE_DAY_WITH_NAME_ARRAY,
                    label: "Day type :", validate: [_validation.required] }),
                _react2.default.createElement(_reduxForm.Field, { name: "startDate", placeholder: "Leave Start Date :", component: _fields.renderDateTimePickerString,
                    showTime: false,
                    label: "Start Date :",
                    min: now,
                    max: endDateMomentDate,
                    validate: [_validation.required] }),
                _react2.default.createElement(_reduxForm.Field, { name: "endDate", placeholder: "Leave End Date :", component: _fields.renderDateTimePickerString,
                    showTime: false,
                    min: startDateMomentDate ? startDateMomentDate : now,
                    label: "End Date :",
                    validate: [_validation.required] }),
                _react2.default.createElement(_reduxForm.Field, { name: "leaveType._id", placeholder: "type of leave", displayField: "name", valueField: "_id",
                    component: _fields.renderSelect, options: props.leaveTypes,
                    label: "Type :", validate: [_validation.required] }),
                _react2.default.createElement(_reduxForm.Field, { width: "80%", name: "description", validate: [_validation.required], component: _fields.renderTextArea,
                    label: "Description:" }),
                _react2.default.createElement(
                    "button",
                    { type: "submit", disabled: pristine || submitting, className: "btn customBtn" },
                    " Submit"
                )
            )
        )
    );
};

LeaveRequestForm = (0, _reduxForm.reduxForm)({
    form: 'leave-request'

})(LeaveRequestForm);
var selector = (0, _reduxForm.formValueSelector)('leave-request');

LeaveRequestForm = (0, _reactRedux.connect)(function (state) {
    var _selector = selector(state, 'startDate', 'endDate'),
        startDate = _selector.startDate,
        endDate = _selector.endDate;

    return {
        startDate: startDate,
        endDate: endDate
    };
})(LeaveRequestForm);

exports.default = LeaveRequestForm;

/***/ }),

/***/ "Uq5S":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
// Env
const PROD_ENV = 'production'
/* harmony export (immutable) */ __webpack_exports__["PROD_ENV"] = PROD_ENV;

const DEV_ENV = 'development'
/* harmony export (immutable) */ __webpack_exports__["DEV_ENV"] = DEV_ENV;

//Common Names

const ALL = 'all'
/* harmony export (immutable) */ __webpack_exports__["ALL"] = ALL;

const NONE = 'none'
/* harmony export (immutable) */ __webpack_exports__["NONE"] = NONE;


// User Role
const ROLE_ADMIN = 'Admin'
/* harmony export (immutable) */ __webpack_exports__["ROLE_ADMIN"] = ROLE_ADMIN;

const ROLE_SUPER_ADMIN = 'Super Admin'
/* harmony export (immutable) */ __webpack_exports__["ROLE_SUPER_ADMIN"] = ROLE_SUPER_ADMIN;

const ROLE_APP_USER = 'App User'
/* harmony export (immutable) */ __webpack_exports__["ROLE_APP_USER"] = ROLE_APP_USER;

const ROLE_ESTIMATOR = 'Estimator'
/* harmony export (immutable) */ __webpack_exports__["ROLE_ESTIMATOR"] = ROLE_ESTIMATOR;

const ROLE_NEGOTIATOR = 'Negotiator'
/* harmony export (immutable) */ __webpack_exports__["ROLE_NEGOTIATOR"] = ROLE_NEGOTIATOR;

const ROLE_MANAGER = 'Manager'
/* harmony export (immutable) */ __webpack_exports__["ROLE_MANAGER"] = ROLE_MANAGER;

const ROLE_LEADER = 'Leader'
/* harmony export (immutable) */ __webpack_exports__["ROLE_LEADER"] = ROLE_LEADER;

const ROLE_DEVELOPER = 'Developer'
/* harmony export (immutable) */ __webpack_exports__["ROLE_DEVELOPER"] = ROLE_DEVELOPER;

const ROLE_NON_PROJECT_DEVELOPER = 'Non Project Developer'
/* harmony export (immutable) */ __webpack_exports__["ROLE_NON_PROJECT_DEVELOPER"] = ROLE_NON_PROJECT_DEVELOPER;

const ROLE_TOP_MANAGEMENT = 'Top Management'
/* harmony export (immutable) */ __webpack_exports__["ROLE_TOP_MANAGEMENT"] = ROLE_TOP_MANAGEMENT;

const ALL_ROLE_ARRAY = [
    ROLE_ADMIN,
    ROLE_SUPER_ADMIN,
    ROLE_APP_USER,
    ROLE_ESTIMATOR,
    ROLE_NEGOTIATOR,
    ROLE_MANAGER,
    ROLE_LEADER,
    ROLE_DEVELOPER,
    ROLE_TOP_MANAGEMENT
]
/* harmony export (immutable) */ __webpack_exports__["ALL_ROLE_ARRAY"] = ALL_ROLE_ARRAY;



// test emails
const SUPER_ADMIN_EMAIL = 'superadmin@test.com'
/* harmony export (immutable) */ __webpack_exports__["SUPER_ADMIN_EMAIL"] = SUPER_ADMIN_EMAIL;

const ADMIN_EMAIL = 'admin@test.com'
/* harmony export (immutable) */ __webpack_exports__["ADMIN_EMAIL"] = ADMIN_EMAIL;

const APP_USER_EMAIL = 'appuser@test.com'
/* harmony export (immutable) */ __webpack_exports__["APP_USER_EMAIL"] = APP_USER_EMAIL;


// owner
const OWNER_ESTIMATOR = 'estimator'
/* harmony export (immutable) */ __webpack_exports__["OWNER_ESTIMATOR"] = OWNER_ESTIMATOR;

const OWNER_NEGOTIATOR = 'negotiator'
/* harmony export (immutable) */ __webpack_exports__["OWNER_NEGOTIATOR"] = OWNER_NEGOTIATOR;

const OWNER_MANAGER = 'manager'
/* harmony export (immutable) */ __webpack_exports__["OWNER_MANAGER"] = OWNER_MANAGER;

const OWNER_LEADER = 'leader'
/* harmony export (immutable) */ __webpack_exports__["OWNER_LEADER"] = OWNER_LEADER;


// Estimation status
const STATUS_PENDING = 'pending'
/* harmony export (immutable) */ __webpack_exports__["STATUS_PENDING"] = STATUS_PENDING;

const STATUS_APPROVED = 'approved'
/* harmony export (immutable) */ __webpack_exports__["STATUS_APPROVED"] = STATUS_APPROVED;

const STATUS_INITIATED = 'initiated'
/* harmony export (immutable) */ __webpack_exports__["STATUS_INITIATED"] = STATUS_INITIATED;

const STATUS_ESTIMATION_REQUESTED = 'estimation-requested'
/* harmony export (immutable) */ __webpack_exports__["STATUS_ESTIMATION_REQUESTED"] = STATUS_ESTIMATION_REQUESTED;

const STATUS_REVIEW_REQUESTED = 'review-requested'
/* harmony export (immutable) */ __webpack_exports__["STATUS_REVIEW_REQUESTED"] = STATUS_REVIEW_REQUESTED;

const STATUS_CHANGE_REQUESTED = 'change-requested'
/* harmony export (immutable) */ __webpack_exports__["STATUS_CHANGE_REQUESTED"] = STATUS_CHANGE_REQUESTED;

const STATUS_REOPENED = 'reopened'
/* harmony export (immutable) */ __webpack_exports__["STATUS_REOPENED"] = STATUS_REOPENED;

const STATUS_PROJECT_AWARDED = 'project-awarded'
/* harmony export (immutable) */ __webpack_exports__["STATUS_PROJECT_AWARDED"] = STATUS_PROJECT_AWARDED;

const STATUS_REJECTED = 'rejected'
/* harmony export (immutable) */ __webpack_exports__["STATUS_REJECTED"] = STATUS_REJECTED;

const STATUS_CANCELLED = 'cancelled'
/* harmony export (immutable) */ __webpack_exports__["STATUS_CANCELLED"] = STATUS_CANCELLED;

const STATUS_PLANNED = 'planned'
/* harmony export (immutable) */ __webpack_exports__["STATUS_PLANNED"] = STATUS_PLANNED;


//Leave Status


const LEAVE_TYPE_FULL_DAY = 'Full'
/* harmony export (immutable) */ __webpack_exports__["LEAVE_TYPE_FULL_DAY"] = LEAVE_TYPE_FULL_DAY;

const LEAVE_TYPE_HALF_DAY = 'Half'
/* harmony export (immutable) */ __webpack_exports__["LEAVE_TYPE_HALF_DAY"] = LEAVE_TYPE_HALF_DAY;

const LEAVE_TYPE_DAY_WITH_NAME_ARRAY = [{name: LEAVE_TYPE_HALF_DAY}, {name: LEAVE_TYPE_FULL_DAY}]
/* harmony export (immutable) */ __webpack_exports__["LEAVE_TYPE_DAY_WITH_NAME_ARRAY"] = LEAVE_TYPE_DAY_WITH_NAME_ARRAY;

const LEAVE_TYPE_DAY_ARRAY = [LEAVE_TYPE_HALF_DAY, LEAVE_TYPE_FULL_DAY]
/* harmony export (immutable) */ __webpack_exports__["LEAVE_TYPE_DAY_ARRAY"] = LEAVE_TYPE_DAY_ARRAY;



const LEAVE_STATUS_RAISED = 'raised'
/* harmony export (immutable) */ __webpack_exports__["LEAVE_STATUS_RAISED"] = LEAVE_STATUS_RAISED;

const LEAVE_STATUS_APPROVED = 'approved'
/* harmony export (immutable) */ __webpack_exports__["LEAVE_STATUS_APPROVED"] = LEAVE_STATUS_APPROVED;

const LEAVE_STATUS_CANCELLED = 'cancelled'
/* harmony export (immutable) */ __webpack_exports__["LEAVE_STATUS_CANCELLED"] = LEAVE_STATUS_CANCELLED;

const ALL_LEAVE_STATUS_ARRAY = [LEAVE_STATUS_RAISED, LEAVE_STATUS_APPROVED, LEAVE_STATUS_CANCELLED]
/* harmony export (immutable) */ __webpack_exports__["ALL_LEAVE_STATUS_ARRAY"] = ALL_LEAVE_STATUS_ARRAY;


//Statuses

const STATUS_AWARDED = 'awarded'
/* harmony export (immutable) */ __webpack_exports__["STATUS_AWARDED"] = STATUS_AWARDED;

const STATUS_DEV_IN_PROGRESS = 'dev-in-progress'
/* harmony export (immutable) */ __webpack_exports__["STATUS_DEV_IN_PROGRESS"] = STATUS_DEV_IN_PROGRESS;

const STATUS_DEV_COMPLETED = 'dev-completed'
/* harmony export (immutable) */ __webpack_exports__["STATUS_DEV_COMPLETED"] = STATUS_DEV_COMPLETED;

const STATUS_ISSUE_FIXING = 'issue-fixing'
/* harmony export (immutable) */ __webpack_exports__["STATUS_ISSUE_FIXING"] = STATUS_ISSUE_FIXING;

const STATUS_TEST_COMPLETED = 'test-completed'
/* harmony export (immutable) */ __webpack_exports__["STATUS_TEST_COMPLETED"] = STATUS_TEST_COMPLETED;

const STATUS_STABLE = 'stable'
/* harmony export (immutable) */ __webpack_exports__["STATUS_STABLE"] = STATUS_STABLE;

const STATUS_RELEASED = 'released'
/* harmony export (immutable) */ __webpack_exports__["STATUS_RELEASED"] = STATUS_RELEASED;


const STATUS_PLAN_REQUESTED = 'plan-requested'
/* harmony export (immutable) */ __webpack_exports__["STATUS_PLAN_REQUESTED"] = STATUS_PLAN_REQUESTED;

const STATUS_COMPLETED = 'completed'
/* harmony export (immutable) */ __webpack_exports__["STATUS_COMPLETED"] = STATUS_COMPLETED;

const STATUS_UNREPORTED = 'un-reported'
/* harmony export (immutable) */ __webpack_exports__["STATUS_UNREPORTED"] = STATUS_UNREPORTED;

const STATUS_UNPLANNED = 'unplanned'
/* harmony export (immutable) */ __webpack_exports__["STATUS_UNPLANNED"] = STATUS_UNPLANNED;


const TYPE_DEVELOPMENT = 'development'
/* harmony export (immutable) */ __webpack_exports__["TYPE_DEVELOPMENT"] = TYPE_DEVELOPMENT;

const TYPE_TESTING = 'testing'
/* harmony export (immutable) */ __webpack_exports__["TYPE_TESTING"] = TYPE_TESTING;

const TYPE_REVIEW = 'review'
/* harmony export (immutable) */ __webpack_exports__["TYPE_REVIEW"] = TYPE_REVIEW;

const TYPE_MANAGEMENT = 'management'
/* harmony export (immutable) */ __webpack_exports__["TYPE_MANAGEMENT"] = TYPE_MANAGEMENT;

const TYPE_COMPANY = 'company'
/* harmony export (immutable) */ __webpack_exports__["TYPE_COMPANY"] = TYPE_COMPANY;


// operations
const OPERATION_ADDITION = 'addition'
/* harmony export (immutable) */ __webpack_exports__["OPERATION_ADDITION"] = OPERATION_ADDITION;

const OPERATION_SUBTRACTION = 'subtraction'
/* harmony export (immutable) */ __webpack_exports__["OPERATION_SUBTRACTION"] = OPERATION_SUBTRACTION;

const OPERATION_SUBTRACTION_AND_ADDITION = 'subtraction-and-addition'
/* harmony export (immutable) */ __webpack_exports__["OPERATION_SUBTRACTION_AND_ADDITION"] = OPERATION_SUBTRACTION_AND_ADDITION;

const OPERATION_CREATE = 'create'
/* harmony export (immutable) */ __webpack_exports__["OPERATION_CREATE"] = OPERATION_CREATE;

const OPERATION_UPDATE = 'update'
/* harmony export (immutable) */ __webpack_exports__["OPERATION_UPDATE"] = OPERATION_UPDATE;

const OPERATION_DELETE = 'delete'
/* harmony export (immutable) */ __webpack_exports__["OPERATION_DELETE"] = OPERATION_DELETE;


//warning related
const WARNING_TYPE_RELEASE = 'release'
/* harmony export (immutable) */ __webpack_exports__["WARNING_TYPE_RELEASE"] = WARNING_TYPE_RELEASE;

const WARNING_TYPE_RELEASE_PLAN = 'release_plan'
/* harmony export (immutable) */ __webpack_exports__["WARNING_TYPE_RELEASE_PLAN"] = WARNING_TYPE_RELEASE_PLAN;

const WARNING_TYPE_TASK_PLAN = 'task_plan'
/* harmony export (immutable) */ __webpack_exports__["WARNING_TYPE_TASK_PLAN"] = WARNING_TYPE_TASK_PLAN;

const WARNING_UNPLANNED = 'unplanned'
/* harmony export (immutable) */ __webpack_exports__["WARNING_UNPLANNED"] = WARNING_UNPLANNED;

const WARNING_TOO_MANY_HOURS = 'too_many_hours'
/* harmony export (immutable) */ __webpack_exports__["WARNING_TOO_MANY_HOURS"] = WARNING_TOO_MANY_HOURS;

const WARNING_EMPLOYEE_ON_LEAVE = 'employee_on_leave'
/* harmony export (immutable) */ __webpack_exports__["WARNING_EMPLOYEE_ON_LEAVE"] = WARNING_EMPLOYEE_ON_LEAVE;

const WARNING_EMPLOYEE_ASK_FOR_LEAVE = 'employee_ask_for_leave'
/* harmony export (immutable) */ __webpack_exports__["WARNING_EMPLOYEE_ASK_FOR_LEAVE"] = WARNING_EMPLOYEE_ASK_FOR_LEAVE;

const WARNING_RELEASE_DATE_MISSED_1 = 'release_date_missed_1'
/* harmony export (immutable) */ __webpack_exports__["WARNING_RELEASE_DATE_MISSED_1"] = WARNING_RELEASE_DATE_MISSED_1;

const WARNING_RELEASE_DATE_MISSED_2 = 'release_date_missed_2'
/* harmony export (immutable) */ __webpack_exports__["WARNING_RELEASE_DATE_MISSED_2"] = WARNING_RELEASE_DATE_MISSED_2;

const WARNING_RELEASE_DATE_MISSED_3 = 'release_date_missed_3'
/* harmony export (immutable) */ __webpack_exports__["WARNING_RELEASE_DATE_MISSED_3"] = WARNING_RELEASE_DATE_MISSED_3;

const WARNING_RELEASE_DATE_MISSED_4 = 'release_date_missed_4'
/* harmony export (immutable) */ __webpack_exports__["WARNING_RELEASE_DATE_MISSED_4"] = WARNING_RELEASE_DATE_MISSED_4;

const WARNING_PLANNED_BEYOND_RELEASE_DATE = 'planned_beyond_release_date'
/* harmony export (immutable) */ __webpack_exports__["WARNING_PLANNED_BEYOND_RELEASE_DATE"] = WARNING_PLANNED_BEYOND_RELEASE_DATE;

const WARNING_LESS_PLANNED_HOURS = 'less_planned_hours'
/* harmony export (immutable) */ __webpack_exports__["WARNING_LESS_PLANNED_HOURS"] = WARNING_LESS_PLANNED_HOURS;

const WARNING_MORE_PLANNED_HOURS = 'more_planned_hours'
/* harmony export (immutable) */ __webpack_exports__["WARNING_MORE_PLANNED_HOURS"] = WARNING_MORE_PLANNED_HOURS;

const WARNING_MORE_REPORTED_HOURS_1 = 'more_reported_hours_1'
/* harmony export (immutable) */ __webpack_exports__["WARNING_MORE_REPORTED_HOURS_1"] = WARNING_MORE_REPORTED_HOURS_1;

const WARNING_MORE_REPORTED_HOURS_2 = 'more_reported_hours_2'
/* harmony export (immutable) */ __webpack_exports__["WARNING_MORE_REPORTED_HOURS_2"] = WARNING_MORE_REPORTED_HOURS_2;

const WARNING_MORE_REPORTED_HOURS_3 = 'more_reported_hours_3'
/* harmony export (immutable) */ __webpack_exports__["WARNING_MORE_REPORTED_HOURS_3"] = WARNING_MORE_REPORTED_HOURS_3;

const WARNING_MORE_REPORTED_HOURS_4 = 'more_reported_hours_4'
/* harmony export (immutable) */ __webpack_exports__["WARNING_MORE_REPORTED_HOURS_4"] = WARNING_MORE_REPORTED_HOURS_4;

const WARNING_HAS_UNREPORTED_DAYS = 'has_unreported_days'
/* harmony export (immutable) */ __webpack_exports__["WARNING_HAS_UNREPORTED_DAYS"] = WARNING_HAS_UNREPORTED_DAYS;

const WARNING_UNREPORTED = 'unreported'
/* harmony export (immutable) */ __webpack_exports__["WARNING_UNREPORTED"] = WARNING_UNREPORTED;

const WARNING_PENDING_ON_END_DATE = 'pending_on_end_date'
/* harmony export (immutable) */ __webpack_exports__["WARNING_PENDING_ON_END_DATE"] = WARNING_PENDING_ON_END_DATE;

const WARNING_COMPLETED_BEFORE_END_DATE = 'completed_before_end_date'
/* harmony export (immutable) */ __webpack_exports__["WARNING_COMPLETED_BEFORE_END_DATE"] = WARNING_COMPLETED_BEFORE_END_DATE;


/*
  'estimated' - There can be any number of iterations with this iteration type. Whenever any estimation
  is added in new release or added to current release a new iteration of these type would be added
  with all the tasks in estimation linked to iteration created.
*/

const ITERATION_TYPE_ESTIMATED = 'estimated'
/* harmony export (immutable) */ __webpack_exports__["ITERATION_TYPE_ESTIMATED"] = ITERATION_TYPE_ESTIMATED;
 // Iterations which are added from estimation process
/*
 'planned' - At the moment there would only be one iteration with this iteration_type which would be
 created when release is created.
 All the tasks that were added from release interface would be added against this iteration
 All such tasks would have estimated hours. These tasks would have all the functionality (warning generation,
 progress calculation etc) that tasks added against iteration of type 'estimated'.

 Only difference these tasks would have the way they can be added into system. These tasks would be added
 from release interface by manager/leader. Tasks added in 'estimated' iteration however are added from
 estimations created by negotiator/estimator.

 Another difference is that these tasks would be added directly against release without the need for
 manager/leader to consulting each other (giving ease of addition but compromising the need of getting
 approval of other party). Can be useful in some cases.
 */

const ITERATION_TYPE_PLANNED = 'planned'
/* harmony export (immutable) */ __webpack_exports__["ITERATION_TYPE_PLANNED"] = ITERATION_TYPE_PLANNED;


/*
 At the moment there would only be one iteration with the iteration_type 'unplanned', this
 iteration would be created when release is created.
 All the unplanned work reported through reporting interface would be linked to this iteration. All tasks
 added against this iteration would not have any part in progress calculation but they would become part
 of billing interface.

*/
const ITERATION_TYPE_UNPLANNED = 'unplanned'
/* harmony export (immutable) */ __webpack_exports__["ITERATION_TYPE_UNPLANNED"] = ITERATION_TYPE_UNPLANNED;

const ITERATION_TYPE_LIST_WITH_NAME = [{name: ITERATION_TYPE_PLANNED}, {name: ITERATION_TYPE_UNPLANNED}]
/* harmony export (immutable) */ __webpack_exports__["ITERATION_TYPE_LIST_WITH_NAME"] = ITERATION_TYPE_LIST_WITH_NAME;



const ALL_WARNING_NAME_ARRAY = [
    WARNING_UNPLANNED,
    WARNING_TOO_MANY_HOURS,
    WARNING_EMPLOYEE_ON_LEAVE,
    WARNING_EMPLOYEE_ASK_FOR_LEAVE,
    WARNING_RELEASE_DATE_MISSED_1,
    WARNING_RELEASE_DATE_MISSED_2,
    WARNING_RELEASE_DATE_MISSED_3,
    WARNING_RELEASE_DATE_MISSED_4,
    WARNING_PLANNED_BEYOND_RELEASE_DATE,
    WARNING_LESS_PLANNED_HOURS,
    WARNING_MORE_PLANNED_HOURS,
    WARNING_MORE_REPORTED_HOURS_1, // When (reportedHours > estimatedHours)
    WARNING_MORE_REPORTED_HOURS_2, // When (reportedHours > (1.5) * estimatedHours)
    WARNING_MORE_REPORTED_HOURS_3, //When (reportedHours > 2 * estimatedHours)
    WARNING_MORE_REPORTED_HOURS_4, // When (reportedHours > 4 * estimatedHours)
    WARNING_HAS_UNREPORTED_DAYS,
    WARNING_UNREPORTED,
    WARNING_PENDING_ON_END_DATE,
    WARNING_COMPLETED_BEFORE_END_DATE,
]
/* harmony export (immutable) */ __webpack_exports__["ALL_WARNING_NAME_ARRAY"] = ALL_WARNING_NAME_ARRAY;



//Designation
const DESIGNATION_SOFTWARE_ENGINEER = "Software Engineer"
/* harmony export (immutable) */ __webpack_exports__["DESIGNATION_SOFTWARE_ENGINEER"] = DESIGNATION_SOFTWARE_ENGINEER;

const DESIGNATION_SOFTWARE_TRAINEE = "Software Trainee"
/* harmony export (immutable) */ __webpack_exports__["DESIGNATION_SOFTWARE_TRAINEE"] = DESIGNATION_SOFTWARE_TRAINEE;

const DESIGNATION_SENIOR_SW_ENGINEER = "Sr. Software Engineer"
/* harmony export (immutable) */ __webpack_exports__["DESIGNATION_SENIOR_SW_ENGINEER"] = DESIGNATION_SENIOR_SW_ENGINEER;

const DESIGNATION_MODULE_LEAD = "Module Lead"
/* harmony export (immutable) */ __webpack_exports__["DESIGNATION_MODULE_LEAD"] = DESIGNATION_MODULE_LEAD;

const DESIGNATION_TEAM_LEAD = "Team Lead"
/* harmony export (immutable) */ __webpack_exports__["DESIGNATION_TEAM_LEAD"] = DESIGNATION_TEAM_LEAD;

const DESIGNATION_MANAGER = "Manager"
/* harmony export (immutable) */ __webpack_exports__["DESIGNATION_MANAGER"] = DESIGNATION_MANAGER;

const DESIGNATION_OWNER = "Owner"
/* harmony export (immutable) */ __webpack_exports__["DESIGNATION_OWNER"] = DESIGNATION_OWNER;


//reasons
const REASON_GENERAL_DELAY = "general-delay"
/* harmony export (immutable) */ __webpack_exports__["REASON_GENERAL_DELAY"] = REASON_GENERAL_DELAY;

const REASON_EMPLOYEE_ON_LEAVE = "employee-on-leave"
/* harmony export (immutable) */ __webpack_exports__["REASON_EMPLOYEE_ON_LEAVE"] = REASON_EMPLOYEE_ON_LEAVE;

const REASON_INCOMPLETE_DEPENDENCY = "incomplete-dependency"
/* harmony export (immutable) */ __webpack_exports__["REASON_INCOMPLETE_DEPENDENCY"] = REASON_INCOMPLETE_DEPENDENCY;

const REASON_NO_GUIDANCE_PROVIDED = "no-guidance-provided"
/* harmony export (immutable) */ __webpack_exports__["REASON_NO_GUIDANCE_PROVIDED"] = REASON_NO_GUIDANCE_PROVIDED;

const REASON_RESEARCH_WORK = "research-work"
/* harmony export (immutable) */ __webpack_exports__["REASON_RESEARCH_WORK"] = REASON_RESEARCH_WORK;

const REASON_UNFAMILIAR_TECHNOLOGY = "unfamiliar-technology"
/* harmony export (immutable) */ __webpack_exports__["REASON_UNFAMILIAR_TECHNOLOGY"] = REASON_UNFAMILIAR_TECHNOLOGY;



// Holiday Reason

const HOLIDAY_REASON_EMERGENCY = "Emergency"
/* harmony export (immutable) */ __webpack_exports__["HOLIDAY_REASON_EMERGENCY"] = HOLIDAY_REASON_EMERGENCY;

const HOLIDAY_REASON_PUBLIC_HOLIDAY = "Public Holiday"
/* harmony export (immutable) */ __webpack_exports__["HOLIDAY_REASON_PUBLIC_HOLIDAY"] = HOLIDAY_REASON_PUBLIC_HOLIDAY;

const HOLIDAY_REASON_NATIONAL_DAY = "National Day"
/* harmony export (immutable) */ __webpack_exports__["HOLIDAY_REASON_NATIONAL_DAY"] = HOLIDAY_REASON_NATIONAL_DAY;

const HOLIDAY_REASON_GAZETTED_HOLIDAYS = "Gazetted Holidays"
/* harmony export (immutable) */ __webpack_exports__["HOLIDAY_REASON_GAZETTED_HOLIDAYS"] = HOLIDAY_REASON_GAZETTED_HOLIDAYS;

const HOLIDAY_TYPE_LIST_WITH_NAME = [
    {name: HOLIDAY_REASON_EMERGENCY},
    {name: HOLIDAY_REASON_PUBLIC_HOLIDAY},
    {name: HOLIDAY_REASON_NATIONAL_DAY},
    {name: HOLIDAY_REASON_GAZETTED_HOLIDAYS}]
/* harmony export (immutable) */ __webpack_exports__["HOLIDAY_TYPE_LIST_WITH_NAME"] = HOLIDAY_TYPE_LIST_WITH_NAME;



const HOLIDAY_TYPE_LIST = [
    HOLIDAY_REASON_EMERGENCY,
    HOLIDAY_REASON_PUBLIC_HOLIDAY,
    HOLIDAY_REASON_NATIONAL_DAY,
    HOLIDAY_REASON_GAZETTED_HOLIDAYS
]
/* harmony export (immutable) */ __webpack_exports__["HOLIDAY_TYPE_LIST"] = HOLIDAY_TYPE_LIST;

const REASON_MEDICAL = "medical"
/* harmony export (immutable) */ __webpack_exports__["REASON_MEDICAL"] = REASON_MEDICAL;

const REASON_PERSONAL = "personal"
/* harmony export (immutable) */ __webpack_exports__["REASON_PERSONAL"] = REASON_PERSONAL;

const REASON_OCCASION = "occasion"
/* harmony export (immutable) */ __webpack_exports__["REASON_OCCASION"] = REASON_OCCASION;

const REASON_FESTIVAL = "festival"
/* harmony export (immutable) */ __webpack_exports__["REASON_FESTIVAL"] = REASON_FESTIVAL;


// reporting final status
const REPORT_UNREPORTED = "un-reported"
/* harmony export (immutable) */ __webpack_exports__["REPORT_UNREPORTED"] = REPORT_UNREPORTED;

const REPORT_COMPLETED = "completed"
/* harmony export (immutable) */ __webpack_exports__["REPORT_COMPLETED"] = REPORT_COMPLETED;

const REPORT_PENDING = "pending"
/* harmony export (immutable) */ __webpack_exports__["REPORT_PENDING"] = REPORT_PENDING;



// Date Formate and Time Zone
const DEFAULT_DATE_FORMAT = 'DD-MM-YYYY'
/* harmony export (immutable) */ __webpack_exports__["DEFAULT_DATE_FORMAT"] = DEFAULT_DATE_FORMAT;

const DATE_FORMAT = 'YYYY-MM-DD'
/* harmony export (immutable) */ __webpack_exports__["DATE_FORMAT"] = DATE_FORMAT;

const DATE_TIME_FORMAT = 'YYYY-MM-DD hh:mm A'
/* harmony export (immutable) */ __webpack_exports__["DATE_TIME_FORMAT"] = DATE_TIME_FORMAT;

const DATE_TIME_24HOUR_FORMAT = 'YYYY-MM-DD HH:mm'
/* harmony export (immutable) */ __webpack_exports__["DATE_TIME_24HOUR_FORMAT"] = DATE_TIME_24HOUR_FORMAT;

const DATE_AND_DAY_SHOW_FORMAT = 'dddd YYYY-MMMM-DD '
/* harmony export (immutable) */ __webpack_exports__["DATE_AND_DAY_SHOW_FORMAT"] = DATE_AND_DAY_SHOW_FORMAT;

const DATE_DAY_AND_TIME_SHOW_FORMAT = 'dddd YYYY-MMMM-DD  hh:mm '
/* harmony export (immutable) */ __webpack_exports__["DATE_DAY_AND_TIME_SHOW_FORMAT"] = DATE_DAY_AND_TIME_SHOW_FORMAT;

const DATE_TIME_SHOW_FORMAT = 'dddd YYYY-MMMM-DD  hh:mm '
/* harmony export (immutable) */ __webpack_exports__["DATE_TIME_SHOW_FORMAT"] = DATE_TIME_SHOW_FORMAT;

const DATE_TIME_SHOW_FORMAT_WITH_AM_PM = 'dddd YYYY-MMMM-DD  hh:mm A'
/* harmony export (immutable) */ __webpack_exports__["DATE_TIME_SHOW_FORMAT_WITH_AM_PM"] = DATE_TIME_SHOW_FORMAT_WITH_AM_PM;

const TIME_FORMAT = 'hh:mm A'
/* harmony export (immutable) */ __webpack_exports__["TIME_FORMAT"] = TIME_FORMAT;

const TIME_FORMAT_24_HOURS = 'HH:mm'
/* harmony export (immutable) */ __webpack_exports__["TIME_FORMAT_24_HOURS"] = TIME_FORMAT_24_HOURS;

const DATE_AND_TIME_FORMAT = 'LLL'
/* harmony export (immutable) */ __webpack_exports__["DATE_AND_TIME_FORMAT"] = DATE_AND_TIME_FORMAT;

const DATE_MONTH_FORMAT = 'MMMM Do'
/* harmony export (immutable) */ __webpack_exports__["DATE_MONTH_FORMAT"] = DATE_MONTH_FORMAT;

const DATE_HALF_WEAK_MONTH_FORMAT = 'ddd'
/* harmony export (immutable) */ __webpack_exports__["DATE_HALF_WEAK_MONTH_FORMAT"] = DATE_HALF_WEAK_MONTH_FORMAT;

const DATE_DISPLAY_FORMAT = 'DD/MM/YYYY'
/* harmony export (immutable) */ __webpack_exports__["DATE_DISPLAY_FORMAT"] = DATE_DISPLAY_FORMAT;



// Time Zones
// !!! NEVER CHANGE DEFAULT TIME ZONE AS ALL THE DATABASE CALCULATIONS ARE BASED ON THIS !!!

// !!! NEVER CHANGE DEFAULT TIME ZONE AS ALL THE DATABASE CALCULATIONS ARE BASED ON THIS !!!
const UTC_TIMEZONE = 'UTC'
/* harmony export (immutable) */ __webpack_exports__["UTC_TIMEZONE"] = UTC_TIMEZONE;

const DEFAULT_TIMEZONE = 'UTC'
/* harmony export (immutable) */ __webpack_exports__["DEFAULT_TIMEZONE"] = DEFAULT_TIMEZONE;

const INDIAN_TIMEZONE = 'Asia/Calcutta'
/* harmony export (immutable) */ __webpack_exports__["INDIAN_TIMEZONE"] = INDIAN_TIMEZONE;

//Comment Types

const TYPE_CLARIFICATION = 'Need Clarification'
/* harmony export (immutable) */ __webpack_exports__["TYPE_CLARIFICATION"] = TYPE_CLARIFICATION;

const TYPE_BLOCKING = 'Blocking Issue'
/* harmony export (immutable) */ __webpack_exports__["TYPE_BLOCKING"] = TYPE_BLOCKING;

const TYPE_WAITING = 'Waiting for Changes'
/* harmony export (immutable) */ __webpack_exports__["TYPE_WAITING"] = TYPE_WAITING;

const TYPE_REPORT_COMMENT = 'Report Comment'
/* harmony export (immutable) */ __webpack_exports__["TYPE_REPORT_COMMENT"] = TYPE_REPORT_COMMENT;

const TYPE_INFORMATION = 'For Information'
/* harmony export (immutable) */ __webpack_exports__["TYPE_INFORMATION"] = TYPE_INFORMATION;



const COMMENT_EMERGENCY = 'Emergency'
/* harmony export (immutable) */ __webpack_exports__["COMMENT_EMERGENCY"] = COMMENT_EMERGENCY;

const COMMENT_CRITICAL = 'Critical'
/* harmony export (immutable) */ __webpack_exports__["COMMENT_CRITICAL"] = COMMENT_CRITICAL;

const COMMENT_URGENT = 'Urgent'
/* harmony export (immutable) */ __webpack_exports__["COMMENT_URGENT"] = COMMENT_URGENT;

const COMMENT_REPORTING = 'Reporting'
/* harmony export (immutable) */ __webpack_exports__["COMMENT_REPORTING"] = COMMENT_REPORTING;

const COMMENT_FYI_ONLY = 'FYI Only'
/* harmony export (immutable) */ __webpack_exports__["COMMENT_FYI_ONLY"] = COMMENT_FYI_ONLY;


//Dialog Names
const DIALOG_ESTIMATION_REQUEST_REVIEW = 'dialog-request-review'
/* harmony export (immutable) */ __webpack_exports__["DIALOG_ESTIMATION_REQUEST_REVIEW"] = DIALOG_ESTIMATION_REQUEST_REVIEW;

const RELEASE_DASHBOARD_TAB = 'RELEASE_DASHBOARD_TAB'
/* harmony export (immutable) */ __webpack_exports__["RELEASE_DASHBOARD_TAB"] = RELEASE_DASHBOARD_TAB;

const RELEASE_WARNINGS_TAB = 'RELEASE_WARNINGS_TAB'
/* harmony export (immutable) */ __webpack_exports__["RELEASE_WARNINGS_TAB"] = RELEASE_WARNINGS_TAB;

const RELEASE_TASK_PLANS_TAB = 'RELEASE_TASK_PLANS_TAB'
/* harmony export (immutable) */ __webpack_exports__["RELEASE_TASK_PLANS_TAB"] = RELEASE_TASK_PLANS_TAB;

const RELEASE_REPORT_TAB = 'RELEASE_REPORT_TAB'
/* harmony export (immutable) */ __webpack_exports__["RELEASE_REPORT_TAB"] = RELEASE_REPORT_TAB;

const RELEASE_PLAN_TAB = 'RELEASE_PLAN_TAB'
/* harmony export (immutable) */ __webpack_exports__["RELEASE_PLAN_TAB"] = RELEASE_PLAN_TAB;



const Months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
/* harmony export (immutable) */ __webpack_exports__["Months"] = Months;

const MONTHS_WITH_MONTH_NUMBER = [
    {
        name: "January",
        number: 0
    }, {
        name: "February",
        number: 1
    }, {
        name: "March",
        number: 2
    }, {
        name: "April",
        number: 3
    }, {
        name: "May",
        number: 4
    }, {
        name: "June",
        number: 5
    }, {
        name: "July",
        number: 6
    }, {
        name: "August",
        number: 7
    }, {
        name: "September",
        number: 8
    }, {
        name: "October",
        number: 9
    }, {
        name: "November",
        number: 10
    }, {
        name: "December",
        number: 11
    }]
/* harmony export (immutable) */ __webpack_exports__["MONTHS_WITH_MONTH_NUMBER"] = MONTHS_WITH_MONTH_NUMBER;


// Attendance

const MINIMUM_HALF_DAY_MINUTE = 4 * 60
/* harmony export (immutable) */ __webpack_exports__["MINIMUM_HALF_DAY_MINUTE"] = MINIMUM_HALF_DAY_MINUTE;

const MINIMUM_FULL_DAY_MINUTE = 7 * 60
/* harmony export (immutable) */ __webpack_exports__["MINIMUM_FULL_DAY_MINUTE"] = MINIMUM_FULL_DAY_MINUTE;

const HALF_DAY = 'halfDay'
/* harmony export (immutable) */ __webpack_exports__["HALF_DAY"] = HALF_DAY;

const FULL_DAY = 'fullDay'
/* harmony export (immutable) */ __webpack_exports__["FULL_DAY"] = FULL_DAY;

const ARRIVED = 'arrived'
/* harmony export (immutable) */ __webpack_exports__["ARRIVED"] = ARRIVED;

const ABSENT = 'absent'
/* harmony export (immutable) */ __webpack_exports__["ABSENT"] = ABSENT;



// Events
const MOMENT_MINUTES = 'm'
/* harmony export (immutable) */ __webpack_exports__["MOMENT_MINUTES"] = MOMENT_MINUTES;

const MOMENT_HOURS = 'H'
/* harmony export (immutable) */ __webpack_exports__["MOMENT_HOURS"] = MOMENT_HOURS;

const MOMENT_DAYS = 'd'
/* harmony export (immutable) */ __webpack_exports__["MOMENT_DAYS"] = MOMENT_DAYS;

const MOMENT_WEEKS = 'w'
/* harmony export (immutable) */ __webpack_exports__["MOMENT_WEEKS"] = MOMENT_WEEKS;

const MOMENT_MONTHS = 'M'
/* harmony export (immutable) */ __webpack_exports__["MOMENT_MONTHS"] = MOMENT_MONTHS;

const MOMENT_QUARTERS = 'Q'
/* harmony export (immutable) */ __webpack_exports__["MOMENT_QUARTERS"] = MOMENT_QUARTERS;

const MOMENT_YEARS = 'y'
/* harmony export (immutable) */ __webpack_exports__["MOMENT_YEARS"] = MOMENT_YEARS;


const EVENT_ONETIME = 'onetime'
/* harmony export (immutable) */ __webpack_exports__["EVENT_ONETIME"] = EVENT_ONETIME;

const EVENT_RECURRING = 'recurring'
/* harmony export (immutable) */ __webpack_exports__["EVENT_RECURRING"] = EVENT_RECURRING;


const EVENT_SCHEDULED = 'scheduled'
/* harmony export (immutable) */ __webpack_exports__["EVENT_SCHEDULED"] = EVENT_SCHEDULED;

const EVENT_RUNNING = 'running'
/* harmony export (immutable) */ __webpack_exports__["EVENT_RUNNING"] = EVENT_RUNNING;

const EVENT_COMPLETED = 'completed'
/* harmony export (immutable) */ __webpack_exports__["EVENT_COMPLETED"] = EVENT_COMPLETED;

const EVENT_FAILED = 'failed'
/* harmony export (immutable) */ __webpack_exports__["EVENT_FAILED"] = EVENT_FAILED;


const EVENT_INTERVAL = 1000 * 300
/* harmony export (immutable) */ __webpack_exports__["EVENT_INTERVAL"] = EVENT_INTERVAL;


const MODE_DEVELOPMENT = "development"
/* harmony export (immutable) */ __webpack_exports__["MODE_DEVELOPMENT"] = MODE_DEVELOPMENT;

const MODE_PRODUCTION = "production"
/* harmony export (immutable) */ __webpack_exports__["MODE_PRODUCTION"] = MODE_PRODUCTION;



/***/ }),

/***/ "VGMf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        taskSelected: function taskSelected(event) {
            return dispatch(A.getTaskAndProjectDetailsForCalendarFromServer(event._id));
        },

        showTaskDetailPage: function showTaskDetailPage() {
            return dispatch(A.showComponentHideOthers(COC.CALENDAR_TASK_DETAIL_PAGE));
        },

        changeViewAndDate: function changeViewAndDate(view, date) {
            dispatch(A.changeNavigationView(view, date));
        }
    };
};

var mapStateToProps = function mapStateToProps(state) {
    return {
        events: state.calendar.events,
        selectedView: state.calendar.selectedView,
        selectedDate: state.calendar.selectedDate
    };
};

var CalendarTaskPageContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.CalendarTaskPage);

exports.default = CalendarTaskPageContainer;

/***/ }),

/***/ "VMX9":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        features: state.estimation.features,
        expandedFeatureID: state.estimation.expandedFeatureID,
        expandedTaskID: state.estimation.expandedTaskID,
        filter: state.estimation.filter
    };
};

var EstimationFeaturesContainer = (0, _reactRedux.connect)(mapStateToProps)(_components.EstimationFeatures);

exports.default = EstimationFeaturesContainer;

/***/ }),

/***/ "VvrU":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getRepositoryFromServer = exports.selectFeatureFromRepository = exports.selectTaskFromRepository = exports.selectRepository = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var selectRepository = exports.selectRepository = function selectRepository(repository) {
    return {
        type: AC.SELECT_REPOSITORY,
        repository: repository
    };
};

var selectTaskFromRepository = exports.selectTaskFromRepository = function selectTaskFromRepository(task) {
    return {
        type: AC.SELECT_TASK_FROM_REPOSITORY,
        task: task
    };
};

var selectFeatureFromRepository = exports.selectFeatureFromRepository = function selectFeatureFromRepository(feature) {
    return {
        type: AC.SELECT_FEATURE_FROM_REPOSITORY,
        feature: feature
    };
};

var getRepositoryFromServer = exports.getRepositoryFromServer = function getRepositoryFromServer(technologies, type, searchText) {
    return function (dispatch, getState) {
        return fetch('/api/repositories/search', {
            method: 'post',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ "technologies": technologies, "type": type, "searchText": searchText })
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(selectRepository(json.data));
            }
            return json;
        });
    };
};

/***/ }),

/***/ "VzaM":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _ContentSection = __webpack_require__("jaAk");

var _ContentSection2 = _interopRequireDefault(_ContentSection);

var _containers = __webpack_require__("GF1l");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _index = __webpack_require__("ZhKb");

var _reactRouterDom = __webpack_require__("F8kA");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ContentMain = function (_Component) {
    _inherits(ContentMain, _Component);

    function ContentMain(props) {
        _classCallCheck(this, ContentMain);

        var _this = _possibleConstructorReturn(this, (ContentMain.__proto__ || Object.getPrototypeOf(ContentMain)).call(this, props));

        logger.debug(logger.CONTENT_MAIN_LIFECYCLE, 'constructor() called: ', props);
        // All the routes that should be configured based on permissions this user has
        var routes = [];

        routes.push({
            url: "/dashboard",
            render: function render(props) {
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_containers.DashboardSectionContainer, { name: COC.DASHBOARD_SECTION, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.DASHBOARD_SECTION));
                        } })
                );
            }
        });

        routes.push({
            url: "/client",
            render: function render(props) {
                logger.debug(logger.CONTENT_MAIN_RENDER, "/client: props:", props);
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_index.ClientFormDialog, { name: COC.CLIENT_FORM_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.CLIENT_FORM_DIALOG));
                        } }),
                    _react2.default.createElement(_containers.ClientListContainer, { name: COC.CLIENT_LIST })
                );
            }
        });

        routes.push({
            url: "/projects",
            render: function render(props) {
                logger.debug(logger.CONTENT_MAIN_RENDER, "/projects: props:", props);
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_index.ProjectFormDialog, { name: COC.PROJECT_FORM_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.PROJECT_FORM_DIALOG));
                        } }),
                    _react2.default.createElement(_containers.ProjectListContainer, { name: COC.PROJECT_LIST })
                );
            }
        });

        routes.push({
            url: "/modules",
            render: function render(props) {
                logger.debug(logger.CONTENT_MAIN_RENDER, "/modules: props:", props);
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_index.ModuleFormDialog, { name: COC.MODULE_FORM_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.MODULE_FORM_DIALOG));
                        } }),
                    _react2.default.createElement(_containers.ModuleListContainer, { name: COC.MODULE_LIST })
                );
            }
        });
        routes.push({
            url: "/technology",
            render: function render(props) {

                logger.debug(logger.CONTENT_MAIN_RENDER, "/technology: props:", props);
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_index.TechnologyFormDialog, { name: COC.TECHNOLOGY_FORM_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.TECHNOLOGY_FORM_DIALOG));
                        } }),
                    _react2.default.createElement(_containers.TechnologyListContainer, { name: COC.TECHNOLOGIES_LIST })
                );
            }
        });

        routes.push({
            url: "/estimation",
            render: function render(props) {
                logger.debug(logger.CONTENT_MAIN_RENDER, "/estimation: props:", props);
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_index.EstimationInitiateDialog, { name: COC.ESTIMATION_INITIATE_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.ESTIMATION_INITIATE_DIALOG));
                        } }),
                    _react2.default.createElement(_containers.EstimationListContainer, { name: COC.ESTIMATION_LIST })
                );
            }
        });

        routes.push({
            url: "/estimation-detail",
            render: function render(props) {
                logger.debug(logger.CONTENT_MAIN_RENDER, "/estimation-detail: props:", props);
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_index.EstimationInitiateDialog, { name: COC.ESTIMATION_INITIATE_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.ESTIMATION_INITIATE_DIALOG));
                        } }),
                    _react2.default.createElement(_index.EstimationTaskDialog, { name: COC.ESTIMATION_TASK_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.ESTIMATION_TASK_DIALOG));
                        } }),
                    _react2.default.createElement(_index.EstimationFeatureDialog, { name: COC.ESTIMATION_FEATURE_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.ESTIMATION_FEATURE_DIALOG));
                        } }),
                    _react2.default.createElement(_index.MoveTaskInFeatureFormDialog, { name: COC.MOVE_TASK_TO_FEATURE_FORM_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.MOVE_TASK_TO_FEATURE_FORM_DIALOG));
                        } }),
                    _react2.default.createElement(_index.EstimationSuggestTaskDialog, { name: COC.ESTIMATION_SUGGEST_TASK_FORM_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.ESTIMATION_SUGGEST_TASK_FORM_DIALOG));
                        } }),
                    _react2.default.createElement(_index.EstimationSuggestFeatureDialog, { name: COC.ESTIMATION_SUGGEST_FEATURE_FORM_DIALOG, show: true,
                        close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.ESTIMATION_SUGGEST_FEATURE_FORM_DIALOG));
                        } }),
                    _react2.default.createElement(_index.RepositoryTaskDetailDialog, { name: COC.REPOSITORY_TASK_DETAIL_DIALOG, show: true,
                        close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.REPOSITORY_TASK_DETAIL_DIALOG));
                        } }),
                    _react2.default.createElement(_index.RepositoryFeatureDetailDialog, { name: COC.REPOSITORY_FEATURE_DETAIL_DIALOG, show: true,
                        close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.REPOSITORY_FEATURE_DETAIL_DIALOG));
                        } }),
                    _react2.default.createElement(_containers.EstimationDetailContainer, { name: COC.ESTIMATION_DETAIL_PAGE }),
                    _react2.default.createElement(_index.EstimationProjectAwardDialog, { name: COC.ESTIMATION_PROJECT_AWARD_FORM_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.ESTIMATION_PROJECT_AWARD_FORM_DIALOG));
                        } }),
                    _react2.default.createElement(_index.EstimationAddToReleaseDialog, { name: COC.ESTIMATION_ADD_TO_RELEASE_FORM_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.ESTIMATION_ADD_TO_RELEASE_FORM_DIALOG));
                        } }),
                    _react2.default.createElement(_index.EstimationFilterDialog, { name: COC.ESTIMATION_FILTER_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.ESTIMATION_FILTER_DIALOG));
                        } })
                );
            }
        });

        routes.push({
            url: "/leave",
            render: function render(props) {
                logger.debug(logger.CONTENT_MAIN_RENDER, "/leave: props:", props);
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_index.LeaveRequestFormDialog, { name: COC.LEAVE_REQUEST_FORM_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.LEAVE_REQUEST_FORM_DIALOG));
                        } }),
                    _react2.default.createElement(_index.LeaveApproveDialog, { name: COC.LEAVE_APPROVE_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.LEAVE_APPROVE_DIALOG));
                        } }),
                    _react2.default.createElement(_index.LeaveRejectDialog, { name: COC.LEAVE_REJECT_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.LEAVE_REJECT_DIALOG));
                        } }),
                    _react2.default.createElement(_containers.LeaveListContainer, { name: COC.LEAVE_LIST })
                );
            }
        });
        routes.push({
            url: "/leave-detail",
            render: function render(props) {
                logger.debug(logger.CONTENT_MAIN_RENDER, "/leave: props:", props);
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_containers.LeaveDetailPageContainer, { name: COC.LEAVE_DETAIL_PAGE })
                );
            }
        });

        routes.push({
            url: "/attendance",
            render: function render(props) {
                logger.debug(logger.CONTENT_MAIN_RENDER, "/attendance: props:", props);
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_containers.AttendanceSettingFormContainer, { name: COC.ATTENDANCE_SETTING_FORM })
                );
            }
        });

        routes.push({
            url: "/release",
            render: function render(props) {
                logger.debug(logger.CONTENT_MAIN_RENDER, "/release: props:", props);
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_containers.ReleaseListContainer, { name: COC.RELEASE_LIST }),
                    _react2.default.createElement(_index.CreateReleaseDialog, { name: COC.CREATE_RELEASE_FORM_DIALOG, show: true,
                        close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.CREATE_RELEASE_FORM_DIALOG));
                        } })
                );
            }
        });

        routes.push({
            url: "/release-plan",
            render: function render(props) {
                logger.debug(logger.CONTENT_MAIN_RENDER, "/release: props:", props);
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_containers.ReleasePlanSectionContainer, { name: COC.RELEASE_PLAN_LIST }),
                    _react2.default.createElement(_index.UpdateReleaseDatesFormDialog, { name: COC.UPDATE_RELEASE_DATES_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.UPDATE_RELEASE_DATES_DIALOG));
                        } }),
                    _react2.default.createElement(_index.ReleasePlanAddToReleaseDialog, { name: COC.RELEASE_PLAN_ADD_TO_RELEASE_FORM_DIALOG, show: true,
                        close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.RELEASE_PLAN_ADD_TO_RELEASE_FORM_DIALOG));
                        } })
                );
            }
        });

        routes.push({
            url: "/release-task-planning",
            render: function render(props) {
                logger.debug(logger.CONTENT_MAIN_RENDER, "/release: props:", props);
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_containers.ReleaseTaskPlanningPageContainer, { name: COC.RELEASE_TASK_PLANNING_PAGE }),
                    _react2.default.createElement(_index.TaskShiftDialog, { name: COC.TASK_SHIFT_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.TASK_SHIFT_DIALOG));
                        } }),
                    _react2.default.createElement(_index.ReleaseTaskPlanningFormDialog, { name: COC.RELEASE_TASK_PLANNING_FORM_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.RELEASE_TASK_PLANNING_FORM_DIALOG));
                        } }),
                    _react2.default.createElement(_index.ReleaseMoveTaskPlanFormDialog, { name: COC.MOVE_TASK_PLAN_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.MOVE_TASK_PLAN_DIALOG));
                        } })
                );
            }
        });
        routes.push({
            url: "/task-report-detail",
            render: function render(props) {
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_containers.TaskReportDetailPageContainer, { name: COC.TASK_REPORT_DETAIL_PAGE })
                );
            }
        });

        routes.push({
            url: "/calendar",
            render: function render(props) {
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_containers.CalendarTaskPageContainer, { name: COC.CALENDAR_TASK_PAGE })
                );
            }
        });
        routes.push({
            url: "/calendar-task-detail",
            render: function render(props) {
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_containers.CalendarTaskDetailPageContainer, { name: COC.CALENDAR_TASK_DETAIL_PAGE })
                );
            }
        });

        routes.push({
            url: "/reporting",
            render: function render(props) {
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_containers.ReportingTaskPageContainer, { name: COC.REPORTING_TASK_PAGE }),
                    _react2.default.createElement(_index.ReportTaskDescriptionFormDialog, { name: COC.REPORT_TASK_DESCRIPTION_DIALOG, show: true, close: function close() {
                            _this.props.dispatch(A.hideComponent(COC.REPORT_TASK_DESCRIPTION_DIALOG));
                        } })
                );
            }
        });

        routes.push({
            url: "/reporting-task-detail",
            render: function render(props) {
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_containers.ReportingTaskDetailPageContainer, { name: COC.REPORTING_TASK_DETAIL_PAGE })
                );
            }
        });

        routes.push({
            url: "/edit-profile",
            render: function render(props) {
                logger.debug(logger.CONTENT_MAIN_RENDER, "/edit-profile: props:", props);
                return _react2.default.createElement(
                    _ContentSection2.default,
                    null,
                    _react2.default.createElement(_containers.UserProfileFormContainer, { name: COC.USER_PROFILE_FORM
                    })
                );
            }
        });

        _this.state = {
            routes: routes
        };
        return _this;
    }

    _createClass(ContentMain, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            logger.debug(logger.CONTENT_MAIN_RENDER, this.props);
            return _react2.default.createElement(
                'div',
                null,
                this.state.routes.length > 0 && _react2.default.createElement(_reactRouterDom.Route, { key: "app_home_route", dispatch: this.props.dispatch, exact: true, path: this.props.match.url,
                    render: this.state.routes[0].render }),
                this.state.routes.map(function (route, idx) {
                    return _react2.default.createElement(_reactRouterDom.Route, { key: "app_route" + idx,
                        dispatch: _this2.props.dispatch,
                        path: _this2.props.match.url + route.url,
                        render: route.render });
                })
            );
        }
    }]);

    return ContentMain;
}(_react.Component);

exports.default = ContentMain;

/***/ }),

/***/ "W7Ny":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            return dispatch(A.addToReleaseOnServer(values)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Added To Release");
                    // hide dialog
                    dispatch(A.hideComponent(COC.ESTIMATION_ADD_TO_RELEASE_FORM_DIALOG));
                } else {
                    _reactNotifications.NotificationManager.error("Add To Release Failed");
                }
            });
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        allAvailableReleases: state.release.allAvailableReleases
    };
};

var EstimationAddToReleaseFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.EstimationAddToReleaseForm);

exports.default = EstimationAddToReleaseFormContainer;

/***/ }),

/***/ "WVNn":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _ = __webpack_require__("ZhKb");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EstimationTasks = function EstimationTasks(props) {
    // tasks array should not be passed to task as it keeps changes and will cause re-render
    var childProps = Object.assign({}, props, {
        tasks: undefined
    });

    var _props$filter = props.filter,
        changedByNegotiator = _props$filter.changedByNegotiator,
        changedByEstimator = _props$filter.changedByEstimator,
        permissionRequested = _props$filter.permissionRequested,
        addedFromRepository = _props$filter.addedFromRepository,
        addedByNegotiator = _props$filter.addedByNegotiator,
        addedByEstimator = _props$filter.addedByEstimator,
        hasError = _props$filter.hasError;
    var expandedTaskID = props.expandedTaskID;

    return Array.isArray(props.tasks) && props.tasks.map(function (t, idx) {
        {
            if (changedByNegotiator && changedByEstimator && permissionRequested && addedFromRepository && addedByNegotiator && addedByEstimator && hasError) {
                return expandedTaskID === t._id ? _react2.default.createElement(_.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, childProps, {
                    expanded: true })) : _react2.default.createElement(_.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, childProps));
            } else {
                if (changedByNegotiator && t.negotiator && (t.negotiator.changeSuggested || t.negotiator.changedInThisIteration)) {
                    return expandedTaskID === t._id ? _react2.default.createElement(_.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, childProps, {
                        expanded: true })) : _react2.default.createElement(_.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, childProps));
                } else if (changedByEstimator && t.estimator && (t.estimator.changedKeyInformation || t.estimator.changedInThisIteration)) {
                    return expandedTaskID === t._id ? _react2.default.createElement(_.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, childProps, {
                        expanded: true })) : _react2.default.createElement(_.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, childProps));
                } else if (permissionRequested && (t.estimator && t.estimator.removalRequested || t.estimator && t.estimator.changeRequested)) {
                    return expandedTaskID === t._id ? _react2.default.createElement(_.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, childProps, {
                        expanded: true })) : _react2.default.createElement(_.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, childProps));
                } else if (addedFromRepository && t.repo && !t.repo.addedFromThisEstimation) {
                    return expandedTaskID === t._id ? _react2.default.createElement(_.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, childProps, {
                        expanded: true })) : _react2.default.createElement(_.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, childProps));
                } else if (addedByNegotiator && t.addedInThisIteration && t.owner == SC.OWNER_NEGOTIATOR) {
                    return expandedTaskID === t._id ? _react2.default.createElement(_.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, childProps, {
                        expanded: true })) : _react2.default.createElement(_.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, childProps));
                } else if (addedByEstimator && t.addedInThisIteration && t.owner == SC.OWNER_ESTIMATOR) {
                    return expandedTaskID === t._id ? _react2.default.createElement(_.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, childProps, {
                        expanded: true })) : _react2.default.createElement(_.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, childProps));
                } else if (hasError && t.hasError) {
                    return expandedTaskID === t._id ? _react2.default.createElement(_.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, childProps, {
                        expanded: true })) : _react2.default.createElement(_.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, childProps));
                }
            }
        }
    });
};

exports.default = EstimationTasks;


{/*
    
           {
    
               if (estimator && changeRequested && repository && grantPermission && suggestions && negotiator) {
                   // by default show all
                   return
               }
               else {
                   if (estimator || changeRequested || repository || grantPermission || suggestions || negotiator) {
                       if (loggedInUserRole == SC.ROLE_ESTIMATOR) {
                           //when owner of task is estimator
                           if (estimator) {
                               if (t.owner === SC.OWNER_ESTIMATOR)
                                   return (expandedTaskID === t._id) ?
                                       <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}
                                                       expanded="true"/> :
                                       <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}  />
    
                           }
    
                           //when negotiator ask for suggestion
                           if (suggestions) {
                               if (t.negotiator.changedInThisIteration && t.negotiator.changeSuggested) {
                                   return (expandedTaskID === t._id) ?
                                       <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}
                                                       expanded="true"/> :
                                       <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}  />
                               }
                           }
    
                           //when negotiator grant the permission
                           if (grantPermission) {
                               if (t.negotiator.changedInThisIteration && t.negotiator.changeGranted) {
                                   return (expandedTaskID === t._id) ?
                                       <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}
                                                       expanded="true"/> :
                                       <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}  />
                               }
                           }
    
                           //added from repository
                           if (repository) {
                               if (t.repo)
                                   if (!t.repo.addedFromThisEstimation) {
                                       return (expandedTaskID === t._id) ?
                                           <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}
                                                           expanded="true"/> :
                                           <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}  />
                                   }
                           }
    
                       }
                       else {
                           if (loggedInUserRole == SC.ROLE_NEGOTIATOR) {
    
                               //task owner is negotiator
                               if (negotiator) {
                                   if (t.owner === SC.OWNER_NEGOTIATOR)
                                       return (expandedTaskID === t._id) ?
                                           <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}
                                                           expanded="true"/> :
                                           <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}  />
    
                               }
    
                               //when estimator asked for change request on task
                               if (changeRequested) {
                                   if (t.estimator.changedInThisIteration) {
                                       if (t.estimator.changeRequested || t.estimator.removalRequested) {
                                           return (expandedTaskID === t._id) ?
                                               <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}
                                                               expanded="true"/> :
                                               <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}  />
                                       }
                                   }
    
                               }
                               if (repository) {
                                   if (t.repo)
                                       if (!t.repo.addedFromThisEstimation) {
                                           return (expandedTaskID === t._id) ?
                                               <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}
                                                               expanded="true"/> :
                                               <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}  />
                                       }
                               }
    
                               if (suggestions) {
                                   if (t.estimator.changedKeyInformation && t.estimator.changedInThisIteration) {
                                       return (expandedTaskID === t._id) ?
                                           <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}
                                                           expanded="true"/> :
                                           <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}  />
                                   }
                               }
                           } else {
                               return (expandedTaskID === t._id) ?
                                   <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}
                                                   expanded="true"/> :
                                   <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}  />
                           }
                       }
                   } else {
                       // when all are false show all
                       return (expandedTaskID === t._id) ?
                           <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps} expanded="true"/> :
                           <EstimationTask task={t} index={idx} key={"task" + idx}  {...childProps}  />
                   }
               }
    
    
           })
    
    
       }
    
    */
}

/***/ }),

/***/ "WtXS":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _reactRouterDom = __webpack_require__("F8kA");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _reactNotifications = __webpack_require__("B0Hd");

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reduxForm = __webpack_require__("ao4a");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        showAddTaskForm: function showAddTaskForm(estimation) {
            dispatch(A.showComponent(COC.ESTIMATION_TASK_DIALOG));
            // initialize
            dispatch((0, _reduxForm.initialize)('estimation-task', {
                estimation: {
                    _id: estimation._id
                },
                type: SC.TYPE_DEVELOPMENT
            }));
        },
        showAddFeatureForm: function showAddFeatureForm(estimation) {
            dispatch(A.showComponent(COC.ESTIMATION_FEATURE_DIALOG));
            // initialize
            dispatch((0, _reduxForm.initialize)('estimation-feature', {
                estimation: {
                    _id: estimation._id
                }
            }));
        },

        showProjectAwardForm: function showProjectAwardForm(estimation) {
            dispatch(A.getUsersWithRoleCategoryFromServer());
            dispatch(A.showComponent(COC.ESTIMATION_PROJECT_AWARD_FORM_DIALOG));
            // initialize
            dispatch((0, _reduxForm.initialize)('estimation-project-award', {
                estimation: {
                    _id: estimation._id
                }
            }));
        },

        sendEstimationRequest: function sendEstimationRequest(estimation) {
            return dispatch(A.requestEstimationOnServer(estimation._id)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Estimation requested successfully");
                } else {
                    if (json.code === EC.INVALID_OPERATION) _reactNotifications.NotificationManager.error("Estimation already requested");else _reactNotifications.NotificationManager.error("Unknown error occurred");
                }
            });
        },

        sendReviewRequest: function sendReviewRequest(estimation) {
            return dispatch(A.requestReviewOnServer(estimation._id)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Review requested successfully");
                } else {
                    if (json.code === EC.INVALID_OPERATION) _reactNotifications.NotificationManager.error("Review already requested");else _reactNotifications.NotificationManager.error("Unknown error occurred");
                }
            });
        },
        hasErrorInEstimation: function hasErrorInEstimation(estimation) {
            return dispatch(A.checkHasErrorInEstimationOnServer(estimation._id));
        },

        sendChangeRequest: function sendChangeRequest(estimation) {
            return dispatch(A.requestChangeOnServer(estimation._id)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Review requested successfully");
                } else {
                    if (json.code === EC.INVALID_OPERATION) _reactNotifications.NotificationManager.error("Change already requested");else _reactNotifications.NotificationManager.error("Unknown error occurred");
                }
            });
        },

        onTaskDelete: function onTaskDelete(taskID) {
            return dispatch(A.estimationTaskDelete(taskID));
        },

        estimationFilterForm: function estimationFilterForm() {
            dispatch(A.showComponent(COC.ESTIMATION_FILTER_DIALOG));
            /*
            dispatch(initialize('Estimation-filter', {
                changedByNegotiator: true,
                changedByEstimator: true,
                permissionRequested: true,
                addedFromRepository: true,
                addedByNegotiator: true,
                addedByEstimator: true,
                hasError: true
            }))
            */
        },
        editEstimationInitiateForm: function editEstimationInitiateForm(estimation) {
            dispatch(A.getAllProjectsFromServer());
            dispatch(A.getAllUsersFromServer());
            dispatch(A.getAllTechnologiesFromServer());
            dispatch(A.getAllDevelopmentTypesFromServer());
            dispatch(A.showComponent(COC.ESTIMATION_INITIATE_DIALOG));
            dispatch((0, _reduxForm.initialize)('estimation-initiate', estimation));
        },

        estimationGoBack: function estimationGoBack(event) {
            dispatch(A.getAllEstimationsFromServer(SC.ALL, SC.ALL)), dispatch(A.showComponentHideOthers(COC.ESTIMATION_LIST));
        },

        estimationApprove: function estimationApprove(estimation) {
            return dispatch(A.approveEstimationOnServer(estimation._id)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Estimation approved successfully");
                } else {
                    if (json.code === EC.STILL_PENDING_TASKS_AND_FEATURE_ERROR) _reactNotifications.NotificationManager.error("Estimation has some pending request");else _reactNotifications.NotificationManager.error("Estimation approve failed");
                }
            });
        },

        reopenEstimation: function reopenEstimation(estimation) {
            return dispatch(A.reopenEstimationOnServer(estimation._id)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Estimation Reopen successfully");
                } else {
                    _reactNotifications.NotificationManager.error("Estimation not reopened");
                }
            });
        },
        refreshEstimation: function refreshEstimation(estimation) {
            return dispatch(A.getEstimationFromServer(estimation._id)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Estimation refreshed successfully");
                }

                return json;
            });
        },
        deleteEstimation: function deleteEstimation(estimation) {
            return dispatch(A.deleteEstimationOnServer(estimation._id)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Estimation Deleted successfully");
                } else {
                    _reactNotifications.NotificationManager.error("Estimation Deletion failed");
                }
                return json;
            });
        },

        showAddToReleaseForm: function showAddToReleaseForm(estimation) {
            dispatch(A.getAllReleasesToAddEstimationFromServer(estimation._id));
            dispatch(A.showComponent(COC.ESTIMATION_ADD_TO_RELEASE_FORM_DIALOG));
            // initialize
            dispatch((0, _reduxForm.initialize)('estimation-add-to-release', {
                estimation: {
                    _id: estimation._id
                }
            }));
        }

    };
};

var mapStateToProps = function mapStateToProps(state) {
    return {

        userRoleInThisEstimation: state.estimation && state.estimation.selected.loggedInUserRole ? state.estimation.selected.loggedInUserRole : null,
        estimation: state.estimation.selected

    };
};

var EstimationDetailContainer = (0, _reactRouterDom.withRouter)((0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.EstimationDetail));

exports.default = EstimationDetailContainer;

/***/ }),

/***/ "X1RN":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _reduxForm = __webpack_require__("ao4a");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

var _reactNotifications = __webpack_require__("B0Hd");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var selector = (0, _reduxForm.formValueSelector)('role');

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(formValues) {
            if (!formValues._id) {
                return dispatch(A.addRoleOnServer(formValues)).then(function (response) {
                    if (response.success) {
                        _reactNotifications.NotificationManager.success("Role added successfully");
                        /*
                        dispatch(reset('role'))
                        dispatch(reset('role-permission'))
                        */
                        dispatch(A.showComponentHideOthers(COC.ROLE_LIST));
                    } else {
                        _reactNotifications.NotificationManager.error("Role addition failed");
                        if (response.code && response.code == EC.ALREADY_EXISTS) {
                            // role already exists throw SubmissionError to show appropriate error
                            throw new _reduxForm.SubmissionError({ name: 'Role already exists' });
                        }
                    }
                });
            } else {
                // Role is edited
                return dispatch(A.editRoleOnServer(formValues)).then(function (response) {
                    if (response.success) {
                        _reactNotifications.NotificationManager.success("Role edited successfully");
                        dispatch(A.showComponentHideOthers(COC.ROLE_LIST));
                    } else {
                        _reactNotifications.NotificationManager.error("Role edit failed");
                        throw new _reduxForm.SubmissionError({ name: 'Role already exists' });
                    }
                });
            }
        },
        showRoleList: function showRoleList() {
            return dispatch(A.showComponentHideOthers(COC.ROLE_LIST));
        },
        editPermission: function editPermission(permission, idx) {
            dispatch((0, _reduxForm.change)('role', 'selectedPermission', permission));
            dispatch((0, _reduxForm.initialize)('role-permission', permission));
            dispatch((0, _reduxForm.change)('role-permission', 'selectedIdx', idx));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    var syncErrors = (0, _reduxForm.getFormSyncErrors)('role')(state);
    var permissionsAdded = selector(state, 'permissions');
    var selectedPermission = selector(state, 'selectedPermission');
    var permissionOptions = state.permission.all;
    if (Array.isArray(permissionsAdded) && permissionsAdded.length > 0) {
        permissionOptions = permissionOptions.filter(function (p) {
            return permissionsAdded.findIndex(function (p1) {
                return p1._id == p._id;
            }) == -1;
        });
    }

    if (selectedPermission) {
        // Add this selected permission with permission options this is done while editing permission
        permissionOptions = [selectedPermission].concat(_toConsumableArray(permissionOptions));
    }

    return {
        permissions: state.permission.all,
        permissionOptions: permissionOptions,
        permissionFormValues: selector(state, 'permission', 'configurable', 'enabled'),
        permissionsAdded: permissionsAdded,
        roleSyncErrors: syncErrors,
        selectedPermission: selectedPermission
    };
};

var RoleFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.RoleForm);

exports.default = RoleFormContainer;

/***/ }),

/***/ "Y5kt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactBootstrapDialog = __webpack_require__("OLzJ");

var _reactBootstrapDialog2 = _interopRequireDefault(_reactBootstrapDialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AdminRoleList = function (_Component) {
    _inherits(AdminRoleList, _Component);

    function AdminRoleList(props) {
        _classCallCheck(this, AdminRoleList);

        return _possibleConstructorReturn(this, (AdminRoleList.__proto__ || Object.getPrototypeOf(AdminRoleList)).call(this, props));
    }

    _createClass(AdminRoleList, [{
        key: 'editCellButton',
        value: function editCellButton(cell, row, enumObject, rowIndex) {
            var _this2 = this;

            return _react2.default.createElement('button', { className: 'glyphicon glyphicon-pencil pull-left btn btn-custom', type: 'button',
                onClick: function onClick() {
                    return _this2.props.editPermissionsOfRole(row);
                } });
        }
    }, {
        key: 'formatPermission',
        value: function formatPermission(permissions, row) {
            if (permissions && permissions.length > 0) {
                // Only permissions that are enabled would be visible here
                return permissions.filter(function (p) {
                    return p.enabled && p.configurable;
                }).map(function (p) {
                    return p.name;
                }).join(", ");
            } else return '';
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            return _react2.default.createElement(
                'div',
                { className: 'row' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-10' },
                    _react2.default.createElement(_reactBootstrapDialog2.default, { ref: function ref(el) {
                            _this3.dialog = el;
                        } }),
                    _react2.default.createElement(
                        _reactBootstrapTable.BootstrapTable,
                        { options: this.options, data: this.props.roles, striped: true,
                            hoveNr: true },
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { isKey: true, dataField: '_id', hidden: true },
                            'ID'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '26%', dataField: 'name'
                            },
                            'Roles'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '46%', dataField: 'permissions', dataSort: true,
                                dataFormat: this.formatPermission },
                            'Permissions'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '8%', dataField: 'button', dataFormat: this.editCellButton.bind(this) },
                            _react2.default.createElement('i', {
                                className: 'fa fa-pencil' })
                        )
                    )
                )
            );
        }
    }]);

    return AdminRoleList;
}(_react.Component);

exports.default = AdminRoleList;

/***/ }),

/***/ "YF4Y":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MoveTaskInFeatureFormDialog = function MoveTaskInFeatureFormDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Move task in feature'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.MoveTaskInFeatureFormContainer, null)
        )
    );
};

exports.default = MoveTaskInFeatureFormDialog;

/***/ }),

/***/ "Yb2E":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getAllRolesFromServer = exports.deleteRoleOnServer = exports.editRoleOnServer = exports.addRoleOnServer = exports.adminEditingRole = exports.deleteRole = exports.editRole = exports.addRole = exports.addAllRoles = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var addAllRoles = exports.addAllRoles = function addAllRoles(roles) {
    return {
        type: AC.ADD_ROLES,
        roles: roles
    };
};

var addRole = exports.addRole = function addRole(role) {
    return {
        type: AC.ADD_ROLE,
        role: role
    };
};

var editRole = exports.editRole = function editRole(role) {
    return {
        type: AC.EDIT_ROLE,
        role: role
    };
};

var deleteRole = exports.deleteRole = function deleteRole(role) {
    return {
        type: AC.DELETE_ROLE,
        role: role
    };
};

var adminEditingRole = exports.adminEditingRole = function adminEditingRole(role) {
    return {
        type: AC.ADMIN_EDITING_ROLE,
        role: role
    };
};

var addRoleOnServer = exports.addRoleOnServer = function addRoleOnServer(formInput) {
    return function (dispatch, getState) {
        return fetch('/api/roles', {
            method: 'post',
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addRole(json.data));
            } else {}
            return json;
        });
    };
};

var editRoleOnServer = exports.editRoleOnServer = function editRoleOnServer(formInput) {
    return function (dispatch, getState) {
        return fetch('/api/roles', {
            method: 'put',
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(editRole(json.data));
            }
            return json;
        });
    };
};

var deleteRoleOnServer = exports.deleteRoleOnServer = function deleteRoleOnServer(roleID) {
    return function (dispatch, getState) {
        return fetch('/api/roles/' + roleID, {
            method: 'delete',
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(deleteRole(json.data));
            }
            return json;
        });
    };
};

var getAllRolesFromServer = exports.getAllRolesFromServer = function getAllRolesFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/roles', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addAllRoles(json.data));
            }
            return json;
        });
    };
};

/***/ }),

/***/ "ZD69":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reduxForm = __webpack_require__("ao4a");

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        editHoliday: function editHoliday(holiday) {
            dispatch(A.showComponentHideOthers(COC.HOLIDAY_FORM)), dispatch((0, _reduxForm.initialize)('holiday-form', holiday));
        },

        deleteHoliday: function deleteHoliday(holiday) {
            return dispatch(A.deleteHolidayOnServer(holiday.dateString)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success('Holiday Deleted Successfully');
                } else {
                    _reactNotifications.NotificationManager.error('Holiday Not Deleted!');
                    throw new _reduxForm.SubmissionError({ Holidays: "Holiday Deletion Failed" });
                }
            });
        },

        showHolidayForm: function showHolidayForm() {
            return dispatch(A.showComponentHideOthers(COC.HOLIDAY_FORM));
        },
        getHolidaysOfYear: function getHolidaysOfYear(year) {
            dispatch(A.getAllHolidaysOfYearFromServer(year));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        loggedInUser: state.user.loggedIn,
        holidays: state.holiday.all,
        allYears: state.holiday.allYears.sort(function (a, b) {
            a = Number(a);
            b = Number(b);
            return a < b ? -1 : a > b ? 1 : 0;
        })

    };
};

var HolidayListContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.HolidayList);

exports.default = HolidayListContainer;

/***/ }),

/***/ "ZhKb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _LoginForm = __webpack_require__("i4M4");

Object.defineProperty(exports, 'LoginForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_LoginForm).default;
  }
});

var _PermissionForm = __webpack_require__("/7TX");

Object.defineProperty(exports, 'PermissionForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_PermissionForm).default;
  }
});

var _RoleForm = __webpack_require__("vLRc");

Object.defineProperty(exports, 'RoleForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_RoleForm).default;
  }
});

var _PermissionList = __webpack_require__("3Hs3");

Object.defineProperty(exports, 'PermissionList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_PermissionList).default;
  }
});

var _RoleList = __webpack_require__("xgAu");

Object.defineProperty(exports, 'RoleList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_RoleList).default;
  }
});

var _UserForm = __webpack_require__("QiyI");

Object.defineProperty(exports, 'UserForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_UserForm).default;
  }
});

var _UserList = __webpack_require__("aFI3");

Object.defineProperty(exports, 'UserList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_UserList).default;
  }
});

var _UserProfileForm = __webpack_require__("7cEl");

Object.defineProperty(exports, 'UserProfileForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_UserProfileForm).default;
  }
});

var _AdminUserList = __webpack_require__("T84z");

Object.defineProperty(exports, 'AdminUserList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_AdminUserList).default;
  }
});

var _AdminUserForm = __webpack_require__("uewT");

Object.defineProperty(exports, 'AdminUserForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_AdminUserForm).default;
  }
});

var _AdminRoleForm = __webpack_require__("z8dD");

Object.defineProperty(exports, 'AdminRoleForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_AdminRoleForm).default;
  }
});

var _AdminRoleList = __webpack_require__("Y5kt");

Object.defineProperty(exports, 'AdminRoleList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_AdminRoleList).default;
  }
});

var _EmployeeSettingForm = __webpack_require__("mE8W");

Object.defineProperty(exports, 'EmployeeSettingForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EmployeeSettingForm).default;
  }
});

var _ConfirmationDialog = __webpack_require__("uwS4");

Object.defineProperty(exports, 'ConfirmationDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ConfirmationDialog).default;
  }
});

var _EstimationInitiateForm = __webpack_require__("hB+B");

Object.defineProperty(exports, 'EstimationInitiateForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationInitiateForm).default;
  }
});

var _EstimationTaskForm = __webpack_require__("qQXe");

Object.defineProperty(exports, 'EstimationTaskForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationTaskForm).default;
  }
});

var _EstimationFeatureForm = __webpack_require__("g51p");

Object.defineProperty(exports, 'EstimationFeatureForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationFeatureForm).default;
  }
});

var _MoveTaskInFeatureForm = __webpack_require__("d3Iu");

Object.defineProperty(exports, 'MoveTaskInFeatureForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_MoveTaskInFeatureForm).default;
  }
});

var _EstimationSuggestTaskForm = __webpack_require__("1BFQ");

Object.defineProperty(exports, 'EstimationSuggestTaskForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationSuggestTaskForm).default;
  }
});

var _EstimationSuggestFeatureForm = __webpack_require__("ohMi");

Object.defineProperty(exports, 'EstimationSuggestFeatureForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationSuggestFeatureForm).default;
  }
});

var _EstimationProjectAwardForm = __webpack_require__("TEWQ");

Object.defineProperty(exports, 'EstimationProjectAwardForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationProjectAwardForm).default;
  }
});

var _EstimationAddToReleaseForm = __webpack_require__("6XdO");

Object.defineProperty(exports, 'EstimationAddToReleaseForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationAddToReleaseForm).default;
  }
});

var _ReportTaskDescriptionForm = __webpack_require__("6JFi");

Object.defineProperty(exports, 'ReportTaskDescriptionForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReportTaskDescriptionForm).default;
  }
});

var _CreateReleaseForm = __webpack_require__("/fyc");

Object.defineProperty(exports, 'CreateReleaseForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_CreateReleaseForm).default;
  }
});

var _EstimationList = __webpack_require__("7jmT");

Object.defineProperty(exports, 'EstimationList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationList).default;
  }
});

var _EstimationTask = __webpack_require__("w/A1");

Object.defineProperty(exports, 'EstimationTask', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationTask).default;
  }
});

var _EstimationTasks = __webpack_require__("WVNn");

Object.defineProperty(exports, 'EstimationTasks', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationTasks).default;
  }
});

var _EstimationFeature = __webpack_require__("nHH1");

Object.defineProperty(exports, 'EstimationFeature', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationFeature).default;
  }
});

var _EstimationFeatures = __webpack_require__("7cCe");

Object.defineProperty(exports, 'EstimationFeatures', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationFeatures).default;
  }
});

var _DashboardSection = __webpack_require__("S8q0");

Object.defineProperty(exports, 'DashboardSection', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_DashboardSection).default;
  }
});

var _ReleaseDashboardSection = __webpack_require__("6+Wc");

Object.defineProperty(exports, 'ReleaseDashboardSection', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseDashboardSection).default;
  }
});

var _EstimationDetail = __webpack_require__("B6Oj");

Object.defineProperty(exports, 'EstimationDetail', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationDetail).default;
  }
});

var _EstimationTaskDialog = __webpack_require__("quve");

Object.defineProperty(exports, 'EstimationTaskDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationTaskDialog).default;
  }
});

var _EstimationFeatureDialog = __webpack_require__("COMo");

Object.defineProperty(exports, 'EstimationFeatureDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationFeatureDialog).default;
  }
});

var _EstimationInitiateDialog = __webpack_require__("fy1X");

Object.defineProperty(exports, 'EstimationInitiateDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationInitiateDialog).default;
  }
});

var _MoveTaskInFeatureFormDialog = __webpack_require__("YF4Y");

Object.defineProperty(exports, 'MoveTaskInFeatureFormDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_MoveTaskInFeatureFormDialog).default;
  }
});

var _EstimationSuggestTaskDialog = __webpack_require__("SG2m");

Object.defineProperty(exports, 'EstimationSuggestTaskDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationSuggestTaskDialog).default;
  }
});

var _EstimationSuggestFeatureDialog = __webpack_require__("0RBQ");

Object.defineProperty(exports, 'EstimationSuggestFeatureDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationSuggestFeatureDialog).default;
  }
});

var _EstimationProjectAwardDialog = __webpack_require__("kx09");

Object.defineProperty(exports, 'EstimationProjectAwardDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationProjectAwardDialog).default;
  }
});

var _EstimationAddToReleaseDialog = __webpack_require__("QE73");

Object.defineProperty(exports, 'EstimationAddToReleaseDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationAddToReleaseDialog).default;
  }
});

var _AttendanceSettingForm = __webpack_require__("zznL");

Object.defineProperty(exports, 'AttendenceSettingForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_AttendanceSettingForm).default;
  }
});

var _EstimationFilterDialog = __webpack_require__("P4i5");

Object.defineProperty(exports, 'EstimationFilterDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationFilterDialog).default;
  }
});

var _EstimationFilterForm = __webpack_require__("22+p");

Object.defineProperty(exports, 'EstimationFilterForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_EstimationFilterForm).default;
  }
});

var _ReportTaskDescriptionFormDialog = __webpack_require__("Khh2");

Object.defineProperty(exports, 'ReportTaskDescriptionFormDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReportTaskDescriptionFormDialog).default;
  }
});

var _CreateReleaseDialog = __webpack_require__("DQDW");

Object.defineProperty(exports, 'CreateReleaseDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_CreateReleaseDialog).default;
  }
});

var _ProjectFormDialog = __webpack_require__("5bqi");

Object.defineProperty(exports, 'ProjectFormDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ProjectFormDialog).default;
  }
});

var _ProjectForm = __webpack_require__("LKcW");

Object.defineProperty(exports, 'ProjectForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ProjectForm).default;
  }
});

var _ModuleFormDialog = __webpack_require__("4FiL");

Object.defineProperty(exports, 'ModuleFormDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ModuleFormDialog).default;
  }
});

var _ModuleForm = __webpack_require__("MD1s");

Object.defineProperty(exports, 'ModuleForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ModuleForm).default;
  }
});

var _ClientFormDialog = __webpack_require__("fqEU");

Object.defineProperty(exports, 'ClientFormDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ClientFormDialog).default;
  }
});

var _ClientList = __webpack_require__("sGKg");

Object.defineProperty(exports, 'ClientList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ClientList).default;
  }
});

var _ClientForm = __webpack_require__("eK4F");

Object.defineProperty(exports, 'ClientForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ClientForm).default;
  }
});

var _LeaveRequestFormDialog = __webpack_require__("9gB4");

Object.defineProperty(exports, 'LeaveRequestFormDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_LeaveRequestFormDialog).default;
  }
});

var _LeaveSettingForm = __webpack_require__("uJao");

Object.defineProperty(exports, 'LeaveSettingForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_LeaveSettingForm).default;
  }
});

var _LeaveApproveDialog = __webpack_require__("t44Q");

Object.defineProperty(exports, 'LeaveApproveDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_LeaveApproveDialog).default;
  }
});

var _LeaveRejectDialog = __webpack_require__("mPMg");

Object.defineProperty(exports, 'LeaveRejectDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_LeaveRejectDialog).default;
  }
});

var _LeaveApprovalReasonForm = __webpack_require__("QBXJ");

Object.defineProperty(exports, 'LeaveApprovelResonForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_LeaveApprovalReasonForm).default;
  }
});

var _LeaveRequestForm = __webpack_require__("ULTU");

Object.defineProperty(exports, 'LeaveRequestForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_LeaveRequestForm).default;
  }
});

var _LeaveList = __webpack_require__("CA8F");

Object.defineProperty(exports, 'LeaveList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_LeaveList).default;
  }
});

var _LeaveDetailPage = __webpack_require__("qOiY");

Object.defineProperty(exports, 'LeaveDetailPage', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_LeaveDetailPage).default;
  }
});

var _TechnologyFormDialog = __webpack_require__("iUn1");

Object.defineProperty(exports, 'TechnologyFormDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_TechnologyFormDialog).default;
  }
});

var _TechnologyForm = __webpack_require__("JNvq");

Object.defineProperty(exports, 'TechnologyForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_TechnologyForm).default;
  }
});

var _TechnologyList = __webpack_require__("gzcj");

Object.defineProperty(exports, 'TechnologyList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_TechnologyList).default;
  }
});

var _RepositorySearch = __webpack_require__("gVp+");

Object.defineProperty(exports, 'RepositorySearch', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_RepositorySearch).default;
  }
});

var _RepositoryTaskDetailDialog = __webpack_require__("STEj");

Object.defineProperty(exports, 'RepositoryTaskDetailDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_RepositoryTaskDetailDialog).default;
  }
});

var _RepositoryTaskDetailPage = __webpack_require__("ykSR");

Object.defineProperty(exports, 'RepositoryTaskDetailPage', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_RepositoryTaskDetailPage).default;
  }
});

var _RepositoryFeatureDetailPage = __webpack_require__("98W3");

Object.defineProperty(exports, 'RepositoryFeatureDetailPage', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_RepositoryFeatureDetailPage).default;
  }
});

var _RepositoryFeatureDetailDialog = __webpack_require__("7ghI");

Object.defineProperty(exports, 'RepositoryFeatureDetailDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_RepositoryFeatureDetailDialog).default;
  }
});

var _TaskPlanList = __webpack_require__("x/ux");

Object.defineProperty(exports, 'TaskPlanList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_TaskPlanList).default;
  }
});

var _ReleaseList = __webpack_require__("e9qt");

Object.defineProperty(exports, 'ReleaseList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseList).default;
  }
});

var _ReleasePlanList = __webpack_require__("oapJ");

Object.defineProperty(exports, 'ReleasePlanList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleasePlanList).default;
  }
});

var _ReleaseDeveloperScheduleForm = __webpack_require__("HSri");

Object.defineProperty(exports, 'ReleaseDeveloperScheduleForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseDeveloperScheduleForm).default;
  }
});

var _ReleaseTaskPlanningShiftForm = __webpack_require__("Q8cv");

Object.defineProperty(exports, 'ReleaseTaskPlanningShiftForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseTaskPlanningShiftForm).default;
  }
});

var _ReleaseDeveloperFilterForm = __webpack_require__("9A8+");

Object.defineProperty(exports, 'ReleaseDeveloperFilterForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseDeveloperFilterForm).default;
  }
});

var _ReleaseTaskPlanningForm = __webpack_require__("8ukY");

Object.defineProperty(exports, 'ReleaseTaskPlanningForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseTaskPlanningForm).default;
  }
});

var _ReleaseMoveTaskPlanForm = __webpack_require__("U4Zl");

Object.defineProperty(exports, 'ReleaseMoveTaskPlanForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseMoveTaskPlanForm).default;
  }
});

var _UpdateReleaseDatesForm = __webpack_require__("j+Rq");

Object.defineProperty(exports, 'UpdateReleaseDatesForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_UpdateReleaseDatesForm).default;
  }
});

var _ReleasePlanAddToReleaseForm = __webpack_require__("sLjB");

Object.defineProperty(exports, 'ReleasePlanAddToReleaseForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleasePlanAddToReleaseForm).default;
  }
});

var _ReleaseTaskPlanningFormDialog = __webpack_require__("6LXe");

Object.defineProperty(exports, 'ReleaseTaskPlanningFormDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseTaskPlanningFormDialog).default;
  }
});

var _ReleaseMoveTaskPlanFormDialog = __webpack_require__("D0UX");

Object.defineProperty(exports, 'ReleaseMoveTaskPlanFormDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseMoveTaskPlanFormDialog).default;
  }
});

var _UpdateReleaseDatesFormDialog = __webpack_require__("QggF");

Object.defineProperty(exports, 'UpdateReleaseDatesFormDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_UpdateReleaseDatesFormDialog).default;
  }
});

var _ReleasePlanAddToReleaseDialog = __webpack_require__("Lp/s");

Object.defineProperty(exports, 'ReleasePlanAddToReleaseDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleasePlanAddToReleaseDialog).default;
  }
});

var _TaskShiftDialog = __webpack_require__("Dakj");

Object.defineProperty(exports, 'TaskShiftDialog', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_TaskShiftDialog).default;
  }
});

var _ReleaseDevelopersSchedules = __webpack_require__("zD2L");

Object.defineProperty(exports, 'ReleaseDevelopersSchedules', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseDevelopersSchedules).default;
  }
});

var _ReleaseTaskPlanningPage = __webpack_require__("IQqA");

Object.defineProperty(exports, 'ReleaseTaskPlanningPage', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleaseTaskPlanningPage).default;
  }
});

var _ReleasePlanSection = __webpack_require__("eJqR");

Object.defineProperty(exports, 'ReleasePlanSection', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReleasePlanSection).default;
  }
});

var _CalendarTaskDetailPage = __webpack_require__("hvVm");

Object.defineProperty(exports, 'CalendarTaskDetailPage', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_CalendarTaskDetailPage).default;
  }
});

var _CalendarTaskPage = __webpack_require__("Ewko");

Object.defineProperty(exports, 'CalendarTaskPage', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_CalendarTaskPage).default;
  }
});

var _TaskReportDetailPage = __webpack_require__("fpfg");

Object.defineProperty(exports, 'TaskReportDetailPage', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_TaskReportDetailPage).default;
  }
});

var _TaskReportList = __webpack_require__("HYcQ");

Object.defineProperty(exports, 'TaskReportList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_TaskReportList).default;
  }
});

var _ReportingCommentForm = __webpack_require__("3npA");

Object.defineProperty(exports, 'ReportingCommentForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReportingCommentForm).default;
  }
});

var _ReportingDateNavBar = __webpack_require__("L0wf");

Object.defineProperty(exports, 'ReportingDateNavBar', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReportingDateNavBar).default;
  }
});

var _ReportingTaskPage = __webpack_require__("u2UG");

Object.defineProperty(exports, 'ReportingTaskPage', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReportingTaskPage).default;
  }
});

var _ReportingTaskDetailPage = __webpack_require__("35ej");

Object.defineProperty(exports, 'ReportingTaskDetailPage', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ReportingTaskDetailPage).default;
  }
});

var _WarningList = __webpack_require__("Njw/");

Object.defineProperty(exports, 'WarningList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_WarningList).default;
  }
});

var _HolidayForm = __webpack_require__("vNUd");

Object.defineProperty(exports, 'HolidayForm', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_HolidayForm).default;
  }
});

var _HolidayList = __webpack_require__("tMv0");

Object.defineProperty(exports, 'HolidayList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_HolidayList).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),

/***/ "ZuQz":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _components = __webpack_require__("ZhKb");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactRouterDom = __webpack_require__("F8kA");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        getAllTaskPlans: function getAllTaskPlans(release) {
            return dispatch(A.getAllTaskPlansOfThisReleaseFromServer(release._id));
        }
    };
};

var mapStateToProps = function mapStateToProps(state) {
    return {
        taskPlans: state.release.taskPlans
    };
};

var TaskPlanListContainer = (0, _reactRouterDom.withRouter)((0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.TaskPlanList));

exports.default = TaskPlanListContainer;

/***/ }),

/***/ "a2Q/":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactRouterDom = __webpack_require__("F8kA");

var _reactRedux = __webpack_require__("RH2O");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SidebarSideSection = function SidebarSideSection(props) {
    return _react2.default.createElement(
        "div",
        { className: "sidebarSideSection" },
        _react2.default.createElement(
            "ul",
            { className: "list-unstyled" },
            _react2.default.createElement(
                "li",
                null,
                _react2.default.createElement(
                    "a",
                    { href: "" },
                    _react2.default.createElement("i", { className: "fa fa-th-large" })
                )
            ),
            _react2.default.createElement(
                "li",
                null,
                _react2.default.createElement(
                    "a",
                    { href: "" },
                    _react2.default.createElement("i", { className: "fa fa-bell-o" })
                )
            ),
            _react2.default.createElement(
                "li",
                null,
                _react2.default.createElement(
                    "a",
                    { href: "" },
                    _react2.default.createElement("i", { className: "fa fa-clock-o" })
                )
            )
        ),
        _react2.default.createElement(
            "ul",
            { className: "list-unstyled bottom-option" },
            _react2.default.createElement(
                "li",
                null,
                _react2.default.createElement(
                    "a",
                    { href: "" },
                    _react2.default.createElement("i", { className: "fa fa-cog" })
                )
            ),
            _react2.default.createElement(
                "li",
                { className: "sub-menu-parent", "tab-index": "0" },
                _react2.default.createElement(
                    "a",
                    { href: "" },
                    _react2.default.createElement("i", { className: "fa fa-user-o" })
                ),
                _react2.default.createElement(
                    "ul",
                    { className: "sub-menu" },
                    _react2.default.createElement("i", { className: "down-arrow" }),
                    _react2.default.createElement(
                        "li",
                        null,
                        _react2.default.createElement(
                            _reactRouterDom.Link,
                            { to: "/app-home/edit-profile", onClick: function onClick() {
                                    props.dispatch(A.showComponent(COC.USER_PROFILE_FORM));
                                } },
                            "Edit Profile"
                        )
                    ),
                    _react2.default.createElement(
                        "li",
                        null,
                        _react2.default.createElement(
                            "a",
                            { href: "/logout" },
                            "Logout"
                        )
                    )
                )
            )
        )
    );
};

exports.default = (0, _reactRedux.connect)()(SidebarSideSection);

/***/ }),

/***/ "a6mO":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getAllWarningsOfThisReleaseFromServer = exports.addWarnings = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var addWarnings = exports.addWarnings = function addWarnings(warnings) {
    return {
        type: AC.ADD_WARNINGS,
        warnings: warnings
    };
};

var getAllWarningsOfThisReleaseFromServer = exports.getAllWarningsOfThisReleaseFromServer = function getAllWarningsOfThisReleaseFromServer(warningType, releaseID) {
    return function (dispatch, getState) {
        return fetch('/api/warning/release/' + releaseID + '/warningName/' + warningType, {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addWarnings(json.data));
            }
            return json;
        });
    };
};

/***/ }),

/***/ "aFI3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactBootstrapDialog = __webpack_require__("OLzJ");

var _reactBootstrapDialog2 = _interopRequireDefault(_reactBootstrapDialog);

var _clientconstants = __webpack_require__("5LBi");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UserList = function (_Component) {
    _inherits(UserList, _Component);

    function UserList(props) {
        _classCallCheck(this, UserList);

        return _possibleConstructorReturn(this, (UserList.__proto__ || Object.getPrototypeOf(UserList)).call(this, props));
    }

    _createClass(UserList, [{
        key: 'editCellButton',
        value: function editCellButton(cell, row, enumObject, rowIndex) {
            var _this2 = this;

            return _react2.default.createElement('button', { className: 'glyphicon glyphicon-pencil pull-left btn btn-custom', type: 'button',
                onClick: function onClick() {
                    return _this2.props.editUser(row);
                } });
        }
    }, {
        key: 'deleteCellButton',
        value: function deleteCellButton(cell, row, enumObject, rowIndex) {
            var _this3 = this;

            return _react2.default.createElement('button', { className: 'glyphicon glyphicon-trash pull-left btn btn-custom', type: 'button',
                onClick: function onClick() {
                    _this3.dialog.show({
                        title: "Delete User",
                        body: "",
                        actions: [_reactBootstrapDialog2.default.DefaultAction('Delete', function () {
                            _this3.props.deleteUser(row._id);
                        }, 'btn-custom'), _reactBootstrapDialog2.default.DefaultAction('Close', function () {
                            _this3.dialog.hide();
                        }, 'btn-custom')],
                        bsSize: 'small',
                        onHide: function onHide(dialog) {
                            _this3.dialog.hide();
                        }
                    });
                } });
        }
    }, {
        key: 'formatRole',
        value: function formatRole(roles, row) {
            if (roles && roles.length > 0) return roles.map(function (role) {
                return role.name;
            }).join(", ");else return '';
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            return _react2.default.createElement(
                'div',
                { className: 'row' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-10' },
                    _react2.default.createElement(_reactBootstrapDialog2.default, { ref: function ref(el) {
                            _this4.dialog = el;
                        } }),
                    this.props.loggedInUser.permissions.includes(_clientconstants.CREATE_USER) && _react2.default.createElement(
                        'button',
                        { className: 'btn btn-default btn-submit addBtn', onClick: function onClick() {
                                return _this4.props.showUserForm();
                            } },
                        'Create User'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.BootstrapTable,
                        { options: this.options, data: this.props.users, striped: true,
                            hoveNr: true },
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { isKey: true, dataField: '_id', hidden: true },
                            'ID'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '20%', dataField: 'firstName', dataSort: true },
                            'First Name'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '20%', dataField: 'lastName' },
                            'Last Name'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '26%', dataField: 'roles',
                                dataFormat: this.formatRole },
                            'Roles'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '22%', dataField: 'email' },
                            'Email'
                        ),
                        this.props.loggedInUser.permissions.includes(_clientconstants.EDIT_USER) && _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '8%', dataField: 'button', dataFormat: this.editCellButton.bind(this) },
                            _react2.default.createElement('i', {
                                className: 'fa fa-pencil' })
                        ),
                        this.props.loggedInUser.permissions.includes(_clientconstants.DELETE_USER) && _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '5%', dataField: 'button',
                                dataFormat: this.deleteCellButton.bind(this) },
                            _react2.default.createElement('i', { className: 'fa fa-trash' })
                        )
                    )
                )
            );
        }
    }]);

    return UserList;
}(_react.Component);

exports.default = UserList;

/***/ }),

/***/ "afYA":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _components = __webpack_require__("ZhKb");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        changeReleaseStatus: function changeReleaseStatus(status) {
            return dispatch(A.getAllReleasesFromServer(status));
        },
        releaseSelected: function releaseSelected(release) {
            dispatch(A.getReleaseFromServer(release._id)).then(function (json) {
                if (json.success) {
                    dispatch(A.showComponentHideOthers(COC.RELEASE_PLAN_LIST));
                }
            });
            //dispatch(A.getReleasePlansFromServer(release._id, SC.ALL, SC.ALL))

        },
        showCreateReleaseDialog: function showCreateReleaseDialog() {
            dispatch(A.getAllProjectsFromServer());
            dispatch(A.getAllModulesFromServer());
            dispatch(A.getUsersWithRoleCategoryFromServer());
            dispatch(A.getAllTechnologiesFromServer());
            dispatch(A.getAllDevelopmentTypesFromServer());
            dispatch(A.showComponent(COC.CREATE_RELEASE_FORM_DIALOG));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        releases: state.release.all
    };
};

var ReleaseListContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ReleaseList);

exports.default = ReleaseListContainer;

/***/ }),

/***/ "atNk":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        tasks: state.estimation.tasks,
        expandedTaskID: state.estimation.expandedTaskID,
        filter: state.estimation.filter

    };
};

var EstimationTasksContainer = (0, _reactRedux.connect)(mapStateToProps)(_components.EstimationTasks);

exports.default = EstimationTasksContainer;

/***/ }),

/***/ "c1j9":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _index = __webpack_require__("81ym");

var A = _interopRequireWildcard(_index);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        calenderGoBack: function calenderGoBack(event) {
            return dispatch(A.showComponentHideOthers(COC.CALENDAR_TASK_PAGE));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        taskPlan: state.calendar.calendarTaskDetail.taskPlan,
        release: state.calendar.calendarTaskDetail.release,
        releasePlan: state.calendar.calendarTaskDetail.releasePlan,
        taskPlans: state.calendar.calendarTaskDetail.taskPlans

    };
};

var CalendarTaskDetailPageContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.CalendarTaskDetailPage);

exports.default = CalendarTaskDetailPageContainer;

/***/ }),

/***/ "c5MU":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
const ALREADY_EXISTS = 'ALREADY_EXISTS'
/* harmony export (immutable) */ __webpack_exports__["ALREADY_EXISTS"] = ALREADY_EXISTS;

const NOT_EXISTS = 'NOT_EXISTS'
/* harmony export (immutable) */ __webpack_exports__["NOT_EXISTS"] = NOT_EXISTS;

const NOT_FOUND = 'NOT_FOUND'
/* harmony export (immutable) */ __webpack_exports__["NOT_FOUND"] = NOT_FOUND;

const EMAIL_ALREADY_USED = 'EMAIL_ALREADY_USED'
/* harmony export (immutable) */ __webpack_exports__["EMAIL_ALREADY_USED"] = EMAIL_ALREADY_USED;

const ACCESS_DENIED = 'ACCESS_DENIED'
/* harmony export (immutable) */ __webpack_exports__["ACCESS_DENIED"] = ACCESS_DENIED;

const LOGIN_FAILED = 'LOGIN_FAILED'
/* harmony export (immutable) */ __webpack_exports__["LOGIN_FAILED"] = LOGIN_FAILED;

const IDENTIFIER_MISSING = 'IDENTIFIER_MISSING'
/* harmony export (immutable) */ __webpack_exports__["IDENTIFIER_MISSING"] = IDENTIFIER_MISSING;

const UNEXPECTED_ERROR = 'UNEXPECTED_ERROR'
/* harmony export (immutable) */ __webpack_exports__["UNEXPECTED_ERROR"] = UNEXPECTED_ERROR;

const PASSWORD_NOT_MATCHED = 'PASSWORD_NOT_MATCHED'
/* harmony export (immutable) */ __webpack_exports__["PASSWORD_NOT_MATCHED"] = PASSWORD_NOT_MATCHED;

const API_VALIDATION_FAILED = 'API_VALIDATION_FAILED'
/* harmony export (immutable) */ __webpack_exports__["API_VALIDATION_FAILED"] = API_VALIDATION_FAILED;

const BAD_ARGUMENTS = 'BAD_ARGUMENTS'
/* harmony export (immutable) */ __webpack_exports__["BAD_ARGUMENTS"] = BAD_ARGUMENTS;

const INVALID_USER = 'INVALID_USER'
/* harmony export (immutable) */ __webpack_exports__["INVALID_USER"] = INVALID_USER;

const INVALID_OPERATION = 'INVALID_OPERATION'
/* harmony export (immutable) */ __webpack_exports__["INVALID_OPERATION"] = INVALID_OPERATION;

const UNIMPLEMENTED_SO_FAR = 'UNIMPLEMENTED_SO_FAR'
/* harmony export (immutable) */ __webpack_exports__["UNIMPLEMENTED_SO_FAR"] = UNIMPLEMENTED_SO_FAR;

const INVALID_STAGE_OPERATION = 'INVALID_STAGE_OPERATION'
/* harmony export (immutable) */ __webpack_exports__["INVALID_STAGE_OPERATION"] = INVALID_STAGE_OPERATION;


//task and feature approval error codes
const TASK_APPROVAL_ERROR = 'TASK_APPROVAL_ERROR'
/* harmony export (immutable) */ __webpack_exports__["TASK_APPROVAL_ERROR"] = TASK_APPROVAL_ERROR;

const FEATURE_APPROVAL_ERROR = 'FEATURE_APPROVAL_ERROR'
/* harmony export (immutable) */ __webpack_exports__["FEATURE_APPROVAL_ERROR"] = FEATURE_APPROVAL_ERROR;

const FEATURE_DETAIL_ERROR = 'FEATURE_DETAIL_ERROR'
/* harmony export (immutable) */ __webpack_exports__["FEATURE_DETAIL_ERROR"] = FEATURE_DETAIL_ERROR;

const TASK_APPROVAL_FEATURE_ERROR = 'TASK_APPROVAL_FEATURE_ERROR'
/* harmony export (immutable) */ __webpack_exports__["TASK_APPROVAL_FEATURE_ERROR"] = TASK_APPROVAL_FEATURE_ERROR;

const MOVE_TASK_IN_FEATURE_ERROR = 'MOVE_TASK_IN_FEATURE_ERROR'
/* harmony export (immutable) */ __webpack_exports__["MOVE_TASK_IN_FEATURE_ERROR"] = MOVE_TASK_IN_FEATURE_ERROR;

const TASK_FROM_REPOSITORY_ERROR = 'TASK_FROM_REPOSITORY_ERROR'
/* harmony export (immutable) */ __webpack_exports__["TASK_FROM_REPOSITORY_ERROR"] = TASK_FROM_REPOSITORY_ERROR;

const FEATURE_FROM_REPOSITORY_ERROR = 'FEATURE_FROM_REPOSITORY_ERROR'
/* harmony export (immutable) */ __webpack_exports__["FEATURE_FROM_REPOSITORY_ERROR"] = FEATURE_FROM_REPOSITORY_ERROR;

const STILL_PENDING_TASKS_AND_FEATURE_ERROR = 'STILL_PENDING_TASKS_AND_FEATURE_ERROR'
/* harmony export (immutable) */ __webpack_exports__["STILL_PENDING_TASKS_AND_FEATURE_ERROR"] = STILL_PENDING_TASKS_AND_FEATURE_ERROR;

const STILL_PENDING_TASKS_ERROR = 'STILL_PENDING_TASKS_ERROR'
/* harmony export (immutable) */ __webpack_exports__["STILL_PENDING_TASKS_ERROR"] = STILL_PENDING_TASKS_ERROR;

const NO_TASKS_ERROR = 'NO_TASKS_ERROR'
/* harmony export (immutable) */ __webpack_exports__["NO_TASKS_ERROR"] = NO_TASKS_ERROR;

const NO_ESTIMATED_HOUR_ERROR = 'NO_ESTIMATED_HOUR_ERROR'
/* harmony export (immutable) */ __webpack_exports__["NO_ESTIMATED_HOUR_ERROR"] = NO_ESTIMATED_HOUR_ERROR;

const TIME_OVER_FOR_RE_REPORTING = 'TIME_OVER_FOR_RE_REPORTING'
/* harmony export (immutable) */ __webpack_exports__["TIME_OVER_FOR_RE_REPORTING"] = TIME_OVER_FOR_RE_REPORTING;

const HAS_UNREPORTED_TASKS = 'HAS_UNREPORTED_TASKS'
/* harmony export (immutable) */ __webpack_exports__["HAS_UNREPORTED_TASKS"] = HAS_UNREPORTED_TASKS;

const REPORT_STATUS_NOT_ALLOWED = 'REPORT_STATUS_NOT_ALLOWED'
/* harmony export (immutable) */ __webpack_exports__["REPORT_STATUS_NOT_ALLOWED"] = REPORT_STATUS_NOT_ALLOWED;

const TIME_OVER = 'TIME_OVER'
/* harmony export (immutable) */ __webpack_exports__["TIME_OVER"] = TIME_OVER;

const ALREADY_REPORTED = 'ALREADY_REPORTED'
/* harmony export (immutable) */ __webpack_exports__["ALREADY_REPORTED"] = ALREADY_REPORTED;

const NOT_ALLOWED_TO_ADD_EXTRA_EMPLOYEE = 'NOT_ALLOWED_TO_ADD_EXTRA_EMPLOYEE'
/* harmony export (immutable) */ __webpack_exports__["NOT_ALLOWED_TO_ADD_EXTRA_EMPLOYEE"] = NOT_ALLOWED_TO_ADD_EXTRA_EMPLOYEE;

const DATA_INCONSISTENT = 'DATA_INCONSISTENT'
/* harmony export (immutable) */ __webpack_exports__["DATA_INCONSISTENT"] = DATA_INCONSISTENT;

const SERVER_ERROR = 'SERVER_ERROR'
/* harmony export (immutable) */ __webpack_exports__["SERVER_ERROR"] = SERVER_ERROR;

const CANT_PLAN = 'CANT_PLAN'
/* harmony export (immutable) */ __webpack_exports__["CANT_PLAN"] = CANT_PLAN;

const BEYOND_TODAY = 'BEYOND_TODAY'
/* harmony export (immutable) */ __webpack_exports__["BEYOND_TODAY"] = BEYOND_TODAY;

const DIFFERENT_PROJECT = 'DIFFERENT_PROJECT'
/* harmony export (immutable) */ __webpack_exports__["DIFFERENT_PROJECT"] = DIFFERENT_PROJECT;

const CANT_REOPEN = 'CANT_REOPEN'
/* harmony export (immutable) */ __webpack_exports__["CANT_REOPEN"] = CANT_REOPEN;

const INSUFFICIENT_WORKING_DAYS = 'INSUFFICIENT_WORKING_DAYS'
/* harmony export (immutable) */ __webpack_exports__["INSUFFICIENT_WORKING_DAYS"] = INSUFFICIENT_WORKING_DAYS;



// HTML CODES
const HTTP_OK = 200
/* harmony export (immutable) */ __webpack_exports__["HTTP_OK"] = HTTP_OK;

const HTTP_CREATED = 201
/* harmony export (immutable) */ __webpack_exports__["HTTP_CREATED"] = HTTP_CREATED;

const HTTP_ACCEPTED = 202
/* harmony export (immutable) */ __webpack_exports__["HTTP_ACCEPTED"] = HTTP_ACCEPTED;

const HTTP_NO_CONTENT = 204
/* harmony export (immutable) */ __webpack_exports__["HTTP_NO_CONTENT"] = HTTP_NO_CONTENT;


const HTTP_BAD_REQUEST = 400
/* harmony export (immutable) */ __webpack_exports__["HTTP_BAD_REQUEST"] = HTTP_BAD_REQUEST;

const HTTP_UNAUTHORIZED = 401
/* harmony export (immutable) */ __webpack_exports__["HTTP_UNAUTHORIZED"] = HTTP_UNAUTHORIZED;

const HTTP_FORBIDDEN = 403
/* harmony export (immutable) */ __webpack_exports__["HTTP_FORBIDDEN"] = HTTP_FORBIDDEN;

const HTTP_NOT_FOUND = 404
/* harmony export (immutable) */ __webpack_exports__["HTTP_NOT_FOUND"] = HTTP_NOT_FOUND;


const HTTP_SERVER_ERROR = 500
/* harmony export (immutable) */ __webpack_exports__["HTTP_SERVER_ERROR"] = HTTP_SERVER_ERROR;




/***/ }),

/***/ "d3Iu":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _validation = __webpack_require__("4KT+");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _fields = __webpack_require__("NACj");

var _reduxForm = __webpack_require__("ao4a");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MoveTaskInFeatureForm = function MoveTaskInFeatureForm(props) {
    var handleSubmit = props.handleSubmit,
        pristine = props.pristine,
        submitting = props.submitting,
        reset = props.reset,
        features = props.features;

    return _react2.default.createElement(
        "form",
        { onSubmit: handleSubmit },
        _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
                "div",
                { className: "col-md-9" },
                _react2.default.createElement(_reduxForm.Field, { name: "_id", component: "input", type: "hidden" }),
                _react2.default.createElement(_reduxForm.Field, { name: "featureID", component: _fields.renderSelect, label: "Feature :", options: features,
                    valueField: "_id",
                    validate: [_validation.required],
                    displayField: "estimator.name",
                    optionalDisplayField: "negotiator.name"
                }),
                _react2.default.createElement(
                    "button",
                    { type: "submit", disabled: pristine || submitting, className: "btn customBtn moveInBtnSpace" },
                    "Submit"
                ),
                _react2.default.createElement(
                    "button",
                    { type: "button", disabled: pristine || submitting, className: "btn customBtn", onClick: reset },
                    "Reset"
                )
            )
        )
    );
};

MoveTaskInFeatureForm = (0, _reduxForm.reduxForm)({
    form: 'move-task-in-feature'
})(MoveTaskInFeatureForm);

exports.default = MoveTaskInFeatureForm;

/***/ }),

/***/ "dEEk":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            console.log("values", values);
            if (values.iteration_type === SC.ITERATION_TYPE_PLANNED) {
                values.estimatedHours = Number(values.estimatedHours);
                values.estimatedBilledHours = parseInt(values.estimatedBilledHours);
                dispatch(A.releasePlanPlannedAddToReleaseOnServer(values)).then(function (json) {
                    if (json.success) {
                        _reactNotifications.NotificationManager.success("Added  Planned To ReleasePlan");
                        // hide dialog
                        dispatch(A.hideComponent(COC.RELEASE_PLAN_ADD_TO_RELEASE_FORM_DIALOG));
                    }
                    dispatch(A.getReleasePlansFromServer(values.release._id, SC.ALL, SC.ALL));
                });
            } else {
                dispatch(A.releasePlanUnplannedAddToReleaseOnServer(values)).then(function (json) {
                    if (json.success) {
                        _reactNotifications.NotificationManager.success("Added Unplanned To Release");
                        // hide dialog
                        dispatch(A.hideComponent(COC.RELEASE_PLAN_ADD_TO_RELEASE_FORM_DIALOG));
                    }
                    dispatch(A.getReleasePlansFromServer(values.release._id, SC.ALL, SC.ALL));
                });
            }
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        release: state.release.selectedRelease,
        releasePlans: state.release.releasePlans,
        iterations: SC.ITERATION_TYPE_LIST_WITH_NAME
    };
};

var ReleasePlanAddToReleaseFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ReleasePlanAddToReleaseForm);

exports.default = ReleasePlanAddToReleaseFormContainer;

/***/ }),

/***/ "dJqb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.updateHolidayOnServer = exports.deleteHolidayOnServer = exports.addHolidayOnServer = exports.getAllHolidaysOfYearFromServer = exports.getAllHolidayYearsFromServer = exports.updateHoliday = exports.addHoliday = exports.addAllHolidays = exports.deleteHoliday = exports.addAllYears = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var addAllYears = exports.addAllYears = function addAllYears(years) {
    return {
        type: AC.ADD_ALL_YEARS,
        years: years
    };
};

var deleteHoliday = exports.deleteHoliday = function deleteHoliday(holidayDateString) {
    return {
        type: AC.DELETE_HOLIDAY,
        holidayDateString: holidayDateString
    };
};

var addAllHolidays = exports.addAllHolidays = function addAllHolidays(holidays) {
    return {
        type: AC.ADD_HOLIDAYS,
        holidays: holidays
    };
};

var addHoliday = exports.addHoliday = function addHoliday(holiday) {
    return {
        type: AC.ADD_HOLIDAY,
        holiday: holiday
    };
};

var updateHoliday = exports.updateHoliday = function updateHoliday(holiday) {
    return {
        type: AC.UPDATE_HOLIDAY,
        holiday: holiday
    };
};

var getAllHolidayYearsFromServer = exports.getAllHolidayYearsFromServer = function getAllHolidayYearsFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/holiday/years', {
            method: "get",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addAllYears(json.data));
            }
            return json;
        });
    };
};

var getAllHolidaysOfYearFromServer = exports.getAllHolidaysOfYearFromServer = function getAllHolidaysOfYearFromServer(year) {
    return function (dispatch, getState) {
        return fetch('/api/holiday/holidays/' + year + '/year', {
            method: "get",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addAllHolidays(json.data));
            }
            return json;
        });
    };
};

var addHolidayOnServer = exports.addHolidayOnServer = function addHolidayOnServer(formInput) {
    console.log("inside action", formInput);
    return function (dispatch, getState) {
        return fetch('/api/holiday/', {
            method: "post",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(getAllHolidaysOfYearFromServer(json.data.calendarYear));
                dispatch(getAllHolidayYearsFromServer());
            }
            return json;
        });
    };
};

var deleteHolidayOnServer = exports.deleteHolidayOnServer = function deleteHolidayOnServer(holidayDateString) {
    return function (dispatch, getState) {
        return fetch('/api/holiday/' + holidayDateString, {
            method: "delete",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                return dispatch(getAllHolidaysOfYearFromServer(json.data.calendarYear));
            }
            return json;
        });
    };
};

var updateHolidayOnServer = exports.updateHolidayOnServer = function updateHolidayOnServer(formInput) {
    console.log("formInput", formInput);
    return function (dispatch, getState) {
        return fetch('/api/holiday', {
            method: "put",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(getAllHolidaysOfYearFromServer(json.data.calendarYear));
                if (json.data.yearChange) {
                    dispatch(getAllHolidayYearsFromServer());
                }
            }
            return json;
        });
    };
};

/***/ }),

/***/ "dx+h":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _reduxForm = __webpack_require__("ao4a");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {

        showTaskPlanningCreationForm: function showTaskPlanningCreationForm(releasePlan, workCalendarEmployeeID) {
            dispatch((0, _reduxForm.initialize)("task-planning", {
                release: releasePlan.release,
                task: releasePlan.task,
                releasePlan: {
                    _id: releasePlan._id
                },
                projectUsersOnly: true,
                workCalendarEmployeeID: workCalendarEmployeeID

            }));
            dispatch(A.showComponent(COC.RELEASE_TASK_PLANNING_FORM_DIALOG));
        },

        planTask: function planTask(taskPlanning) {
            return dispatch(A.addTaskPlanningOnServer(taskPlanning)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Task Planning Added");
                } else _reactNotifications.NotificationManager.error(json.message);
            });
        },

        deleteTaskPlanningRow: function deleteTaskPlanningRow(plan, workCalendarEmployeeID) {
            return dispatch(A.deleteTaskPlanningFromServer(plan._id)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Task Planning Deleted");
                    if (workCalendarEmployeeID && plan.employee._id.toString() == workCalendarEmployeeID.toString()) dispatch(A.getEmployeeWorkCalendarFromServer(workCalendarEmployeeID));
                } else {
                    _reactNotifications.NotificationManager.error(json.message);
                }
            });
        },
        reopenTask: function reopenTask(task) {
            dispatch(A.reopenTaskPlanOnServer(task._id));
        },
        openMoveTaskPlanForm: function openMoveTaskPlanForm(releasePlan, workCalendarEmployeeID) {
            releasePlan.workCalendarEmployeeID = workCalendarEmployeeID;
            dispatch((0, _reduxForm.initialize)("move-task-planning", releasePlan));
            dispatch(A.showComponent(COC.MOVE_TASK_PLAN_DIALOG));
        },
        planTaskFilter: function planTaskFilter(taskPlanFilter) {
            return dispatch(A.addTaskPlanningFiltersOnServer(taskPlanFilter)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Task Planning Added");
                } else _reactNotifications.NotificationManager.error("Task Planning Failed");
            });
        },

        ReleaseTaskGoBack: function ReleaseTaskGoBack(release) {
            dispatch(A.getReleaseFromServer(release._id)).then(function (json) {
                if (json.success) {
                    dispatch(A.showComponentHideOthers(COC.RELEASE_PLAN_LIST));
                }
            });
            dispatch(A.getReleasePlansFromServer(release._id, SC.ALL, SC.ALL));
        },
        expandDescription: function expandDescription(flag) {
            return dispatch(A.expandDescription(flag));
        },
        refreshSelectedTaskPlan: function refreshSelectedTaskPlan(releasePlan, role) {
            dispatch(A.getReleasePlanDetailsFromServer(releasePlan._id)).then(function (json) {
                if (json.success) {
                    dispatch(A.showComponentHideOthers(COC.RELEASE_TASK_PLANNING_PAGE));
                }
            });
            dispatch(A.getAllTaskPlannedFromServer(releasePlan._id));
            if (role === SC.ROLE_MANAGER) {
                // get all developers from user list when user role in this release is manager
                dispatch(A.getAllDeveloperFromServer());
            } else if (role === SC.ROLE_LEADER) {
                // get project developers from user list when user role in this release is leader
                dispatch(A.getReleaseDevelopersFromServer(releasePlan._id));
            }
        }
    };
};

var mapStateToProps = function mapStateToProps(state) {
    return {
        release: state.release.selectedRelease,
        releasePlan: state.release.selectedReleasePlan,
        taskPlans: state.release.taskPlans,
        developerPlans: state.release.developerPlans,
        expanded: state.release.expanded,
        workCalendarEmployeeID: state.employee.workCalendar.employees && state.employee.workCalendar.employees.length ? state.employee.workCalendar.employees[0]._id : undefined
    };
};

var ReleaseTaskPlanningPageContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ReleaseTaskPlanningPage);

exports.default = ReleaseTaskPlanningPageContainer;

/***/ }),

/***/ "e2eB":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _index = __webpack_require__("ZhKb");

var _index2 = __webpack_require__("81ym");

var A = _interopRequireWildcard(_index2);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _utils = __webpack_require__("DcaD");

var U = _interopRequireWildcard(_utils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        ReportingGoBack: function ReportingGoBack(event) {
            dispatch(A.getReportingTasksForDate(SC.ALL, U.getNowStringInIndia(), SC.ITERATION_TYPE_PLANNED, SC.ALL));
            dispatch(A.setReleaseID(SC.ALL));
            dispatch(A.setReportDate(U.getNowStringInIndia()));
            dispatch(A.setReportedStatus(SC.ALL));
            dispatch(A.showComponentHideOthers(COC.REPORTING_TASK_PAGE));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        taskPlan: state.report.reportTaskDetail.taskPlan,
        release: state.report.reportTaskDetail.release,
        releasePlan: state.report.reportTaskDetail.releasePlan,
        taskPlans: state.report.reportTaskDetail.taskPlans
    };
};

var ReportingTaskDetailPageContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_index.ReportingTaskDetailPage);

exports.default = ReportingTaskDetailPageContainer;

/***/ }),

/***/ "e9qt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactRouterDom = __webpack_require__("F8kA");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ReleaseList = function (_Component) {
    _inherits(ReleaseList, _Component);

    function ReleaseList(props) {
        _classCallCheck(this, ReleaseList);

        var _this = _possibleConstructorReturn(this, (ReleaseList.__proto__ || Object.getPrototypeOf(ReleaseList)).call(this, props));

        _this.options = {
            onRowClick: _this.onRowClick.bind(_this)
        };
        return _this;
    }

    _createClass(ReleaseList, [{
        key: 'onRowClick',
        value: function onRowClick(row) {
            this.props.history.push("/app-home/release-plan");
            this.props.releaseSelected(row);
        }
    }, {
        key: 'formatCreatedDate',
        value: function formatCreatedDate(row) {
            if (row) {
                return (0, _moment2.default)(row).format("DD-MM-YYYY");
            }
            return '';
        }
    }, {
        key: 'formatProjectName',
        value: function formatProjectName(project, row, enumObject, rowIndex) {
            var releaseName = "";
            if (project && project.name) releaseName = project.name;
            if (row && row.name) releaseName = releaseName + ' (' + row.name + ')';
            return releaseName;
        }
    }, {
        key: 'formatManager',
        value: function formatManager(row) {
            if (row) {
                return row.firstName + ' ' + row.lastName;
            }
            return '';
        }
    }, {
        key: 'formatLeader',
        value: function formatLeader(row) {
            if (row) {
                return row.firstName + ' ' + row.lastName;
            }
            return '';
        }
    }, {
        key: 'formatEstimatedHours',
        value: function formatEstimatedHours(column, row) {
            if (row.plannedStats) {
                return row.plannedStats.sumEstimatedHours;
            }
            return '';
        }
    }, {
        key: 'formatReportedHours',
        value: function formatReportedHours(column, row) {
            if (row.plannedStats) {
                return row.plannedStats.sumReportedHours;
            }
            return '';
        }
    }, {
        key: 'formatProgress',
        value: function formatProgress(column, row) {
            if (row.plannedStats) {
                return row.plannedStats.progress + '%';
            }
            return '0%';
        }
    }, {
        key: 'formatStartDate',
        value: function formatStartDate(column, row) {
            if (row.iterations[0]) {
                return (0, _moment2.default)(row.iterations[0].devStartDate).format("DD-MM-YYYY");
            }
            return '';
        }
    }, {
        key: 'formatEndDate',
        value: function formatEndDate(column, row) {
            if (row.iterations[0]) {
                return (0, _moment2.default)(row.iterations[0].devEndDate).format("DD-MM-YYYY");
            }
            return '';
        }
    }, {
        key: 'formatReleaseDate',
        value: function formatReleaseDate(column, row) {
            if (row.iterations[0]) {
                return (0, _moment2.default)(row.iterations[0].clientReleaseDate).format("DD-MM-YYYY");
            }
            return '';
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var releases = this.props.releases;

            return [_react2.default.createElement(
                'div',
                { key: "release-search", className: 'col-md-12 release-options' },
                _react2.default.createElement(
                    'button',
                    { type: 'button', className: 'col-md-2 btn customBtn', onClick: function onClick() {
                            _this2.props.showCreateReleaseDialog();
                        } },
                    'Create Release'
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'search-btn-container' },
                    _react2.default.createElement(
                        'select',
                        { className: 'col-md-4 form-control', title: 'Select Status',
                            onChange: function onChange(status) {
                                return _this2.props.changeReleaseStatus(status.target.value);
                            } },
                        _react2.default.createElement(
                            'option',
                            { value: SC.ALL },
                            'All Status'
                        ),
                        _react2.default.createElement(
                            'option',
                            { value: SC.STATUS_PLAN_REQUESTED },
                            SC.STATUS_PLAN_REQUESTED
                        ),
                        _react2.default.createElement(
                            'option',
                            { value: SC.STATUS_DEV_IN_PROGRESS },
                            SC.STATUS_DEV_IN_PROGRESS
                        ),
                        _react2.default.createElement(
                            'option',
                            { value: SC.STATUS_DEV_COMPLETED },
                            SC.STATUS_DEV_COMPLETED
                        ),
                        _react2.default.createElement(
                            'option',
                            { value: SC.STATUS_RELEASED },
                            SC.STATUS_RELEASED
                        ),
                        _react2.default.createElement(
                            'option',
                            { value: SC.STATUS_ISSUE_FIXING },
                            SC.STATUS_ISSUE_FIXING
                        )
                    )
                )
            ), _react2.default.createElement(
                'div',
                { key: "release-table", className: 'col-md-12' },
                _react2.default.createElement(
                    'div',
                    { className: 'estimation release-plan-table' },
                    _react2.default.createElement(
                        _reactBootstrapTable.BootstrapTable,
                        { options: this.options, data: releases,
                            multiColumnSearch: true,
                            search: false,
                            striped: true,
                            hover: true },
                        _react2.default.createElement(_reactBootstrapTable.TableHeaderColumn, { columnTitle: true, isKey: true, dataField: '_id', hidden: true }),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '12%', dataField: 'project',
                                dataFormat: this.formatProjectName.bind(this), dataAlign: "center" },
                            'Project'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { columnTitle: true, dataField: 'manager',
                                dataFormat: this.formatManager.bind(this), dataAlign: "center" },
                            'Manager'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { columnTitle: true, dataField: 'leader',
                                dataFormat: this.formatLeader.bind(this), dataAlign: "center" },
                            'Leader'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { columnTitle: true, dataField: 'iterations[0]',
                                dataFormat: this.formatEstimatedHours.bind(this), dataAlign: "center" },
                            'Estimated Hours'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { columnTitle: true, dataField: 'iterations[0]',
                                dataFormat: this.formatReportedHours.bind(this), dataAlign: "center" },
                            'Reported Hours'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { columnTitle: true, dataField: 'iterations[0]',
                                dataFormat: this.formatProgress.bind(this), dataAlign: "center" },
                            'Progress'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { columnTitle: true, dataField: 'iterations[0]',
                                dataFormat: this.formatStartDate.bind(this), dataAlign: "center" },
                            'Start Date'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { columnTitle: true, dataField: 'iterations[0]',
                                dataFormat: this.formatEndDate.bind(this), dataAlign: "center" },
                            'End Date'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { columnTitle: true, dataField: 'iterations[0]',
                                dataFormat: this.formatReleaseDate.bind(this), dataAlign: "center" },
                            'Release Date'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { columnTitle: true, dataField: 'status', dataAlign: "center" },
                            'Status'
                        )
                    )
                )
            )];
        }
    }]);

    return ReleaseList;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)(ReleaseList);

/***/ }),

/***/ "eJqR":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactRouterDom = __webpack_require__("F8kA");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _utils = __webpack_require__("DcaD");

var U = _interopRequireWildcard(_utils);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _containers = __webpack_require__("GF1l");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ReleasePlanSection = function (_Component) {
    _inherits(ReleasePlanSection, _Component);

    function ReleasePlanSection(props) {
        _classCallCheck(this, ReleasePlanSection);

        var _this = _possibleConstructorReturn(this, (ReleasePlanSection.__proto__ || Object.getPrototypeOf(ReleasePlanSection)).call(this, props));

        _this.options = {
            onRowClick: _this.onRowClick.bind(_this)
        };
        return _this;
    }

    _createClass(ReleasePlanSection, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            console.log("ReleasePlanSection-> componentDidMount() called");
        }
    }, {
        key: 'onRowClick',
        value: function onRowClick(row) {
            this.props.history.push("/app-home/release-task-planning");
            this.props.releasePlanSelected(row, this.props.release.rolesInThisRelease);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var team = 0;
            var _props = this.props,
                release = _props.release,
                releasePlans = _props.releasePlans,
                loggedInUser = _props.loggedInUser,
                selectedTab = _props.selectedTab;


            return _react2.default.createElement(
                'div',
                { key: 'estimation_list', className: 'clearfix' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-12 releaseHeader' },
                    _react2.default.createElement(
                        'div',
                        { className: ' col-md-1 backarrow', title: 'Go Back' },
                        _react2.default.createElement(
                            'button',
                            { className: 'btn-link', onClick: function onClick() {
                                    _this2.props.history.push("/app-home/release");
                                    _this2.props.ReleaseProjectGoBack(release);
                                } },
                            _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-3' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releaseTitle' },
                            _react2.default.createElement(
                                'span',
                                {
                                    title: release && release.project && release.project.name ? release.project.name : '' },
                                'Project Name'
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'releasecontent' },
                            _react2.default.createElement(
                                'p',
                                null,
                                release && release.project && release.project.name ? release.project.name + ' (' + release.name + ')' : ''
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        {
                            className: loggedInUser && U.userHasRole(loggedInUser, SC.ROLE_MANAGER) ? "col-md-1" : "col-md-2" },
                        _react2.default.createElement(
                            'div',
                            { className: 'releaseTitle' },
                            _react2.default.createElement(
                                'span',
                                {
                                    title: release && release.devStartDate ? (0, _moment2.default)(release.devStartDate).format("DD-MM-YYYY") : '' },
                                'Start Date'
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'releasecontent' },
                            _react2.default.createElement(
                                'p',
                                null,
                                release && release && release.devStartDate ? (0, _moment2.default)(release.devStartDate).format("DD-MM-YYYY") : ''
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        {
                            className: loggedInUser && U.userHasRole(loggedInUser, SC.ROLE_MANAGER) ? "col-md-1" : "col-md-2" },
                        _react2.default.createElement(
                            'div',
                            { className: 'releaseTitle' },
                            _react2.default.createElement(
                                'span',
                                {
                                    title: release && release.devEndDate ? (0, _moment2.default)(release.devEndDate).format("DD-MM-YYYY") : '' },
                                'End Date'
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'releasecontent' },
                            _react2.default.createElement(
                                'p',
                                null,
                                release && release.devEndDate ? (0, _moment2.default)(release.devEndDate).format("DD-MM-YYYY") : ''
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-2' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releaseTitle' },
                            _react2.default.createElement(
                                'span',
                                {
                                    title: release && release.clientReleaseDate ? (0, _moment2.default)(release.clientReleaseDate).format("DD-MM-YYYY") : '' },
                                'Release Date'
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'releasecontent' },
                            _react2.default.createElement(
                                'p',
                                null,
                                release && release.clientReleaseDate ? (0, _moment2.default)(release.clientReleaseDate).format("DD-MM-YYYY") : ''
                            )
                        )
                    ),
                    loggedInUser && loggedInUser._id && release.manager._id && loggedInUser._id.toString() === release.manager._id.toString() ? _react2.default.createElement(
                        'div',
                        { className: 'col-md-2' },
                        _react2.default.createElement(
                            'button',
                            { className: ' btn btn-custom customBtn ', type: 'button',
                                onClick: function onClick() {
                                    _this2.props.openUpdateReleaseDatesForm(release);
                                } },
                            'Update Dates'
                        )
                    ) : null,
                    _react2.default.createElement(
                        'div',
                        { className: ' col-md-2 releasefileoption' },
                        _react2.default.createElement(
                            'ul',
                            { className: 'list-unstyled' },
                            _react2.default.createElement(
                                'li',
                                null,
                                _react2.default.createElement(
                                    'a',
                                    { href: '#' },
                                    ' ',
                                    _react2.default.createElement('i', { className: 'fa fa-file-pdf-o' })
                                )
                            ),
                            _react2.default.createElement(
                                'li',
                                null,
                                _react2.default.createElement(
                                    'a',
                                    { href: '#' },
                                    ' ',
                                    _react2.default.createElement('i', { className: 'fa fa-file-word-o' })
                                )
                            ),
                            _react2.default.createElement(
                                'li',
                                null,
                                _react2.default.createElement(
                                    'a',
                                    { href: '#' },
                                    ' ',
                                    _react2.default.createElement('i', { className: ' fa fa-file-excel-o' })
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-12' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-2 pad ' },
                            _react2.default.createElement(
                                'div',
                                { className: 'releaseTeamManager' },
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    'Manager'
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'estimationuser tooltip' },
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    'M'
                                ),
                                _react2.default.createElement(
                                    'p',
                                    { className: 'tooltiptext' },
                                    release && release.manager && release.manager.firstName ? release.manager.firstName : ''
                                )
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-2 pad ' },
                            _react2.default.createElement(
                                'div',
                                { className: 'releaseTeamLeader' },
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    ' Leader'
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'estimationuser tooltip' },
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    'L'
                                ),
                                _react2.default.createElement(
                                    'p',
                                    { className: 'tooltiptext' },
                                    release && release.leader && release.leader.firstName ? release.leader.firstName : ''
                                )
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-5 pad ' },
                            _react2.default.createElement(
                                'div',
                                { className: 'releaseTeam' },
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    'Team'
                                )
                            ),
                            release && release.team && Array.isArray(release.team) && release.team.length ? release.team.map(function (teamMember, index) {
                                return _react2.default.createElement(
                                    'div',
                                    { key: "teamMember" + index, className: 'estimationuser tooltip' },
                                    _react2.default.createElement(
                                        'span',
                                        null,
                                        'T',
                                        index + 1
                                    ),
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'tooltiptext' },
                                        teamMember ? teamMember.name : ''
                                    )
                                );
                            }) : _react2.default.createElement('span', null)
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-3' },
                            _react2.default.createElement(
                                'div',
                                { className: 'col-md-6  releaseClock  releaseProjectPlannedHours' },
                                _react2.default.createElement('i', { className: 'fa fa-clock-o ',
                                    title: 'Estimated Hours' }),
                                _react2.default.createElement(
                                    'b',
                                    null,
                                    release.plannedStats ? release.plannedStats.sumEstimatedHours : '',
                                    'Hrs'
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'col-md-6  releaseClock releasePlannedHrs releaseProjectPlannedHours' },
                                _react2.default.createElement('i', { className: 'fa fa-clock-o ',
                                    title: 'Planned Hours' }),
                                _react2.default.createElement(
                                    'b',
                                    null,
                                    release.plannedStats ? release.plannedStats.sumPlannedHours : '',
                                    'Hrs'
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12 pad' },
                        _react2.default.createElement(
                            'div',
                            { className: 'container pad' },
                            _react2.default.createElement(
                                'ul',
                                { className: 'nav nav-tabs' },
                                _react2.default.createElement(
                                    'li',
                                    { className: selectedTab === SC.RELEASE_DASHBOARD_TAB ? 'active' : '' },
                                    _react2.default.createElement(
                                        'a',
                                        {
                                            'data-toggle': 'tab',
                                            className: selectedTab === SC.RELEASE_DASHBOARD_TAB ? "btn  btn-link btn-size" : "btn  btn-link btn-size",
                                            onClick: function onClick() {
                                                _this2.props.tabSelected(SC.RELEASE_DASHBOARD_TAB);
                                            } },
                                        'Dashboard'
                                    )
                                ),
                                _react2.default.createElement(
                                    'li',
                                    { className: selectedTab === SC.RELEASE_PLAN_TAB ? 'active' : '' },
                                    _react2.default.createElement(
                                        'a',
                                        {
                                            'data-toggle': 'tab',
                                            className: selectedTab === SC.RELEASE_PLAN_TAB ? "btn  btn-link btn-size" : "btn  btn-link btn-size",
                                            onClick: function onClick() {
                                                _this2.props.tabSelected(SC.RELEASE_PLAN_TAB);
                                            } },
                                        'Release Plans'
                                    )
                                ),
                                _react2.default.createElement(
                                    'li',
                                    { className: selectedTab === SC.RELEASE_WARNINGS_TAB ? 'active' : '' },
                                    _react2.default.createElement(
                                        'a',
                                        {
                                            'data-toggle': 'tab',
                                            className: selectedTab === SC.RELEASE_WARNINGS_TAB ? "btn  btn-link btn-size" : "btn  btn-link btn-size",
                                            onClick: function onClick() {
                                                _this2.props.tabSelected(SC.RELEASE_WARNINGS_TAB);
                                            } },
                                        'Warnings'
                                    )
                                ),
                                _react2.default.createElement(
                                    'li',
                                    { className: selectedTab === SC.RELEASE_TASK_PLANS_TAB ? 'active' : '' },
                                    _react2.default.createElement(
                                        'a',
                                        {
                                            'data-toggle': 'tab',
                                            className: selectedTab === SC.RELEASE_TASK_PLANS_TAB ? "btn btn-link btn-size " : "btn btn-link btn-size ",
                                            onClick: function onClick() {
                                                _this2.props.tabSelected(SC.RELEASE_TASK_PLANS_TAB);
                                            } },
                                        'Task Plans'
                                    )
                                ),
                                _react2.default.createElement(
                                    'li',
                                    { className: selectedTab === SC.RELEASE_REPORT_TAB ? 'active' : '' },
                                    _react2.default.createElement(
                                        'a',
                                        {
                                            'data-toggle': 'tab',
                                            className: selectedTab === SC.RELEASE_REPORT_TAB ? "btn btn-link btn-size " : "btn btn-link btn-size ",
                                            onClick: function onClick() {
                                                _this2.props.tabSelected(SC.RELEASE_REPORT_TAB);
                                            } },
                                        'Task Report'
                                    )
                                )
                            )
                        )
                    )
                ),
                selectedTab === SC.RELEASE_DASHBOARD_TAB && _react2.default.createElement(_containers.ReleaseDashboardSectionContainer, { release: release }),
                selectedTab === SC.RELEASE_PLAN_TAB && _react2.default.createElement(_containers.ReleasePlanListContainer, { release: release }),
                selectedTab === SC.RELEASE_WARNINGS_TAB && _react2.default.createElement(_containers.WarningListContainer, { release: release }),
                selectedTab === SC.RELEASE_TASK_PLANS_TAB && _react2.default.createElement(_containers.TaskPlanListContainer, { release: release }),
                selectedTab === SC.RELEASE_REPORT_TAB && _react2.default.createElement(_containers.TaskReportListContainer, { release: release })
            );
        }
    }]);

    return ReleasePlanSection;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)(ReleasePlanSection);

/***/ }),

/***/ "eK4F":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

var _validation = __webpack_require__("4KT+");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ClientForm = function ClientForm(props) {
    var handleSubmit = props.handleSubmit,
        pristine = props.pristine,
        reset = props.reset,
        submitting = props.submitting;

    logger.debug(logger.CLIENT_FORM_RENDER, props);
    return _react2.default.createElement(
        'form',
        { onSubmit: handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-4' },
                _react2.default.createElement(_reduxForm.Field, { name: 'name', placeholder: "Name of client", component: _fields.renderText,
                    label: "Client Name:", validate: [_validation.required] }),
                _react2.default.createElement(
                    'button',
                    { type: 'submit', disabled: pristine || submitting, className: 'btn customBtn' },
                    'Submit'
                )
            )
        )
    );
};

ClientForm = (0, _reduxForm.reduxForm)({
    form: 'client'
})(ClientForm);

exports.default = ClientForm;

/***/ }),

/***/ "fpfg":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactEventTimeline = __webpack_require__("kCet");

var _momentTimezone = __webpack_require__("xNPZ");

var _momentTimezone2 = _interopRequireDefault(_momentTimezone);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _reactRouterDom = __webpack_require__("F8kA");

var _containers = __webpack_require__("GF1l");

var _reactBootstrapTable = __webpack_require__("feXg");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TaskReportDetailPage = function (_React$Component) {
    _inherits(TaskReportDetailPage, _React$Component);

    function TaskReportDetailPage(props) {
        _classCallCheck(this, TaskReportDetailPage);

        var _this = _possibleConstructorReturn(this, (TaskReportDetailPage.__proto__ || Object.getPrototypeOf(TaskReportDetailPage)).call(this, props));

        _this.commentListPageOptions = {
            sizePerPageList: [{
                text: '4', value: 4
            }],
            sizePerPage: 4 // which size per page you want to locate as default
        };

        _this.taskListPageOptions = {
            sizePerPageList: [{
                text: '4', value: 4
            }],
            sizePerPage: 4 // which size per page you want to locate as default
        };
        return _this;
    }

    _createClass(TaskReportDetailPage, [{
        key: 'formatDeveloperName',
        value: function formatDeveloperName(employee) {
            if (employee) return employee.name;
            return '';
        }
    }, {
        key: 'formatPlanDate',
        value: function formatPlanDate(date) {
            console.log('date found as ', date);
            return (0, _momentTimezone2.default)(date).utc().format('DD MMM,YY');
        }
    }, {
        key: 'formatReportStatus',
        value: function formatReportStatus(report) {

            if (report && report.status) return report.status;
            return '';
        }
    }, {
        key: 'formatTaskDescription',
        value: function formatTaskDescription(task) {

            if (task) return task.description;
            return '';
        }
    }, {
        key: 'assignedTasksRowClass',
        value: function assignedTasksRowClass(row) {
            return row._id.toString() == this.props.taskPlan._id.toString() ? 'td-row-completed' : 'td-row-unreported';
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                taskPlan = _props.taskPlan,
                release = _props.release,
                releasePlan = _props.releasePlan,
                taskPlans = _props.taskPlans;


            return _react2.default.createElement(
                _reactEventTimeline.Timeline,
                null,
                _react2.default.createElement(
                    'span',
                    null,
                    _react2.default.createElement(
                        'button',
                        { className: 'btn-link calArrow', style: { marginLeft: '-3%' },
                            onClick: function onClick() {
                                _this2.props.history.push("/app-home/release-plan");
                                _this2.props.ReportGoBack();
                            } },
                        _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Task Name :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    taskPlan && taskPlan.task && taskPlan.task.name ? taskPlan.task.name : ''
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Developer Name :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    taskPlan && taskPlan.employee && taskPlan.employee.name ? taskPlan.employee.name : ''
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Task Planning (' + taskPlan.employee.name + ')',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    _react2.default.createElement(
                        'div',
                        { className: 'DeveloperTasksTable' },
                        _react2.default.createElement(
                            _reactBootstrapTable.BootstrapTable,
                            {
                                data: taskPlans,
                                striped: true,
                                hover: true,
                                options: this.taskListPageOptions,
                                trClassName: this.assignedTasksRowClass.bind(this),
                                pagination: true,
                                height: "202px" },
                            _react2.default.createElement(_reactBootstrapTable.TableHeaderColumn, { columnTitle: true, isKey: true, dataField: '_id', hidden: true }),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: "15%", columnTitle: true, dataField: 'planningDate',
                                    dataFormat: this.formatPlanDate.bind(this) },
                                'Planned Date'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: "75%", columnTitle: true, tdStyle: { whiteSpace: 'normal' },
                                    dataField: 'description' },
                                'Tasks Description'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: "15%", columnTitle: true, dataField: 'report',
                                    dataFormat: this.formatReportStatus.bind(this) },
                                'Reported Status'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Comments :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    _react2.default.createElement(_containers.ReportingCommentFormContainer, null),
                    _react2.default.createElement(
                        'div',
                        { className: 'ReportingCommentTable' },
                        _react2.default.createElement(
                            _reactBootstrapTable.BootstrapTable,
                            { data: releasePlan.comments,
                                striped: true,
                                hover: true,
                                options: this.commentListPageOptions,
                                pagination: true,
                                height: "302px" },
                            _react2.default.createElement(_reactBootstrapTable.TableHeaderColumn, { columnTitle: true, isKey: true, dataField: '_id', hidden: true }),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: '12%', columnTitle: true, dataField: 'dateInIndia' },
                                'Date/Time'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: '38%', columnTitle: true, dataField: 'comment'
                                },
                                'Comment'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: '10%', columnTitle: true, dataField: 'commentType',
                                    dataSort: true },
                                'Comment Type'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: '10%', columnTitle: true, dataField: 'name' },
                                'Commented By'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Task Day Report Details :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    _react2.default.createElement(
                        'p',
                        { className: 'description' },
                        '  ',
                        taskPlan && taskPlan.report && taskPlan.report.description ? taskPlan.report.description : ''
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Task Day Requirement :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    _react2.default.createElement(
                        'p',
                        { className: 'description' },
                        '  ',
                        taskPlan && taskPlan.description ? taskPlan.description : ''
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Task Description :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    _react2.default.createElement(
                        'p',
                        { className: 'description' },
                        ' ',
                        releasePlan && releasePlan.task && releasePlan.task.description ? releasePlan.task.description : ''
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { style: { fontSize: '20px' },
                        title: 'Project Name :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }) },
                    release && release.project && release.project.name ? release.project.name : ''
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { style: { fontSize: '20px' },
                        title: 'Project Description :',
                        icon: _react2.default.createElement('i', {
                            className: 'glyphicon glyphicon-tasks calendar_icon' }) },
                    _react2.default.createElement(
                        'p',
                        { className: 'description' },
                        releasePlan && releasePlan.estimationDescription ? releasePlan.estimationDescription : ''
                    )
                )
            );
        }
    }]);

    return TaskReportDetailPage;
}(_react2.default.Component);

exports.default = (0, _reactRouterDom.withRouter)(TaskReportDetailPage);

/***/ }),

/***/ "fqEU":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ClientFormDialog = function ClientFormDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Add Client'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.ClientFormContainer, null)
        )
    );
};

exports.default = ClientFormDialog;

/***/ }),

/***/ "fy1X":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EstimationInitiateDialog = function EstimationInitiateDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Initiate Estimation'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.EstimationInitiateFormContainer, null)
        )
    );
};

exports.default = EstimationInitiateDialog;

/***/ }),

/***/ "g51p":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reduxForm = __webpack_require__("ao4a");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _validation = __webpack_require__("4KT+");

var _fields = __webpack_require__("NACj");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _reactRedux = __webpack_require__("RH2O");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EstimationFeatureForm = function EstimationFeatureForm(props) {
    logger.debug(logger.ESTIMATION_FEATURE_FORM_RENDER, props);
    var _id = props._id,
        reset = props.reset,
        pristine = props.pristine,
        submitting = props.submitting,
        handleSubmit = props.handleSubmit;

    return _react2.default.createElement(
        'form',
        { onSubmit: handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(_reduxForm.Field, { name: 'estimation._id', component: 'input', type: 'hidden' }),
            _react2.default.createElement(_reduxForm.Field, { name: '_id', component: 'input', type: 'hidden' }),
            _react2.default.createElement(
                'div',
                { className: 'col-md-6' },
                _react2.default.createElement(_reduxForm.Field, { name: 'name', component: _fields.renderText, label: "Feature Name:", validate: [_validation.required] })
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(_reduxForm.Field, { name: 'description', component: _fields.renderTextArea, label: 'Feature Description:',
                    validate: [_validation.required], rows: '10' })
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'row initiatEstimation' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-6 text-center' },
                _react2.default.createElement(
                    'button',
                    { type: 'submit', disabled: pristine || submitting,
                        className: 'btn customBtn' },
                    _id ? "Update" : "Submit"
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-6 text-center' },
                _react2.default.createElement(
                    'button',
                    { type: 'button', disabled: pristine || submitting, className: 'btn customBtn', onClick: reset },
                    'Reset'
                )
            )
        )
    );
};

EstimationFeatureForm = (0, _reduxForm.reduxForm)({
    form: 'estimation-feature'
})(EstimationFeatureForm);

var selector = (0, _reduxForm.formValueSelector)('estimation-feature');

EstimationFeatureForm = (0, _reactRedux.connect)(function (state) {
    var _id = selector(state, '_id');
    return {
        _id: _id
    };
})(EstimationFeatureForm);

exports.default = EstimationFeatureForm;

/***/ }),

/***/ "gG5n":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactRedux = __webpack_require__("RH2O");

var _ProjectList = __webpack_require__("PfOk");

var _ProjectList2 = _interopRequireDefault(_ProjectList);

var _reduxForm = __webpack_require__("ao4a");

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        showPorjectEditForm: function showPorjectEditForm(project) {
            dispatch(A.showComponent(COC.PROJECT_FORM_DIALOG)), dispatch((0, _reduxForm.initialize)('project', project));
        },
        showProjectCreationForm: function showProjectCreationForm() {
            dispatch(A.showComponent(COC.PROJECT_FORM_DIALOG));
        },
        deleteProject: function deleteProject(projectID) {
            return dispatch(A.deleteProjectOnServer(projectID)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success('Project Removed Successfully');
                } else {
                    _reactNotifications.NotificationManager.error('Project Not removed!');
                    throw new _reduxForm.SubmissionError({ projects: "Project Removal Failed" });
                }
            });
        }

    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        loggedInUser: state.user.loggedIn,
        projects: state.project.all
    };
};

var ProjectListContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_ProjectList2.default);

exports.default = ProjectListContainer;

/***/ }),

/***/ "gVp+":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactTagInput = __webpack_require__("U/RG");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RepositorySearch = function (_Component) {
    _inherits(RepositorySearch, _Component);

    function RepositorySearch(props) {
        _classCallCheck(this, RepositorySearch);

        var _this = _possibleConstructorReturn(this, (RepositorySearch.__proto__ || Object.getPrototypeOf(RepositorySearch)).call(this, props));

        _this.state = {
            selectedValue: SC.ALL,
            type: [SC.ALL, 'Feature', 'Task'],
            tags: [],
            suggestions: _this.props.estimation && _this.props.estimation.technologies ? _this.props.estimation.technologies.map(function (f) {
                return f.name;
            }) : [],
            searchText: ''
        };
        _this.props.estimation.technologies.map(function (f, i) {
            _this.state.tags.push({
                id: _this.state.tags.length + 1,
                text: f.name
            });
        });
        _this.handleDelete = _this.handleDelete.bind(_this);
        _this.handleAddition = _this.handleAddition.bind(_this);
        _this.handleDrag = _this.handleDrag.bind(_this);
        _this.handleSelectChange = _this.handleSelectChange.bind(_this);
        _this.searchText = _this.searchText.bind(_this);

        return _this;
    }

    _createClass(RepositorySearch, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.props.editView && this.props.getAllRepositoryData(this.props.estimation.technologies);
        }
    }, {
        key: 'handleSelectChange',
        value: function handleSelectChange(e) {
            this.setState({ selectedValue: e.target.value });
        }
    }, {
        key: 'handleDelete',
        value: function handleDelete(i) {
            var tags = this.state.tags;
            tags.splice(i, 1);
            this.setState({ tags: tags });
        }
    }, {
        key: 'handleAddition',
        value: function handleAddition(tag) {
            var tags = this.state.tags;
            if (!(tags.findIndex(function (f) {
                return f.text.toLowerCase() === tag.toLowerCase();
            }) != -1)) {
                tags.push({
                    id: tags.length + 1,
                    text: tag
                });
                this.setState({ tags: tags });
            }
        }
    }, {
        key: 'handleDrag',
        value: function handleDrag(tag, currPos, newPos) {
            var tags = this.state.tags;

            // mutate array
            tags.splice(currPos, 1);
            tags.splice(newPos, 0, tag);

            // re-render
            this.setState({ tags: tags });
        }
    }, {
        key: 'searchText',
        value: function searchText(_searchText) {
            this.setState({ searchText: _searchText.target.value });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _state = this.state,
                tags = _state.tags,
                suggestions = _state.suggestions;
            var _props = this.props,
                editView = _props.editView,
                repository = _props.repository;

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-12 RepositoryHeading RepositorySideHeight' },
                    _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        editView ? _react2.default.createElement(
                            'div',
                            { className: 'col-md-6 searchText' },
                            _react2.default.createElement('input', { type: 'text', className: 'form-control', placeholder: 'Search Features/Tasks',
                                onChange: this.searchText })
                        ) : _react2.default.createElement(
                            'div',
                            { className: 'col-md-6 searchText' },
                            _react2.default.createElement('input', { type: 'text', className: 'form-control', placeholder: 'Search Features/Tasks',
                                onChange: this.searchText, disabled: true })
                        ),
                        editView ? _react2.default.createElement(
                            'div',
                            { className: 'col-md-4 dropdownoptionRepo' },
                            _react2.default.createElement(
                                'select',
                                { className: 'form-control div-hover',

                                    onChange: this.handleSelectChange },
                                this.state.type.map(function (item, key) {
                                    return _react2.default.createElement(
                                        'option',
                                        { value: item, key: key },
                                        item
                                    );
                                })
                            )
                        ) : _react2.default.createElement(
                            'div',
                            { className: 'col-md-4 dropdownoptionRepo' },
                            _react2.default.createElement(
                                'select',
                                { className: 'form-control div-hover',

                                    onChange: this.handleSelectChange, disabled: true },
                                this.state.type.map(function (item, key) {
                                    return _react2.default.createElement(
                                        'option',
                                        { value: item, key: key },
                                        item
                                    );
                                })
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-2 repoArrow' },
                            _react2.default.createElement(
                                'h5',
                                null,
                                _react2.default.createElement('img', { key: 'he_requested_delete', className: editView ? "div-hover" : "div-disable",
                                    src: '/images/go_button.png',
                                    onClick: function onClick() {
                                        if (editView) _this2.props.fetchRepositoryBasedOnDiffCriteria(_this2.state.tags, _this2.state.selectedValue, _this2.state.searchText);
                                    } })
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-12' },
                    _react2.default.createElement(_reactTagInput.WithContext, {
                        classNames: {
                            tags: 'tagsClass',
                            tagInput: 'tagInputClass',
                            tagInputField: 'tagInputFieldClass',
                            selected: 'selectedClass',
                            tag: 'tagClass technologytagNew',
                            remove: 'removeClass',
                            suggestions: 'suggestionsClass',
                            activeSuggestion: 'activeSuggestionClass'
                        },
                        tags: tags,
                        suggestions: suggestions,
                        autofocus: false,
                        placeholder: 'Repository',
                        handleDelete: this.handleDelete,
                        handleAddition: this.handleAddition,
                        handleDrag: this.handleDrag })
                ),
                editView ? _react2.default.createElement(
                    'div',
                    { className: 'col-md-12 Repo-padding' },
                    Array.isArray(repository) && repository.map(function (f, i) {
                        return f.isFeature ? _react2.default.createElement(
                            'div',
                            { key: "feature" + f._id, className: 'repository repositoryFeature div-hover' },
                            _react2.default.createElement(
                                'div',
                                { className: 'RepositoryHeading repotext', key: i, onClick: function onClick() {
                                        _this2.props.showFeatureDetailPage(f);
                                    } },
                                _react2.default.createElement(
                                    'div',
                                    null,
                                    _react2.default.createElement('div', { className: 'repositoryFeatureLable repotext' }),
                                    _react2.default.createElement(
                                        'h5',
                                        null,
                                        'Feature: ',
                                        f.name
                                    ),
                                    _react2.default.createElement('i', {
                                        className: 'glyphicon glyphicon-option-vertical pull-right' }),
                                    _react2.default.createElement(
                                        'span',
                                        {
                                            className: 'pull-right' },
                                        f.estimatedHours ? '(' + task.estimatedHours + ' HRS)' : '(00 HRS)',
                                        ' '
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'RepositoryContent' },
                                _react2.default.createElement(
                                    'p',
                                    null,
                                    f.description
                                )
                            )
                        ) : _react2.default.createElement(
                            'div',
                            { key: "task" + f._id, className: 'repository repositoryTask' },
                            _react2.default.createElement(
                                'div',
                                { className: 'RepositoryHeading repotext div-hover', key: i, onClick: function onClick() {
                                        _this2.props.showTaskDetailPage(f);
                                    } },
                                _react2.default.createElement(
                                    'div',
                                    null,
                                    _react2.default.createElement('div', { className: 'repositoryTaskLable repotext' }),
                                    _react2.default.createElement(
                                        'h5',
                                        null,
                                        'Task: ',
                                        f.name
                                    ),
                                    _react2.default.createElement('i', {
                                        className: 'glyphicon glyphicon-option-vertical pull-right' }),
                                    _react2.default.createElement(
                                        'span',
                                        {
                                            className: 'pull-right' },
                                        f.estimatedHours ? '(' + task.estimatedHours + ' HRS)' : '(00 HRS)',
                                        ' '
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'RepositoryContent' },
                                _react2.default.createElement(
                                    'p',
                                    null,
                                    f.description
                                )
                            )
                        );
                    })
                ) : null
            );
        }
    }]);

    return RepositorySearch;
}(_react.Component);

exports.default = RepositorySearch;

/***/ }),

/***/ "gzcj":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactRouterDom = __webpack_require__("F8kA");

var _index = __webpack_require__("ZhKb");

var _clientMsg = __webpack_require__("jURI");

var CM = _interopRequireWildcard(_clientMsg);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TechnologyList = function (_Component) {
    _inherits(TechnologyList, _Component);

    function TechnologyList(props) {
        _classCallCheck(this, TechnologyList);

        var _this = _possibleConstructorReturn(this, (TechnologyList.__proto__ || Object.getPrototypeOf(TechnologyList)).call(this, props));

        _this.state = {
            showTechnologyDeletionDialog: false,
            addRow: null
        };

        return _this;
    }

    _createClass(TechnologyList, [{
        key: 'onClose',
        value: function onClose() {
            this.setState({ showTechnologyDeletionDialog: false });
        }
    }, {
        key: 'OkConfirmationForDeletingTechnology',
        value: function OkConfirmationForDeletingTechnology() {
            this.setState({ showTechnologyDeletionDialog: false });
            this.props.deleteTechnology(this.state.addRow);
        }
    }, {
        key: 'viewDeleteButton',
        value: function viewDeleteButton(cell, row, enumObject, rowIndex) {
            var _this2 = this;

            return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom', type: 'button', onClick: function onClick() {
                        _this2.setState({ showTechnologyDeletionDialog: true }), _this2.setState({ addRow: row._id });
                    } },
                _react2.default.createElement('i', { className: 'fa fa-trash' })
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            return _react2.default.createElement(
                'div',
                null,
                this.state.showTechnologyDeletionDialog && _react2.default.createElement(_index.ConfirmationDialog, { show: true, onConfirm: this.OkConfirmationForDeletingTechnology.bind(this),
                    title: CM.DELETE_TECHNOLOGY, onClose: this.onClose.bind(this),
                    body: CM.DELETE_TECHNOLOGY_BODY }),
                _react2.default.createElement(
                    'div',
                    { key: 'technology_list', className: 'clearfix' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-12 pad' },
                            _react2.default.createElement(
                                'div',
                                { className: 'col-md-12' },
                                _react2.default.createElement(
                                    'button',
                                    { className: 'btn customBtn',
                                        onClick: function onClick() {
                                            return _this3.props.showTechnologyAdditionForm();
                                        } },
                                    'Add Technology'
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'estimation' },
                                    _react2.default.createElement(
                                        _reactBootstrapTable.BootstrapTable,
                                        { options: this.options, data: this.props.technologies,
                                            striped: true,
                                            hover: true },
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { columnTitle: true, isKey: true, dataField: '_id',
                                                hidden: true },
                                            'ID'
                                        ),
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { columnTitle: true, dataField: 'name' },
                                            'Technology Name'
                                        ),
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { width: '30%', dataField: 'button',
                                                dataFormat: this.viewDeleteButton.bind(this) },
                                            'Delete'
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return TechnologyList;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)(TechnologyList);

/***/ }),

/***/ "hAWE":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _reduxForm = __webpack_require__("ao4a");

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

var _reactNotifications = __webpack_require__("B0Hd");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(reportData) {
            console.log("report task description ", reportData);

            dispatch(A.reportTaskToServer(reportData)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success('Task report submitted.');
                    dispatch(A.taskReported(json.data.taskPlan));
                    dispatch(A.hideComponent(COC.REPORT_TASK_DESCRIPTION_DIALOG));
                } else _reactNotifications.NotificationManager.error(json.message);
                return json;
            });
        }
    };
};

var selector = (0, _reduxForm.formValueSelector)('report-task-description');

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        taskName: selector(state, 'taskName'),
        status: selector(state, 'status')
    };
};

var ReportTaskDescriptionFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ReportTaskDescriptionForm);

exports.default = ReportTaskDescriptionFormContainer;

/***/ }),

/***/ "hB+B":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reduxForm = __webpack_require__("ao4a");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _validation = __webpack_require__("4KT+");

var _fields = __webpack_require__("NACj");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _reactRedux = __webpack_require__("RH2O");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EstimationInitiateForm = function EstimationInitiateForm(props) {
    logger.debug(logger.ESTIMATION_INITIATE_FORM_RENDER, props);
    var reset = props.reset,
        pristine = props.pristine,
        submitting = props.submitting,
        handleSubmit = props.handleSubmit;
    var _id = props._id,
        project = props.project,
        module = props.module,
        projects = props.projects,
        modules = props.modules,
        estimators = props.estimators,
        developmentTypes = props.developmentTypes,
        technologies = props.technologies;

    var projectModules = project && project._id ? modules.filter(function (m) {
        return m.project._id.toString() === project._id.toString();
    }) : modules;
    var moduleProjects = [];
    if (module && module._id && (!project || !project._id)) {
        var selectedModule = modules.find(function (m) {
            return m._id.toString() === module._id.toString();
        });
        moduleProjects = projects.filter(function (p) {
            return p._id.toString() === selectedModule.project._id.toString();
        });
    } else {
        moduleProjects = projects;
    }

    return _react2.default.createElement(
        'form',
        { onSubmit: handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-6' },
                _react2.default.createElement(_reduxForm.Field, { name: '_id', component: 'input', className: 'form-control', type: 'hidden' }),
                _react2.default.createElement(_reduxForm.Field, { name: 'project._id', component: _fields.renderSelect, label: "Project:", options: moduleProjects,
                    validate: [_validation.required] })
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-6' },
                _react2.default.createElement(_reduxForm.Field, { name: 'module._id', component: _fields.renderSelect, label: "Module:", options: projectModules,
                    displayField: "firstName" })
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-6' },
                _react2.default.createElement(_reduxForm.Field, { name: 'estimator._id', component: _fields.renderSelect, label: "Estimator:", options: estimators,
                    displayField: "firstName", validate: [_validation.required] })
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-6' },
                _react2.default.createElement(_reduxForm.Field, { name: 'developmentType._id', component: _fields.renderSelect, label: "Development Type:",
                    options: developmentTypes,
                    displayField: "name", validate: [_validation.required] })
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(_reduxForm.Field, { name: 'technologies', component: _fields.renderMultiSelect, label: 'technologies:',
                    data: technologies })
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(_reduxForm.Field, { name: 'description', component: _fields.renderTextArea, label: 'Description:', validate: [_validation.required],
                    rows: '10' })
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'row initiatEstimation' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-6 text-center' },
                _react2.default.createElement(
                    'button',
                    { type: 'submit', disabled: pristine || submitting,
                        className: 'btn customBtn' },
                    !_id && "Submit" || _id && "Update"
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-6 text-center' },
                _react2.default.createElement(
                    'button',
                    { type: 'button', disabled: pristine || submitting, className: 'btn customBtn', onClick: reset },
                    'Reset'
                )
            )
        )
    );
};

EstimationInitiateForm = (0, _reduxForm.reduxForm)({
    form: 'estimation-initiate'
})(EstimationInitiateForm);

var selector = (0, _reduxForm.formValueSelector)('estimation-initiate');

EstimationInitiateForm = (0, _reactRedux.connect)(function (state) {
    var _id = selector(state, '_id');
    var project = selector(state, 'project');
    var module = selector(state, 'module');
    return {
        _id: _id,
        project: project,
        module: module
    };
})(EstimationInitiateForm);

exports.default = EstimationInitiateForm;

/***/ }),

/***/ "hvVm":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactEventTimeline = __webpack_require__("kCet");

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _reactRouterDom = __webpack_require__("F8kA");

var _reactBootstrapTable = __webpack_require__("feXg");

var _momentTimezone = __webpack_require__("xNPZ");

var _momentTimezone2 = _interopRequireDefault(_momentTimezone);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CalendarTaskDetailPage = function (_React$Component) {
    _inherits(CalendarTaskDetailPage, _React$Component);

    function CalendarTaskDetailPage(props) {
        _classCallCheck(this, CalendarTaskDetailPage);

        var _this = _possibleConstructorReturn(this, (CalendarTaskDetailPage.__proto__ || Object.getPrototypeOf(CalendarTaskDetailPage)).call(this, props));

        _this.commentListPageOptions = {
            sizePerPageList: [{
                text: '4', value: 4
            }],
            sizePerPage: 4 // which size per page you want to locate as default
        };

        _this.taskListPageOptions = {
            sizePerPageList: [{
                text: '4', value: 4
            }],
            sizePerPage: 4 // which size per page you want to locate as default
        };
        return _this;
    }

    _createClass(CalendarTaskDetailPage, [{
        key: 'assignedTasksRowClass',
        value: function assignedTasksRowClass(row) {
            return row._id.toString() == this.props.taskPlan._id.toString() ? 'td-row-completed' : 'td-row-unreported';
        }
    }, {
        key: 'formatPlanDate',
        value: function formatPlanDate(date) {
            console.log('date found as ', date);
            return (0, _momentTimezone2.default)(date).utc().format('DD MMM,YY');
        }
    }, {
        key: 'formatPlannedHours',
        value: function formatPlannedHours(planning) {
            if (planning && planning.plannedHours) return planning.plannedHours;
            return '';
        }
    }, {
        key: 'formatReportedHours',
        value: function formatReportedHours(report) {
            if (report && report.reportedHours) return report.reportedHours;
            return '';
        }
    }, {
        key: 'formatReportStatus',
        value: function formatReportStatus(report) {

            if (report && report.status) return report.status;
            return SC.STATUS_UNREPORTED;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                taskPlan = _props.taskPlan,
                release = _props.release,
                releasePlan = _props.releasePlan,
                taskPlans = _props.taskPlans;

            return _react2.default.createElement(
                _reactEventTimeline.Timeline,
                null,
                _react2.default.createElement(
                    'span',
                    null,
                    _react2.default.createElement(
                        'button',
                        { className: 'btn-link calArrow', style: { marginLeft: '-3%' },
                            onClick: function onClick() {
                                _this2.props.history.push("/app-home/calendar");
                                _this2.props.calenderGoBack();
                            } },
                        _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Task Name :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    taskPlan && taskPlan.task && taskPlan.task.name ? taskPlan.task.name : ''
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Work Assigned to You for this Task:',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    _react2.default.createElement(
                        'div',
                        { className: 'DeveloperTasksTable' },
                        _react2.default.createElement(
                            _reactBootstrapTable.BootstrapTable,
                            {
                                data: taskPlans,
                                striped: true,
                                hover: true,
                                options: this.taskListPageOptions,
                                pagination: true,
                                trClassName: this.assignedTasksRowClass.bind(this),
                                height: "202px" },
                            _react2.default.createElement(_reactBootstrapTable.TableHeaderColumn, { columnTitle: true, isKey: true, dataField: '_id', hidden: true }),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: "15%", columnTitle: true, dataField: 'planningDate',
                                    dataFormat: this.formatPlanDate.bind(this) },
                                'Planned Date'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: "45%", columnTitle: true, dataField: 'description' },
                                'Tasks Description'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: "15%", columnTitle: true, dataField: 'planning',
                                    dataFormat: this.formatPlannedHours.bind(this) },
                                'Planned Hours'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: "15%", columnTitle: true, dataField: 'report',
                                    dataFormat: this.formatReportedHours.bind(this) },
                                'Reported Hours'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: "15%", columnTitle: true, dataField: 'report',
                                    dataFormat: this.formatReportStatus.bind(this) },
                                'Reported Status'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Comments :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    _react2.default.createElement(
                        'div',
                        { className: 'ReportingCommentTable' },
                        _react2.default.createElement(
                            _reactBootstrapTable.BootstrapTable,
                            { data: releasePlan.comments,
                                striped: true,
                                hover: true,
                                options: this.commentListPageOptions,
                                pagination: true,
                                height: "200px" },
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: '12%', columnTitle: true, dataField: 'dateInIndia' },
                                'Date/Time'
                            ),
                            _react2.default.createElement(_reactBootstrapTable.TableHeaderColumn, { columnTitle: true, isKey: true, dataField: '_id', hidden: true }),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: '38%', columnTitle: true, dataField: 'comment'
                                },
                                'Comment'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: '10%', columnTitle: true, dataField: 'commentType',
                                    dataSort: true },
                                'Comment Type'
                            ),
                            _react2.default.createElement(
                                _reactBootstrapTable.TableHeaderColumn,
                                { width: '10%', columnTitle: true, dataField: 'name' },
                                'Commented By'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Task Day Report Details :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    _react2.default.createElement(
                        'p',
                        { className: 'description' },
                        '  ',
                        taskPlan && taskPlan.report && taskPlan.report.description ? taskPlan.report.description : ''
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Task Day Requirement :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    _react2.default.createElement(
                        'p',
                        { className: 'description' },
                        '  ',
                        taskPlan && taskPlan.description ? taskPlan.description : ''
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Task Description :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }),
                        style: { fontSize: '20px' } },
                    _react2.default.createElement(
                        'p',
                        { className: 'description' },
                        ' ',
                        releasePlan && releasePlan.task && releasePlan.task.description ? releasePlan.task.description : ''
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { style: { fontSize: '20px' },
                        title: 'Project Name :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }) },
                    release && release.project && release.project.name ? release.project.name : ''
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { style: { fontSize: '20px' },
                        title: 'Project Description :',
                        icon: _react2.default.createElement('i', {
                            className: 'glyphicon glyphicon-tasks calendar_icon' }) },
                    _react2.default.createElement(
                        'p',
                        { className: 'description' },
                        releasePlan && releasePlan.estimationDescription ? releasePlan.estimationDescription : ''
                    )
                )
            );
        }
    }]);

    return CalendarTaskDetailPage;
}(_react2.default.Component);

exports.default = (0, _reactRouterDom.withRouter)(CalendarTaskDetailPage);

/***/ }),

/***/ "i4M4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reduxForm = __webpack_require__("ao4a");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _validation = __webpack_require__("4KT+");

var _fields = __webpack_require__("NACj");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LoginForm = function LoginForm(props) {
    var handleSubmit = props.handleSubmit,
        errorMsg = props.errorMsg;

    return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
            'div',
            { className: 'col-md-12 loginsection' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-5 login_img ' },
                _react2.default.createElement(
                    'h1',
                    null,
                    'WELCOME TO'
                ),
                _react2.default.createElement(
                    'p',
                    null,
                    'Lorem ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s.'
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-7 loginform' },
                _react2.default.createElement(
                    'header',
                    null,
                    'LOGIN TO ',
                    _react2.default.createElement(
                        'span',
                        null,
                        _react2.default.createElement(
                            'b',
                            null,
                            'NNXT'
                        )
                    ),
                    ' DASHBOARD'
                ),
                _react2.default.createElement(
                    'p',
                    { className: 'text-center' },
                    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex risus, pharetra et efficitur non, tristique ac elit.'
                ),
                _react2.default.createElement(
                    _reduxForm.Form,
                    { onSubmit: handleSubmit },
                    errorMsg && _react2.default.createElement(
                        'div',
                        { style: { width: "100%", textAlign: "center" } },
                        _react2.default.createElement(
                            'span',
                            { className: 'validation-error',
                                style: { fontSize: '20px' } },
                            errorMsg
                        )
                    ),
                    _react2.default.createElement(_reduxForm.Field, { name: 'username', component: _fields.renderLoginField, label: 'Username :',
                        validate: [_validation.required, _validation.email] }),
                    _react2.default.createElement(_reduxForm.Field, { style: { marginBottom: "7px" }, name: 'password', component: _fields.renderLoginField, type: 'password',
                        label: 'Password :', validate: [_validation.required] }),
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(
                            'span',
                            { className: 'pull-right' },
                            ' ',
                            _react2.default.createElement(
                                'a',
                                { href: '#' },
                                _react2.default.createElement(
                                    'u',
                                    null,
                                    'Forgot password ?'
                                )
                            ),
                            _react2.default.createElement('br', null)
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(
                            'button',
                            { type: 'submit', className: 'btn  login-btn' },
                            'Submit'
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(
                            'label',
                            { className: 'signupoption' },
                            'Do you have an account ? ',
                            _react2.default.createElement(
                                'a',
                                { href: '#' },
                                _react2.default.createElement(
                                    'u',
                                    null,
                                    'Sign Up'
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'footer',
                        { className: 'text-center' },
                        '  \xA9 Copyright all rights reserved. ',
                        _react2.default.createElement(
                            'strong',
                            null,
                            ' Aripra Infotech Pvt Ltd'
                        )
                    )
                )
            )
        )
    );
};

LoginForm = (0, _reduxForm.reduxForm)({
    form: "LoginForm"
})(LoginForm);

exports.default = LoginForm;

/***/ }),

/***/ "i7VK":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var _appAction = __webpack_require__("rp4x");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

var _reactNotifications = __webpack_require__("B0Hd");

var _reduxForm = __webpack_require__("ao4a");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var selector = (0, _reduxForm.formValueSelector)('role');
var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {

        onSubmit: function onSubmit(values) {
            if (!values._id) {
                return dispatch((0, _actions.addUserOnServer)(values)).then(function (response) {
                    if (response.success) {
                        dispatch((0, _appAction.showComponentHideOthers)(COC.ADMIN_USER_LIST));
                        _reactNotifications.NotificationManager.success('User Added Successfully');
                    } else {
                        _reactNotifications.NotificationManager.error('User Added Failed');
                        if (json.code && json.code == EC.ALREADY_EXISTS) {
                            // role already exists throw SubmissionError to show appropriate error
                            throw new _reduxForm.SubmissionError({ email: 'Email already exists' });
                        }
                        throw new _reduxForm.SubmissionError({ users: "User Already Exists" });
                    }
                });
            } else {
                // Role is edited
                return dispatch((0, _actions.editUserOnServer)(values)).then(function (response) {
                    if (response.success) {
                        dispatch((0, _appAction.showComponentHideOthers)(COC.ADMIN_USER_LIST));
                        _reactNotifications.NotificationManager.success('User Updated Successfully');
                    } else {
                        _reactNotifications.NotificationManager.error('User Updated Failed');
                        if (json.code && json.code == EC.EMAIL_ALREADY_USED) {
                            throw new _reduxForm.SubmissionError({ email: 'Email already exists' });
                            // role already exists throw SubmissionError to show appropriate error
                        } else if (json.code && json.code == EC.PASSWORD_NOT_MATCHED) {
                            throw new _reduxForm.SubmissionError({ password: 'Password not matched' });
                        }
                        throw new _reduxForm.SubmissionError({ users: "User edit failed!" });
                    }
                });
            }
        },
        showAdminUserList: function showAdminUserList() {
            return dispatch((0, _appAction.showComponentHideOthers)(ADMIN_USER_LIST));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        roles: state.role.all

        // roles:state.users.roles
    };
};

var UserFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.AdminUserForm);

exports.default = UserFormContainer;

/***/ }),

/***/ "iUn1":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var technologyFormDialog = function technologyFormDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Add Technology'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.TechnologyFormContainer, null)
        )
    );
};

exports.default = technologyFormDialog;

/***/ }),

/***/ "iiRE":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TabSection = function TabSection(props) {
    return _react2.default.createElement(
        "section",
        { className: "clearfix tab-parent" },
        _react2.default.Children.map(props.children, function (child, i) {
            // Only return that element that is part of visible component
            if (props.visibleComponents.findIndex(function (name) {
                return name === child.props.name;
            }) != -1) return child;else return null;
        })
    );
};

exports.default = TabSection;

/***/ }),

/***/ "j+Rq":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

var _validation = __webpack_require__("4KT+");

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactWidgetsMoment = __webpack_require__("Utwc");

var _reactWidgetsMoment2 = _interopRequireDefault(_reactWidgetsMoment);

var _reactRedux = __webpack_require__("RH2O");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_moment2.default.locale('en');
(0, _reactWidgetsMoment2.default)();
var UpdateReleaseDatesForm = function UpdateReleaseDatesForm(props) {
    var handleSubmit = props.handleSubmit,
        submitting = props.submitting,
        pristine = props.pristine,
        reset = props.reset,
        release = props.release,
        change = props.change,
        updatedDevStartDate = props.updatedDevStartDate,
        updatedDevEndDate = props.updatedDevEndDate,
        updatedClientReleaseDate = props.updatedClientReleaseDate;


    var startMoment = (0, _moment2.default)(updatedDevStartDate, SC.DATE_FORMAT);
    var endMoment = (0, _moment2.default)(updatedDevEndDate, SC.DATE_FORMAT);
    var clientMoment = (0, _moment2.default)(updatedClientReleaseDate, SC.DATE_FORMAT);

    var iterations = release.iterations.filter(function (i) {
        return i.type === SC.ITERATION_TYPE_ESTIMATED || i.type === SC.ITERATION_TYPE_PLANNED;
    });

    return _react2.default.createElement(
        'form',
        { onSubmit: handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'col-md-8' },
            _react2.default.createElement(_reduxForm.Field, { name: '_id', component: 'input', type: 'hidden' }),
            _react2.default.createElement(
                'div',
                { className: 'col-md-10 col-md-offset-1' },
                _react2.default.createElement(_reduxForm.Field, { name: 'iteration._id', component: _fields.renderSelect, label: "Iteration :", options: iterations,
                    validate: [_validation.required], onChange: function onChange(event, newValue, oldValue) {
                        var iteration = release.iterations.find(function (i) {
                            return i._id.toString() == newValue;
                        });
                        var devStartDate = (0, _moment2.default)(iteration.devStartDate).format(SC.DATE_FORMAT);
                        var devEndDate = (0, _moment2.default)(iteration.devEndDate).format(SC.DATE_FORMAT);
                        var clientReleaseDate = (0, _moment2.default)(iteration.clientReleaseDate).format(SC.DATE_FORMAT);
                        change("updatedDevStartDate", devStartDate);
                        change("updatedDevEndDate", devEndDate);
                        change("updatedClientReleaseDate", clientReleaseDate);
                    } })
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-10 col-md-offset-1' },
                _react2.default.createElement(_reduxForm.Field, { name: 'updatedDevStartDate',
                    placeholder: "Date",
                    component: _fields.renderDateTimePickerString,
                    showTime: false,
                    label: "Dev Start Date :",
                    max: endMoment.toDate(),
                    validate: [_validation.required]
                })
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-10 col-md-offset-1' },
                _react2.default.createElement(_reduxForm.Field, { name: 'updatedDevEndDate',
                    placeholder: "Date",
                    component: _fields.renderDateTimePickerString,
                    showTime: false,
                    min: startMoment.toDate(),
                    max: clientMoment.toDate(),
                    label: "Dev Release Date:",
                    validate: [_validation.required]
                })
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-10 col-md-offset-1' },
                _react2.default.createElement(_reduxForm.Field, { name: 'updatedClientReleaseDate',
                    placeholder: "Date",
                    component: _fields.renderDateTimePickerString,
                    showTime: false,
                    label: "Client Release Date :",
                    validate: [_validation.required],
                    min: endMoment.toDate(),
                    dropUp: true
                })
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'col-md-12' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-4' },
                _react2.default.createElement(
                    'button',
                    { type: 'submit', className: 'btn customBtn', disabled: submitting || pristine },
                    'Update Release'
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-4' },
                _react2.default.createElement(
                    'button',
                    { type: 'button', className: 'btn customBtn', disabled: submitting || pristine, onClick: reset },
                    'Reset'
                )
            )
        )
    );
};

UpdateReleaseDatesForm = (0, _reduxForm.reduxForm)({
    form: 'update-release-dates'
})(UpdateReleaseDatesForm);

var selector = (0, _reduxForm.formValueSelector)('update-release-dates');

UpdateReleaseDatesForm = (0, _reactRedux.connect)(function (state) {
    var _selector = selector(state, 'updatedDevStartDate', 'updatedDevEndDate', 'updatedClientReleaseDate'),
        updatedDevStartDate = _selector.updatedDevStartDate,
        updatedDevEndDate = _selector.updatedDevEndDate,
        updatedClientReleaseDate = _selector.updatedClientReleaseDate;

    return {
        updatedDevStartDate: updatedDevStartDate,
        updatedDevEndDate: updatedDevEndDate,
        updatedClientReleaseDate: updatedClientReleaseDate
    };
})(UpdateReleaseDatesForm);

exports.default = UpdateReleaseDatesForm;

/***/ }),

/***/ "jBCK":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _components = __webpack_require__("ZhKb");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactRouterDom = __webpack_require__("F8kA");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        taskPlanSelected: function taskPlanSelected(taskPlan) {
            return dispatch(A.getDataForReportTaskDetailPageFromServer(taskPlan._id));
        },
        showTaskDetailPage: function showTaskDetailPage() {
            dispatch(A.showComponentHideOthers(COC.TASK_REPORT_DETAIL_PAGE));
        },
        getAllTaskReports: function getAllTaskReports(release) {
            //dispatch(A.getAllTaskPlansOfThisReleaseFromServer(release._id))
            dispatch(A.getTaskReportsReleasePlanPage(release._id));
        }
    };
};

var mapStateToProps = function mapStateToProps(state) {
    return {
        reports: state.report.releasesReports
    };
};

var TaskReportListContainer = (0, _reactRouterDom.withRouter)((0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.TaskReportList));

exports.default = TaskReportListContainer;

/***/ }),

/***/ "jE2R":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _components = __webpack_require__("ZhKb");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactRouterDom = __webpack_require__("F8kA");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _reduxForm = __webpack_require__("ao4a");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        releasePlanSelected: function releasePlanSelected(releasePlan, roles) {
            dispatch(A.getReleasePlanDetailsFromServer(releasePlan._id)).then(function (json) {
                if (json.success) {
                    dispatch(A.showComponentHideOthers(COC.RELEASE_TASK_PLANNING_PAGE));
                }
                return json;
            });
            dispatch(A.getAllTaskPlannedFromServer(releasePlan._id));
            if (roles.indexOf(SC.ROLE_MANAGER) > -1) {
                // get all developers from user list when user role in this release is manager
                dispatch(A.getAllDeveloperFromServer());
            } else if (roles.indexOf(SC.ROLE_LEADER) > -1) {
                // get project developers from user list when user role in this release is leader
                dispatch(A.getReleaseDevelopersFromServer(releasePlan._id));
            }
        },

        changeReleaseFlag: function changeReleaseFlag(release, status, flag) {
            return dispatch(A.getReleasePlansFromServer(release._id, status, flag));
        },
        changeReleaseStatus: function changeReleaseStatus(release, status, flag) {
            return dispatch(A.getReleasePlansFromServer(release._id, status, flag));
        },
        showAddToReleasePlanForm: function showAddToReleasePlanForm(release) {
            dispatch(A.showComponent(COC.RELEASE_PLAN_ADD_TO_RELEASE_FORM_DIALOG));
            // initialize
            dispatch((0, _reduxForm.initialize)('release-plan-add-to-release', {
                release: {
                    _id: release._id
                },
                iteration_type: SC.ITERATION_TYPE_PLANNED,
                type: SC.TYPE_DEVELOPMENT
            }));
        },
        getAllReleasePlans: function getAllReleasePlans(release) {
            return dispatch(A.getReleasePlansFromServer(release._id, SC.ALL, SC.ALL));
        }
    };
};

var mapStateToProps = function mapStateToProps(state) {
    return {
        release: state.release.selectedRelease,
        releasePlans: state.release.releasePlans
    };
};

var ReleasePlanListContainer = (0, _reactRouterDom.withRouter)((0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ReleasePlanList));

exports.default = ReleasePlanListContainer;

/***/ }),

/***/ "jURI":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
//title String of dialog box
var DELETE_TASK = exports.DELETE_TASK = 'Delete Task';
var DELETE_FEATURE = exports.DELETE_FEATURE = 'Delete feature';
var DELETE_PROJECT = exports.DELETE_PROJECT = 'Delete project';
var DELETE_MODULE = exports.DELETE_MODULE = 'Delete module';
var DELETE_TECHNOLOGY = exports.DELETE_TECHNOLOGY = 'Delete technology';
var DELETE_CLIENT = exports.DELETE_CLIENT = 'Delete client';

//body String of dialog box
var DELETE_TASK_BODY = exports.DELETE_TASK_BODY = 'You are about to delete Task. Are you sure you want to delete this Task,Please confirm !';
var DELETE_FEATURE_BODY = exports.DELETE_FEATURE_BODY = 'You are about to delete feature. Are you sure you want to delete this feature,Please confirm !';
var DELETE_PROJECT_BODY = exports.DELETE_PROJECT_BODY = 'You are about to delete project. Are you sure you want to delete this project,Please confirm !';
var DELETE_MODULE_BODY = exports.DELETE_MODULE_BODY = 'You are about to delete module. Are you sure you want to delete this module,Please confirm !';
var DELETE_TECHNOLOGY_BODY = exports.DELETE_TECHNOLOGY_BODY = 'You are about to delete technology. Are you sure you want to delete this technology,Please confirm !';
var DELETE_CLIENT_BODY = exports.DELETE_CLIENT_BODY = 'You are about to delete client. Are you sure you want to delete this client,Please confirm !';

/***/ }),

/***/ "jaAk":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__("RH2O");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ContentSection = function ContentSection(props) {
    return _react2.default.createElement(
        'section',
        { className: 'content-section' },
        _react2.default.Children.map(props.children, function (child, i) {
            if (props.visibleComponents.findIndex(function (name) {
                return name === child.props.name;
            }) != -1) return child;else return null;
        })
    );
};

exports.default = (0, _reactRedux.connect)(function (state) {
    return {
        visibleComponents: state.app.visibleComponents
    };
})(ContentSection);

/***/ }),

/***/ "kx09":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EstimationProjectAwardDialog = function EstimationProjectAwardDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Create Release'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.EstimationProjectAwardFormContainer, null)
        )
    );
};

exports.default = EstimationProjectAwardDialog;

/***/ }),

/***/ "lD5m":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        addTask: function addTask(EstimationId, taskId) {
            return dispatch(A.addTaskFromRepositoryToEstimationOnServer(EstimationId, taskId)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Task Added");
                    // hide dialog
                    dispatch(A.hideComponent(COC.REPOSITORY_TASK_DETAIL_DIALOG));
                } else {
                    if (json.code == EC.ALREADY_EXISTS) _reactNotifications.NotificationManager.error("Task Already Added ");else _reactNotifications.NotificationManager.error("Task Addition Failed");
                }
            });
        },
        copyTask: function copyTask(EstimationId, taskId) {
            return dispatch(A.copyTaskFromRepositoryToEstimationOnServer(EstimationId, taskId)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Task Copied");
                    // hide dialog
                    dispatch(A.hideComponent(COC.REPOSITORY_TASK_DETAIL_DIALOG));
                } else _reactNotifications.NotificationManager.error("Task Copy Failed");
            });
        }
    };
};

var mapStateToProps = function mapStateToProps(state) {
    return {
        task: state.repository.task,
        estimationId: state.estimation.selected && state.estimation.selected._id ? state.estimation.selected._id : undefined
    };
};

var RepositoryTaskDetailPageContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.RepositoryTaskDetailPage);

exports.default = RepositoryTaskDetailPageContainer;

/***/ }),

/***/ "lVb/":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var initialState = {
    all: [],
    task: {},
    feature: {}
};

var repositoryReducer = function repositoryReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case AC.SELECT_REPOSITORY:
            return Object.assign({}, state, { all: action.repository });

        case AC.SELECT_TASK_FROM_REPOSITORY:
            return Object.assign({}, state, { task: action.task });

        case AC.SELECT_FEATURE_FROM_REPOSITORY:
            return Object.assign({}, state, { feature: action.feature });

        default:
            return state;
    }
};

exports.default = repositoryReducer;

/***/ }),

/***/ "lnd2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _reduxForm = __webpack_require__("ao4a");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(formValues) {
            dispatch(A.addFilteredEstimation(formValues));
            dispatch(A.hideComponent(COC.ESTIMATION_FILTER_DIALOG));
        },
        selectAllFilter: function selectAllFilter() {
            //dispatch(A.hideComponent(COC.ESTIMATION_FILTER_DIALOG))
            //dispatch(A.selectAllFilterFromEstimation())
            dispatch((0, _reduxForm.initialize)('Estimation-filter', {
                changedByNegotiator: true,
                changedByEstimator: true,
                permissionRequested: true,
                addedFromRepository: true,
                addedByNegotiator: true,
                addedByEstimator: true,
                hasError: true
            }));
        },
        clearFilter: function clearFilter() {
            //dispatch(A.hideComponent(COC.ESTIMATION_FILTER_DIALOG))
            //dispatch(A.clearFilterFromEstimation())
            dispatch((0, _reduxForm.initialize)('Estimation-filter', {
                changedByNegotiator: false,
                changedByEstimator: false,
                permissionRequested: false,
                addedFromRepository: false,
                addedByNegotiator: false,
                addedByEstimator: false,
                hasError: false
            }));
        },
        newChangedFilter: function newChangedFilter(status) {

            if (status == SC.STATUS_ESTIMATION_REQUESTED || status == SC.STATUS_CHANGE_REQUESTED) {
                // Estimation is editable for estimator
                dispatch((0, _reduxForm.initialize)('Estimation-filter', {
                    changedByNegotiator: true,
                    changedByEstimator: false,
                    permissionRequested: false,
                    addedFromRepository: false,
                    addedByNegotiator: true,
                    addedByEstimator: false,
                    hasError: false
                }));
            } else {
                // Estimation is editable for negotiator
                dispatch((0, _reduxForm.initialize)('Estimation-filter', {
                    changedByNegotiator: false,
                    changedByEstimator: true,
                    permissionRequested: true,
                    addedFromRepository: false,
                    addedByNegotiator: false,
                    addedByEstimator: true,
                    hasError: false
                }));
            }
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        estimation: state.estimation.selected,
        initialValues: {
            "changedByNegotiator": state.estimation.filter.changedByNegotiator,
            "changedByEstimator": state.estimation.filter.changedByEstimator,
            "permissionRequested": state.estimation.filter.permissionRequested,
            "addedFromRepository": state.estimation.filter.addedFromRepository,
            "addedByNegotiator": state.estimation.filter.addedByNegotiator,
            "addedByEstimator": state.estimation.filter.addedByEstimator,
            "hasError": state.estimation.filter.hasError

        }

    };
};

var EstimationFilterFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.EstimationFilterForm);

exports.default = EstimationFilterFormContainer;

/***/ }),

/***/ "m0nP":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__("F8kA");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Header = function (_Component) {
    _inherits(Header, _Component);

    function Header() {
        _classCallCheck(this, Header);

        return _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).apply(this, arguments));
    }

    _createClass(Header, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'nav',
                { key: 'headerNav', className: 'navbar navbar-default' },
                _react2.default.createElement(
                    'div',
                    { className: 'container' },
                    _react2.default.createElement(
                        'div',
                        { className: 'navbar-header' },
                        _react2.default.createElement(_reactRouterDom.Link, { className: 'navbar-brand', to: '/' }),
                        _react2.default.createElement(
                            'button',
                            { type: 'button', className: 'navbar-toggle collapsed', 'data-toggle': 'collapse',
                                'aria-expanded': 'false' },
                            _react2.default.createElement(
                                'span',
                                {
                                    className: 'sr-only' },
                                'Toggle navigation'
                            ),
                            ' ',
                            _react2.default.createElement('span', { className: 'icon-bar' }),
                            ' ',
                            _react2.default.createElement('span', {
                                className: 'icon-bar' }),
                            ' ',
                            _react2.default.createElement('span', { className: 'icon-bar' })
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'collapse navbar-collapse', id: 'bs-example-navbar-collapse-1' },
                        _react2.default.createElement(
                            'div',
                            { className: 'navbar-right' },
                            this.props.loggedInUser ? _react2.default.createElement(
                                'span',
                                { className: 'pull-right user-icon' },
                                _react2.default.createElement(
                                    'div',
                                    { className: 'dropdown', key: '1' },
                                    _react2.default.createElement(
                                        'span',
                                        { className: 'dropdown-toggle hoverTooltip span-hover',
                                            type: 'button', 'data-toggle': 'dropdown' },
                                        _react2.default.createElement(
                                            'i',
                                            { className: 'fa fa-user' },
                                            _react2.default.createElement('i', {
                                                className: 'fa fa-caret-down' })
                                        )
                                    ),
                                    _react2.default.createElement(
                                        'ul',
                                        { className: 'dropdown-menu' },
                                        _react2.default.createElement(
                                            'li',
                                            { key: 12 },
                                            _react2.default.createElement(
                                                'a',
                                                { href: '/logout' },
                                                _react2.default.createElement('i', {
                                                    className: 'fa fa-sign-out' }),
                                                ' Logout'
                                            )
                                        )
                                    )
                                )
                            ) : null
                        )
                    )
                )
            );
        }
    }]);

    return Header;
}(_react.Component);

exports.default = Header;

/***/ }),

/***/ "m7GT":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.deleteModuleOnServer = exports.editModuleOnServer = exports.addModuleOnServer = exports.getAllModulesFromServer = exports.deleteModule = exports.editModule = exports.addModule = exports.addModules = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

var _projectAction = __webpack_require__("E0gF");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var addModules = exports.addModules = function addModules(modules) {
    return {
        type: AC.ADD_MODULES,
        modules: modules
    };
};

var addModule = exports.addModule = function addModule(module) {
    return {
        type: AC.ADD_MODULE,
        module: module
    };
};

var editModule = exports.editModule = function editModule(module) {
    return {
        type: AC.EDIT_MODULE,
        module: module
    };
};

var deleteModule = exports.deleteModule = function deleteModule(moduleID) {
    return {
        type: AC.DELETE_MODULE,
        moduleID: moduleID
    };
};

var getAllModulesFromServer = exports.getAllModulesFromServer = function getAllModulesFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/modules', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addModules(json.data));
            }
        });
    };
};

var addModuleOnServer = exports.addModuleOnServer = function addModuleOnServer(formInput) {
    return function (dispatch, getState) {
        return fetch('/api/modules', {
            method: "post",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addModule(json.data));
            }
            return json;
        });
    };
};

var editModuleOnServer = exports.editModuleOnServer = function editModuleOnServer(module) {
    return function (dispatch, getState) {
        return fetch('/api/modules', {
            method: "put",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(module)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(editModule(json.data));
            }
            return json;
        });
    };
};

var deleteModuleOnServer = exports.deleteModuleOnServer = function deleteModuleOnServer(moduleID) {
    return function (dispatch, getState) {
        return fetch('/api/modules/' + moduleID, {
            method: "delete",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(deleteModule(moduleID));
            }
            return json;
        });
    };
};

/***/ }),

/***/ "mDHt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__("O27J");

var _AppRouterContainer = __webpack_require__("w+9g");

var _AppRouterContainer2 = _interopRequireDefault(_AppRouterContainer);

var _reactRouterDom = __webpack_require__("F8kA");

var _reactRedux = __webpack_require__("RH2O");

var _redux = __webpack_require__("2KeS");

var _reduxThunk = __webpack_require__("4ufr");

var _reduxThunk2 = _interopRequireDefault(_reduxThunk);

var _reduxLogger = __webpack_require__("oSVy");

var _reduxLogger2 = _interopRequireDefault(_reduxLogger);

var _reducers = __webpack_require__("J7fb");

var _reducers2 = _interopRequireDefault(_reducers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var store = (0, _redux.createStore)(_reducers2.default, __PRELOADED_STATE__, (0, _redux.applyMiddleware)(_reduxThunk2.default, _reduxLogger2.default));
//let store = createStore(reducers, __PRELOADED_STATE__, applyMiddleware(thunkMiddleware))
var App = function App(props) {
    return _react2.default.createElement(
        _reactRedux.Provider,
        { store: store },
        _react2.default.createElement(
            _reactRouterDom.BrowserRouter,
            null,
            _react2.default.createElement(_AppRouterContainer2.default, null)
        )
    );
};

window.onload = function () {
    (0, _reactDom.hydrate)(_react2.default.createElement(App, null), document.getElementById('root'));
};

/***/ }),

/***/ "mE8W":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

var _validation = __webpack_require__("4KT+");

var _reactRedux = __webpack_require__("RH2O");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EmployeeSettingForm = function (_Component) {
    _inherits(EmployeeSettingForm, _Component);

    function EmployeeSettingForm(props) {
        _classCallCheck(this, EmployeeSettingForm);

        return _possibleConstructorReturn(this, (EmployeeSettingForm.__proto__ || Object.getPrototypeOf(EmployeeSettingForm)).call(this, props));
    }

    _createClass(EmployeeSettingForm, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                handleSubmit = _props.handleSubmit,
                pristine = _props.pristine,
                submitting = _props.submitting,
                _id = _props._id;

            return _react2.default.createElement(
                'form',
                { key: 'EmployeeSettingForm', onSubmit: this.props.handleSubmit },
                _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-4' },
                        _react2.default.createElement(_reduxForm.Field, { name: '_id', component: 'input', type: 'hidden' }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'minPlannedHours', label: 'Min Planned Hours:', component: _fields.renderField,
                            validate: [_validation.required, _validation.number] }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'maxPlannedHours', label: 'Max Planned Hours:', component: _fields.renderField,
                            validate: [_validation.required, _validation.number] }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'free', label: 'Free:', component: _fields.renderField, validate: [_validation.required] }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'relativelyFree', label: 'Relatively Free:', component: _fields.renderField,
                            validate: [_validation.required, _validation.number] }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'someWhatBusy', label: 'Somewhat Busy:', component: _fields.renderField,
                            validate: [_validation.required, _validation.number] }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'busy', label: 'Busy:', component: _fields.renderField, validate: [_validation.required, _validation.number] }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'superBusy', label: 'Super Busy:', component: _fields.renderField,
                            validate: [_validation.required, _validation.number] }),
                        _react2.default.createElement(
                            'button',
                            { type: 'submit',
                                disabled: pristine || submitting,
                                className: 'btn btn-submit' },
                            !this.props._id && "Create" || this.props._id && "Update"
                        )
                    )
                )
            );
        }
    }]);

    return EmployeeSettingForm;
}(_react.Component);

EmployeeSettingForm = (0, _reduxForm.reduxForm)({
    form: 'employee-setting'
})(EmployeeSettingForm);

var selector = (0, _reduxForm.formValueSelector)('employee-setting');

EmployeeSettingForm = (0, _reactRedux.connect)(function (state) {
    var _id = selector(state, '_id');
    return { _id: _id };
})(EmployeeSettingForm);

exports.default = EmployeeSettingForm;

/***/ }),

/***/ "mPMg":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LeaveRejectDialog = function LeaveRejectDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Leave Reject'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(
                'h4',
                null,
                'Are you sure you want to ',
                _react2.default.createElement(
                    'b',
                    null,
                    ' Reject '
                ),
                'this leave. Please confirm!'
            ),
            _react2.default.createElement(_containers.LeaveApprovalReasonFormContainer, { isApproved: false })
        )
    );
};

exports.default = LeaveRejectDialog;

/***/ }),

/***/ "mVPa":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _components = __webpack_require__("ZhKb");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactRouterDom = __webpack_require__("F8kA");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        fetchWarningOnFlags: function fetchWarningOnFlags(warningType, release) {
            return dispatch(A.getAllWarningsOfThisReleaseFromServer(warningType, release._id));
        },
        getAllWarnings: function getAllWarnings(release) {
            return dispatch(A.getAllWarningsOfThisReleaseFromServer(SC.ALL, release._id));
        }
    };
};

var mapStateToProps = function mapStateToProps(state) {
    return {
        warnings: state.warning.all,
        release: state.release.selectedRelease
    };
};

var WarningListContainer = (0, _reactRouterDom.withRouter)((0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.WarningList));

exports.default = WarningListContainer;

/***/ }),

/***/ "mdcJ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reduxForm = __webpack_require__("ao4a");

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        editUser: function editUser(user) {
            dispatch(A.showComponentHideOthers(COC.USER_FORM)), dispatch((0, _reduxForm.initialize)('user', user));
        },
        deleteUser: function deleteUser(userId) {
            return dispatch(A.deleteUserOnServer(userId)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success('User Deleted Successfully');
                } else {
                    _reactNotifications.NotificationManager.error('User Not Deleted!');
                    throw new _reduxForm.SubmissionError({ users: "User Deletion Failed" });
                }
            });
        },
        showUserForm: function showUserForm() {
            return dispatch(A.showComponentHideOthers(COC.USER_FORM));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        loggedInUser: state.user.loggedIn,
        users: state.user.all
    };
};

var UserListContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.UserList);

exports.default = UserListContainer;

/***/ }),

/***/ "mrDx":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

var _reduxForm = __webpack_require__("ao4a");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            if (!values._id) {
                return dispatch(A.addProjectOnServer(values)).then(function (json) {
                    if (json.success) {
                        _reactNotifications.NotificationManager.success('Project Added Successfully');
                        dispatch(A.hideComponent(COC.PROJECT_FORM_DIALOG));
                    } else {
                        _reactNotifications.NotificationManager.error('Project Not Added!');
                        if (json.code == EC.ALREADY_EXISTS) throw new _reduxForm.SubmissionError({ name: "Project Already Exists" });
                    }
                    return json;
                });
            } else {
                return dispatch(A.editProjectOnServer(values)).then(function (response) {
                    if (response.success) {
                        dispatch(A.hideComponent(COC.PROJECT_FORM_DIALOG)), _reactNotifications.NotificationManager.success('Project Updated Successfully');
                    } else {
                        _reactNotifications.NotificationManager.error('Project Updated Failed');
                        if (response.code == EC.ALREADY_EXISTS) throw new _reduxForm.SubmissionError({ name: "Project Already Exists" });
                    }
                    return json;
                });
            }
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        clients: state.client.all,
        projects: state.project.all

    };
};

var ProjectInitiateFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.ProjectForm);

exports.default = ProjectInitiateFormContainer;

/***/ }),

/***/ "mywI":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _components = __webpack_require__("ZhKb");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        showEstimationInitiateForm: function showEstimationInitiateForm() {
            dispatch(A.getAllProjectsFromServer());
            dispatch(A.getAllModulesFromServer());
            dispatch(A.getAllUsersFromServer());
            dispatch(A.getAllTechnologiesFromServer());
            dispatch(A.getAllDevelopmentTypesFromServer());
            dispatch(A.showComponent(COC.ESTIMATION_INITIATE_DIALOG));
        },
        estimationSelected: function estimationSelected(estimation) {
            logger.debug(logger.ESTIMATION_LIST_CONNECT, "estimation:", estimation);
            return dispatch(A.getEstimationFromServer(estimation._id)).then(function (json) {
                dispatch(A.showComponentHideOthers(COC.ESTIMATION_DETAIL_PAGE));
            });
        },
        getAllEstimations: function getAllEstimations(projectID, status) {
            dispatch(A.getAllEstimationsFromServer(projectID, status));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        loggedInUser: state.user.loggedIn,
        estimations: state.estimation.all,
        projects: state.project.all
    };
};

var EstimationListContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.EstimationList);

exports.default = EstimationListContainer;

/***/ }),

/***/ "nHH1":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _lodash = __webpack_require__("M4fF");

var _lodash2 = _interopRequireDefault(_lodash);

var _2 = __webpack_require__("ZhKb");

var _reactRedux = __webpack_require__("RH2O");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _reduxForm = __webpack_require__("ao4a");

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

var _index = __webpack_require__("ZhKb");

var _clientMsg = __webpack_require__("jURI");

var CM = _interopRequireWildcard(_clientMsg);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EstimationFeature = function (_React$PureComponent) {
    _inherits(EstimationFeature, _React$PureComponent);

    function EstimationFeature(props) {
        _classCallCheck(this, EstimationFeature);

        var _this = _possibleConstructorReturn(this, (EstimationFeature.__proto__ || Object.getPrototypeOf(EstimationFeature)).call(this, props));

        _this.state = {
            showFeatureDeletionDialog: false,
            showTaskDeletionRequestedDialog: false,
            featureDeletion: undefined
        };

        return _this;
    }

    _createClass(EstimationFeature, [{
        key: 'onClose',
        value: function onClose() {
            this.setState({ showFeatureDeletionDialog: false });
            this.setState({ showTaskDeletionRequestedDialog: false });
        }
    }, {
        key: 'onConfirmFeatureDelete',
        value: function onConfirmFeatureDelete() {
            this.setState({ showFeatureDeletionDialog: false });
            this.props.deleteFeature(this.state.featureDeletion);
        }
    }, {
        key: 'onConfirmTaskDeleteRequest',
        value: function onConfirmTaskDeleteRequest() {
            this.setState({ showTaskDeletionRequestedDialog: false });
            this.props.deleteFeature(this.props.feature);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                feature = _props.feature,
                loggedInUserRole = _props.loggedInUserRole,
                estimationStatus = _props.estimationStatus,
                index = _props.index,
                expanded = _props.expanded,
                expandedTaskID = _props.expandedTaskID,
                editView = _props.editView;


            var buttons = [];

            logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'logged in user is ', loggedInUserRole);
            logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'task owner ', feature.owner);
            logger.debug(logger.ESTIMATION_FEATURE_RENDER, this.props);

            if (loggedInUserRole == SC.ROLE_NEGOTIATOR) {

                /**
                 * Negotiator would always be able to edit any task (would be considered as suggestions), first button hence would always be edit
                 * He would also be able to delete any task
                 */

                //condition for feature approval
                if (feature.status === SC.STATUS_PENDING && _lodash2.default.includes([SC.STATUS_REVIEW_REQUESTED, SC.STATUS_INITIATED, SC.STATUS_ESTIMATION_REQUESTED, SC.STATUS_CHANGE_REQUESTED], estimationStatus)) {

                    if (feature.canApprove) {
                        buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'approve', src: '/images/approve.png', title: 'Approve',
                            onClick: function onClick() {
                                _this2.props.approveFeature(feature);
                            } }) : _react2.default.createElement('img', { key: 'approve_disable', src: '/images/approve_disable.png', title: 'Approve' }));
                    }

                    if (feature.negotiator.changeSuggested || feature.addedInThisIteration && feature.owner == SC.OWNER_NEGOTIATOR) {
                        /*first button*/
                        // As negotiator has requested change, means he has added/changed his suggestions during this iteration, show appropriate suggestion button
                        buttons.push(editView && feature.repo && feature.repo.addedFromThisEstimation ? _react2.default.createElement('img', { className: 'div-hover', key: 'suggestion_outgoing', src: '/images/suggestion_outgoing.png',
                            title: 'Suggestion-Outgoing',
                            onClick: function onClick() {
                                _this2.props.showFeatureSuggestionForm(feature, loggedInUserRole);
                            } }) : _react2.default.createElement('img', { key: 'suggestion_outgoing_disable', src: '/images/suggestion_outgoing_disable.png',
                            title: 'Suggestion-Outgoing' }));
                    } else if (feature.estimator.changedKeyInformation || feature.addedInThisIteration && feature.owner == SC.OWNER_ESTIMATOR) {

                        // Estimator has changed key information in previous iteration, so show that to negotiator
                        buttons.push(editView && feature.repo && feature.repo.addedFromThisEstimation ? _react2.default.createElement('img', { className: 'div-hover', key: 'suggestion_incoming', src: '/images/suggestion_incoming.png',
                            title: 'Suggestion-Incoming',
                            onClick: function onClick() {
                                _this2.props.showFeatureSuggestionForm(feature, loggedInUserRole);
                            } }) : _react2.default.createElement('img', { key: 'suggestion_incoming_disable', src: '/images/suggestion_incoming_disable.png',
                            title: 'Suggestion-Incoming' }));
                    } else {
                        buttons.push(editView && feature.repo && feature.repo.addedFromThisEstimation ? _react2.default.createElement('img', { className: 'div-hover', key: 'suggestion', src: '/images/suggestion.png', title: 'Suggestion',
                            onClick: function onClick() {
                                _this2.props.showFeatureSuggestionForm(feature, loggedInUserRole);
                            } }) : _react2.default.createElement('img', { key: 'suggestion_disable', src: '/images/suggestion_disable.png', title: 'Suggestion' }));
                    }

                    /*second button*/
                    //requested delete permission by estimator to negotiator
                    if (feature.estimator.removalRequested) {
                        // Estimator has requested removal
                        buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'he_requested_delete', src: '/images/he_requested_delete.png',
                            title: 'Delete-Requested',
                            onClick: function onClick() {
                                _this2.setState({ showTaskDeletionRequestedDialog: true });
                            } }) : _react2.default.createElement('img', { key: 'he_requested_delete_disable', src: '/images/he_requested_delete_disable.png',
                            title: 'Delete-Requested' }));
                    } else {
                        buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'delete', src: '/images/delete.png', title: 'Delete',
                            onClick: function onClick() {
                                _this2.setState({ showFeatureDeletionDialog: true });
                                _this2.setState({ featureDeletion: feature });
                                //this.props.deleteFeature(feature)
                            } }) : _react2.default.createElement('img', { key: 'delete_disable', src: '/images/delete_disable.png', title: 'Delete' }));
                    }
                } else if (feature.status === SC.STATUS_APPROVED && feature.estimator && feature.estimator.changeRequested) {
                    /*Single button*/

                    if (feature.negotiator.changeGranted) {
                        // estimator has requested Reopen which negotiator has granted
                        buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'granted_reopen', src: '/images/reopen_granted.png',
                            title: 'Reopen-Granted',
                            onClick: function onClick() {
                                _this2.props.toggleGrantEdit(feature);
                            } }) : _react2.default.createElement('img', { key: 'granted_reopen_disable', src: '/images/reopen_granted_disable.png',
                            title: 'Reopen-Granted' }));
                    } else {
                        // estimator has requested change but negotiator has not granted it till now
                        logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'changeRequested/not granted, heRequestedEditFeature');
                        buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'he_requested_reopen', src: '/images/he_requested_reopen.png',
                            title: 'Reopen-Requested',
                            onClick: function onClick() {
                                _this2.props.toggleGrantEdit(feature);
                            } }) : _react2.default.createElement('img', { key: 'he_requested_reopen_disable', src: '/images/he_requested_reopen_disable.png',
                            title: 'Reopen-Requested' }));
                    }
                } else {
                    buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'reopen', src: '/images/reopen.png', title: 'Reopen',
                        onClick: function onClick() {
                            _this2.props.reOpenFeature(feature);
                        } }) : _react2.default.createElement('img', { key: 'reopen_disable', src: '/images/reopen_disable.png', title: 'Reopen' }));
                }
            } else if (loggedInUserRole == SC.ROLE_ESTIMATOR) {

                /**
                 * First button show to estimator would always be edit or its variations
                 **/
                if (feature.status === SC.STATUS_PENDING && _lodash2.default.includes([SC.STATUS_REVIEW_REQUESTED, SC.STATUS_ESTIMATION_REQUESTED, SC.STATUS_CHANGE_REQUESTED], estimationStatus)) {
                    //First Button


                    if (feature.addedInThisIteration && !feature.estimator.changedKeyInformation) {
                        if (feature.owner == SC.OWNER_ESTIMATOR) {
                            // Show direct edit and delete button if estimator currently added that feature
                            buttons.push(editView && feature.repo && feature.repo.addedFromThisEstimation ? _react2.default.createElement('img', { className: 'div-hover', key: 'edit', src: '/images/edit.png', title: 'Edit',
                                onClick: function onClick() {
                                    _this2.props.showEditFeatureForm(feature);
                                } }) : _react2.default.createElement('img', { key: 'edit_disable', src: '/images/edit_disable.png', title: 'Edit' }));

                            buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'delete', src: '/images/delete.png', title: 'Delete',
                                onClick: function onClick() {
                                    _this2.setState({ showFeatureDeletionDialog: true });
                                    _this2.setState({ featureDeletion: feature });
                                } }) : _react2.default.createElement('img', { key: 'delete_disable', src: '/images/delete_disable.png', title: 'Delete' }));
                        } else if (feature.owner == SC.OWNER_NEGOTIATOR) {
                            // Show Suggestion button if negotiator currently added that feature
                            buttons.push(editView && feature.repo && feature.repo.addedFromThisEstimation ? _react2.default.createElement('img', { className: 'div-hover', key: 'suggestion_incoming',
                                src: '/images/suggestion_incoming.png', title: 'Suggestion-Incoming',
                                onClick: function onClick() {
                                    _this2.props.showFeatureSuggestionForm(feature, loggedInUserRole);
                                } }) : _react2.default.createElement('img', { key: 'suggestion_incoming_disable', src: '/images/suggestion_incoming_disable.png',
                                title: 'Suggestion-Incoming' }));
                        }
                    } else if (feature.estimator.changedKeyInformation) {
                        // Estimator has changed key information so show estimator icon to notify that
                        buttons.push(editView && feature.repo && feature.repo.addedFromThisEstimation ? _react2.default.createElement('img', { className: 'div-hover', key: 'suggestion_outgoing', src: '/images/suggestion_outgoing.png',
                            title: 'Suggestion-Outgoing',
                            onClick: function onClick() {
                                _this2.props.showFeatureSuggestionForm(feature, loggedInUserRole);
                            } }) : _react2.default.createElement('img', { key: 'suggestion_outgoing_disable', src: '/images/suggestion_outgoing_disable.png',
                            title: 'Suggestion-Outgoing' }));
                    } else if (feature.negotiator.changeSuggested) {
                        logger.debug(logger.ESTIMATION_FEATURE_BUTTONS, 'negotiator requested change, he_requested_edit button');
                        // Negotiator has requested change

                        buttons.push(editView && feature.repo && feature.repo.addedFromThisEstimation ? _react2.default.createElement('img', { className: 'div-hover', key: 'suggestion_incoming',
                            src: '/images/suggestion_incoming.png', title: 'Suggestion-Incoming',
                            onClick: function onClick() {
                                _this2.props.showFeatureSuggestionForm(feature, loggedInUserRole);
                            } }) : _react2.default.createElement('img', { key: 'suggestion_incoming_disable', src: '/images/suggestion_incoming_disable.png',
                            title: 'Suggestion-Incoming' }));
                    } else {
                        buttons.push(editView && feature.repo && feature.repo.addedFromThisEstimation ? _react2.default.createElement('img', { className: 'div-hover', key: 'suggestion', src: '/images/suggestion.png', title: 'Suggestion',
                            onClick: function onClick() {
                                _this2.props.showFeatureSuggestionForm(feature, loggedInUserRole);
                            } }) : _react2.default.createElement('img', { key: 'suggestion_disable', src: '/images/suggestion_disable.png', title: 'Suggestion' }));
                    }

                    if (!feature.addedInThisIteration || feature.owner != SC.OWNER_ESTIMATOR) {
                        if (feature.estimator.removalRequested) {
                            // Estimator has requested removal
                            buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'requested_delete', src: '/images/requested_delete.png',
                                title: 'Delete-Requested',
                                onClick: function onClick() {
                                    _this2.props.toggleDeleteRequest(feature);
                                } }) : _react2.default.createElement('img', { key: 'requested_delete_disable', src: '/images/requested_delete_disable.png',
                                title: 'Delete-Requested' }));
                        } else {
                            // Estimator can request removal
                            buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'request_delete', src: '/images/request_delete.png',
                                title: 'Delete-Request',
                                onClick: function onClick() {
                                    _this2.props.toggleDeleteRequest(feature);
                                } }) : _react2.default.createElement('img', { key: 'request_delete_disable', src: '/images/request_delete_disable.png',
                                title: 'Delete-Request' }));
                        }
                    }
                } else if (feature.status === SC.STATUS_APPROVED) {
                    if (feature.estimator.changeRequested) {
                        if (feature.negotiator.changeGranted) {
                            // estimator has requested change which negotiator has granted
                            logger.debug(logger.ESTIMATION_FEATURE_BUTTONS, 'changeRequested/changeGranted, he_granted_edit');
                            buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'he_granted_reopen', src: '/images/he_granted_reopen.png',
                                title: 'Reopen-Granted',
                                onClick: function onClick() {
                                    _this2.props.showEditFeatureForm(feature);
                                } }) : _react2.default.createElement('img', { key: 'he_granted_reopen_disable', src: '/images/he_granted_reopen_disable.png',
                                title: 'Reopen-Granted' }));
                        } else {
                            // estimator has requested change but negotiator has not granted it till now
                            buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'requested_reopen', src: '/images/reopen_requested.png',
                                title: 'Reopen-Requested',
                                onClick: function onClick() {
                                    _this2.props.toggleEditRequest(feature);
                                } }) : _react2.default.createElement('img', { key: 'requested_reopen_disable', src: '/images/reopen_requested_disable.png',
                                title: 'Reopen-Requested' }));
                        }
                    } else {
                        buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'request_reopen', src: '/images/reopen_request.png',
                            title: 'Reopen-Request',
                            onClick: function onClick() {
                                _this2.props.toggleEditRequest(feature);
                            } }) : _react2.default.createElement('img', { key: 'request_reopen_disable', src: '/images/reopen_request_disable.png',
                            title: 'Reopen-Request' }));
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: expanded ? 'feature-expanded' : 'feature' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-12 pad' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-9' },
                        _react2.default.createElement(
                            'div',
                            {
                                className: feature.estimator && feature.estimator.name ? "col-md-11 div-hover " : "col-md-11 div-hover infoHighliter",
                                onClick: function onClick() {
                                    _this2.props.expandFeature(feature._id);
                                } },
                            _react2.default.createElement(
                                'h4',
                                { title: feature.estimator && feature.estimator.name ? feature.estimator.name : "Feature is not having name by estimator" },
                                feature.estimator.name ? feature.estimator.name : feature.negotiator.name
                            )
                        ),
                        feature.status === SC.STATUS_PENDING && feature.hasError == true ? _react2.default.createElement(
                            'div',
                            { className: 'col-md-1' },
                            _react2.default.createElement('img', { key: 'exclaimation', className: 'errorClass div-hover', src: '/images/exclamation.png',
                                title: feature.estimator && feature.estimator.name ? feature.estimator.description ? feature.estimator.estimatedHours ? feature.tasks && feature.tasks ? "Any task of this feature is not approved/ Some changes is done in this iteration" : "Feature is not having any task" : "Feature is not having estimated hours by estimator" : "Feature is not having description by estimator" : "Feature is not having name by estimator"
                            })
                        ) : null
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-3' },
                        _react2.default.createElement(
                            'div',
                            null,
                            this.state.showTaskDeletionRequestedDialog && _react2.default.createElement(_index.ConfirmationDialog, { show: true, onConfirm: this.onConfirmTaskDeleteRequest.bind(this),
                                title: CM.DELETE_TASK, onClose: this.onClose.bind(this),
                                body: CM.DELETE_TASK_BODY }),
                            this.state.showFeatureDeletionDialog && _react2.default.createElement(_index.ConfirmationDialog, { show: true, onConfirm: this.onConfirmFeatureDelete.bind(this),
                                title: CM.DELETE_FEATURE, onClose: this.onClose.bind(this),
                                body: CM.DELETE_FEATURE_BODY }),
                            feature.owner == SC.OWNER_ESTIMATOR && feature.addedInThisIteration && _react2.default.createElement(
                                'div',
                                { className: 'flagStrip' },
                                _react2.default.createElement('img', { key: 'estimator_new_flag', src: '/images/estimator_new_flag.png',
                                    title: 'Added by Estimator' })
                            ),
                            feature.owner == SC.OWNER_NEGOTIATOR && feature.addedInThisIteration && _react2.default.createElement(
                                'div',
                                { className: 'flagStrip' },
                                _react2.default.createElement('img', { key: 'negotiator_new_flag', src: '/images/negotiator_new_flag.png',
                                    title: 'Added by Negotiator' })
                            ),
                            feature.estimator.changedInThisIteration && _react2.default.createElement(
                                'div',
                                { className: 'flagStrip' },
                                _react2.default.createElement('img', { key: 'estimator_edit_flag', src: '/images/estimator_edit_flag.png',
                                    title: 'Edited by Estimator' })
                            ),
                            feature.negotiator.changedInThisIteration && _react2.default.createElement(
                                'div',
                                { className: 'flagStrip' },
                                _react2.default.createElement('img', { key: 'negotiator_edit_flag', src: '/images/negotiator_edit_flag.png',
                                    title: 'Edited by Negotiator' })
                            ),
                            feature.estimator && feature.estimator.requestedInThisIteration && (feature.estimator.changeRequested || feature.estimator.removalRequested) && _react2.default.createElement(
                                'div',
                                { className: 'flagStrip' },
                                _react2.default.createElement('img', { key: 'request_flag', src: '/images/request_flag.png',
                                    title: 'Requested by Estimator' })
                            ),
                            feature.status === SC.STATUS_APPROVED && _react2.default.createElement(
                                'div',
                                { className: 'flagStrip' },
                                _react2.default.createElement('img', { key: 'approved_flag', src: '/images/approved_flag.png',
                                    title: 'Approved' })
                            ),
                            feature.repo && !feature.repo.addedFromThisEstimation && _react2.default.createElement(
                                'div',
                                { className: 'flagStrip' },
                                _react2.default.createElement('img', { key: 'repo_flag', src: '/images/repo_flag.png', title: 'From Repository' })
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    {
                        className: feature.estimator.description ? "col-md-12 short-description  div-hover" : "col-md-12 short-description infoHighliter",
                        onClick: function onClick() {
                            _this2.props.expandFeature(feature._id);
                        } },
                    _react2.default.createElement(
                        'p',
                        { title: feature.estimator.description ? feature.estimator.description : "Feature is not having description by estimator" },
                        feature.estimator.description ? feature.estimator.description : feature.negotiator.description
                    )
                ),
                _react2.default.createElement(
                    'div',
                    {
                        className: feature.estimator && feature.estimator.estimatedHours ? "col-md-3 " : "col-md-3 infoHighliter" },
                    _react2.default.createElement(
                        'h4',
                        { title: feature.estimator && feature.estimator.estimatedHours ? feature.estimator.estimatedHours : "Feature is not having task inside it hence no Estimated Hours " },
                        'Estimated:'
                    ),
                    _react2.default.createElement(
                        'h4',
                        null,
                        '\xA0',
                        typeof feature.estimator.estimatedHours == 'number' ? feature.estimator.estimatedHours + ' Hrs' : ''
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-3' },
                    _react2.default.createElement(
                        'h4',
                        { title: feature.negotiator.estimatedHours ? feature.negotiator.estimatedHours : "feature is not having task inside it hence no Suggested Hours" },
                        'Suggested:'
                    ),
                    _react2.default.createElement(
                        'h4',
                        null,
                        '\xA0',
                        typeof feature.negotiator.estimatedHours == 'number' ? feature.negotiator.estimatedHours + ' Hrs' : ''
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6 text-right estimationActions' },
                    buttons
                ),
                expanded && _react2.default.createElement(
                    'div',
                    { className: 'col-md-11 col-md-offset-1' },
                    Array.isArray(feature.tasks) && feature.tasks.length > 0 && feature.tasks.map(function (t, idx) {
                        return expandedTaskID && expandedTaskID === t._id ? _react2.default.createElement(_2.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, {
                            fromRepoWithFeature: feature.repo && !feature.repo.addedFromThisEstimation ? true : false,
                            estimationStatus: estimationStatus,
                            loggedInUserRole: loggedInUserRole,
                            editView: editView
                        }, {
                            expanded: true })) : _react2.default.createElement(_2.EstimationTask, _extends({ task: t, index: idx, key: "task" + idx }, {
                            fromRepoWithFeature: feature.repo && !feature.repo.addedFromThisEstimation ? true : false,
                            estimationStatus: estimationStatus,
                            loggedInUserRole: loggedInUserRole,
                            editView: editView
                        }));
                    })
                )
            );
        }
    }]);

    return EstimationFeature;
}(_react2.default.PureComponent);

EstimationFeature.propTypes = {
    feature: _propTypes2.default.object.isRequired,
    loggedInUserRole: _propTypes2.default.string.isRequired,
    estimationStatus: _propTypes2.default.string.isRequired,
    expanded: _propTypes2.default.bool
};

EstimationFeature.defaultProps = {
    expanded: false,
    editView: false
};

EstimationFeature = (0, _reactRedux.connect)(null, function (dispatch, ownProps) {
    return {

        showEditFeatureForm: function showEditFeatureForm(values) {
            // would always be called by estimator
            dispatch(A.showComponent(COC.ESTIMATION_FEATURE_DIALOG));
            // initialize
            var feature = {};
            feature.estimation = values.estimation;
            feature._id = values._id;
            feature.name = values.estimator.name;
            feature.description = values.estimator.description;
            dispatch((0, _reduxForm.initialize)('estimation-feature', feature));
        },

        showFeatureSuggestionForm: function showFeatureSuggestionForm(values, loggedInUserRole) {
            // Can be called by both estimator and negotiator
            var feature = {
                loggedInUserRole: loggedInUserRole,
                readOnly: {}
            };
            feature._id = values._id;
            feature.estimation = values.estimation;
            if (loggedInUserRole == SC.ROLE_NEGOTIATOR) {
                /* Since negotiator is logged in, he would see details of negotiator section in editable form and details of estimator section in read only form  */
                feature.name = values.negotiator.name;
                feature.description = values.negotiator.description;

                feature.readOnly.name = values.estimator.name;
                feature.readOnly.description = values.estimator.description;
            } else if (loggedInUserRole == SC.ROLE_ESTIMATOR) {
                /* Since estimator is logged in, he would see details of  estimator section in editable form  */
                feature.name = values.estimator.name;
                feature.description = values.estimator.description;

                feature.readOnly.name = values.negotiator.name;
                feature.readOnly.description = values.negotiator.description;
            }
            dispatch((0, _reduxForm.initialize)("estimation-suggest-feature", feature));
            dispatch(A.showComponent(COC.ESTIMATION_SUGGEST_FEATURE_FORM_DIALOG));
        },

        deleteFeature: function deleteFeature(feature) {
            return dispatch(A.deleteFeatureByEstimatorOnServer(feature.estimation._id, feature._id)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Feature Deleted successfully");
                } else if (json.code && json.code == EC.INVALID_USER) {
                    _reactNotifications.NotificationManager.error("Feature Deletion Failed You are not owner of this feature !");
                } else if (json.code && json.code == EC.ACCESS_DENIED) {
                    _reactNotifications.NotificationManager.error("You are not allowed to delete this feature !");
                } else _reactNotifications.NotificationManager.error("Feature Deletion Failed !");
            });
        },

        toggleEditRequest: function toggleEditRequest(values) {
            return dispatch(A.requestForFeatureEditPermissionOnServer(values._id)).then(function (json) {
                if (json.success) {

                    if (json.data && json.data.estimator && json.data.estimator.changeRequested) _reactNotifications.NotificationManager.success("Reopen request on Feature raised...");else _reactNotifications.NotificationManager.success("Reopen request on Feature cleared...");
                } else {
                    _reactNotifications.NotificationManager.error("Unknown error occurred");
                }
            });
        },

        toggleGrantEdit: function toggleGrantEdit(values) {
            return dispatch(A.grantEditPermissionOfFeatureOnServer(values._id)).then(function (json) {
                if (json.success) {
                    if (json.data && json.data.negotiator && json.data.negotiator.changeGranted) _reactNotifications.NotificationManager.success("Reopen permission on Feature granted...");else _reactNotifications.NotificationManager.success("Reopen permission on Feature not granted...");
                } else {
                    _reactNotifications.NotificationManager.error('Permission Grant Failed');
                }
            });
        },

        toggleDeleteRequest: function toggleDeleteRequest(values) {
            return dispatch(A.requestForFeatureDeletePermissionOnServer(values._id)).then(function (json) {
                if (json.success) {
                    if (json.data && json.data.estimator && json.data.estimator.removalRequested) _reactNotifications.NotificationManager.success("Delete request on Feature raised...");else _reactNotifications.NotificationManager.success("Delete request on Feature cleared...");
                } else {
                    if (json.code == EC.INVALID_OPERATION) _reactNotifications.NotificationManager.error("Feature Delete already requested");else _reactNotifications.NotificationManager.error("Unknown error occurred");
                }
            });
        },
        reOpenFeature: function reOpenFeature(values) {
            return dispatch(A.reOpenFeatureOnServer(values._id)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Feature ReOpen");
                } else {
                    _reactNotifications.NotificationManager.error('Feature  Not ReOpen');
                }
            });
        },
        approveFeature: function approveFeature(values) {
            return dispatch(A.approveFeatureByNegotiatorOnServer(values._id)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Feature Approved ...");
                } else {
                    if (json.code == EC.TASK_APPROVAL_ERROR) {
                        _reactNotifications.NotificationManager.error('First All the task of feature should be approved');
                    } else if (json.code == EC.FEATURE_APPROVAL_ERROR) {
                        _reactNotifications.NotificationManager.error('First details of feature should be filled on estimator');
                    } else {
                        _reactNotifications.NotificationManager.error('Feature Not Approved');
                    }
                }
            });
        },
        expandFeature: function expandFeature(featureID) {
            dispatch(A.expandFeature(featureID));
        }

    };
})(EstimationFeature);

exports.default = EstimationFeature;

/***/ }),

/***/ "oapJ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactRouterDom = __webpack_require__("F8kA");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ReleasePlanList = function (_Component) {
    _inherits(ReleasePlanList, _Component);

    function ReleasePlanList(props) {
        _classCallCheck(this, ReleasePlanList);

        var _this = _possibleConstructorReturn(this, (ReleasePlanList.__proto__ || Object.getPrototypeOf(ReleasePlanList)).call(this, props));

        _this.options = {
            onRowClick: _this.onRowClick.bind(_this),
            sizePerPageList: [{
                text: '6', value: 6
            }, {
                text: '10', value: 10
            }, {
                text: '20', value: 20
            }, {
                text: '50', value: 50
            }],
            sizePerPage: 6 // which size per page you want to locate as default

        };
        _this.state = {
            status: SC.ALL,
            flag: SC.ALL
        };
        _this.onFlagChange = _this.onFlagChange.bind(_this);
        _this.onStatusChange = _this.onStatusChange.bind(_this);
        return _this;
    }

    _createClass(ReleasePlanList, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.props.getAllReleasePlans(this.props.release);
        }
    }, {
        key: 'onFlagChange',
        value: function onFlagChange(flag) {
            this.setState({ flag: flag });
            this.props.changeReleaseFlag(this.props.release, this.state.status, flag);
        }
    }, {
        key: 'onStatusChange',
        value: function onStatusChange(status) {
            this.setState({ status: status });
            this.props.changeReleaseStatus(this.props.release, status, this.state.flag);
        }
    }, {
        key: 'onRowClick',
        value: function onRowClick(row) {
            console.log("row", row);
            if (row.release.iteration.iterationType === SC.ITERATION_TYPE_UNPLANNED) {
                _reactNotifications.NotificationManager.error("Cannot add tasks to 'unplanned' release plans");
            } else {
                this.props.history.push("/app-home/release-task-planning");
                this.props.releasePlanSelected(row, this.props.release.rolesInThisRelease);
            }
        }
    }, {
        key: 'formatEstimatedHours',
        value: function formatEstimatedHours(task) {
            if (task) return task.estimatedHours;
            return 0;
        }
    }, {
        key: 'formatPlannedHours',
        value: function formatPlannedHours(planning) {
            if (planning) return planning.plannedHours;
            return 0;
        }
    }, {
        key: 'formatReportedHours',
        value: function formatReportedHours(report) {
            if (report) return report.reportedHours;
            return 0;
        }
    }, {
        key: 'formatReportedStatus',
        value: function formatReportedStatus(report) {
            if (report) return report.finalStatus;
            return 'unplanned';
        }
    }, {
        key: 'formatTaskName',
        value: function formatTaskName(task, row) {

            if (task) {
                if (row.release.iteration.iterationType == SC.ITERATION_TYPE_PLANNED) return _react2.default.createElement(
                    'span',
                    { style: { color: '#4172c1' } },
                    task.name
                );else if (row.release.iteration.iterationType == SC.ITERATION_TYPE_UNPLANNED) return _react2.default.createElement(
                    'span',
                    { style: { color: '#e52d8c' } },
                    task.name
                );else return _react2.default.createElement(
                    'span',
                    null,
                    task.name
                );
            }

            return '';
        }
    }, {
        key: 'formatProgress',
        value: function formatProgress(report) {
            if (report) return report.progress + '%';
            return '';
        }
    }, {
        key: 'formatFlags',
        value: function formatFlags(flags) {
            var flagImageArray = [];
            flagImageArray = flags && flags.length ? flags.map(function (flag, idx) {
                if (flag === SC.WARNING_UNPLANNED) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "unplanned" + idx, src: '/images/unplanned.png',
                    title: 'Unplanned' });else if (flag === SC.WARNING_TOO_MANY_HOURS) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "too_many_hours" + idx,
                    src: '/images/too_many_hours.png',
                    title: 'Too Many Hours' });else if (flag === SC.WARNING_EMPLOYEE_ON_LEAVE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "employee-on-leave" + idx,
                    src: '/images/employee_on_leave.png',
                    title: 'Employee On Leave' });else if (flag === SC.WARNING_RELEASE_DATE_MISSED_1) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "release_date_missed_1" + idx,
                    src: '/images/release_date_missed_1.png',
                    title: 'Release Date Missed 1' });else if (flag === SC.WARNING_RELEASE_DATE_MISSED_2) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "release_date_missed_2" + idx,
                    src: '/images/release_date_missed_2.png',
                    title: 'Release Date Missed 2' });else if (flag === SC.WARNING_RELEASE_DATE_MISSED_3) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "release_date_missed_3" + idx,
                    src: '/images/release_date_missed_3.png',
                    title: 'Release Date Missed 3' });else if (flag === SC.WARNING_RELEASE_DATE_MISSED_4) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "release_date_missed_4" + idx,
                    src: '/images/release_date_missed_4.png',
                    title: 'Release Date Missed 4' });else if (flag === SC.WARNING_PLANNED_BEYOND_RELEASE_DATE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "planned_beyond_release_date" + idx,
                    src: '/images/planned_beyond_release_date.png',
                    title: 'Planned Beyond Release Date' });else if (flag === SC.WARNING_LESS_PLANNED_HOURS) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "less_planned_hours" + idx,
                    src: '/images/less_planned_hours.png',
                    title: 'Less Planned Hours' });else if (flag === SC.WARNING_MORE_PLANNED_HOURS) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_planned_hours" + idx,
                    src: '/images/more_planned_hours.png',
                    title: 'More Planned Hours' });else if (flag === SC.WARNING_MORE_REPORTED_HOURS_1) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_reported_hours_1" + idx,
                    src: '/images/more_reported_hours_1.png',
                    title: 'More Reported Hours 1' });else if (flag === SC.WARNING_MORE_REPORTED_HOURS_2) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_reported_hours_2" + idx,
                    src: '/images/more_reported_hours_2.png',
                    title: 'More Reported Hours 2' });else if (flag === SC.WARNING_MORE_REPORTED_HOURS_3) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_reported_hours_3" + idx,
                    src: '/images/more_reported_hours_3.png',
                    title: 'More Reported Hours 3' });else if (flag === SC.WARNING_MORE_REPORTED_HOURS_4) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_reported_hours_4" + idx,
                    src: '/images/more_reported_hours_4.png',
                    title: 'More Reported Hours 4' });else if (flag === SC.WARNING_HAS_UNREPORTED_DAYS) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "has-unreported-days" + idx,
                    src: '/images/has_unreported_days.png',
                    title: 'Has Unreported Days' });else if (flag === SC.WARNING_UNREPORTED) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "unreported" + idx,
                    src: '/images/unreported.png',
                    title: 'Unreported' });else if (flag === SC.WARNING_PENDING_ON_END_DATE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "pending-on-enddate" + idx,
                    src: '/images/pending-on-enddate.png',
                    title: 'Pending On Enddate' });else if (flag === SC.WARNING_COMPLETED_BEFORE_END_DATE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "completed-before-enddate" + idx,
                    src: '/images/completed_before_enddate.png',
                    title: 'Completed Before Enddate' });else if (flag === SC.WARNING_EMPLOYEE_ASK_FOR_LEAVE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "employee-ask-for-leave",
                    src: '/images/employee-ask-for-leave.png',
                    title: 'Employee Ask For Leave' });else return '';
            }) : null;
            return _react2.default.createElement(
                'span',
                null,
                flagImageArray
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var team = 0;
            var _props = this.props,
                release = _props.release,
                releasePlans = _props.releasePlans;

            return [_react2.default.createElement(
                'div',
                { key: "release-plan-search", className: 'col-md-12 release-options' },
                _react2.default.createElement(
                    'button',
                    { type: 'button', className: 'col-md-2 btn customBtn', onClick: function onClick() {
                            _this2.props.showAddToReleasePlanForm(release);
                        } },
                    'Add Task'
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'search-btn-container' },
                    _react2.default.createElement(
                        'select',
                        { className: 'form-control', title: 'Select Flag', onChange: function onChange(flag) {
                                return _this2.onFlagChange(flag.target.value);
                            } },
                        _react2.default.createElement(
                            'option',
                            { value: SC.ALL },
                            'All Flags'
                        ),
                        SC.ALL_WARNING_NAME_ARRAY.map(function (warning, idx) {
                            return _react2.default.createElement(
                                'option',
                                {
                                    key: warning + idx, value: warning },
                                warning
                            );
                        })
                    )
                )
            ), _react2.default.createElement(
                'div',
                { key: "releaseplan-table", className: 'col-md-12 estimation release-plan-table' },
                _react2.default.createElement(
                    _reactBootstrapTable.BootstrapTable,
                    { options: this.options, data: releasePlans,
                        multiColumnSearch: true,
                        search: false,
                        striped: true,
                        pagination: true,
                        hover: true,
                        height: "300px" },
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { columnTitle: true, isKey: true, dataField: '_id',
                            hidden: true },
                        'ID'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '20%', columnTitle: true, dataField: 'task',
                            dataFormat: this.formatTaskName.bind(this) },
                        'Task Name'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '12%', columnTitle: true, dataField: 'report',
                            dataFormat: this.formatProgress.bind(this),
                            dataAlign: "right" },
                        'Progress'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '20%', dataField: 'flags',
                            dataFormat: this.formatFlags.bind(this) },
                        'Flag'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '12%', columnTitle: true, dataField: 'task',
                            dataFormat: this.formatEstimatedHours.bind(this), dataAlign: "right" },
                        'Estimated Hours'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '12%', columnTitle: true, dataField: 'planning',
                            dataFormat: this.formatPlannedHours.bind(this), dataAlign: "right" },
                        'Planned Hours'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '12%', columnTitle: true, dataField: 'report',
                            dataFormat: this.formatReportedHours.bind(this), dataAlign: "right" },
                        'Reported Hours'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '12%', columnTitle: true, dataField: 'report',
                            dataFormat: this.formatReportedStatus.bind(this), dataAlign: "center" },
                        'Status'
                    )
                )
            )];
        }
    }]);

    return ReleasePlanList;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)(ReleasePlanList);

/***/ }),

/***/ "ohMi":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reduxForm = __webpack_require__("ao4a");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _validation = __webpack_require__("4KT+");

var _fields = __webpack_require__("NACj");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _reactRedux = __webpack_require__("RH2O");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EstimationSuggestFeatureForm = function EstimationSuggestFeatureForm(props) {
    logger.debug(logger.ESTIMATION_TASK_FORM_RENDER, props);
    var pristine = props.pristine,
        submitting = props.submitting,
        reset = props.reset,
        change = props.change;
    var estimation = props.estimation,
        readOnly = props.readOnly;

    return _react2.default.createElement(
        'form',
        { onSubmit: props.handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'col-md-12' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-5' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-1' },
                    estimation.loggedInUserRole == SC.ROLE_NEGOTIATOR ? _react2.default.createElement('img', { key: 'estimator', className: 'suggestionUser div-hover', src: '/images/estimator.png',
                        title: 'Estimator End' }) : estimation.loggedInUserRole == SC.ROLE_ESTIMATOR ? _react2.default.createElement('img', { key: 'negotiator', className: 'suggestionUser div-hover', src: '/images/negotiator.png',
                        title: 'Negotiator End' }) : null
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-11' },
                    estimation.loggedInUserRole == SC.ROLE_NEGOTIATOR ? _react2.default.createElement(
                        'h4',
                        { className: 'estimatorClr' },
                        'Estimator'
                    ) : estimation.loggedInUserRole == SC.ROLE_ESTIMATOR ? _react2.default.createElement(
                        'h4',
                        { className: 'negotiatorClr' },
                        'Negotiator'
                    ) : null,
                    _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(_reduxForm.Field, { name: 'estimation._id', component: 'input', type: 'hidden' }),
                        _react2.default.createElement(_reduxForm.Field, { name: '_id', component: 'input', type: 'hidden' }),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-6' },
                            _react2.default.createElement(_reduxForm.Field, { name: 'readOnly.name',
                                readOnly: true,
                                component: _fields.renderText,
                                label: "Feature Name:"
                            })
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-12' },
                            _react2.default.createElement(_reduxForm.Field, { name: 'readOnly.description',
                                readOnly: true,
                                component: _fields.renderTextArea,
                                rows: '10',
                                label: 'Feature Description:'
                            })
                        )
                    )
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-2 ' },
                _react2.default.createElement(
                    'button',
                    { type: 'button', className: 'suggestCopy btn-link',
                        title: 'Copy Feature Details',
                        onClick: function onClick() {
                            change("name", readOnly.name);
                            change("description", readOnly.description);
                        } },
                    _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-right' })
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-5' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-1' },
                    estimation.loggedInUserRole == SC.ROLE_ESTIMATOR ? _react2.default.createElement('img', { key: 'estimator', className: 'suggestionUser div-hover', src: '/images/estimator.png',
                        title: 'Estimator End' }) : estimation.loggedInUserRole == SC.ROLE_NEGOTIATOR ? _react2.default.createElement('img', { key: 'negotiator', className: 'suggestionUser div-hover', src: '/images/negotiator.png',
                        title: 'Negotiator End' }) : null
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-11' },
                    estimation.loggedInUserRole == SC.ROLE_ESTIMATOR ? _react2.default.createElement(
                        'h4',
                        { className: 'estimatorClr' },
                        estimation.loggedInUserRole
                    ) : estimation.loggedInUserRole == SC.ROLE_NEGOTIATOR ? _react2.default.createElement(
                        'h4',
                        { className: 'negotiatorClr' },
                        estimation.loggedInUserRole
                    ) : null,
                    _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-6' },
                            _react2.default.createElement(_reduxForm.Field, {
                                name: 'name',
                                component: _fields.renderText,
                                label: "Feature Name:",
                                validate: _validation.required
                            })
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-12' },
                            _react2.default.createElement(_reduxForm.Field, {
                                name: 'description',
                                component: _fields.renderTextArea,
                                label: 'Feature Description:',
                                rows: '10',
                                validate: _validation.required
                            })
                        )
                    )
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'row initiatEstimation' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6 text-center' },
                    _react2.default.createElement(
                        'button',
                        { type: 'submit', disabled: pristine || submitting, className: 'btn customBtn' },
                        'Save'
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6 text-center' },
                    _react2.default.createElement(
                        'button',
                        { type: 'button', disabled: pristine || submitting, className: 'btn customBtn', onClick: reset },
                        'Reset'
                    )
                )
            )
        )
    );
};

EstimationSuggestFeatureForm = (0, _reduxForm.reduxForm)({
    form: 'estimation-suggest-feature'
})(EstimationSuggestFeatureForm);

var selector = (0, _reduxForm.formValueSelector)('estimation-suggest-feature');

EstimationSuggestFeatureForm = (0, _reactRedux.connect)(function (state) {
    var loggedInUserRole = selector(state, 'loggedInUserRole');
    var readOnly = {
        name: selector(state, 'readOnly.name'),
        description: selector(state, 'readOnly.description')
    };
    return {
        loggedInUserRole: loggedInUserRole,
        readOnly: readOnly
    };
})(EstimationSuggestFeatureForm);

exports.default = EstimationSuggestFeatureForm;

/***/ }),

/***/ "pwBP":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(formValues) {
            return dispatch(A.moveTaskIntoFeatureOnServer(formValues._id, formValues.featureID)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success('Task Moved Successfully');
                    dispatch(A.hideComponent(COC.MOVE_TASK_TO_FEATURE_FORM_DIALOG));
                } else {
                    if (json.code == EC.MOVE_TASK_IN_FEATURE_ERROR) {
                        _reactNotifications.NotificationManager.error('Task cant be moved as feature selected is approved');
                    } else {
                        _reactNotifications.NotificationManager.error('Process Failed');
                    }
                }
                return json;
            });
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    var features = [];
    if (state.estimation && state.estimation.features && Array.isArray(state.estimation.features) && state.estimation.features.length) {
        features = state.estimation.features.filter(function (f) {
            return f.status != SC.STATUS_APPROVED && f.repo && f.repo.addedFromThisEstimation == true || f.repo == undefined;
        });
    }
    return {
        features: features
    };
};

var MoveTaskInFeatureFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.MoveTaskInFeatureForm);

exports.default = MoveTaskInFeatureFormContainer;

/***/ }),

/***/ "qOiY":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactEventTimeline = __webpack_require__("kCet");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _lodash = __webpack_require__("M4fF");

var _lodash2 = _interopRequireDefault(_lodash);

var _reactRouterDom = __webpack_require__("F8kA");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LeaveDetailPage = function (_Component) {
    _inherits(LeaveDetailPage, _Component);

    function LeaveDetailPage(props) {
        _classCallCheck(this, LeaveDetailPage);

        return _possibleConstructorReturn(this, (LeaveDetailPage.__proto__ || Object.getPrototypeOf(LeaveDetailPage)).call(this, props));
    }

    _createClass(LeaveDetailPage, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var leave = this.props.leave;

            var approval = leave && leave.status && (leave.status === SC.LEAVE_STATUS_APPROVED || leave.status === SC.LEAVE_STATUS_CANCELLED);
            return _react2.default.createElement(
                _reactEventTimeline.Timeline,
                null,
                _react2.default.createElement(
                    'span',
                    null,
                    _react2.default.createElement(
                        'button',
                        { className: 'btn-link calArrow', style: { marginLeft: '-3%' },
                            onClick: function onClick() {
                                _this2.props.history.push('/app-home/leave');
                                _this2.props.leaveGoBack();
                            } },
                        _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
                    )
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { style: { fontSize: '20px' },
                        title: 'Created Date:',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }) },
                    leave && leave.created ? (0, _moment2.default)(leave.created).format("DD-MM-YYYY hh:mm:ss") : ''
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { style: { fontSize: '20px' },
                        title: 'Start Date:',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }) },
                    leave && leave.startDateString && !_lodash2.default.isEmpty(leave.startDateString) ? leave.startDateString : ''
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { style: { fontSize: '20px' },
                        title: 'End Date:',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }) },
                    leave && leave.endDateString && !_lodash2.default.isEmpty(leave.endDateString) ? leave.endDateString : ''
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { style: { fontSize: '20px' },
                        title: 'Total Leave Days:',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }) },
                    leave && leave.numberOfLeaveDays ? leave.numberOfLeaveDays : ''
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { style: { fontSize: '20px' },
                        title: 'Leave Day Type:',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }) },
                    leave && leave.dayType ? leave.dayType : ''
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { style: leave.status === SC.LEAVE_STATUS_APPROVED ? {
                            color: "green",
                            fontSize: '20px'
                        } : leave.status === SC.LEAVE_STATUS_CANCELLED ? { color: "red", fontSize: '20px' } : { fontSize: '20px' },
                        title: 'Leave Status:',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }) },
                    leave && leave.status ? leave.status : ''
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { style: { fontSize: '20px' },
                        title: 'Leave Raised By:',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-user calendar_icon' }) },
                    leave && leave.user && leave.user.firstName ? leave.user.firstName + " " + leave.user.lastName : ''
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { style: { fontSize: '20px' },
                        title: 'Leave Type:',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }) },
                    leave && leave.leaveType && leave.leaveType.name ? leave.leaveType.name : ''
                ),
                _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { style: { fontSize: '20px' },
                        title: 'Leave Description:',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }) },
                    leave && leave.description ? leave.description : ''
                ),
                approval ? _react2.default.createElement(
                    _reactEventTimeline.TimelineEvent,
                    { title: 'Leave Approval :',
                        icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-user calendar_icon' }),
                        style: { fontSize: '20px' } },
                    _react2.default.createElement(
                        _reactEventTimeline.Timeline,
                        null,
                        _react2.default.createElement(
                            _reactEventTimeline.TimelineEvent,
                            { style: { fontSize: '20px' },
                                title: leave.status === SC.LEAVE_STATUS_APPROVED ? 'APPROVED BY:' : "REJECTED BY:",
                                icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }) },
                            leave && leave.approver && leave.approver.name ? leave.approver.name : ''
                        ),
                        _react2.default.createElement(
                            _reactEventTimeline.TimelineEvent,
                            { style: { fontSize: '20px' },
                                title: 'REASON:',
                                icon: _react2.default.createElement('i', { className: 'glyphicon glyphicon-tasks calendar_icon' }) },
                            leave && leave.approver && leave.approver.reason ? leave.approver.reason : ''
                        )
                    )
                ) : _react2.default.createElement('span', null)
            );
        }
    }]);

    return LeaveDetailPage;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)(LeaveDetailPage);

/***/ }),

/***/ "qQXe":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reduxForm = __webpack_require__("ao4a");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _validation = __webpack_require__("4KT+");

var _fields = __webpack_require__("NACj");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _clientconstants = __webpack_require__("5LBi");

var CC = _interopRequireWildcard(_clientconstants);

var _reactRedux = __webpack_require__("RH2O");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EstimationTaskForm = function EstimationTaskForm(props) {
    logger.debug(logger.ESTIMATION_TASK_FORM_RENDER, props);
    var _id = props._id,
        pristine = props.pristine,
        submitting = props.submitting,
        reset = props.reset,
        features = props.features,
        handleSubmit = props.handleSubmit,
        isFromRepo = props.isFromRepo;

    return _react2.default.createElement(
        'form',
        { onSubmit: handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(_reduxForm.Field, { name: 'estimation._id', component: 'input', type: 'hidden' }),
            _react2.default.createElement(_reduxForm.Field, { name: '_id', component: 'input', type: 'hidden' }),
            _react2.default.createElement(
                'div',
                { className: 'col-md-6' },
                _react2.default.createElement(_reduxForm.Field, { name: 'name', readOnly: isFromRepo, component: _fields.renderText, label: "Task Name:",
                    validate: [_validation.required] })
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-6' },
                _react2.default.createElement(_reduxForm.Field, { name: 'estimatedHours', component: _fields.renderText, label: "Estimated Hours:",
                    validate: [_validation.required, _validation.number] })
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(_reduxForm.Field, { name: 'description', readOnly: isFromRepo, component: _fields.renderTextArea, label: 'Task Description:',
                    validate: [_validation.required],
                    rows: '10' })
            )
        ),
        !_id && _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-6' },
                _react2.default.createElement(_reduxForm.Field, { name: 'feature._id', readOnly: isFromRepo, component: _fields.renderSelect, label: "Feature:",
                    options: features,
                    valueField: '_id',
                    displayField: 'estimator.name',
                    optionalDisplayField: 'negotiator.name'
                })
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-6' },
                _react2.default.createElement(_reduxForm.Field, { name: 'type', component: _fields.renderSelect, label: "Type:", options: [{ _id: CC.TYPE_DEVELOPMENT, name: CC.TYPE_DEVELOPMENT }, { _id: CC.TYPE_MANAGEMENT, name: CC.TYPE_MANAGEMENT }, { _id: CC.TYPE_REVIEW, name: CC.TYPE_REVIEW }, { _id: CC.TYPE_TESTING, name: CC.TYPE_TESTING }],
                    showNoneOption: false

                })
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'row initiatEstimation' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-6 text-center' },
                _react2.default.createElement(
                    'button',
                    { type: 'submit', disabled: pristine || submitting,
                        className: 'btn customBtn' },
                    _id ? "Update" : "Submit"
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'col-md-6 text-center' },
                _react2.default.createElement(
                    'button',
                    { type: 'button', disabled: pristine || submitting, className: 'btn customBtn', onClick: reset },
                    'Reset'
                )
            )
        )
    );
};

EstimationTaskForm = (0, _reduxForm.reduxForm)({
    form: 'estimation-task'
})(EstimationTaskForm);

var selector = (0, _reduxForm.formValueSelector)('estimation-task');

EstimationTaskForm = (0, _reactRedux.connect)(function (state) {
    var _selector = selector(state, '_id', 'isFromRepo'),
        _id = _selector._id,
        isFromRepo = _selector.isFromRepo;

    return {
        _id: _id,
        isFromRepo: isFromRepo
    };
})(EstimationTaskForm);

exports.default = EstimationTaskForm;

/***/ }),

/***/ "qU8w":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var initialState = {
    workCalendar: {}
};

var employeeReducer = function employeeReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case AC.ADD_WORK_CALENDAR:
            return Object.assign({}, state, {
                workCalendar: action.calendar
            });
        case AC.RELEASE_PLAN_SELECTED:
            // clear past work calendar as user selected release plan again
            return Object.assign({}, state, {
                workCalendar: {}
            });
        default:
            return state;
    }
};

exports.default = employeeReducer;

/***/ }),

/***/ "quve":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EstimationTaskDialog = function EstimationTaskDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Add Task to Estimation'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(_containers.EstimationTaskFormContainer, null)
        )
    );
};

exports.default = EstimationTaskDialog;

/***/ }),

/***/ "qxSs":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _reactNotifications = __webpack_require__("B0Hd");

var _reduxForm = __webpack_require__("ao4a");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        showTechnologyAdditionForm: function showTechnologyAdditionForm() {
            logger.debug(logger.TECHNOLOGY_FORM_CONNECT, "onSubmit:values:");
            dispatch(A.showComponent(COC.TECHNOLOGY_FORM_DIALOG));
        },
        deleteTechnology: function deleteTechnology(TechnologyID) {
            return dispatch(A.deleteTechnologyOnServer(TechnologyID)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success('Technology Removed Successfully');
                } else {
                    _reactNotifications.NotificationManager.error('Technology Not removed!');
                    throw new _reduxForm.SubmissionError({ Technologies: "Technology Removal Failed" });
                }
            });
        }

    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        loggedInUser: state.user.loggedIn,
        technologies: state.technology.all
    };
};

var TechnologyListContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.TechnologyList);

exports.default = TechnologyListContainer;

/***/ }),

/***/ "rX+A":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var initialState = {
    showLoader: false, // used to show/hide loader gif
    ssrFlag: false, // used for server side rendering
    visibleComponents: [], // which components should be visible in a particular tab,
    allReleases: [],
    selectedReleaseID: undefined
};

var appReducer = function appReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];


    switch (action.type) {
        case AC.SHOW_LOADER:
            return Object.assign({}, state, {
                showLoader: true
            });
        case AC.HIDE_LOADER:
            return Object.assign({}, state, {
                showLoader: false
            });
        case AC.SHOW_COMPONENT_HIDE_OTHER:
            return Object.assign({}, state, {
                visibleComponents: [action.name]
            });
        case AC.SHOW_COMPONENT:
            return Object.assign({}, state, {
                visibleComponents: [].concat(_toConsumableArray(state.visibleComponents), [action.name])
            });
        case AC.HIDE_COMPONENT:
            return Object.assign({}, state, {
                visibleComponents: state.visibleComponents.filter(function (name) {
                    return name !== action.name;
                })
            });
        case AC.ADD_SSR_FLAG:
            var newState = Object.assign({}, state, {
                ssrFlag: true
            });
            console.log("new state is ", newState);
            return newState;
        case AC.CLEAR_SSR_FLAG:
            return Object.assign({}, state, {
                ssrFlag: false
            });
        default:
            return state;
    }
};

exports.default = appReducer;

/***/ }),

/***/ "riG4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.error = exports.info = exports.warn = exports.debug = exports.ATTENDENCE_SETTING_FORM_CONNECT = exports.ATTENDENCE_SETTING_FORM_RENDER = exports.ESTIMATION_FEATURE_DETAIL_RENDER = exports.ESTIMATION_FEATURE_BUTTONS = exports.ESTIMATION_FEATURE_RENDER = exports.ESTIMATION_TASK_BUTTONS = exports.ESTIMATION_TASK_LIFECYCLE = exports.ESTIMATION_TASK_RENDER = exports.ESTIMATION_DETAIL_RENDER = exports.PROJECT_FORM_CONNECT = exports.PROJECT_FORM_RENDER = exports.TECHNOLOGY_FORM_LIFECYCLE = exports.TECHNOLOGY_FORM_CONNECT = exports.TECHNOLOGY_FORM_RENDER = exports.ESTIMATION_LIST_CONNECT = exports.ESTIMATION_PROJECT_AWARD_FORM_SUBMIT = exports.ESTIMATION_PROJECT_AWARD_FORM_RENDER = exports.ESTIMATION_SUGGEST_FEATURE_FORM_SUBMIT = exports.ESTIMATION_FEATURE_FORM_SUBMIT = exports.ESTIMATION_FEATURE_FORM_RENDER = exports.ESTIMATION_TASK_FORM_RENDER = exports.ESTIMATION_TASK_FORM_SUBMIT = exports.ESTIMATION_INITIATE_FORM_RENDER = exports.ESTIMATION_INITIATE_FORM_SUBMIT = exports.USER_PROFILE_FORM_CONNECT = exports.CONTENT_MAIN_LIFECYCLE = exports.CONTENT_MAIN_RENDER = exports.CLIENT_FORM_CONNECT = exports.CLIENT_FORM_RENDER = exports.PERMISSION_THUNK = exports.PERMISSION_LIST_CONNECT = exports.PERMISSION_LIST_LIFECYCLE = exports.PERMISSION_LIST_RENDER = exports.PERMISSION_FORM_CONNECT = exports.PERMISSION_FORM_LIFECYCLE = exports.PERMISSION_FORM_RENDER = exports.USER_FORM_RENDER = exports.TABS_RENDER = exports.TABS_LIFE_CYCLE = exports.TABS_CHANGE_TAB = undefined;

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _clientconstants = __webpack_require__("5LBi");

var CC = _interopRequireWildcard(_clientconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

/*
LOG LEVEL
DEBUG - Would print all log statements (debug, info, warn, error)
INFO - Would ignore DEBUG logs
WARN - Would print log statements warn and error
ERROR - error log statements would be printed
 */

/*
 Setting trace number to any number would ensure that only those logs are printed that have that number as first parameter
 If trace number is set only those log statement would be printed that have that trace number (ir-respective of its type debug, info etc)
 Set trace number as undefined to print log statement based on its type and not by its number
*/

var TABS_CHANGE_TAB = exports.TABS_CHANGE_TAB = 'Tabs->changeTab():';
var TABS_LIFE_CYCLE = exports.TABS_LIFE_CYCLE = 'Tabs->lc():';
var TABS_RENDER = exports.TABS_RENDER = 'Tabs->render():';

var USER_FORM_RENDER = exports.USER_FORM_RENDER = 'UserForm->render():';

var PERMISSION_FORM_RENDER = exports.PERMISSION_FORM_RENDER = 'PermissionForm->render():';
var PERMISSION_FORM_LIFECYCLE = exports.PERMISSION_FORM_LIFECYCLE = 'PermissionForm->lc():';
var PERMISSION_FORM_CONNECT = exports.PERMISSION_FORM_CONNECT = 'PermissionForm->connect():';
var PERMISSION_LIST_RENDER = exports.PERMISSION_LIST_RENDER = 'PermissionList->render():';
var PERMISSION_LIST_LIFECYCLE = exports.PERMISSION_LIST_LIFECYCLE = 'PermissionList->lc():';
var PERMISSION_LIST_CONNECT = exports.PERMISSION_LIST_CONNECT = 'PermissionList->connect():';
var PERMISSION_THUNK = exports.PERMISSION_THUNK = 'Permission->thunk():';

var CLIENT_FORM_RENDER = exports.CLIENT_FORM_RENDER = 'ClientForm->render():';
var CLIENT_FORM_CONNECT = exports.CLIENT_FORM_CONNECT = 'ClientForm->connect():';

var CONTENT_MAIN_RENDER = exports.CONTENT_MAIN_RENDER = 'ContentMain->render():';
var CONTENT_MAIN_LIFECYCLE = exports.CONTENT_MAIN_LIFECYCLE = 'ContentMain->lc():';

var USER_PROFILE_FORM_CONNECT = exports.USER_PROFILE_FORM_CONNECT = 'UserProfileForm->connect():';
var ESTIMATION_INITIATE_FORM_SUBMIT = exports.ESTIMATION_INITIATE_FORM_SUBMIT = 'EstimationInitiateForm->submit():';
var ESTIMATION_INITIATE_FORM_RENDER = exports.ESTIMATION_INITIATE_FORM_RENDER = 'EstimationInitiateForm->render():';

var ESTIMATION_TASK_FORM_SUBMIT = exports.ESTIMATION_TASK_FORM_SUBMIT = 'EstimationTaskForm->submit():';
var ESTIMATION_TASK_FORM_RENDER = exports.ESTIMATION_TASK_FORM_RENDER = 'EstimationTaskForm->render():';
var ESTIMATION_FEATURE_FORM_RENDER = exports.ESTIMATION_FEATURE_FORM_RENDER = 'EstimationFeatureForm->render():';
var ESTIMATION_FEATURE_FORM_SUBMIT = exports.ESTIMATION_FEATURE_FORM_SUBMIT = 'EstimationFeatureForm->submit():';
var ESTIMATION_SUGGEST_FEATURE_FORM_SUBMIT = exports.ESTIMATION_SUGGEST_FEATURE_FORM_SUBMIT = 'EstimationSuggestFeatureForm->submit():';
var ESTIMATION_PROJECT_AWARD_FORM_RENDER = exports.ESTIMATION_PROJECT_AWARD_FORM_RENDER = 'EstimationProjectAwardForm->render():';
var ESTIMATION_PROJECT_AWARD_FORM_SUBMIT = exports.ESTIMATION_PROJECT_AWARD_FORM_SUBMIT = 'EstimationProjectAwardForm->submit():';

var ESTIMATION_LIST_CONNECT = exports.ESTIMATION_LIST_CONNECT = "EstimationList->connect():";

var TECHNOLOGY_FORM_RENDER = exports.TECHNOLOGY_FORM_RENDER = 'TechnologyForm->render():';
var TECHNOLOGY_FORM_CONNECT = exports.TECHNOLOGY_FORM_CONNECT = 'TechnologyForm->connect():';
var TECHNOLOGY_FORM_LIFECYCLE = exports.TECHNOLOGY_FORM_LIFECYCLE = 'TechnologyForm->lc():';

var PROJECT_FORM_RENDER = exports.PROJECT_FORM_RENDER = 'ProjectForm->render():';
var PROJECT_FORM_CONNECT = exports.PROJECT_FORM_CONNECT = 'ProjectForm->connect():';

var ESTIMATION_DETAIL_RENDER = exports.ESTIMATION_DETAIL_RENDER = 'EstimationDetail->render():';
var ESTIMATION_TASK_RENDER = exports.ESTIMATION_TASK_RENDER = 'EstimationTask->render():';
var ESTIMATION_TASK_LIFECYCLE = exports.ESTIMATION_TASK_LIFECYCLE = 'EstimationTask->lc():';
var ESTIMATION_TASK_BUTTONS = exports.ESTIMATION_TASK_BUTTONS = 'EstimationTask->buttons:';
var ESTIMATION_FEATURE_RENDER = exports.ESTIMATION_FEATURE_RENDER = 'EstimationFeature->render():';
var ESTIMATION_FEATURE_BUTTONS = exports.ESTIMATION_FEATURE_BUTTONS = 'EstimationFeature->buttons:';
var ESTIMATION_FEATURE_DETAIL_RENDER = exports.ESTIMATION_FEATURE_DETAIL_RENDER = 'EstimationFeatureDetail->render():';

var ATTENDENCE_SETTING_FORM_RENDER = exports.ATTENDENCE_SETTING_FORM_RENDER = 'AttendenceForm->render():';
var ATTENDENCE_SETTING_FORM_CONNECT = exports.ATTENDENCE_SETTING_FORM_CONNECT = 'AttendenceForm->connect():';

var traceCodes = [ESTIMATION_TASK_RENDER, ESTIMATION_FEATURE_RENDER, ESTIMATION_FEATURE_DETAIL_RENDER];
//let traceCodes = undefined
var logLevel = CC.DEBUG_LEVEL;

if (undefined == SC.PROD_ENV) {
    traceCodes = undefined;
    logLevel = CC.ERROR_LEVEL;
}

var debug = function debug() {
    for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {
        params[_key] = arguments[_key];
    }

    if (logLevel === CC.DEBUG_LEVEL) {
        var _console;

        if (traceCodes && traceCodes.indexOf(params[0]) != -1) (_console = console).log.apply(_console, ["DEBUG:"].concat(params));else if (!traceCodes) {
            var _console2;

            (_console2 = console).log.apply(_console2, ["DEBUG:"].concat(params));
        }
    }
};

var info = function info() {
    for (var _len2 = arguments.length, params = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        params[_key2] = arguments[_key2];
    }

    if (logLevel === CC.DEBUG_LEVEL || logLevel === CC.INFO_LEVEL) {
        var _console3;

        if (traceCodes && traceCodes.indexOf(params[0]) != -1) (_console3 = console).log.apply(_console3, ["INFO:"].concat(params));else if (!traceCodes) {
            var _console4;

            (_console4 = console).log.apply(_console4, ["INFO:"].concat(params));
        }
    }
};

var warn = function warn() {
    for (var _len3 = arguments.length, params = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        params[_key3] = arguments[_key3];
    }

    if (logLevel === CC.DEBUG_LEVEL || logLevel === CC.INFO_LEVEL || logLevel === CC.WARNING_LEVEL) {
        var _console5;

        if (traceCodes && traceCodes.indexOf(params[0]) != -1) (_console5 = console).log.apply(_console5, ["WARN:"].concat(params));else if (!traceCodes) {
            var _console6;

            (_console6 = console).log.apply(_console6, ["WARN:"].concat(params));
        }
    }
};

var error = function error() {
    for (var _len4 = arguments.length, params = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        params[_key4] = arguments[_key4];
    }

    if (logLevel === CC.DEBUG_LEVEL || logLevel === CC.INFO_LEVEL || logLevel === CC.WARNING_LEVEL || logLevel === CC.ERROR_LEVEL) {
        var _console7;

        if (traceCodes && traceCodes.indexOf(params[0]) != -1) (_console7 = console).log.apply(_console7, ["ERROR:"].concat(params));else if (!traceCodes) {
            var _console8;

            (_console8 = console).log.apply(_console8, ["ERROR:"].concat(params));
        }
    }
};

exports.debug = debug;
exports.warn = warn;
exports.info = info;
exports.error = error;

/***/ }),

/***/ "rp4x":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.hideLoader = exports.showLoader = exports.clearSSRFlag = exports.addSSRFlag = exports.hideComponent = exports.showComponent = exports.showComponentHideOthers = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var showComponentHideOthers = exports.showComponentHideOthers = function showComponentHideOthers(name) {
    return {
        type: AC.SHOW_COMPONENT_HIDE_OTHER,
        name: name
    };
};

var showComponent = exports.showComponent = function showComponent(name) {
    return {
        type: AC.SHOW_COMPONENT,
        name: name
    };
};

var hideComponent = exports.hideComponent = function hideComponent(name) {
    return {
        type: AC.HIDE_COMPONENT,
        name: name
    };
};

var addSSRFlag = exports.addSSRFlag = function addSSRFlag() {
    return {
        type: AC.ADD_SSR_FLAG
    };
};

var clearSSRFlag = exports.clearSSRFlag = function clearSSRFlag() {
    return {
        type: AC.CLEAR_SSR_FLAG
    };
};

var showLoader = exports.showLoader = function showLoader() {
    return {
        type: AC.SHOW_LOADER
    };
};

var hideLoader = exports.hideLoader = function hideLoader() {
    return {
        type: AC.HIDE_LOADER
    };
};

/***/ }),

/***/ "sGKg":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactRouterDom = __webpack_require__("F8kA");

var _index = __webpack_require__("ZhKb");

var _clientMsg = __webpack_require__("jURI");

var CM = _interopRequireWildcard(_clientMsg);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ClientList = function (_Component) {
    _inherits(ClientList, _Component);

    function ClientList(props) {
        _classCallCheck(this, ClientList);

        var _this = _possibleConstructorReturn(this, (ClientList.__proto__ || Object.getPrototypeOf(ClientList)).call(this, props));

        _this.state = {
            showClientDeletionDialog: false,
            addRow: null
        };

        return _this;
    }

    _createClass(ClientList, [{
        key: 'onClose',
        value: function onClose() {
            this.setState({ showClientDeletionDialog: false });
        }
    }, {
        key: 'OkConfirmationForDeletingClient',
        value: function OkConfirmationForDeletingClient() {
            this.setState({ showClientDeletionDialog: false });
            this.props.deleteClient(this.state.addRow);
        }
    }, {
        key: 'viewDeleteButton',
        value: function viewDeleteButton(cell, row, enumObject, rowIndex) {
            var _this2 = this;

            return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom ', type: 'button', onClick: function onClick() {
                        _this2.setState({ showClientDeletionDialog: true }), _this2.setState({ addRow: row._id });
                    } },
                _react2.default.createElement('i', { className: 'fa fa-trash' })
            );
        }
    }, {
        key: 'viewEditButton',
        value: function viewEditButton(cell, row, enumObject, rowIndex) {
            var _this3 = this;

            return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom', type: 'button', onClick: function onClick() {
                        _this3.props.showClientEditForm(row);
                    } },
                _react2.default.createElement('i', { className: 'fa fa-pencil' })
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            return _react2.default.createElement(
                'div',
                null,
                this.state.showClientDeletionDialog && _react2.default.createElement(_index.ConfirmationDialog, { show: true, onConfirm: this.OkConfirmationForDeletingClient.bind(this),
                    title: CM.DELETE_CLIENT, onClose: this.onClose.bind(this),
                    body: CM.DELETE_CLIENT_BODY }),
                _react2.default.createElement(
                    'div',
                    { key: 'client_list', className: 'clearfix' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-12 pad' },
                            _react2.default.createElement(
                                'div',
                                { className: 'col-md-12' },
                                _react2.default.createElement(
                                    'button',
                                    { className: 'btn customBtn',
                                        onClick: function onClick() {
                                            return _this4.props.showClientCreationForm();
                                        } },
                                    'Create Client'
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'estimation' },
                                    _react2.default.createElement(
                                        _reactBootstrapTable.BootstrapTable,
                                        { options: this.options, data: this.props.clients,
                                            striped: true,
                                            hover: true },
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { columnTitle: true, isKey: true, dataField: '_id',
                                                hidden: true },
                                            'ID'
                                        ),
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { columnTitle: true, dataField: 'name' },
                                            'Client Name'
                                        ),
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { width: '15%', dataField: 'editButton',
                                                dataFormat: this.viewEditButton.bind(this) },
                                            'Edit Client'
                                        ),
                                        _react2.default.createElement(
                                            _reactBootstrapTable.TableHeaderColumn,
                                            { width: '15%', dataField: 'deleteButton',
                                                dataFormat: this.viewDeleteButton.bind(this) },
                                            'Delete Client'
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return ClientList;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)(ClientList);

/***/ }),

/***/ "sLjB":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reduxForm = __webpack_require__("ao4a");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _fields = __webpack_require__("NACj");

var _validation = __webpack_require__("4KT+");

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactRouterDom = __webpack_require__("F8kA");

var _reactRedux = __webpack_require__("RH2O");

var _reactWidgetsMoment = __webpack_require__("Utwc");

var _reactWidgetsMoment2 = _interopRequireDefault(_reactWidgetsMoment);

var _lodash = __webpack_require__("M4fF");

var _lodash2 = _interopRequireDefault(_lodash);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _clientconstants = __webpack_require__("5LBi");

var CC = _interopRequireWildcard(_clientconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_moment2.default.locale('en');
(0, _reactWidgetsMoment2.default)();

var ReleasePlanAddToReleaseForm = function (_Component) {
    _inherits(ReleasePlanAddToReleaseForm, _Component);

    function ReleasePlanAddToReleaseForm(props) {
        _classCallCheck(this, ReleasePlanAddToReleaseForm);

        return _possibleConstructorReturn(this, (ReleasePlanAddToReleaseForm.__proto__ || Object.getPrototypeOf(ReleasePlanAddToReleaseForm)).call(this, props));
    }

    _createClass(ReleasePlanAddToReleaseForm, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                pristine = _props.pristine,
                submitting = _props.submitting,
                change = _props.change,
                reset = _props.reset;
            var _props2 = this.props,
                release = _props2.release,
                releasePlans = _props2.releasePlans,
                iterations = _props2.iterations,
                iteration_type = _props2.iteration_type;

            console.log("iteration_type", iteration_type);
            return _react2.default.createElement(
                'form',
                { onSubmit: this.props.handleSubmit },
                _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'estimation._id', component: 'input', type: 'hidden' }),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-6' },
                            _react2.default.createElement(_reduxForm.Field, { name: 'iteration_type',
                                component: _fields.renderSelect,
                                className: "form-control SelectReleasePlanAddToRelease",
                                label: 'Select Iteration type:',
                                options: iterations,
                                displayField: "name",
                                valueField: "name"

                            })
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-6' },
                            _react2.default.createElement(_reduxForm.Field, { name: 'type', component: _fields.renderSelect, label: "Type:", options: [{ _id: CC.TYPE_DEVELOPMENT, name: CC.TYPE_DEVELOPMENT }, { _id: CC.TYPE_MANAGEMENT, name: CC.TYPE_MANAGEMENT }, { _id: CC.TYPE_REVIEW, name: CC.TYPE_REVIEW }, { _id: CC.TYPE_TESTING, name: CC.TYPE_TESTING }],
                                showNoneOption: false

                            })
                        )
                    ),
                    _react2.default.createElement('hr', null),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        iteration_type === SC.ITERATION_TYPE_PLANNED && _react2.default.createElement(
                            'div',
                            { className: 'col-md-6' },
                            _react2.default.createElement(_reduxForm.Field, { name: 'estimatedBilledHours', component: _fields.renderText, label: "Negotiated Billed Hours:",
                                validate: [_validation.required, _validation.number] })
                        ),
                        iteration_type === SC.ITERATION_TYPE_PLANNED && _react2.default.createElement(
                            'div',
                            { className: 'col-md-6' },
                            _react2.default.createElement(_reduxForm.Field, { name: 'estimatedHours', component: _fields.renderText,
                                validate: [_validation.required, _validation.number],
                                label: "Estimated Hours:" })
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-12' },
                            _react2.default.createElement(_reduxForm.Field, { name: 'name', component: _fields.renderText, label: "Name:", validate: [_validation.required] })
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-12' },
                            _react2.default.createElement(_reduxForm.Field, { name: 'description', component: _fields.renderTextArea, label: 'Description:',
                                validate: [_validation.required], rows: '10' })
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'row initiatEstimation' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-6 text-center' },
                        _react2.default.createElement(
                            'button',
                            { type: 'submit', disabled: pristine || submitting, className: 'btn customBtn' },
                            'Submit'
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-6 text-center' },
                        _react2.default.createElement(
                            'button',
                            { type: 'button', disabled: pristine || submitting, onClick: reset,
                                className: 'btn customBtn' },
                            'Reset'
                        )
                    )
                )
            );
        }
    }]);

    return ReleasePlanAddToReleaseForm;
}(_react.Component);

ReleasePlanAddToReleaseForm = (0, _reduxForm.reduxForm)({
    form: 'release-plan-add-to-release'
})(ReleasePlanAddToReleaseForm);

var selector = (0, _reduxForm.formValueSelector)('release-plan-add-to-release');

ReleasePlanAddToReleaseForm = (0, _reactRedux.connect)(function (state) {
    var iteration_type = selector(state, 'iteration_type');
    return {
        iteration_type: iteration_type
    };
})(ReleasePlanAddToReleaseForm);

exports.default = (0, _reactRouterDom.withRouter)(ReleasePlanAddToReleaseForm);

/***/ }),

/***/ "sZnd":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var initialState = {
    all: [],
    selected: {}
};

var permissionReducer = function permissionReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case AC.ADD_PERMISSIONS:
            return Object.assign({}, state, { all: action.permissions });
        case AC.ADD_PERMISSION:
            return Object.assign({}, state, { all: [].concat(_toConsumableArray(state.all), [action.permission]) });
        case AC.EDIT_PERMISSION:
            return Object.assign({}, state, { all: state.all.map(function (item) {
                    return item._id == action.permission._id ? action.permission : item;
                }) });
        case AC.DELETE_PERMISSION:
            return Object.assign({}, state, { all: state.all.filter(function (item) {
                    return item._id !== action.PermissionID;
                }) });
        default:
            return state;
    }
};

exports.default = permissionReducer;

/***/ }),

/***/ "t44Q":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LeaveApproveDialog = function LeaveApproveDialog(props) {
    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { className: 'estimationModal', show: props.show, onHide: props.close },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            { closeButton: true },
            _react2.default.createElement(
                'div',
                { className: 'clearfix ModalHeading' },
                _react2.default.createElement('div', { className: 'col-md-1 ModalSideLabel' }),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Leave Approve'
                )
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            _react2.default.createElement(
                'h4',
                null,
                'Are you sure you want to ',
                _react2.default.createElement(
                    'span',
                    null,
                    'Approve '
                ),
                'this leave. Please confirm!'
            ),
            _react2.default.createElement(_containers.LeaveApprovalReasonFormContainer, { isApproved: true })
        )
    );
};

exports.default = LeaveApproveDialog;

/***/ }),

/***/ "tBtA":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getAllDevelopmentTypesFromServer = exports.deleteDevelopmentType = exports.addDevelopmentType = exports.addDevelopmentTypes = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var addDevelopmentTypes = exports.addDevelopmentTypes = function addDevelopmentTypes(developmentTypes) {
    return {
        type: AC.ADD_DEVELOPMENT_TYPES,
        developmentTypes: developmentTypes
    };
};

var addDevelopmentType = exports.addDevelopmentType = function addDevelopmentType(developmentType) {
    return {
        type: AC.ADD_DEVELOPMENT_TYPE,
        developmentType: developmentType
    };
};

var deleteDevelopmentType = exports.deleteDevelopmentType = function deleteDevelopmentType(developmentTypeID) {
    return {
        type: AC.DELETE_DEVELOPMENT_TYPE,
        developmentTypeID: developmentTypeID
    };
};

var getAllDevelopmentTypesFromServer = exports.getAllDevelopmentTypesFromServer = function getAllDevelopmentTypesFromServer() {
    return function (dispatch) {
        return fetch('/api/developmentTypes', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addDevelopmentTypes(json.data));
            }
        });
    };
};

/***/ }),

/***/ "tMv0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactBootstrapDialog = __webpack_require__("OLzJ");

var _reactBootstrapDialog2 = _interopRequireDefault(_reactBootstrapDialog);

var _clientconstants = __webpack_require__("5LBi");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HolidayList = function (_Component) {
    _inherits(HolidayList, _Component);

    function HolidayList(props) {
        _classCallCheck(this, HolidayList);

        return _possibleConstructorReturn(this, (HolidayList.__proto__ || Object.getPrototypeOf(HolidayList)).call(this, props));
    }

    _createClass(HolidayList, [{
        key: 'editCellButton',
        value: function editCellButton(cell, row, enumObject, rowIndex) {
            var _this2 = this;

            return _react2.default.createElement('button', { className: 'glyphicon glyphicon-pencil pull-left btn btn-custom', type: 'button',
                onClick: function onClick() {
                    return _this2.props.editHoliday(row);
                } });
        }
    }, {
        key: 'deleteCellButton',
        value: function deleteCellButton(cell, row, enumObject, rowIndex) {
            var _this3 = this;

            return _react2.default.createElement('button', { className: 'glyphicon glyphicon-trash pull-left btn btn-custom', type: 'button',
                onClick: function onClick() {
                    _this3.props.deleteHoliday(row);
                } });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            var _props = this.props,
                allYears = _props.allYears,
                holidays = _props.holidays;

            return _react2.default.createElement(
                'div',
                { className: 'row' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-10' },
                    _react2.default.createElement(
                        'button',
                        { className: 'btn btn-default btn-submit addBtn', onClick: function onClick() {
                                return _this4.props.showHolidayForm();
                            } },
                        'Create Holiday'
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'tab' },
                        allYears.map(function (y, index) {
                            return _react2.default.createElement(
                                'span',
                                { key: "year" + index, onClick: function onClick() {
                                        _this4.props.getHolidaysOfYear(y);
                                    } },
                                y
                            );
                        })
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.BootstrapTable,
                        { options: this.options, data: holidays, striped: true,
                            hoveNr: true },
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { isKey: true, dataField: '_id', hidden: true },
                            'ID'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '26%', dataField: 'dateString' },
                            'Date'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '20%', dataField: 'holidayName', dataSort: true },
                            'Holiday Name'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '20%', dataField: 'description',
                                dataSort: true },
                            'Description'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '20%', dataField: 'holidayType', dataSort: true },
                            'Holiday Type'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '8%', dataField: 'button', dataFormat: this.editCellButton.bind(this) },
                            _react2.default.createElement('i', {
                                className: 'fa fa-pencil' })
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '5%', dataField: 'button',
                                dataFormat: this.deleteCellButton.bind(this) },
                            _react2.default.createElement('i', { className: 'fa fa-trash' })
                        )
                    )
                )
            );
        }
    }]);

    return HolidayList;
}(_react.Component);

exports.default = HolidayList;

/***/ }),

/***/ "tsbO":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getAttendanceSettingFromServer = exports.addAttendanceSettingOnServer = exports.addAttendanceSetting = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var addAttendanceSetting = exports.addAttendanceSetting = function addAttendanceSetting(attendanceSetting) {
    return {
        type: AC.ADD_UPDATE_ATTENDANCE_SETTING,
        attendanceSetting: attendanceSetting
    };
};

var addAttendanceSettingOnServer = exports.addAttendanceSettingOnServer = function addAttendanceSettingOnServer(formInput) {
    return function (dispatch, getState) {
        return fetch('/api/attendance/attendance-settings', {
            method: "post",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success && json.data) {
                dispatch(addAttendanceSetting(json.data));
            }
            return json;
        });
    };
};

var getAttendanceSettingFromServer = exports.getAttendanceSettingFromServer = function getAttendanceSettingFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/attendance/attendance-settings', {
            method: "get",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success && json.data) {
                dispatch(initialize('attendance-setting', json.data));
                dispatch(addAttendanceSetting(json.data));
            }
            return json;
        });
    };
};

/***/ }),

/***/ "u2UG":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _containers = __webpack_require__("GF1l");

var _reactRouterDom = __webpack_require__("F8kA");

var _reactNotifications = __webpack_require__("B0Hd");

var _ = __webpack_require__("ZhKb");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ReportingTaskPage = function (_Component) {
    _inherits(ReportingTaskPage, _Component);

    function ReportingTaskPage(props) {
        _classCallCheck(this, ReportingTaskPage);

        var _this = _possibleConstructorReturn(this, (ReportingTaskPage.__proto__ || Object.getPrototypeOf(ReportingTaskPage)).call(this, props));

        _this.onReportedStatusChange = _this.onReportedStatusChange.bind(_this);
        _this.onReleaseSelect = _this.onReleaseSelect.bind(_this);
        _this.state = {
            showDescriptionDialog: false
        };
        return _this;
    }

    _createClass(ReportingTaskPage, [{
        key: 'rowClassNameFormat',
        value: function rowClassNameFormat(row, rowIdx) {
            console.log("rowClassNameFormat called " + row.rowDataChanged);
            return row.rowDataChanged ? 'td-row-changed' : row.report.status === SC.STATUS_COMPLETED ? 'td-row-completed' : row.report.status === SC.STATUS_PENDING ? 'td-row-pending' : 'td-row-unreported';
        }
    }, {
        key: 'formatManager',
        value: function formatManager(row) {
            if (row) {
                return row.firstName + ' ' + row.lastName;
            }
            return '';
        }
    }, {
        key: 'formatLeader',
        value: function formatLeader(row) {
            if (row) {
                return row.firstName + ' ' + row.lastName;
            }
            return '';
        }
    }, {
        key: 'formatTask',
        value: function formatTask(cell, row) {
            if (row.task && row.task.name) return row.task.name;
            return '';
        }
    }, {
        key: 'formatPlannedHours',
        value: function formatPlannedHours(cell, row) {
            if (row.planning && row.planning.plannedHours) return row.planning.plannedHours;
            return '';
        }
    }, {
        key: 'formatReportStatus',
        value: function formatReportStatus(report) {

            if (report && report.status) return report.status;
            return SC.STATUS_UNREPORTED;
        }
    }, {
        key: 'formatReportedHours',
        value: function formatReportedHours(cell, row) {
            if (cell) return cell;else if (row.report && row.report.reportedHours) {
                row.reportedHours = row.report.reportedHours;
                return row.report.reportedHours;
            }
            return 0;
        }
    }, {
        key: 'viewEditButton',
        value: function viewEditButton(cell, row, enumObject, rowIndex) {
            return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom', type: 'button', onClick: function onClick() {
                        console.log('edit');
                    } },
                _react2.default.createElement('i', { className: 'fa fa-pencil' })
            );
        }
    }, {
        key: 'viewCompleteButton',
        value: function viewCompleteButton(cell, row) {
            var _this2 = this;

            return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom ', type: 'button', style: { padding: '0px', border: '0' }, onClick: function onClick() {
                        if (row.reportedHours == null) {
                            _reactNotifications.NotificationManager.error('Please select worked hours!');
                        } else {
                            row.rowDataChanged = false;
                            row.status = SC.STATUS_COMPLETED;
                            _this2.props.reportTask(row, _this2.props.dateOfReport, _this2.props.iterationType);
                        }
                    } },
                _react2.default.createElement('img', { src: '/images/completed.png' })
            );
        }
    }, {
        key: 'viewPendingButton',
        value: function viewPendingButton(cell, row) {
            var _this3 = this;

            return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom ', type: 'button', style: { padding: '0px', border: '0' }, onClick: function onClick() {
                        if (row.reportedHours == null) {
                            _reactNotifications.NotificationManager.error('Please select worked hours!');
                        } else {
                            row.rowDataChanged = false;

                            row.status = SC.STATUS_PENDING;
                            _this3.props.reportTask(row, _this3.props.dateOfReport, _this3.props.iterationType);
                        }
                    } },
                _react2.default.createElement('img', { src: '/images/pending.png' })
            );
        }
    }, {
        key: 'viewReportButton',
        value: function viewReportButton(cell, row) {
            var _this4 = this;

            return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom ', type: 'button', style: { padding: '0px', border: '0' }, onClick: function onClick() {
                        if (row.reportedHours == null) {
                            _reactNotifications.NotificationManager.error('Please select worked hours!');
                        } else {
                            row.rowDataChanged = false;

                            row.status = SC.STATUS_PENDING;
                            _this4.props.reportTask(row, _this4.props.dateOfReport, _this4.props.iterationType);
                        }
                    } },
                _react2.default.createElement('img', { src: '/images/report.png' })
            );
        }
    }, {
        key: 'viewDetailButton',
        value: function viewDetailButton(cell, row, enumObject, rowIndex) {
            var _this5 = this;

            return _react2.default.createElement(
                'button',
                { className: ' btn btn-custom ', type: 'button', onClick: function onClick() {
                        _this5.props.taskPlanSelected(row).then(function (json) {
                            if (json.success) {
                                _this5.props.history.push('/app-home/reporting-task-detail');
                                _this5.props.showTaskDetailPage();
                            }
                            return json;
                        });
                    } },
                _react2.default.createElement('i', { className: 'fa fa-eye' })
            );
        }
    }, {
        key: 'onReportedStatusChange',
        value: function onReportedStatusChange(status) {
            this.props.setReportedStatus(this.props.releaseID, this.props.dateOfReport, this.props.iterationType, status);
        }
    }, {
        key: 'onReleaseSelect',
        value: function onReleaseSelect(releaseID) {
            this.props.setReleaseID(releaseID, this.props.dateOfReport, this.props.iterationType, this.props.reportedStatus);
        }
    }, {
        key: 'onIterationTypeChange',
        value: function onIterationTypeChange(type) {
            this.props.setIterationType(this.props.releaseID, this.props.dateOfReport, type, this.props.reportedStatus);
        }
    }, {
        key: 'onBeforeSaveCell',
        value: function onBeforeSaveCell(row, cellName, cellValue) {
            console.log("onBeforeSaveCell called ", cellName, cellValue);
        }
    }, {
        key: 'onAfterSaveCell',
        value: function onAfterSaveCell(row, cellName, cellValue) {
            console.log("onAfterSaveCell called ", cellName, cellValue, row.rowDataChanged);
            row.rowDataChanged = true;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this6 = this;

            var _props = this.props,
                allReleases = _props.allReleases,
                releases = _props.releases,
                reportedStatus = _props.reportedStatus,
                releaseID = _props.releaseID,
                iterationType = _props.iterationType;

            var cellEditProp = {
                mode: 'click',
                blurToSave: true,
                beforeSaveCell: this.onBeforeSaveCell,
                afterSaveCell: this.onAfterSaveCell
            };
            console.log("releases", releases);
            return _react2.default.createElement(
                'div',
                { key: 'estimation_list', className: 'clearfix' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-12' },
                    _react2.default.createElement(_containers.ReportingDateNavBarContainer, { reportedStatus: reportedStatus, releaseID: releases })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-12' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12 releaseOption releaseDetailSearchContent' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-4 ' },
                            _react2.default.createElement(
                                'div',
                                null,
                                _react2.default.createElement(
                                    'select',
                                    {
                                        className: 'form-control',
                                        title: 'Select Type',
                                        value: iterationType,
                                        onChange: function onChange(type) {
                                            return _this6.onIterationTypeChange(type.target.value);
                                        } },
                                    _react2.default.createElement(
                                        'option',
                                        { key: SC.ITERATION_TYPE_PLANNED,
                                            value: SC.ITERATION_TYPE_PLANNED },
                                        SC.ITERATION_TYPE_PLANNED
                                    ),
                                    _react2.default.createElement(
                                        'option',
                                        { key: SC.ITERATION_TYPE_UNPLANNED,
                                            value: SC.ITERATION_TYPE_UNPLANNED },
                                        SC.ITERATION_TYPE_UNPLANNED
                                    )
                                )
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-4 ' },
                            _react2.default.createElement(
                                'div',
                                null,
                                _react2.default.createElement(
                                    'select',
                                    {
                                        value: releaseID,
                                        className: 'form-control',
                                        title: 'Select Flag',
                                        onChange: function onChange(project) {
                                            return _this6.onReleaseSelect(project.target.value);
                                        } },
                                    _react2.default.createElement(
                                        'option',
                                        { key: SC.ALL, value: SC.ALL },
                                        'All Project'
                                    ),
                                    allReleases && allReleases.length ? allReleases.map(function (release, idx) {
                                        return _react2.default.createElement(
                                            'option',
                                            {
                                                key: idx,
                                                value: release._id },
                                            release.project.name,
                                            ' (',
                                            release.name,
                                            ')'
                                        );
                                    }) : null
                                )
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-4' },
                            _react2.default.createElement(
                                'div',
                                null,
                                _react2.default.createElement(
                                    'select',
                                    {
                                        className: 'form-control',
                                        title: 'Select Status',
                                        value: reportedStatus,
                                        onChange: function onChange(status) {
                                            return _this6.onReportedStatusChange(status.target.value);
                                        } },
                                    _react2.default.createElement(
                                        'option',
                                        { key: SC.ALL, value: SC.ALL },
                                        'All Task Status'
                                    ),
                                    _react2.default.createElement(
                                        'option',
                                        { key: SC.REPORT_UNREPORTED,
                                            value: SC.REPORT_UNREPORTED },
                                        SC.REPORT_UNREPORTED
                                    ),
                                    _react2.default.createElement(
                                        'option',
                                        { key: SC.REPORT_PENDING,
                                            value: SC.REPORT_PENDING },
                                        SC.REPORT_PENDING
                                    ),
                                    _react2.default.createElement(
                                        'option',
                                        { key: SC.REPORT_COMPLETED,
                                            value: SC.REPORT_COMPLETED },
                                        SC.REPORT_COMPLETED
                                    )
                                )
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'estimation reporting' },
                    iterationType == SC.ITERATION_TYPE_PLANNED && releases && releases.length ? releases.map(function (release, idx) {
                        return _react2.default.createElement(
                            'div',
                            { key: release._id },
                            _react2.default.createElement(
                                _reactBootstrapTable.BootstrapTable,
                                { options: _this6.options,
                                    data: release && release.tasks && release.tasks.length > 0 ? release.tasks : [],
                                    striped: true,
                                    hover: true,
                                    trClassName: _this6.rowClassNameFormat.bind(_this6),
                                    cellEdit: cellEditProp },
                                _react2.default.createElement(_reactBootstrapTable.TableHeaderColumn, { columnTitle: true, isKey: true, dataField: '_id', hidden: true }),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { row: '0', colSpan: '6',
                                        dataAlign: 'center' },
                                    release.releaseName
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { row: '1', editable: false, width: '10%', columnTitle: 'View Detail',
                                        dataField: 'detailButton',
                                        dataFormat: _this6.viewDetailButton.bind(_this6), dataAlign: 'center' },
                                    'View Detail'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { row: '1', editable: false, width: '20%', columnTitle: true, dataField: 'task',
                                        dataFormat: _this6.formatTask,
                                        dataSort: true, dataAlign: 'center' },
                                    'Task Name'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { row: '1', width: '12%', columnTitle: true, dataField: 'planning',
                                        dataFormat: _this6.formatPlannedHours, editable: false,
                                        dataAlign: 'center'
                                    },
                                    ' planned hours'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { row: '1', width: '15%', columnTitle: true, dataField: 'reportedHours',
                                        dataFormat: _this6.formatReportedHours,
                                        editable: {
                                            type: 'select',
                                            options: {
                                                values: ['0', '0.5', '1', '1.5', '2', '2.5', '3', '3.5', '4', '4.5', '5', '5.5', '6', '6.5', '7', '7.5', '8', '8.5', '9', '9.5', '10', '10.5', '11', '11.5', '12']
                                            }
                                        },
                                        dataAlign: 'center'
                                    },
                                    'Worked Hours'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { row: '1', editable: false, width: '7%',
                                        columnTitle: 'Reported Status',
                                        dataField: 'report',
                                        dataFormat: _this6.formatReportStatus.bind(_this6),
                                        dataAlign: 'center' },
                                    'Status'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { row: '1', editable: false, width: '7%',
                                        columnTitle: 'Mark as Complete',
                                        dataField: 'Complete',
                                        dataAlign: 'center',
                                        dataFormat: _this6.viewCompleteButton.bind(_this6) },
                                    'Complete'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { row: '1', editable: false, width: '7%',
                                        columnTitle: 'Mark as Pending',
                                        dataField: 'Pending',
                                        dataAlign: 'center',
                                        dataFormat: _this6.viewPendingButton.bind(_this6) },
                                    'Pending'
                                )
                            )
                        );
                    }) : iterationType == SC.ITERATION_TYPE_UNPLANNED && releases && releases.length ? releases.map(function (release, idx) {
                        return _react2.default.createElement(
                            'div',
                            { key: release._id },
                            _react2.default.createElement(
                                _reactBootstrapTable.BootstrapTable,
                                { options: _this6.options,
                                    data: release && release.tasks && release.tasks.length > 0 ? release.tasks : [],
                                    striped: true,
                                    hover: true,
                                    trClassName: _this6.rowClassNameFormat.bind(_this6),
                                    cellEdit: cellEditProp },
                                _react2.default.createElement(_reactBootstrapTable.TableHeaderColumn, { columnTitle: true, isKey: true, dataField: '_id', hidden: true }),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { row: '0', colSpan: '7',
                                        dataAlign: 'center' },
                                    release.releaseName
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { row: '1', editable: false, width: '20%', columnTitle: 'View Detail',
                                        dataField: 'detailButton',
                                        dataFormat: _this6.viewDetailButton.bind(_this6),
                                        dataAlign: 'center'
                                    },
                                    'View Detail'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { row: '1', editable: false, width: '40%', columnTitle: true, dataField: 'task',
                                        dataFormat: _this6.formatTask,
                                        dataSort: true, dataAlign: 'center' },
                                    'Task Name'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { row: '1', width: '20%', columnTitle: true, dataField: 'reportedHours',
                                        dataFormat: _this6.formatReportedHours,
                                        editable: {
                                            type: 'select',
                                            options: {
                                                values: ['0', '0.5', '1', '1.5', '2', '2.5', '3', '3.5', '4', '4.5', '5', '5.5', '6', '6.5', '7', '7.5', '8', '8.5', '9', '9.5', '10', '10.5', '11', '11.5', '12']
                                            }
                                        },
                                        dataAlign: 'center'
                                    },
                                    'Worked Hours'
                                ),
                                _react2.default.createElement(
                                    _reactBootstrapTable.TableHeaderColumn,
                                    { row: '1', editable: false, width: '20%',
                                        columnTitle: 'Report Hours',
                                        dataField: 'Report',
                                        dataAlign: 'center',
                                        dataFormat: _this6.viewReportButton.bind(_this6) },
                                    'Report'
                                )
                            )
                        );
                    }) : _react2.default.createElement(
                        'label',
                        null,
                        ' No tasks found for reporting '
                    )
                )
            );
        }
    }]);

    return ReportingTaskPage;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)(ReportingTaskPage);

/***/ }),

/***/ "uJao":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

var _validation = __webpack_require__("4KT+");

var _reactRedux = __webpack_require__("RH2O");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LeaveSettingForm = function (_Component) {
    _inherits(LeaveSettingForm, _Component);

    function LeaveSettingForm(props) {
        _classCallCheck(this, LeaveSettingForm);

        return _possibleConstructorReturn(this, (LeaveSettingForm.__proto__ || Object.getPrototypeOf(LeaveSettingForm)).call(this, props));
    }

    _createClass(LeaveSettingForm, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                handleSubmit = _props.handleSubmit,
                pristine = _props.pristine,
                submitting = _props.submitting,
                _id = _props._id;

            return _react2.default.createElement(
                'form',
                { key: 'LeaveSettingForm', onSubmit: this.props.handleSubmit },
                _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-4' },
                        _react2.default.createElement(_reduxForm.Field, { name: '_id', component: 'input', type: 'hidden' }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'casualLeaves', label: 'Casual Leaves:', component: _fields.renderField,
                            validate: [_validation.required, _validation.number] }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'paidLeaves', label: 'Paid Leaves:', component: _fields.renderField,
                            validate: [_validation.required, _validation.number] }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'maternityLeaves', label: 'Maternity Leaves:', component: _fields.renderField,
                            validate: [_validation.required] }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'paternityLeaves', label: 'Paternity Leaves:', component: _fields.renderField,
                            validate: [_validation.required, _validation.number] }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'specialLeaves', label: 'Special Leaves:', component: _fields.renderField,
                            validate: [_validation.required, _validation.number] }),
                        _react2.default.createElement(
                            'button',
                            { type: 'submit',
                                disabled: pristine || submitting,
                                className: 'btn btn-submit' },
                            !this.props._id && "Create" || this.props._id && "Update"
                        )
                    )
                )
            );
        }
    }]);

    return LeaveSettingForm;
}(_react.Component);

LeaveSettingForm = (0, _reduxForm.reduxForm)({
    form: 'leave-setting'
})(LeaveSettingForm);

var selector = (0, _reduxForm.formValueSelector)('leave-setting');

LeaveSettingForm = (0, _reactRedux.connect)(function (state) {
    var _id = selector(state, '_id');
    return { _id: _id };
})(LeaveSettingForm);

exports.default = LeaveSettingForm;

/***/ }),

/***/ "uewT":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

var _validation = __webpack_require__("4KT+");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AdminUserForm = function (_Component) {
    _inherits(AdminUserForm, _Component);

    function AdminUserForm(props) {
        _classCallCheck(this, AdminUserForm);

        return _possibleConstructorReturn(this, (AdminUserForm.__proto__ || Object.getPrototypeOf(AdminUserForm)).call(this, props));
    }

    _createClass(AdminUserForm, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                handleSubmit = _props.handleSubmit,
                pristine = _props.pristine,
                reset = _props.reset,
                submitting = _props.submitting;

            return [_react2.default.createElement(
                'div',
                { key: 'AdminUserFormBackButton' },
                _react2.default.createElement(
                    'button',
                    { type: 'button',
                        onClick: function onClick() {
                            return _this2.props.showAdminUserList();
                        } },
                    _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
                )
            ), _react2.default.createElement(
                'form',
                { key: 'AdminUserForm', onSubmit: this.props.handleSubmit },
                _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-4' },
                        _react2.default.createElement(_reduxForm.Field, { name: 'firstName', label: 'First Name:', component: _fields.renderField, type: 'text' }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'lastName', label: 'Last Name:', component: _fields.renderField, type: 'text' }),
                        _react2.default.createElement(_reduxForm.Field, {
                            name: 'roles',
                            component: _fields.renderMultiSelect, label: 'Roles:',
                            data: this.props.roles, validate: [_validation.required], valueField: '_id', textField: 'name' }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'email', label: 'Email:', component: _fields.renderField, type: 'email' }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'password', label: 'Password:', component: _fields.renderField, type: 'password' }),
                        _react2.default.createElement(
                            'button',
                            { type: 'submit',
                                disabled: pristine || submitting,
                                className: 'btn btn-submit' },
                            ' ',
                            !this.props._id && "Add" || this.props._id && "Update"
                        ),
                        _react2.default.createElement(
                            'button',
                            { type: 'button', disabled: pristine || submitting, className: 'btn squareButton',
                                onClick: reset },
                            'Reset'
                        )
                    )
                )
            )];
        }
    }]);

    return AdminUserForm;
}(_react.Component);

AdminUserForm = (0, _reduxForm.reduxForm)({
    form: 'admin-user'
})(AdminUserForm);

exports.default = AdminUserForm;
// {(!this.props._id && "Add") || (this.props._id && "Update")}

/***/ }),

/***/ "uwS4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NewConfirmationDialog = undefined;

var _reactBootstrap = __webpack_require__("pLVJ");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ConfirmationRequestReviewDialog = function ConfirmationRequestReviewDialog(props) {
    var show = props.show,
        onClose = props.onClose,
        body = props.body,
        hasError = props.hasError,
        title = props.title;

    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { show: show, onHide: onClose },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            {
                className: hasError ? " confirmationDialogReviewRequestHasError " : "confirmationDialogReviewRequestNoError" },
            _react2.default.createElement(
                _reactBootstrap.ModalTitle,
                null,
                title ? title : 'Confirm Operation'
            ),
            hasError ? _react2.default.createElement('img', { key: 'exclaimation', className: ' errorClass confirmationDialogErrorImg',
                src: '/images/exclamation.png', title: 'Error Detected' }) : null
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            {
                className: hasError ? "confirmationDialogBodyHasError " : "confirmationDialogBodyNoError" },
            body ? body : 'Please confirm or cancel operation'
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalFooter,
            {
                className: hasError ? "confirmationDialogFooterHasError " : "confirmationDialogFooterNoError" },
            _react2.default.createElement(
                _reactBootstrap.Button,
                { onClick: props.onClose },
                'Cancel'
            ),
            _react2.default.createElement(
                _reactBootstrap.Button,
                { onClick: props.onConfirm },
                'Confirm'
            )
        )
    );
};

var defaultConfirmationDialog = function defaultConfirmationDialog(props) {
    var show = props.show,
        onClose = props.onClose,
        body = props.body,
        hasError = props.hasError,
        title = props.title;

    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { show: show, onHide: onClose },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            null,
            _react2.default.createElement(
                _reactBootstrap.ModalTitle,
                null,
                title ? title : 'Confirm Operation'
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            body ? body : 'Please confirm or cancel operation'
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalFooter,
            null,
            _react2.default.createElement(
                _reactBootstrap.Button,
                { onClick: props.onClose },
                'Cancel'
            ),
            _react2.default.createElement(
                _reactBootstrap.Button,
                { onClick: props.onConfirm },
                'Confirm'
            )
        )
    );
};

var ConfirmationDialog = function ConfirmationDialog(props) {
    var dialogName = props.dialogName;

    switch (dialogName) {
        case SC.DIALOG_ESTIMATION_REQUEST_REVIEW:
            return ConfirmationRequestReviewDialog(props);
        default:
            return defaultConfirmationDialog(props);
    }
};

var NewConfirmationDialog = exports.NewConfirmationDialog = function NewConfirmationDialog(props) {
    var show = props.show,
        onClose = props.onClose,
        body = props.body,
        title = props.title,
        children = props.children;

    return _react2.default.createElement(
        _reactBootstrap.Modal,
        { show: show, onHide: onClose },
        _react2.default.createElement(
            _reactBootstrap.ModalHeader,
            null,
            _react2.default.createElement(
                _reactBootstrap.ModalTitle,
                null,
                title ? title : 'Confirm Operation'
            )
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalBody,
            null,
            children
        ),
        _react2.default.createElement(
            _reactBootstrap.ModalFooter,
            null,
            _react2.default.createElement(
                _reactBootstrap.Button,
                { onClick: props.onClose },
                'Cancel'
            ),
            _react2.default.createElement(
                _reactBootstrap.Button,
                { onClick: props.onConfirm },
                'Confirm'
            )
        )
    );
};

exports.default = ConfirmationDialog;

/***/ }),

/***/ "vLRc":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

var _validation = __webpack_require__("4KT+");

var _reactRedux = __webpack_require__("RH2O");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PermissionRow = function PermissionRow(props) {
    if (props.permission) {
        return _react2.default.createElement(
            'tr',
            null,
            _react2.default.createElement(
                'td',
                null,
                props.permission.name
            ),
            _react2.default.createElement(
                'td',
                null,
                props.permission.configurable ? 'true' : 'false'
            ),
            _react2.default.createElement(
                'td',
                null,
                props.permission.enabled ? 'true' : 'false'
            ),
            _react2.default.createElement(
                'td',
                null,
                _react2.default.createElement('button', { className: 'glyphicon glyphicon-pencil pull-left btn btn-custom', type: 'button',
                    onClick: function onClick() {
                        props.editPermission(props.permission, props.idx);
                    } })
            ),
            _react2.default.createElement(
                'td',
                null,
                _react2.default.createElement('button', { className: 'glyphicon glyphicon-trash pull-left btn btn-custom', type: 'button',
                    onClick: function onClick() {
                        props.removePermission('permissions', props.idx);
                    } })
            )
        );
    }

    return undefined;
};

var PermissionForm = function PermissionForm(props) {
    return _react2.default.createElement(
        _reduxForm.Form,
        { onSubmit: props.handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-4' },
                _react2.default.createElement(_reduxForm.Field, { name: '_id', component: _fields.renderSelect, options: props.options,
                    displayField: 'name', valueField: '_id', label: 'Permissions:', validate: [_validation.required], onChange: function onChange(event, newValue, oldValue) {
                        props.change('name', props.permissions.find(function (p) {
                            return p._id == newValue;
                        }).name);
                    } })
            ),
            _react2.default.createElement(
                'div',
                { style: { "paddingTop": "25px" } },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-2' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'configurable', component: _fields.renderCheckBox, type: 'checkbox', label: 'Configurable' })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-2' },
                    _react2.default.createElement(_reduxForm.Field, { name: 'enabled', component: _fields.renderCheckBox, type: 'checkbox', label: 'Enabled' })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-2' },
                    _react2.default.createElement(
                        'button',
                        { type: 'button', className: 'btn btn-submit', onClick: function onClick() {
                                props.submit();
                            } },
                        props.selectedPermission ? 'Edit' : 'Add'
                    ),
                    _react2.default.createElement(
                        'button',
                        { style: { "marginLeft": "5px" }, type: 'button', onClick: function onClick() {
                                props.initialize({});
                                props.changeFuncParent('selectedPermission', null);
                            }, className: 'btn btn-submit' },
                        'Reset'
                    )
                )
            )
        )
    );
};

PermissionForm = (0, _reduxForm.reduxForm)({
    form: 'role-permission'
})(PermissionForm);

PermissionForm = (0, _reactRedux.connect)(function (state) {
    return {};
}, function (dispatch) {
    return {
        onSubmit: function onSubmit(values) {
            if (typeof values.selectedIdx != 'undefined') {
                // permission was edited
                dispatch((0, _reduxForm.arrayRemove)('role', 'permissions', values.selectedIdx));
                dispatch((0, _reduxForm.arrayInsert)('role', 'permissions', values.selectedIdx, values));
            } else {
                dispatch((0, _reduxForm.arrayPush)('role', 'permissions', values));
            }

            dispatch((0, _reduxForm.change)('role', 'selectedPermission', null));
            dispatch((0, _reduxForm.reset)('role-permission'));
        }
    };
})(PermissionForm);

var RoleForm = function RoleForm(props) {
    var roleSyncErrors = props.roleSyncErrors,
        change = props.change,
        push = props.push,
        touch = props.touch,
        array = props.array,
        untouch = props.untouch,
        submit = props.submit,
        reset = props.reset;
    var permissions = props.permissions,
        permissionFormValues = props.permissionFormValues,
        permissionsAdded = props.permissionsAdded;

    return [_react2.default.createElement(
        'div',
        { key: 'RoleFormBackButton' },
        _react2.default.createElement(
            'button',
            { type: 'button',
                onClick: function onClick() {
                    return props.showRoleList();
                } },
            _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
        )
    ), _react2.default.createElement(
        _reduxForm.Form,
        { key: 'RoleForm', onSubmit: props.handleSubmit },
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-4' },
                _react2.default.createElement(_reduxForm.Field, { name: 'name', placeholder: "Role name", component: _fields.renderText,
                    label: "Role:", validate: [_validation.required] })
            )
        ),
        _react2.default.createElement(PermissionForm, { key: 'RolePermissionForm', options: props.permissionOptions, permissions: props.permissions,
            selectedPermission: props.selectedPermission, changeFuncParent: props.change }),
        _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-8' },
                _react2.default.createElement(
                    'table',
                    { className: 'table' },
                    _react2.default.createElement(
                        'thead',
                        null,
                        _react2.default.createElement(
                            'tr',
                            null,
                            _react2.default.createElement(
                                'th',
                                null,
                                'Permission Name'
                            ),
                            _react2.default.createElement(
                                'th',
                                null,
                                'Configurable'
                            ),
                            _react2.default.createElement(
                                'th',
                                null,
                                'Enabled'
                            ),
                            _react2.default.createElement('th', null),
                            _react2.default.createElement('th', null)
                        )
                    ),
                    _react2.default.createElement(
                        'tbody',
                        null,
                        Array.isArray(permissionsAdded) && permissionsAdded.length > 0 ? permissionsAdded.map(function (p, idx) {
                            return _react2.default.createElement(PermissionRow, { key: "permissionrow_" + idx,
                                permission: p, idx: idx,
                                removePermission: props.array.remove,
                                editPermission: props.editPermission
                            });
                        }) : undefined
                    )
                )
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'row', key: 'RoleFormSubmission' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-6' },
                _react2.default.createElement(
                    'button',
                    { type: 'button', onClick: function onClick() {
                            submit();
                        }, className: 'btn btn-submit' },
                    'Submit'
                ),
                _react2.default.createElement(
                    'button',
                    { style: { "marginLeft": "5px" }, type: 'button', onClick: function onClick() {
                            reset();
                        }, className: 'btn btn-submit' },
                    'Reset'
                )
            )
        )
    )];
};

RoleForm = (0, _reduxForm.reduxForm)({
    form: 'role'
})(RoleForm);

exports.default = RoleForm;

/***/ }),

/***/ "vNUd":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

var _validation = __webpack_require__("4KT+");

var _reactRedux = __webpack_require__("RH2O");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HolidayForm = function (_Component) {
    _inherits(HolidayForm, _Component);

    function HolidayForm(props) {
        _classCallCheck(this, HolidayForm);

        return _possibleConstructorReturn(this, (HolidayForm.__proto__ || Object.getPrototypeOf(HolidayForm)).call(this, props));
    }

    _createClass(HolidayForm, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                handleSubmit = _props.handleSubmit,
                pristine = _props.pristine,
                submitting = _props.submitting,
                reset = _props.reset,
                _id = _props._id;

            return [_react2.default.createElement(
                'div',
                { key: 'HolidayFormBackButton' },
                _react2.default.createElement(
                    'button',
                    { type: 'button',
                        onClick: function onClick() {
                            return _this2.props.showHolidayList();
                        } },
                    _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
                )
            ), _react2.default.createElement(
                'form',
                { key: 'HolidayForm', onSubmit: handleSubmit },
                _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-4' },
                        _react2.default.createElement(_reduxForm.Field, { name: '_id', component: 'input', type: 'hidden' }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'dateString', placeholder: "holiday Date :",
                            component: _fields.renderDateTimePickerString,
                            showTime: false,
                            label: "Holiday Date :", validate: [_validation.required] }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'holidayName', label: 'Holiday Name:', component: _fields.renderField,
                            validate: [_validation.required] }),
                        _react2.default.createElement(_reduxForm.Field, { name: 'holidayType', label: 'Holiday Type:', component: _fields.renderSelect,
                            validate: [_validation.required],
                            options: SC.HOLIDAY_TYPE_LIST_WITH_NAME }),
                        _react2.default.createElement(_reduxForm.Field, { width: '80%', name: 'description', validate: [_validation.required], component: _fields.renderTextArea,
                            label: 'Description:' }),
                        _react2.default.createElement(
                            'div',
                            null,
                            _react2.default.createElement(
                                'button',
                                { type: 'submit',
                                    className: 'btn btn-submit' },
                                !_id && "Add" || _id && "Update"
                            ),
                            _react2.default.createElement(
                                'button',
                                { type: 'button',
                                    disabled: pristine || submitting,
                                    className: 'btn btn-submit', onClick: reset },
                                'Reset'
                            )
                        )
                    )
                )
            )];
        }
    }]);

    return HolidayForm;
}(_react.Component);

HolidayForm = (0, _reduxForm.reduxForm)({
    form: 'holiday-form'
})(HolidayForm);

var selector = (0, _reduxForm.formValueSelector)('holiday-form');

HolidayForm = (0, _reactRedux.connect)(function (state) {
    var _id = selector(state, '_id');
    return {
        _id: _id
    };
})(HolidayForm);
exports.default = HolidayForm;

/***/ }),

/***/ "vZkB":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactRedux = __webpack_require__("RH2O");

var _ModuleList = __webpack_require__("LwYR");

var _ModuleList2 = _interopRequireDefault(_ModuleList);

var _reduxForm = __webpack_require__("ao4a");

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        showModuleEditForm: function showModuleEditForm(module) {
            dispatch(A.showComponent(COC.MODULE_FORM_DIALOG)), dispatch((0, _reduxForm.initialize)('module', module));
        },
        showModuleCreationForm: function showModuleCreationForm() {
            dispatch(A.showComponent(COC.MODULE_FORM_DIALOG));
        },
        deleteModule: function deleteModule(moduleID) {
            return dispatch(A.deleteModuleOnServer(moduleID)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success('Module Removed Successfully');
                } else {
                    _reactNotifications.NotificationManager.error('Module Not removed!');
                    throw new _reduxForm.SubmissionError({ modules: "Module Removal Failed" });
                }
            });
        }

    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        loggedInUser: state.user.loggedIn,
        modules: state.module.all
    };
};

var ProjectListContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_ModuleList2.default);

exports.default = ProjectListContainer;

/***/ }),

/***/ "vd9x":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _reactNotifications = __webpack_require__("B0Hd");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(releaseData) {
            console.log("release dates data is ", releaseData);
            return dispatch(A.changeReleaseDateOfIteration(releaseData)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Release dates updated");
                    dispatch(A.hideComponent(COC.UPDATE_RELEASE_DATES_DIALOG));
                    dispatch(A.getReleaseForDashboard(releaseData._id)).then(function () {
                        var m = (0, _moment2.default)();
                        dispatch(A.getReleaseDayPlannings(releaseData._id, m.month(), m.year(), true));
                    });
                } else _reactNotifications.NotificationManager.error("Release dates update failed !");

                return json;
            });
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        release: state.release.selectedRelease
    };
};

var UpdateReleaseDatesFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.UpdateReleaseDatesForm);

exports.default = UpdateReleaseDatesFormContainer;

/***/ }),

/***/ "vj67":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _PermissionForm = __webpack_require__("/7TX");

var _PermissionForm2 = _interopRequireDefault(_PermissionForm);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _reduxForm = __webpack_require__("ao4a");

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            if (!values._id) return dispatch(A.addPermissionOnServer(values)).then(function (json) {
                if (json.success) {
                    dispatch(A.showComponentHideOthers(COC.PERMISSION_LIST));
                    _reactNotifications.NotificationManager.success('Permission Added!');
                } else {
                    _reactNotifications.NotificationManager.error('Permission Not Added!');
                    if (json.code == EC.ALREADY_EXISTS) throw new _reduxForm.SubmissionError({ name: "Permission Already Exists" });
                }
                return json;
            });else return dispatch(A.editPermissionOnServer(values)).then(function (json) {
                if (json.success) {
                    dispatch(A.showComponentHideOthers(COC.PERMISSION_LIST));
                    _reactNotifications.NotificationManager.success('Permission Edited Successfully');
                } else {
                    _reactNotifications.NotificationManager.error('Permission Edit Failed!');
                    if (json.code == EC.ALREADY_EXISTS) throw new _reduxForm.SubmissionError({ name: "Permission Already Exists" });
                }
                return json;
            });
        },
        showPermissionList: function showPermissionList() {
            return dispatch(A.showComponentHideOthers(COC.PERMISSION_LIST));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {};
};

var PermissionFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_PermissionForm2.default);

exports.default = PermissionFormContainer;

/***/ }),

/***/ "vmTa":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _reduxForm = __webpack_require__("ao4a");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _components = __webpack_require__("ZhKb");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            return dispatch(A.updateUserSettingsOnServer(values)).then(function (json) {
                if (json.success) {
                    dispatch((0, _reduxForm.initialize)('user-profile', json.data));
                    _reactNotifications.NotificationManager.success('User Profile Updated Successfully');
                } else {
                    _reactNotifications.NotificationManager.error('User Profile Update Failed');
                }
            }), logger.debug(logger.USER_PROFILE_FORM_CONNECT, "onSubmit():", values);
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        loggedInUser: state.user.loggedIn,
        initialValues: {

            "_id": state.user.loggedIn._id,
            "firstName": state.user.loggedIn.firstName,
            "lastName": state.user.loggedIn.lastName,
            "email": state.user.loggedIn.email,
            "phone": state.user.loggedIn.phone,
            "address": state.user.loggedIn.address,
            "dob": state.user.loggedIn.dob,
            "designation": state.user.loggedIn.designation,
            "employeeCode": state.user.loggedIn.employeeCode,
            "dateJoined": state.user.loggedIn.dateJoined

        }

    };
};

var UserProfileFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.UserProfileForm);

exports.default = UserProfileFormContainer;

/***/ }),

/***/ "vxNa":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _reactNotifications = __webpack_require__("B0Hd");

var _reduxForm = __webpack_require__("ao4a");

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(holiday) {
            if (!holiday._id) {
                return dispatch(A.addHolidayOnServer(holiday)).then(function (json) {
                    if (json.success) {
                        dispatch(A.showComponentHideOthers(COC.HOLIDAY_LIST));
                        _reactNotifications.NotificationManager.success('Holiday Added Successfully');
                    } else {
                        _reactNotifications.NotificationManager.error('Holiday Not Added!');
                        if (json.code == EC.ALREADY_EXISTS) throw new _reduxForm.SubmissionError({ name: "Holiday Already Exists" });
                    }
                    return json;
                });
            } else {
                return dispatch(A.updateHolidayOnServer(holiday)).then(function (json) {
                    if (json.success) {
                        dispatch(A.showComponentHideOthers(COC.HOLIDAY_LIST));
                        _reactNotifications.NotificationManager.success('Holiday Updated Successful');
                    } else {
                        _reactNotifications.NotificationManager.error('Holiday Updated Failed');
                    }
                });
            }
        },
        showHolidayList: function showHolidayList() {
            return dispatch(A.showComponentHideOthers(COC.HOLIDAY_LIST));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        holidays: state.leave.all,
        MONTHS_WITH_MONTH_NUMBER: SC.MONTHS_WITH_MONTH_NUMBER,
        HOLIDAY_TYPE_LIST: SC.HOLIDAY_TYPE_LIST_WITH_NAME
    };
};

var HolidayFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.HolidayForm);

exports.default = HolidayFormContainer;

/***/ }),

/***/ "w+9g":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _AppRouter = __webpack_require__("ztUp");

var _AppRouter2 = _interopRequireDefault(_AppRouter);

var _reactRouterDom = __webpack_require__("F8kA");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var mapStateToProps = function mapStateToProps(state) {
    return {
        isAuthenticated: state.user.isAuthenticated,
        isSuperAdmin: state.user.isSuperAdmin,
        isAdmin: state.user.isAdmin,
        loggedInUser: state.user.loggedIn
    };
};

var AppRouterContainer = (0, _reactRouterDom.withRouter)((0, _reactRedux.connect)(mapStateToProps)(_AppRouter2.default));

exports.default = AppRouterContainer;

/***/ }),

/***/ "w/A1":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _index = __webpack_require__("ZhKb");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _clientMsg = __webpack_require__("jURI");

var CM = _interopRequireWildcard(_clientMsg);

var _lodash = __webpack_require__("M4fF");

var _lodash2 = _interopRequireDefault(_lodash);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactRedux = __webpack_require__("RH2O");

var _reduxForm = __webpack_require__("ao4a");

var _reactNotifications = __webpack_require__("B0Hd");

var _errorcodes = __webpack_require__("c5MU");

var EC = _interopRequireWildcard(_errorcodes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EstimationTask = function (_React$PureComponent) {
    _inherits(EstimationTask, _React$PureComponent);

    function EstimationTask(props) {
        _classCallCheck(this, EstimationTask);

        var _this = _possibleConstructorReturn(this, (EstimationTask.__proto__ || Object.getPrototypeOf(EstimationTask)).call(this, props));

        _this.state = {
            showTaskDeletionDialog: false,
            showTaskDeletionRequestedDialog: false,
            taskDeletion: undefined
        };

        return _this;
    }

    _createClass(EstimationTask, [{
        key: 'onClose',
        value: function onClose() {
            this.setState({ showTaskDeletionDialog: false });
            this.setState({ showTaskDeletionRequestedDialog: false });
        }
    }, {
        key: 'onConfirmTaskDelete',
        value: function onConfirmTaskDelete() {
            this.setState({ showTaskDeletionDialog: false });
            this.props.deleteTask(this.state.taskDeletion);
        }
    }, {
        key: 'onConfirmTaskDeleteRequest',
        value: function onConfirmTaskDeleteRequest() {
            this.setState({ showTaskDeletionRequestedDialog: false });
            this.props.deleteTask(this.props.task);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                task = _props.task,
                loggedInUserRole = _props.loggedInUserRole,
                estimationStatus = _props.estimationStatus,
                expanded = _props.expanded,
                isFeatureTask = _props.isFeatureTask,
                fromRepoWithFeature = _props.fromRepoWithFeature,
                editView = _props.editView;

            var buttons = [];

            logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'logged in user is ', loggedInUserRole);
            logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'task owner ', task.owner);
            logger.debug(logger.ESTIMATION_TASK_RENDER, this.props);

            if (loggedInUserRole == SC.ROLE_NEGOTIATOR) {

                //condition for task approval

                if (task.status === SC.STATUS_PENDING && _lodash2.default.includes([SC.STATUS_REVIEW_REQUESTED, SC.STATUS_INITIATED, SC.STATUS_ESTIMATION_REQUESTED, SC.STATUS_CHANGE_REQUESTED], estimationStatus)) {

                    if (task.canApprove) {
                        buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'approve', src: '/images/approve.png', title: 'Approve',
                            onClick: function onClick() {
                                _this2.props.approveTask(task);
                            } }) : _react2.default.createElement('img', { key: 'approve_disable', src: '/images/approve_disable.png', title: 'Approve' }));
                    }

                    // First button shown to negotiator would be suggestion button (kind of edit button)
                    if (task.negotiator.changeSuggested || task.addedInThisIteration && task.owner == SC.OWNER_NEGOTIATOR) {
                        // Negotiator has suggested changes in this iteration so show that to negotiator,
                        buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'suggestion_outgoing', src: '/images/suggestion_outgoing.png',
                            title: 'Suggestions made by You',
                            onClick: function onClick() {
                                _this2.props.openTaskSuggestionForm(task, loggedInUserRole);
                            } }) : _react2.default.createElement('img', { key: 'suggestion_outgoing_disable', src: '/images/suggestion_outgoing_disable.png',
                            title: 'Suggestion made by You' }));
                    } else if (task.estimator.changedKeyInformation || task.addedInThisIteration && task.owner === SC.OWNER_ESTIMATOR) {
                        // Estimator has changed key information in previous iteration, so show that to negotiator
                        buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'suggestion_incoming', src: '/images/suggestion_incoming.png',
                            title: 'Suggestion made by Estimator ',
                            onClick: function onClick() {
                                _this2.props.openTaskSuggestionForm(task, loggedInUserRole);
                            } }) : _react2.default.createElement('img', { key: 'suggestion_incoming_disable', src: '/images/suggestion_incoming_disable.png',
                            title: 'Suggestion made by Estimator' }));
                    } else {
                        // Show normal suggestion button
                        buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'suggestion', src: '/images/suggestion.png', title: 'Suggestion',
                            onClick: function onClick() {
                                _this2.props.openTaskSuggestionForm(task, loggedInUserRole);
                            } }) : _react2.default.createElement('img', { key: 'suggestion_disable', src: '/images/suggestion_disable.png', title: 'Suggestion' }));
                    }

                    // Second button shown to negotiator would be related to removal request (by estimator)/ delete button
                    if (task.estimator.removalRequested) {
                        // Estimator has requested removal, negotiator will directly delete task if he wants to
                        buttons.push(editView && !fromRepoWithFeature ? _react2.default.createElement('img', { className: 'div-hover', key: 'he_requested_delete', src: '/images/he_requested_delete.png',
                            title: 'Delete requested by Estimator',
                            onClick: function onClick() {
                                _this2.setState({ showTaskDeletionRequestedDialog: true });
                            } }) : _react2.default.createElement('img', { key: 'he_requested_delete_disable', src: '/images/he_requested_delete_disable.png',
                            title: 'Delete requested by Estimator' }));
                    } else {
                        // Negotiator can delete any task during its review without getting permission from estimator
                        buttons.push(editView && !fromRepoWithFeature ? _react2.default.createElement('img', { className: 'div-hover', key: 'delete', src: '/images/delete.png', title: 'Delete',
                            onClick: function onClick() {
                                _this2.setState({ showTaskDeletionDialog: true });
                                _this2.setState({ taskDeletion: task });
                                //this.props.deleteTask(task)
                            } }) : _react2.default.createElement('img', { key: 'delete_disable', src: '/images/delete_disable.png', title: 'Delete' }));
                    }
                }

                // If status is approved
                if (task.status === SC.STATUS_APPROVED) {
                    // Single button shown to Negotiator would be related to Reopen requests (by estimator)/Reopen granted (by negotiator)
                    if (task.estimator.changeRequested) {
                        if (task.negotiator.changeGranted) {
                            // estimator has requested Reopen which negotiator has granted
                            logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'changeRequested/changeGranted, he_granted_Reopen');
                            buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'granted_reopen', src: '/images/reopen_granted.png',
                                title: 'Reopen-Granted',
                                onClick: function onClick() {
                                    _this2.props.toggleGrantEdit(task);
                                } }) : _react2.default.createElement('img', { key: 'granted_reopen_disable', src: '/images/reopen_granted_disable.png',
                                title: 'Reopen-Granted' }));
                        } else {
                            // estimator has requested Reopen but negotiator has not granted it till now
                            logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'changeRequested/not granted, requested_edit');
                            buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'he_requested_reopen', src: '/images/he_requested_reopen.png',
                                title: 'Reopen requested by Estimator',
                                onClick: function onClick() {
                                    _this2.props.toggleGrantEdit(task);
                                } }) : _react2.default.createElement('img', { key: 'he_requested_reopen_disable', src: '/images/he_requested_reopen_disable.png',
                                title: 'Reopen requested by Estimator' }));
                        }
                    } else {
                        buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'reopen', src: '/images/reopen.png', title: 'Reopen',
                            onClick: function onClick() {
                                _this2.props.reOpenTask(task);
                            } }) : _react2.default.createElement('img', { key: 'reopen_disable', src: '/images/reopen_disable.png', title: 'Reopen' }));
                    }
                }
            } else if (loggedInUserRole === SC.ROLE_ESTIMATOR) {
                if (task.addedInThisIteration && task.owner === SC.OWNER_ESTIMATOR) {
                    // As estimator has added this task in this iteration only, he/she would be able to edit/delete it without any restrictions
                    buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'edit', src: '/images/edit.png', title: 'Edit',
                        onClick: function onClick() {
                            _this2.props.editTask(task, loggedInUserRole);
                        } }) : _react2.default.createElement('img', { key: 'edit_disable', src: '/images/edit_disable.png', title: 'Edit' }));
                    buttons.push(editView && !fromRepoWithFeature ? _react2.default.createElement('img', { className: 'div-hover', key: 'delete', src: '/images/delete.png', title: 'Delete',
                        onClick: function onClick() {
                            _this2.setState({ showTaskDeletionDialog: true });
                            _this2.setState({ taskDeletion: task });
                            //this.props.deleteTask(task)
                        } }) : _react2.default.createElement('img', { key: 'delete_disable', src: '/images/delete_disable.png', title: 'Delete' }));
                } else {
                    if (task.status === SC.STATUS_PENDING) {
                        if (task.estimator.changedKeyInformation || task.addedInThisIteration && task.owner == SC.OWNER_ESTIMATOR) {
                            // Estimator has changed key information so show estimator icon to notify that
                            buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'suggestion_outgoing', src: '/images/suggestion_outgoing.png',
                                title: 'Suggestion made by You',
                                onClick: function onClick() {
                                    _this2.props.openTaskSuggestionForm(task, loggedInUserRole);
                                } }) : _react2.default.createElement('img', { key: 'suggestion_outgoing_disable', src: '/images/suggestion_outgoing_disable.png',
                                title: 'Suggestion made by You' }));
                        } else if (task.negotiator.changeSuggested || task.addedInThisIteration && task.owner == SC.OWNER_NEGOTIATOR) {
                            // Negotiator has suggested changes in previous iteration so show that
                            buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'suggestion_incoming', src: '/images/suggestion_incoming.png',
                                title: 'Suggestions by Negotiator',
                                onClick: function onClick() {
                                    _this2.props.openTaskSuggestionForm(task, loggedInUserRole);
                                } }) : _react2.default.createElement('img', { key: 'suggestion_incoming_disable', src: '/images/suggestion_incoming_disable.png',
                                title: 'Suggestions by Negotiator' }));
                        } else {
                            // Negotiator has not suggested any changes in this iteration so show that
                            buttons.push(editView && !task.negotiator.changeSuggested ? _react2.default.createElement('img', { className: 'div-hover', key: 'suggestion', src: '/images/suggestion.png',
                                title: 'suggestion',
                                onClick: function onClick() {
                                    _this2.props.openTaskSuggestionForm(task, loggedInUserRole);
                                } }) : _react2.default.createElement('img', { key: 'suggestion_disable', src: '/images/suggestion_disable.png',
                                title: 'Suggestion' }));
                        }

                        // Second button is related to removal request

                        if (task.estimator.removalRequested) {
                            // Estimator has requested removal
                            buttons.push(editView && !fromRepoWithFeature ? _react2.default.createElement('img', { className: 'div-hover', key: 'requested_delete', src: '/images/requested_delete.png',
                                title: 'Delete requested by You',
                                onClick: function onClick() {
                                    _this2.props.toggleDeleteRequest(task);
                                } }) : _react2.default.createElement('img', { key: 'requested_delete_disable', src: '/images/requested_delete_disable.png',
                                title: 'Delete requested by You' }));
                        } else {
                            // Estimator can request removal
                            buttons.push(editView && !fromRepoWithFeature ? _react2.default.createElement('img', { className: 'div-hover', key: 'request_delete', src: '/images/request_delete.png',
                                title: 'Request delete',
                                onClick: function onClick() {
                                    _this2.props.toggleDeleteRequest(task);
                                } }) : _react2.default.createElement('img', { key: 'request_delete_disable', src: '/images/request_delete_disable.png',
                                title: 'Request delete' }));
                        }
                    } else if (task.status === SC.STATUS_APPROVED) {
                        // As task is approved by negotiator hence he has no direct permission to edit/delete task so estimator has to raise re-open request
                        /**
                         * Single button shown to estimator would be related to Reopen request/grants
                         */
                        if (task.estimator.changeRequested) {
                            if (task.negotiator.changeGranted) {
                                // estimator has requested change which negotiator has granted
                                logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'changeRequested/changeGranted, he_granted_re_open');
                                buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'he_granted_reopen', src: '/images/he_granted_reopen.png',
                                    title: 'Reopen-Granted',
                                    onClick: function onClick() {
                                        //Re-Open
                                        _this2.props.editTask(task);
                                    } }) : _react2.default.createElement('img', { key: 'he_granted_reopen_disable', src: '/images/he_granted_reopen_disable.png',
                                    title: 'Reopen-Granted' }));
                            } else {
                                // estimator has requested change but negotiator has not granted it till now
                                logger.debug(logger.ESTIMATION_TASK_BUTTONS, 'changeRequested/not granted, requested_re_open');
                                buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'requested_reopen', src: '/images/reopen_requested.png',
                                    title: 'Reopen requested by Estimator',
                                    onClick: function onClick() {
                                        _this2.props.toggleEditRequest(task);
                                    } }) : _react2.default.createElement('img', { key: 'requested_reopen_disable', src: '/images/reopen_requested_disable.png',
                                    title: 'Reopen requested by Estimator' }));
                            }
                        } else {
                            //request for reopen by estimator on approved task
                            // Estimator can request Reopen
                            buttons.push(editView ? _react2.default.createElement('img', { className: 'div-hover', key: 'request_reopen', src: '/images/reopen_request.png',
                                title: 'Request re-open',
                                onClick: function onClick() {
                                    _this2.props.toggleEditRequest(task);
                                } }) : _react2.default.createElement('img', { key: 'request_reopen_disable', src: '/images/reopen_request_disable.png',
                                title: 'Request re-open' }));
                        }
                    }
                }
            }

            if (loggedInUserRole === SC.ROLE_NEGOTIATOR && task.status === SC.STATUS_PENDING && _lodash2.default.includes([SC.STATUS_INITIATED, SC.STATUS_REVIEW_REQUESTED], estimationStatus) || loggedInUserRole === SC.ROLE_ESTIMATOR && task.status === SC.STATUS_PENDING && _lodash2.default.includes([SC.STATUS_ESTIMATION_REQUESTED, SC.STATUS_CHANGE_REQUESTED], estimationStatus)) {

                if (editView && !fromRepoWithFeature) {
                    if (task.feature && task.feature._id) {
                        // This task is part of some feature so add move out of feature button
                        buttons.push(_react2.default.createElement('img', { className: 'div-hover', key: 'move_out_of_feature', src: '/images/move_outof_feature.png',
                            title: 'Move out of feature',
                            onClick: function onClick() {
                                return _this2.props.moveTaskOutOfFeature(task);
                            } }));
                    } else {
                        buttons.push(_react2.default.createElement('img', { className: 'div-hover', key: 'move_to_feature', src: '/images/move_to_feature.png',
                            title: 'Move to feature',
                            onClick: function onClick() {
                                return _this2.props.moveToFeature(task);
                            }
                        }));
                    }
                } else {
                    if (task.feature && task.feature._id) {
                        buttons.push(_react2.default.createElement('img', { key: 'move_out_of_feature', src: '/images/move_outof_feature_disable.png',
                            title: 'Move out of feature' }));
                    } else {
                        buttons.push(_react2.default.createElement('img', { key: 'move_to_feature', src: '/images/move_to_feature_disable.png',
                            title: 'Move to feature' }));
                    }
                }
            } else {
                if (task.feature && task.feature._id) {
                    buttons.push(_react2.default.createElement('img', { key: 'move_out_of_feature', src: '/images/move_outof_feature_disable.png',
                        title: 'Move out of feature' }));
                } else {
                    buttons.push(_react2.default.createElement('img', { key: 'move_to_feature', src: '/images/move_to_feature_disable.png',
                        title: 'Move to feature' }));
                }
            }
            return _react2.default.createElement(
                'div',
                { className: expanded ? 'task-expanded' : 'task' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-9' },
                    _react2.default.createElement(
                        'div',
                        {
                            className: task.estimator && task.estimator.name ? "col-md-11  div-hover " : "col-md-11 infoHighliter" },
                        _react2.default.createElement(
                            'h4',
                            { title: task.estimator.name ? task.estimator.name : "Estimated hours (By Estimator) is Mandatory for Task Approval" },
                            task.estimator.name ? task.estimator.name : task.negotiator.name
                        )
                    ),
                    task.status === SC.STATUS_PENDING && task.hasError == true ? _react2.default.createElement(
                        'div',
                        { className: 'col-md-1' },
                        _react2.default.createElement('img', { key: 'exclaimation', className: ' errorClass', src: '/images/exclamation.png',
                            title: task.estimator && task.estimator.name ? task.estimator.description ? task.estimator.estimatedHours ? "Some changes is done in this iteration" : "Estimated hours (By Estimator) is Mandatory for Task Approval" : "Task Description (By Estimator) is Mandatory for Task Approval" : "Task Name (By Estimator) is Mandatory for Task Approval"
                        })
                    ) : null
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-3' },
                    _react2.default.createElement(
                        'div',
                        null,
                        this.state.showTaskDeletionRequestedDialog && _react2.default.createElement(_index.ConfirmationDialog, { show: true, onConfirm: this.onConfirmTaskDeleteRequest.bind(this),
                            title: CM.DELETE_TASK, onClose: this.onClose.bind(this),
                            body: CM.DELETE_TASK_BODY }),
                        this.state.showTaskDeletionDialog && _react2.default.createElement(_index.ConfirmationDialog, { show: true, onConfirm: this.onConfirmTaskDelete.bind(this),
                            title: CM.DELETE_TASK, onClose: this.onClose.bind(this),
                            body: CM.DELETE_TASK_BODY }),
                        task.owner == SC.OWNER_ESTIMATOR && task.addedInThisIteration && _react2.default.createElement(
                            'div',
                            { className: 'flagStrip' },
                            _react2.default.createElement('img', { key: 'estimator_new_flag', src: '/images/estimator_new_flag.png', title: 'Added by Estimator' })
                        ),
                        task.owner == SC.OWNER_NEGOTIATOR && task.addedInThisIteration && _react2.default.createElement(
                            'div',
                            { className: 'flagStrip' },
                            _react2.default.createElement('img', { key: 'negotiator_new_flag', src: '/images/negotiator_new_flag.png',
                                title: 'Added by Negotiator' })
                        ),
                        !task.repo.addedFromThisEstimation && _react2.default.createElement(
                            'div',
                            { className: 'flagStrip' },
                            _react2.default.createElement('img', { key: 'repo_flag', src: '/images/repo_flag.png', title: 'From Repository' })
                        ),
                        task.estimator.changedInThisIteration && _react2.default.createElement(
                            'div',
                            { className: 'flagStrip' },
                            _react2.default.createElement('img', { key: 'estimator_edit_flag', src: '/images/estimator_edit_flag.png',
                                title: 'Edited by Estimator' })
                        ),
                        task.negotiator.changedInThisIteration && _react2.default.createElement(
                            'div',
                            { className: 'flagStrip' },
                            _react2.default.createElement('img', { key: 'negotiator_edit_flag', src: '/images/negotiator_edit_flag.png',
                                title: 'Edited by Negotiator' })
                        ),
                        task.status === SC.STATUS_APPROVED && _react2.default.createElement(
                            'div',
                            { className: 'flagStrip' },
                            _react2.default.createElement('img', { key: 'approved_flag', src: '/images/approved_flag.png',
                                title: 'Approved' })
                        ),
                        (task.negotiator.changedInThisIteration && task.negotiator.isMovedOutOfFeature || task.estimator.changedInThisIteration && task.estimator.isMovedOutOfFeature) && _react2.default.createElement(
                            'div',
                            { className: 'flagStrip' },
                            _react2.default.createElement('img', { key: 'move_out_flag', src: '/images/move_out_flag.png', title: 'Moved Out From Feature' })
                        ),
                        (task.negotiator.changedInThisIteration && task.negotiator.isMovedToFeature || task.estimator.changedInThisIteration && task.estimator.isMovedToFeature) && _react2.default.createElement(
                            'div',
                            { className: 'flagStrip' },
                            _react2.default.createElement('img', { key: 'move_in_flag', src: '/images/move_in_flag.png', title: 'Moved Into Feature' })
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    {
                        className: task.estimator.description ? "col-md-12  div-hover short-description" : "col-md-12  div-hover short-description infoHighliter",
                        onClick: function onClick() {
                            if (task && task._id && task.feature && task.feature._id) {
                                _this2.props.expandTaskAndFeature(task.feature._id, task._id);
                            } else _this2.props.expandTask(task._id);
                        } },
                    _react2.default.createElement(
                        'p',
                        { title: task.estimator.description ? task.estimator.description : "Task is not having description by estimator" },
                        task.estimator.description ? task.estimator.description : task.negotiator.description
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: task.estimator && task.estimator.estimatedHours ? "col-md-3" : "col-md-3 infoHighliter" },
                    _react2.default.createElement(
                        'h4',
                        { title: task.estimator && task.estimator.estimatedHours ? task.estimator.estimatedHours : "task is not having estimatedHours by estimator" },
                        'Estimated:'
                    ),
                    _react2.default.createElement(
                        'h4',
                        null,
                        '\xA0',
                        typeof task.estimator.estimatedHours == 'number' ? task.estimator.estimatedHours + ' Hrs' : ''
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-3' },
                    _react2.default.createElement(
                        'h4',
                        { title: task.negotiator.estimatedHours ? task.negotiator.estimatedHours : "Task is added by estimator hence no Suggested Hours" },
                        'Suggested:'
                    ),
                    _react2.default.createElement(
                        'h4',
                        null,
                        '\xA0',
                        typeof task.negotiator.estimatedHours == 'number' ? task.negotiator.estimatedHours + ' Hrs' : ''
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6 text-right estimationActions' },
                    buttons
                )
            );
        }
    }]);

    return EstimationTask;
}(_react2.default.PureComponent);

EstimationTask.propTypes = {
    task: _propTypes2.default.object.isRequired,
    loggedInUserRole: _propTypes2.default.string.isRequired,
    estimationStatus: _propTypes2.default.string.isRequired,
    expanded: _propTypes2.default.bool,
    isFeatureTask: _propTypes2.default.bool
};

EstimationTask.defaultProps = {
    expanded: false,
    editView: false,
    isFeatureTask: false,
    fromRepoWithFeature: false
};

EstimationTask = (0, _reactRedux.connect)(null, function (dispatch, ownProps) {
    return {
        toggleEditRequest: function toggleEditRequest(values) {
            return dispatch(A.requestForTaskEditPermissionOnServer(values._id)).then(function (json) {
                if (json.success) {

                    if (json.data && json.data.estimator && json.data.estimator.changeRequested) _reactNotifications.NotificationManager.success("Reopen request on Task raised...");else _reactNotifications.NotificationManager.success("Reopen request on Task cleared...");
                } else {
                    _reactNotifications.NotificationManager.error("Unknown error occurred");
                }
            });
        },
        deleteTask: function deleteTask(values) {
            return dispatch(A.deleteEstimationTaskOnServer(values.estimation._id, values._id)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Task Deleted successfully");
                } else if (json.code && json.code == EC.INVALID_USER) {
                    _reactNotifications.NotificationManager.error("Task Deletion Failed You are not owner of this task !");
                } else if (json.code && json.code == EC.ACCESS_DENIED) {
                    _reactNotifications.NotificationManager.error("You are not allowed to delete this task !");
                } else _reactNotifications.NotificationManager.error("Task Deletion Failed !");
            });
        },
        toggleDeleteRequest: function toggleDeleteRequest(values) {
            return dispatch(A.requestForTaskDeletePermissionOnServer(values._id)).then(function (json) {
                if (json.success) {
                    if (json.data && json.data.estimator && json.data.estimator.removalRequested) _reactNotifications.NotificationManager.success("Delete request on Task raised...");else _reactNotifications.NotificationManager.success("Delete request on Task cleared...");
                } else {
                    if (json.code == EC.INVALID_OPERATION) _reactNotifications.NotificationManager.error("Task Delete already requested");else _reactNotifications.NotificationManager.error("Unknown error occurred");
                }
            });
        },
        editTask: function editTask(values, loggedInUserRole) {

            dispatch(A.showComponent(COC.ESTIMATION_TASK_DIALOG));
            var task = {};
            task._id = values._id;
            task.estimation = values.estimation;
            task.isFromRepo = values.repo && !values.repo.addedFromThisEstimation ? true : false;
            if (loggedInUserRole != SC.ROLE_NEGOTIATOR) {
                task.name = values.estimator.name;
                task.description = values.estimator.description;
                task.estimatedHours = values.estimator.estimatedHours;
                task.type = values.type;
            } else {
                task.name = values.negotiator.name;
                task.description = values.negotiator.description;
                task.estimatedHours = values.negotiator.estimatedHours;
                task.type = values.type;
            }
            task.feature = values.feature;
            task.technologies = values.technologies;
            dispatch((0, _reduxForm.initialize)("estimation-task", task));
        },
        moveToFeature: function moveToFeature(task) {
            dispatch(A.showComponent(COC.MOVE_TASK_TO_FEATURE_FORM_DIALOG));
            dispatch((0, _reduxForm.initialize)("move-task-in-feature", task));
        },
        moveTaskOutOfFeature: function moveTaskOutOfFeature(task) {
            dispatch(A.moveTaskOutOfFeatureOnServer(task)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success('Task moved out of feature Successfully');
                } else {
                    _reactNotifications.NotificationManager.success('Some error occurred');
                }
            });
            //dispatch(initialize("MoveTaskInFeatureForm", task))
        },
        toggleGrantEdit: function toggleGrantEdit(values) {
            return dispatch(A.grantEditPermissionOfTaskOnServer(values._id)).then(function (json) {
                if (json.success) {
                    if (json.data && json.data.negotiator && json.data.negotiator.changeGranted) _reactNotifications.NotificationManager.success("Reopen permission on task granted...");else _reactNotifications.NotificationManager.success("Reopen permission on task not granted...");
                } else {
                    _reactNotifications.NotificationManager.error('Permission Grant Failed');
                }
            });
        },
        approveTask: function approveTask(values) {
            return dispatch(A.approveTaskByNegotiatorOnServer(values._id)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Task Approved ...");
                } else {
                    if (json.code == EC.TASK_APPROVAL_ERROR) {
                        _reactNotifications.NotificationManager.error('Task cant be approved as Estimator has demanded some changes');
                    } else {

                        _reactNotifications.NotificationManager.error('Task Not Approved');
                    }
                }
            });
        },
        openTaskSuggestionForm: function openTaskSuggestionForm(values, loggedInUserRole) {
            var task = {
                loggedInUserRole: loggedInUserRole,
                readOnly: {}
            };
            task.isFromRepo = values.repo && !values.repo.addedFromThisEstimation ? true : false;
            task._id = values._id;
            task.estimation = values.estimation;
            if (loggedInUserRole == SC.ROLE_NEGOTIATOR) {
                /* Since negotiator is logged in, he would see details of negotiator section in editable form and details of estimator section in read only form  */
                task.name = values.negotiator.name;
                task.description = values.negotiator.description;
                task.estimatedHours = values.negotiator.estimatedHours;
                task.type = values.type;

                task.readOnly.name = values.estimator.name;
                task.readOnly.description = values.estimator.description;
                task.readOnly.estimatedHours = values.estimator.estimatedHours;
            } else if (loggedInUserRole == SC.ROLE_ESTIMATOR) {
                /* Since estimator is logged in, he would see details of  estimator section in editable form  */
                task.name = values.estimator.name;
                task.description = values.estimator.description;
                task.estimatedHours = values.estimator.estimatedHours;
                task.type = values.type;
                task.readOnly.name = values.negotiator.name;
                task.readOnly.description = values.negotiator.description;
                task.readOnly.estimatedHours = values.negotiator.estimatedHours;
            }

            dispatch((0, _reduxForm.initialize)("estimation-suggest-task", task));
            dispatch(A.showComponent(COC.ESTIMATION_SUGGEST_TASK_FORM_DIALOG));
        },
        reOpenTask: function reOpenTask(values) {
            return dispatch(A.reOpenTaskOnServer(values._id)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success("Task ReOpen");
                } else {
                    _reactNotifications.NotificationManager.error('Task Not  ReOpen');
                }
            });
        },

        expandTask: function expandTask(taskId) {
            dispatch(A.expandTask(taskId));
        },
        expandTaskAndFeature: function expandTaskAndFeature(featureID, taskID) {
            dispatch(A.expandTaskAndFeature(featureID, taskID));
        }
    };
})(EstimationTask);

exports.default = EstimationTask;

/***/ }),

/***/ "w7gx":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            logger.debug(logger.ESTIMATION_INITIATE_FORM_SUBMIT, "values:", values);
            if (values._id) {
                return dispatch(A.updateEstimationOnServer(values)).then(function (json) {
                    if (json.success) {
                        _reactNotifications.NotificationManager.success("Estimation Updated Successfully");
                        // hide dialog
                        dispatch(A.hideComponent(COC.ESTIMATION_INITIATE_DIALOG));
                    } else {
                        _reactNotifications.NotificationManager.error("Estimation update Failed");
                    }
                });
            } else {
                return dispatch(A.initiateEstimationOnServer(values)).then(function (json) {
                    if (json.success) {
                        _reactNotifications.NotificationManager.success("Estimation Initiated Successfully");
                        // hide dialog
                        dispatch(A.hideComponent(COC.ESTIMATION_INITIATE_DIALOG));
                    } else {
                        _reactNotifications.NotificationManager.error("Estimation Initiation Failed");
                    }
                });
            }
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        estimators: state.user.all && Array.isArray(state.user.all) && state.user.all.length ? state.user.all.filter(function (user) {
            return state.user && state.user.loggedIn && state.user.loggedIn._id && user._id.toString() !== state.user.loggedIn._id.toString() && user.roles && user.roles.length ? user.roles.findIndex(function (r) {
                return r.name === SC.ROLE_ESTIMATOR;
            }) != -1 : false;
        }) : [],
        projects: state.project.all,
        technologies: state.technology.all,
        developmentTypes: state.developmentType.all,
        modules: state.module.all
    };
};

var EstimationInitiateFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.EstimationInitiateForm);

exports.default = EstimationInitiateFormContainer;

/***/ }),

/***/ "x/ux":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactRouterDom = __webpack_require__("F8kA");

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _containers = __webpack_require__("GF1l");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TaskPlanList = function (_Component) {
    _inherits(TaskPlanList, _Component);

    function TaskPlanList(props) {
        _classCallCheck(this, TaskPlanList);

        var _this = _possibleConstructorReturn(this, (TaskPlanList.__proto__ || Object.getPrototypeOf(TaskPlanList)).call(this, props));

        _this.options = {
            sizePerPageList: [{
                text: '6', value: 6
            }, {
                text: '10', value: 10
            }, {
                text: '20', value: 20
            }, {
                text: '50', value: 50
            }],
            sizePerPage: 6 // which size per page you want to locate as default

        };
        return _this;
    }

    _createClass(TaskPlanList, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.props.getAllTaskPlans(this.props.release);
        }
    }, {
        key: 'formatDeveloperName',
        value: function formatDeveloperName(employee) {
            if (employee) return employee.name;
            return '';
        }
    }, {
        key: 'formatTaskName',
        value: function formatTaskName(task, row) {
            if (task) {
                if (row.iterationType == SC.ITERATION_TYPE_PLANNED) return _react2.default.createElement(
                    'span',
                    { style: { color: '#4172c1' } },
                    task.name
                );else if (row.iterationType == SC.ITERATION_TYPE_UNPLANNED) return _react2.default.createElement(
                    'span',
                    { style: { color: '#e52d8c' } },
                    task.name
                );else return _react2.default.createElement(
                    'span',
                    null,
                    task.name
                );
            }
            return '';
        }
    }, {
        key: 'formatPlannedHours',
        value: function formatPlannedHours(planning) {
            console.log("Planning---------------", planning);
            if (planning) return planning.plannedHours;
            return 0;
        }
    }, {
        key: 'formatPlannedDate',
        value: function formatPlannedDate(row) {
            if (row) {
                return (0, _moment2.default)(row).format(SC.DATE_DISPLAY_FORMAT);
            }
            return '';
        }
    }, {
        key: 'formatReportedStatus',
        value: function formatReportedStatus(report) {
            if (report) return report.status;
            return '';
        }
    }, {
        key: 'formatReportedHours',
        value: function formatReportedHours(report) {
            if (report) return report.reportedHours;
            return 0;
        }
    }, {
        key: 'formatFlags',
        value: function formatFlags(flags) {
            var flagImageArray = [];
            flagImageArray = flags && flags.length ? flags.map(function (flag, idx) {
                if (flag === SC.WARNING_UNPLANNED) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "unplanned" + idx, src: '/images/unplanned.png',
                    title: 'Unplanned' });else if (flag === SC.WARNING_TOO_MANY_HOURS) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "too_many_hours" + idx,
                    src: '/images/too_many_hours.png',
                    title: 'Too Many Hours' });else if (flag === SC.WARNING_EMPLOYEE_ON_LEAVE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "employee-on-leave" + idx,
                    src: '/images/employee_on_leave.png',
                    title: 'Employee On Leave' });else if (flag === SC.WARNING_RELEASE_DATE_MISSED_1) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "release_date_missed_1" + idx,
                    src: '/images/release_date_missed_1.png',
                    title: 'Release Date Missed 1' });else if (flag === SC.WARNING_RELEASE_DATE_MISSED_2) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "release_date_missed_2" + idx,
                    src: '/images/release_date_missed_2.png',
                    title: 'Release Date Missed 2' });else if (flag === SC.WARNING_RELEASE_DATE_MISSED_3) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "release_date_missed_3" + idx,
                    src: '/images/release_date_missed_3.png',
                    title: 'Release Date Missed 3' });else if (flag === SC.WARNING_RELEASE_DATE_MISSED_4) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "release_date_missed_4" + idx,
                    src: '/images/release_date_missed_4.png',
                    title: 'Release Date Missed 4' });else if (flag === SC.WARNING_PLANNED_BEYOND_RELEASE_DATE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "planned_beyond_release_date" + idx,
                    src: '/images/planned_beyond_release_date.png',
                    title: 'Planned Beyond Release Date' });else if (flag === SC.WARNING_LESS_PLANNED_HOURS) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "less_planned_hours" + idx,
                    src: '/images/less_planned_hours.png',
                    title: 'Less Planned Hours' });else if (flag === SC.WARNING_MORE_PLANNED_HOURS) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_planned_hours" + idx,
                    src: '/images/more_planned_hours.png',
                    title: 'More Planned Hours' });else if (flag === SC.WARNING_MORE_REPORTED_HOURS_1) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_reported_hours_1" + idx,
                    src: '/images/more_reported_hours_1.png',
                    title: 'More Reported Hours 1' });else if (flag === SC.WARNING_MORE_REPORTED_HOURS_2) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_reported_hours_2" + idx,
                    src: '/images/more_reported_hours_2.png',
                    title: 'More Reported Hours 2' });else if (flag === SC.WARNING_MORE_REPORTED_HOURS_3) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_reported_hours_3" + idx,
                    src: '/images/more_reported_hours_3.png',
                    title: 'More Reported Hours 3' });else if (flag === SC.WARNING_MORE_REPORTED_HOURS_4) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "more_reported_hours_4" + idx,
                    src: '/images/more_reported_hours_4.png',
                    title: 'More Reported Hours 4' });else if (flag === SC.WARNING_HAS_UNREPORTED_DAYS) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "has-unreported-days" + idx,
                    src: '/images/has_unreported_days.png',
                    title: 'Has Unreported Days' });else if (flag === SC.WARNING_UNREPORTED) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "unreported" + idx,
                    src: '/images/unreported.png',
                    title: 'Unreported' });else if (flag === SC.WARNING_PENDING_ON_END_DATE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "pending-on-enddate" + idx,
                    src: '/images/pending-on-enddate.png',
                    title: 'Pending On Enddate' });else if (flag === SC.WARNING_COMPLETED_BEFORE_END_DATE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "completed-before-enddate" + idx,
                    src: '/images/completed_before_enddate.png',
                    title: 'Completed Before Enddate' });else if (flag === SC.WARNING_EMPLOYEE_ASK_FOR_LEAVE) return _react2.default.createElement('img', { className: 'div-hover releasePlanFlagImg', key: "employee-ask-for-leave",
                    src: '/images/employee-ask-for-leave.png',
                    title: 'Employee Ask For Leave' });else return '';
            }) : null;
            return _react2.default.createElement(
                'span',
                null,
                flagImageArray
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var taskPlans = this.props.taskPlans;

            console.log("taskPlans------------------", taskPlans);

            return _react2.default.createElement(
                'div',
                { className: 'col-md-12 estimation release-plan-table' },
                _react2.default.createElement(
                    _reactBootstrapTable.BootstrapTable,
                    { options: this.options, data: taskPlans,
                        multiColumnSearch: true,
                        search: false,
                        striped: true,
                        pagination: true,
                        hover: true,
                        height: "300px" },
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { columnTitle: true, isKey: true, dataField: '_id',
                            hidden: true },
                        'ID'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: "20%", columnTitle: true, dataField: 'task',
                            dataFormat: this.formatTaskName.bind(this) },
                        'Tasks'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: "20%", columnTitle: true, dataField: 'employee',
                            dataFormat: this.formatDeveloperName.bind(this) },
                        'Developer'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '18%', dataField: 'flags',
                            dataFormat: this.formatFlags.bind(this) },
                        'Flag'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { columnTitle: true, width: "12%", dataField: 'planningDate',
                            dataFormat: this.formatPlannedDate.bind(this) },
                        'Planning Date'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { columnTitle: true, width: "10%", dataField: 'planning', dataFormat: this.formatPlannedHours.bind(this) },
                        'Planned Hours'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '10%', columnTitle: true, dataField: 'report',
                            dataFormat: this.formatReportedHours.bind(this), dataAlign: "right" },
                        'Reported Hours'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.TableHeaderColumn,
                        { width: '10%', columnTitle: true, dataField: 'report',
                            dataFormat: this.formatReportedStatus.bind(this), dataAlign: "center" },
                        'Status'
                    )
                )
            );
        }
    }]);

    return TaskPlanList;
}(_react.Component);

exports.default = (0, _reactRouterDom.withRouter)(TaskPlanList);

/***/ }),

/***/ "x6MS":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _clientLogger = __webpack_require__("riG4");

var logger = _interopRequireWildcard(_clientLogger);

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            if (values._id) {
                logger.debug(logger.ESTIMATION_FEATURE_FORM_SUBMIT, "values:", values);
                return dispatch(A.updateFeatureToEstimationOnServer(values)).then(function (json) {
                    if (json.success) {
                        _reactNotifications.NotificationManager.success("Feature Updated");
                        // hide dialog
                        dispatch(A.hideComponent(COC.ESTIMATION_FEATURE_DIALOG));
                    } else {
                        _reactNotifications.NotificationManager.error(json.message);
                    }
                });
            } else {
                logger.debug(logger.ESTIMATION_FEATURE_FORM_SUBMIT, "values:", values);
                return dispatch(A.addFeatureToEstimationOnServer(values)).then(function (json) {
                    if (json.success) {
                        _reactNotifications.NotificationManager.success("Feature Added");
                        // hide dialog
                        dispatch(A.hideComponent(COC.ESTIMATION_FEATURE_DIALOG));
                    } else {
                        _reactNotifications.NotificationManager.error(json.message);
                    }
                });
            }
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        estimation: state.estimation.selected
    };
};

var EstimationFeatureFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.EstimationFeatureForm);

exports.default = EstimationFeatureFormContainer;

/***/ }),

/***/ "xY8l":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var initialState = {
    all: [],
    selected: {}
};

var projectReducer = function projectReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case AC.ADD_PROJECTS:
            return Object.assign({}, state, { all: action.projects });
        case AC.ADD_PROJECT:
            return Object.assign({}, state, { all: [].concat(_toConsumableArray(state.all), [action.project]) });
        case AC.EDIT_PROJECT:
            return Object.assign({}, state, { all: state.all.map(function (item) {
                    return item._id == action.project._id ? action.project : item;
                }) });
        case AC.DELETE_PROJECT:
            return Object.assign({}, state, { all: state.all.filter(function (item) {
                    return item._id !== action.projectID;
                }) });
        default:
            return state;
    }
};

exports.default = projectReducer;

/***/ }),

/***/ "xgAu":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = __webpack_require__("feXg");

var _reactBootstrapDialog = __webpack_require__("OLzJ");

var _reactBootstrapDialog2 = _interopRequireDefault(_reactBootstrapDialog);

var _lodash = __webpack_require__("M4fF");

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RoleList = function (_Component) {
    _inherits(RoleList, _Component);

    function RoleList(props) {
        _classCallCheck(this, RoleList);

        return _possibleConstructorReturn(this, (RoleList.__proto__ || Object.getPrototypeOf(RoleList)).call(this, props));
    }

    _createClass(RoleList, [{
        key: 'editCellButton',
        value: function editCellButton(cell, row, enumObject, rowIndex) {
            var _this2 = this;

            return _react2.default.createElement('button', { className: 'glyphicon glyphicon-pencil pull-left btn btn-custom', type: 'button',
                onClick: function onClick() {
                    return _this2.props.editRole(row, rowIndex);
                } });
        }
    }, {
        key: 'onClickCaseTypeDeleteSelected',
        value: function onClickCaseTypeDeleteSelected(cell, row, rowIndex) {}
    }, {
        key: 'deleteCellButton',
        value: function deleteCellButton(cell, row, enumObject, rowIndex) {
            var _this3 = this;

            return _react2.default.createElement('button', { className: 'glyphicon glyphicon-trash pull-left btn btn-custom', type: 'button',
                onClick: function onClick() {
                    _this3.dialog.show({
                        title: "Delete Role",
                        body: "",
                        actions: [_reactBootstrapDialog2.default.DefaultAction('Delete', function () {
                            _this3.props.deleteRole(row._id);
                        }, 'btn-custom'), _reactBootstrapDialog2.default.DefaultAction('Close', function () {
                            _this3.dialog.hide();
                        }, 'btn-custom')],
                        bsSize: 'small',
                        onHide: function onHide(dialog) {
                            _this3.dialog.hide();
                        }
                    });
                } });
        }
    }, {
        key: 'formatPermissions',
        value: function formatPermissions(permissions, row, enumObject, rowIndex) {
            if (Array.isArray(permissions) && permissions.length > 0) return _lodash2.default.join(permissions.map(function (p) {
                return p.name;
            }), ', ');
            return '';
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            return _react2.default.createElement(
                'div',
                { className: 'row' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-10' },
                    _react2.default.createElement(_reactBootstrapDialog2.default, { ref: function ref(el) {
                            _this4.dialog = el;
                        } }),
                    _react2.default.createElement(
                        'button',
                        { className: 'btn btn-default btn-submit addBtn',
                            onClick: function onClick() {
                                return _this4.props.showRoleForm();
                            } },
                        'Add Role'
                    ),
                    _react2.default.createElement(
                        _reactBootstrapTable.BootstrapTable,
                        { options: this.options, data: this.props.roles,
                            striped: true,
                            hoveNr: true },
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { isKey: true, dataField: '_id', hidden: true },
                            'ID'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '15%', dataField: 'name' },
                            'Name'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { dataField: 'permissions',
                                dataFormat: this.formatPermissions.bind(this) },
                            'Permissions'
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '8%', dataField: 'button', dataFormat: this.editCellButton.bind(this) },
                            _react2.default.createElement('i', {
                                className: 'fa fa-pencil' })
                        ),
                        _react2.default.createElement(
                            _reactBootstrapTable.TableHeaderColumn,
                            { width: '8%', dataField: 'button',
                                dataFormat: this.deleteCellButton.bind(this) },
                            _react2.default.createElement('i', {
                                className: 'fa fa-trash' })
                        )
                    )
                )
            );
        }
    }]);

    return RoleList;
}(_react.Component);

exports.default = RoleList;

/***/ }),

/***/ "y03k":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _actions = __webpack_require__("81ym");

var _reactNotifications = __webpack_require__("B0Hd");

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        onSubmit: function onSubmit(values) {
            if (!values._id) {
                // converted data into number format
                values.minPlannedHours = Number(values.minPlannedHours);
                values.maxPlannedHours = Number(values.maxPlannedHours);
                values.free = Number(values.free);
                values.relativelyFree = Number(values.relativelyFree);
                values.busy = Number(values.busy);
                values.superBusy = Number(values.superBusy);
                values.someWhatBusy = Number(values.someWhatBusy);
                // Employee Setting is created
                return dispatch((0, _actions.addEmployeeSettingOnServer)(values)).then(function (response) {
                    if (response.success) {
                        _reactNotifications.NotificationManager.success('Employee Setting Added Successfully');
                    } else {
                        _reactNotifications.NotificationManager.error('Employee Setting Added Failed');
                    }
                });
            } else {
                // Employee Setting is edited
                // converted data into number format
                values.minPlannedHours = Number(values.minPlannedHours);
                values.maxPlannedHours = Number(values.maxPlannedHours);
                values.free = Number(values.free);
                values.relativelyFree = Number(values.relativelyFree);
                values.busy = Number(values.busy);
                values.someWhatBusy = Number(values.someWhatBusy);
                values.superBusy = Number(values.superBusy);
                return dispatch((0, _actions.updateEmployeeSettingOnServer)(values)).then(function (response) {
                    if (response.success) {
                        _reactNotifications.NotificationManager.success('Employee Setting Updated Successfully');
                    } else {
                        _reactNotifications.NotificationManager.error('Employee Setting Updated Failed');
                    }
                });
            }
        }

    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {};
};

var EmployeeSettingFormContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.EmployeeSettingForm);

exports.default = EmployeeSettingFormContainer;

/***/ }),

/***/ "y5J+":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _componentConsts = __webpack_require__("8Ojg");

var COC = _interopRequireWildcard(_componentConsts);

var _reactRedux = __webpack_require__("RH2O");

var _components = __webpack_require__("ZhKb");

var _reactNotifications = __webpack_require__("B0Hd");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {
        showRaiseLeaveForm: function showRaiseLeaveForm() {
            dispatch(A.showComponent(COC.LEAVE_REQUEST_FORM_DIALOG));
        },

        showLeaveDetails: function showLeaveDetails(leave) {
            dispatch(A.leaveSelected(leave));
            dispatch(A.showComponentHideOthers(COC.LEAVE_DETAIL_PAGE));
        },

        revokeLeave: function revokeLeave(leave) {
            return dispatch(A.deleteLeaveFromServer(leave._id)).then(function (json) {
                if (json.success) {
                    _reactNotifications.NotificationManager.success('Leave deleted successfully');
                } else {
                    _reactNotifications.NotificationManager.error('Leave deletion failed');
                }
                return json;
            });
        },

        changeLeaveStatus: function changeLeaveStatus(status) {
            return dispatch(A.getAllLeavesFromServer(status));
        },

        approveLeave: function approveLeave(leave) {
            dispatch(A.leaveSelected(leave));
            dispatch(A.showComponent(COC.LEAVE_APPROVE_DIALOG));
        },

        cancelLeave: function cancelLeave(leave) {
            dispatch(A.leaveSelected(leave));
            dispatch(A.showComponent(COC.LEAVE_REJECT_DIALOG));
        }
    };
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return {
        loggedInUser: state.user.loggedIn,
        leaves: state.leave && state.leave.all && Array.isArray(state.leave.all) && state.leave.all.length ? state.leave.all : []
    };
};

var LeaveListContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_components.LeaveList);

exports.default = LeaveListContainer;

/***/ }),

/***/ "yE3W":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

var _lodash = __webpack_require__("M4fF");

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var calendarPageReducer = function calendarPageReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        events: [],
        selectedTaskPlan: {},
        selectedRelease: {},
        selectedReleasePlan: {},
        defaultView: "week",
        defaultDate: undefined,
        selectedView: "week",
        selectedDate: undefined,
        calendarTaskDetail: {
            taskPlan: {},
            taskPlans: [],
            release: {},
            releasePlan: {}
        }

    };
    var action = arguments[1];

    switch (action.type) {

        case AC.CHANGE_CALENDAR_NAVIGATION:
            return Object.assign({}, state, {
                selectedView: action.view == null ? state.defaultView : action.view,
                selectedDate: action.date == null ? state.defaultDate : action.date
            });

        case AC.SET_CALENDAR_TASK_DETAILS:
            return Object.assign({}, state, {
                calendarTaskDetail: {
                    taskPlan: action.detail.taskPlan,
                    taskPlans: action.detail.taskPlans,
                    release: action.detail.release,
                    releasePlan: Object.assign({}, action.detail.releasePlan, {
                        estimationDescription: action.detail.estimationDescription
                    })
                }
            });

        case AC.SHOW_USERS_TASKS:
            /**
             * We would have to modify start/end date of tasks in such a manner that tasks of same date are shown
             * one after another. Since time is not added while adding plan we will consider that work would be started
             * on 10 and there would be no gap between work. This is just to show tasks one after another, developer
             * would be free to start/end tasks at any time of his choice through out the day
             */

            var tasks = [];
            if (action.tasks && action.tasks.length) {
                // Iterate on tasks to group them by same date/same employee

                var groupedTasks = _lodash2.default.groupBy(action.tasks, function (t) {
                    return t.planningDateString + "_" + t.employee._id.toString();
                });

                _lodash2.default.forEach(groupedTasks, function (tasksSameDaySameEmployee, key) {
                    var startMoment = (0, _moment2.default)(tasksSameDaySameEmployee[0].planningDateString, SC.DATE_FORMAT);
                    // We would start with 10 am
                    startMoment.add(10, 'hours');
                    tasksSameDaySameEmployee.forEach(function (ts) {
                        var endMoment = startMoment.clone().add(ts.planning.plannedHours, "hours");
                        ts.start = startMoment.toDate();
                        ts.end = endMoment.toDate();
                        ts.title = ts.task.name;
                        tasks.push(ts);
                        startMoment = endMoment.clone();
                    });
                });

                console.log("Tasks calendar ", tasks);
            }
            return Object.assign({}, state, {
                events: tasks,
                selectedDate: (0, _moment2.default)().startOf('day').toDate()
            });
        default:
            return state;
    }
};
exports.default = calendarPageReducer;

/***/ }),

/***/ "ybGK":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getEmployeeWorkCalendarFromServer = exports.addWorkCalendar = exports.updateEmployeeSettingOnServer = exports.getEmployeeSettingFromServer = exports.addEmployeeSettingOnServer = undefined;

var _reduxForm = __webpack_require__("ao4a");

var _actions = __webpack_require__("81ym");

var A = _interopRequireWildcard(_actions);

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var addEmployeeSettingOnServer = exports.addEmployeeSettingOnServer = function addEmployeeSettingOnServer(employeeSetting) {
    return function (dispatch, getState) {
        return fetch('/api/employees/employee-setting', {
            method: "post",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(employeeSetting)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch((0, _reduxForm.initialize)("employee-setting", json.data));
            }
            return json;
        });
    };
};

var getEmployeeSettingFromServer = exports.getEmployeeSettingFromServer = function getEmployeeSettingFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/employees/employee-setting', {
            method: "get",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(A.setEmployeeSettings(json.data));
                dispatch((0, _reduxForm.initialize)("employee-setting", json.data));
            }
            return json;
        });
    };
};

var updateEmployeeSettingOnServer = exports.updateEmployeeSettingOnServer = function updateEmployeeSettingOnServer(employeeSetting) {
    return function (dispatch, getState) {
        return fetch('/api/employees/employee-setting', {
            method: "put",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, *!/!*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(employeeSetting)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch((0, _reduxForm.initialize)("employee-setting", json.data));
            }
            return json;
        });
    };
};

var addWorkCalendar = exports.addWorkCalendar = function addWorkCalendar(calendar) {
    return {
        type: AC.ADD_WORK_CALENDAR,
        calendar: calendar
    };
};

var getEmployeeWorkCalendarFromServer = exports.getEmployeeWorkCalendarFromServer = function getEmployeeWorkCalendarFromServer(employeeID, month, year) {
    console.log("inside getEmployeeWorkCalendarFromServer");
    return function (dispatch, getState) {

        console.log("inside function of getEmployeeWorkCalendarFromServer");

        var state = getState();

        console.log("state found as ", state);

        if (month == undefined) {
            month = state.employee.workCalendar.month;
        }
        if (year == undefined) year = state.employee.workCalendar.year;

        console.log("calling API [/api/employees/' + employeeID + /employee-schedule/" + month + "/year/" + year);

        return fetch('/api/employees/' + employeeID + "/employee-schedule/" + month + "/year/" + year, {
            method: "get",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addWorkCalendar(json.data));
            }
            return json;
        });
    };
};

/***/ }),

/***/ "ykSR":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RepositoryTaskDetailPage = function (_Component) {
    _inherits(RepositoryTaskDetailPage, _Component);

    function RepositoryTaskDetailPage(props) {
        _classCallCheck(this, RepositoryTaskDetailPage);

        var _this = _possibleConstructorReturn(this, (RepositoryTaskDetailPage.__proto__ || Object.getPrototypeOf(RepositoryTaskDetailPage)).call(this, props));

        _this.state = {
            showHistory: false
        };
        _this.showHistoryDetail = _this.showHistoryDetail.bind(_this);
        return _this;
    }

    _createClass(RepositoryTaskDetailPage, [{
        key: "showHistoryDetail",
        value: function showHistoryDetail() {
            this.setState({ showHistory: !this.state.showHistory });
        }
    }, {
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                task = _props.task,
                estimationId = _props.estimationId;
            var showHistory = this.state.showHistory;

            return _react2.default.createElement(
                "div",
                { className: "col-md-12" },
                _react2.default.createElement(
                    "div",
                    { className: "col-md-10" },
                    _react2.default.createElement(
                        "h3",
                        { className: "repo-detail-header" },
                        task.name,
                        " "
                    )
                ),
                _react2.default.createElement(
                    "div",
                    { className: "col-md-2" },
                    _react2.default.createElement(
                        "h3",
                        { className: "repo-detail-hour" },
                        task.estimatedHours ? '(' + task.estimatedHours + ')' : '(00)',
                        " "
                    )
                ),
                _react2.default.createElement(
                    "div",
                    { className: "col-md-12" },
                    _react2.default.createElement(
                        "p",
                        { className: " repo-detail repositoryModalPara" },
                        "Task Description: ",
                        task.description,
                        " "
                    )
                ),
                _react2.default.createElement(
                    "div",
                    { className: "col-md-12 pad" },
                    _react2.default.createElement(
                        "div",
                        { className: "col-md-3" },
                        _react2.default.createElement(
                            "button",
                            { className: "customBtn", type: "button", onClick: this.showHistoryDetail },
                            "History"
                        )
                    ),
                    _react2.default.createElement(
                        "div",
                        { className: "col-md-4 pad" },
                        _react2.default.createElement(
                            "button",
                            { className: "customBtn", type: "button", onClick: function onClick() {
                                    _this2.props.addTask(estimationId, task._id);
                                } },
                            "Add to Estimation"
                        )
                    ),
                    _react2.default.createElement(
                        "div",
                        { className: "col-md-5" },
                        _react2.default.createElement(
                            "button",
                            { type: "button", className: "customBtn", onClick: function onClick() {
                                    _this2.props.copyTask(estimationId, task._id);
                                } },
                            "Copy To Estimation"
                        )
                    )
                ),
                showHistory && _react2.default.createElement(
                    "div",
                    null,
                    task.hasHistory ? _react2.default.createElement(
                        "div",
                        null,
                        _react2.default.createElement(
                            "lablel",
                            null,
                            "under Construction"
                        )
                    ) : _react2.default.createElement(
                        "lablel",
                        null,
                        "No History available"
                    ),
                    " "
                )
            );
        }
    }]);

    return RepositoryTaskDetailPage;
}(_react.Component);

exports.default = RepositoryTaskDetailPage;

/***/ }),

/***/ "z+DM":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.userReducer = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var initialState = {
    loggedIn: undefined, // contains details of logged in user (if any) else undefined
    isAuthenticated: false,
    authenticationFailed: false,
    loginError: undefined,
    all: [],
    userWithRoleCategory: {
        managers: [],
        leaders: [],
        team: []
    },
    selected: {},
    allDevelopers: []
};

var userReducer = exports.userReducer = function userReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case AC.ADD_USERS:
            return Object.assign({}, state, { all: action.users });

        case AC.ADD_USERS_WITH_ROLE_CATEGORY:
            return Object.assign({}, state, {
                userWithRoleCategory: {
                    managers: action.users.managers,
                    leaders: action.users.leaders,
                    team: action.users.team
                }
            });

        case AC.ADD_USERS_WITH_ROLE_DEVELOPER:
            return Object.assign({}, state, {
                userWithRoleCategory: Object.assign({}, state.userWithRoleCategory, {
                    team: action.developers
                })
            });

        case AC.ADD_DEVELOPERS_TO_STATE:
            return Object.assign({}, state, {
                allDevelopers: action.developers
            });

        case AC.ADD_USER:
            return Object.assign({}, state, { all: [].concat(_toConsumableArray(state.all), [action.user]) });

        case AC.EDIT_USER:
            return Object.assign({}, state, {
                all: state.all.map(function (item) {
                    return item._id == action.user._id ? action.user : item;
                })
            });

        case AC.DELETE_USER:
            return Object.assign({}, state, { all: state.all.filter(function (item) {
                    return item._id !== action.userID;
                }) });

        case AC.ADD_LOGIN_USER:
            if (action.user) {
                var isSuperAdmin = false;
                var isAdmin = false;
                var isAppUser = false;
                if (action.user && Array.isArray(action.user.roles)) {
                    if (action.user.roles.findIndex(function (r) {
                        return r.name === SC.ROLE_SUPER_ADMIN;
                    }) != -1) isSuperAdmin = true;
                    if (action.user.roles.findIndex(function (r) {
                        return r.name === SC.ROLE_ADMIN;
                    }) != -1) isAdmin = true;
                    if (action.user.roles.findIndex(function (r) {
                        return r.name === SC.ROLE_APP_USER;
                    }) != -1) isAppUser = true;
                }

                return Object.assign({}, state, {
                    loggedIn: Object.assign({}, action.user, { isSuperAdmin: isSuperAdmin, isAdmin: isAdmin, isAppUser: isAppUser }),
                    isAuthenticated: true,
                    loginError: undefined
                });
            } else return state;

        case AC.LOGIN_FAILED:
            return Object.assign({}, state, {
                isAuthenticated: false,
                loginError: action.error
            });

        case AC.UPDATE_USER_PROFILE_STATE:
            return Object.assign({}, state, {
                loggedIn: true ? Object.assign({}, {
                    firstName: action.user.firstName,
                    lastName: action.user.lastName,
                    phone: action.user.phone,
                    email: action.user.email,
                    address: action.user.address,
                    dob: action.user.dob,
                    dateJoined: action.user.dateJoined,
                    designation: action.user.designation,
                    employeeCode: action.user.employeeCode,
                    roles: action.user.roles,
                    permissions: state.loggedIn.permissions,
                    roleNames: state.loggedIn.roleNames
                }) : state.user.loggedIn

            });

        default:
            return state;
    }
};

exports.default = userReducer;

/***/ }),

/***/ "z7du":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.editClientOnServer = exports.deleteClientOnServer = exports.addClientOnServer = exports.getAllClientsFromServer = exports.editClient = exports.deleteClient = exports.addClients = exports.addClient = undefined;

var _actionConsts = __webpack_require__("QpGQ");

var AC = _interopRequireWildcard(_actionConsts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var addClient = exports.addClient = function addClient(client) {
    return {
        type: AC.ADD_CLIENT,
        client: client
    };
};
var addClients = exports.addClients = function addClients(clients) {
    return {
        type: AC.ADD_CLIENTS,
        clients: clients
    };
};
var deleteClient = exports.deleteClient = function deleteClient(clientID) {
    return {
        type: AC.DELETE_CLIENT,
        clientID: clientID
    };
};
var editClient = exports.editClient = function editClient(client) {
    return {

        type: AC.UPDATE_CLIENT,
        client: client
    };
};

var getAllClientsFromServer = exports.getAllClientsFromServer = function getAllClientsFromServer() {
    return function (dispatch, getState) {
        return fetch('/api/clients', {
            method: 'get',
            credentials: "include",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addClients(json.data));
            }
        });
    };
};
var addClientOnServer = exports.addClientOnServer = function addClientOnServer(formInput) {
    return function (dispatch, getState) {
        return fetch('/api/clients', {
            method: "post",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formInput)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(addClient(json.data));
            }
            return json;
        });
    };
};

var deleteClientOnServer = exports.deleteClientOnServer = function deleteClientOnServer(clientID) {
    return function (dispatch, getState) {
        return fetch('/api/clients/' + clientID, {
            method: "delete",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'ap plication/json'
            }
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                dispatch(deleteClient(clientID));
                // clear user form after update is successful
            }
            return json;
        });
    };
};
var editClientOnServer = exports.editClientOnServer = function editClientOnServer(client) {
    return function (dispatch, getState) {
        return fetch('/api/clients', {
            method: "put",
            credentials: "include",
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(client)
        }).then(function (response) {
            return response.json();
        }).then(function (json) {
            if (json.success) {
                //console.log("Yor are now fatchning jason data", json.data)
                dispatch(editClient(json.data));
            }
            return json;
        });
    };
};

/***/ }),

/***/ "z8dD":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AdminRoleForm = function (_Component) {
    _inherits(AdminRoleForm, _Component);

    function AdminRoleForm() {
        _classCallCheck(this, AdminRoleForm);

        return _possibleConstructorReturn(this, (AdminRoleForm.__proto__ || Object.getPrototypeOf(AdminRoleForm)).apply(this, arguments));
    }

    _createClass(AdminRoleForm, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                handleSubmit = _props.handleSubmit,
                pristine = _props.pristine,
                reset = _props.reset,
                submitting = _props.submitting;

            return [_react2.default.createElement(
                'div',
                { key: 'AdminRoleFormBackButton' },
                _react2.default.createElement(
                    'button',
                    { type: 'button',
                        onClick: function onClick() {
                            return _this2.props.showRoleList();
                        } },
                    _react2.default.createElement('i', { className: 'glyphicon glyphicon-arrow-left' })
                )
            ), _react2.default.createElement(
                'form',
                { key: 'AdminRoleForm', onSubmit: handleSubmit },
                _react2.default.createElement(_reduxForm.Field, { name: 'name', component: _fields.renderText, label: 'Roles:', valueField: '_id', disabled: true,
                    readOnly: true, textField: 'name' }),
                _react2.default.createElement(_reduxForm.Field, { name: 'permissions', component: _fields.renderMultiSelect, label: 'permission:',
                    data: this.props.permissionOptions,
                    valueField: '_id', textField: 'name' }),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-12' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-2' },
                        _react2.default.createElement(
                            'button',
                            { type: 'submit', disabled: pristine || submitting, className: 'btn squareButton' },
                            'Update'
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-2' },
                        _react2.default.createElement(
                            'button',
                            { type: 'button', disabled: pristine || submitting, className: 'btn squareButton',
                                onClick: reset },
                            'Reset'
                        )
                    )
                )
            )];
        }
    }]);

    return AdminRoleForm;
}(_react.Component);

AdminRoleForm = (0, _reduxForm.reduxForm)({
    form: 'admin-role-form'
})(AdminRoleForm);
exports.default = AdminRoleForm;

/***/ }),

/***/ "zD2L":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _moment = __webpack_require__("PJh5");

var _moment2 = _interopRequireDefault(_moment);

var _reactWidgetsMoment = __webpack_require__("Utwc");

var _reactWidgetsMoment2 = _interopRequireDefault(_reactWidgetsMoment);

var _momentTimezone = __webpack_require__("xNPZ");

var _momentTimezone2 = _interopRequireDefault(_momentTimezone);

var _serverconstants = __webpack_require__("Uq5S");

var SC = _interopRequireWildcard(_serverconstants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_moment2.default.locale('en');
(0, _reactWidgetsMoment2.default)();

var ReleaseDevelopersSchedules = function (_React$Component) {
    _inherits(ReleaseDevelopersSchedules, _React$Component);

    function ReleaseDevelopersSchedules(props) {
        _classCallCheck(this, ReleaseDevelopersSchedules);

        return _possibleConstructorReturn(this, (ReleaseDevelopersSchedules.__proto__ || Object.getPrototypeOf(ReleaseDevelopersSchedules)).call(this, props));
    }

    _createClass(ReleaseDevelopersSchedules, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.props.getEmployeeSettings();
        }
    }, {
        key: 'calendarDateClicked',
        value: function calendarDateClicked(day, employee) {
            this.props.showTaskShiftDialog(day.date, this.props.workCalendar.month, this.props.workCalendar.year, employee);
        }
    }, {
        key: 'render',
        value: function render() {
            console.log("ReleaseDevelopers Schedule ", this.props);

            var that = this;

            var _props = this.props,
                workCalendar = _props.workCalendar,
                employeeSetting = _props.employeeSetting,
                from = _props.from;

            var fromString = (0, _moment2.default)(from).format(SC.DATE_FORMAT);
            var fromMoment = _momentTimezone2.default.tz(fromString, SC.DATE_FORMAT, SC.UTC_TIMEZONE).hour(0).minute(0).second(0).millisecond(0);
            var startMoment = _momentTimezone2.default.tz(fromString, SC.DATE_FORMAT, SC.UTC_TIMEZONE).hour(0).minute(0).second(0).millisecond(0);
            var toMoment = fromMoment.clone().add(6, 'days');
            var weekArray = [];
            while (startMoment.isSameOrBefore(toMoment)) {
                weekArray.push(startMoment.clone());
                startMoment = startMoment.clone().add(1, 'days');
            }

            var employee = void 0;

            if (workCalendar.employees && workCalendar.employees.length) employee = workCalendar.employees[0];

            if (!employee || !employee.schedule || !employee.schedule.length) return _react2.default.createElement('div', null);

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { key: 'schedule_1',
                        className: 'col-md-12 releaseSchedule' },
                    _react2.default.createElement(
                        'div',
                        { className: 'schCalendar releaseDevInfo' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releaseDevHeading' },
                            _react2.default.createElement(
                                'h5',
                                null,
                                employee.name
                            ),
                            _react2.default.createElement('i', { className: 'glyphicon glyphicon-resize-full pull-right' }),
                            _react2.default.createElement(
                                'span',
                                {
                                    className: 'pull-right' },
                                workCalendar.heading
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: "schCalendarDates" },
                            _react2.default.createElement(
                                'div',
                                { className: 'schCalendarDayRow' },
                                _react2.default.createElement(
                                    'div',
                                    { key: 'monday', className: 'schCalendarCell' },
                                    _react2.default.createElement(
                                        'h5',
                                        null,
                                        'Mon'
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { key: 'tuesday', className: 'schCalendarCell' },
                                    _react2.default.createElement(
                                        'h5',
                                        null,
                                        'Tue'
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { key: 'wednesday', className: 'schCalendarCell' },
                                    _react2.default.createElement(
                                        'h5',
                                        null,
                                        'Wed'
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { key: 'thursday', className: 'schCalendarCell' },
                                    _react2.default.createElement(
                                        'h5',
                                        null,
                                        'Thu'
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { key: 'friday', className: 'schCalendarCell' },
                                    _react2.default.createElement(
                                        'h5',
                                        null,
                                        'Fri'
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { key: 'saturday', className: 'schCalendarCell' },
                                    _react2.default.createElement(
                                        'h5',
                                        null,
                                        'Sat'
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { key: 'sunday', className: 'schCalendarCell' },
                                    _react2.default.createElement(
                                        'h5',
                                        null,
                                        'Sun'
                                    )
                                )
                            ),
                            employee.schedule.map(function (week, idx) {
                                return _react2.default.createElement(
                                    'div',
                                    { key: 'week_' + idx, className: 'schCalendarDayRow' },
                                    week.map(function (day, dayIdx) {
                                        var color = day.hours >= employeeSetting.superBusy ? '#dd6c6c' : day.hours >= employeeSetting.busy ? '#91d861' : day.hours >= employeeSetting.someWhatBusy ? '#d645f7' : day.hours >= employeeSetting.relativelyFree ? '#76c0e2' : day.hours != 0 ? '#fffcc1' : day.hours == 0 && (dayIdx == 5 || dayIdx == 6) ? 'white' : '#e8c392';
                                        return _react2.default.createElement(
                                            'div',
                                            { key: 'day_' + dayIdx, className: 'schCalendarCell' },
                                            _react2.default.createElement(
                                                'h5',
                                                null,
                                                day.date > 0 ? day.date : ''
                                            ),
                                            _react2.default.createElement(
                                                'div',
                                                { className: 'releaseEmployee' },
                                                _react2.default.createElement(
                                                    'span',
                                                    { className: "schCalendarHour", style: {
                                                            backgroundColor: color
                                                        },
                                                        onClick: that.calendarDateClicked.bind(that, day, employee) },
                                                    day.hours >= 0 ? day.hours : ''
                                                )
                                            )
                                        );
                                    })
                                );
                            })
                        )
                    )
                )
            );
        }
    }]);

    return ReleaseDevelopersSchedules;
}(_react2.default.Component);

exports.default = ReleaseDevelopersSchedules;

/**
 import React, {Component} from 'react'
 import moment from 'moment'
 import momentLocalizer from 'react-widgets-moment'
 import momentTZ from 'moment-timezone'
 import * as SC from '../../../server/serverconstants'

 moment.locale('en')
 momentLocalizer()

 class ReleaseDevelopersSchedules extends React.Component {
    constructor(props) {
        super(props);
    }

    componentDidMount() {
        this.props.getEmployeeSettings()
    }

    render() {

        const {schedules, employeeSetting, from} = this.props
        let fromString = moment(from).format(SC.DATE_FORMAT)
        let fromMoment = momentTZ.tz(fromString, SC.DATE_FORMAT, SC.UTC_TIMEZONE).hour(0).minute(0).second(0).millisecond(0)
        let startMoment = momentTZ.tz(fromString, SC.DATE_FORMAT, SC.UTC_TIMEZONE).hour(0).minute(0).second(0).millisecond(0)
        let toMoment = fromMoment.clone().add(6, 'days')
        let weekArray = []
        while (startMoment.isSameOrBefore(toMoment)) {
            weekArray.push(startMoment.clone())
            startMoment = startMoment.clone().add(1, 'days')
        }
        return <div>
            {
                schedules && schedules.length ? schedules.map((schedule, idx) => {


                        return <div key={'schedule' + idx}
                                    className="col-md-12 releaseSchedule">
                            <div className="repository releaseDevInfo">
                                <div className="releaseDevHeading">
                                    <h5>{schedule.employee && schedule.employee.name ? schedule.employee.name : "Employee"}</h5>
                                    <i className="glyphicon glyphicon-resize-full pull-right"></i>
                                    <span
                                        className="pull-right">{fromMoment.format(SC.DATE_MONTH_FORMAT) + ' to ' + toMoment.format(SC.DATE_MONTH_FORMAT)}</span>
                                </div>
                                <div className="releaseDayRow">
                                    {
                                        weekArray && weekArray.length ? weekArray.map((weekDate, index) => {
                                            let scheduleDay = schedule.days && schedule.days.length ? schedule.days.find(day => momentTZ.tz(day.dateString, SC.DATE_FORMAT, SC.UTC_TIMEZONE).isSame(weekDate)) : undefined
                                            if (scheduleDay && scheduleDay != undefined) {
                                                let color = scheduleDay.plannedHours >= employeeSetting.superBusy ?
                                                    '#dd6c6c'
                                                    : scheduleDay.plannedHours >= employeeSetting.busy ?
                                                        '#91d861'
                                                        : scheduleDay.plannedHours >= employeeSetting.someWhatBusy ?
                                                            '#d645f7'
                                                            : scheduleDay.plannedHours >= employeeSetting.relativelyFree ?
                                                                '#76c0e2'

                                                                : '#e8c392'

                                                return <div key={'day' + index} className="releaseDayCell">
                                                    <h5> {moment(scheduleDay.dateString).format(SC.DATE_HALF_WEAK_MONTH_FORMAT)}</h5>
                                                    <div className="releaseEmployee" style={{backgroundColor: color}}>
                                                        <span style={{
                                                            display: 'inline-block',
                                                            width: '100%',
                                                            textAlign: 'center'
                                                        }}> {scheduleDay.plannedHours}</span>
                                                    </div>
                                                </div>
                                            } else return <div key={'day' + index} className="releaseDayCell">
                                                <h5> {moment(weekDate).format(SC.DATE_HALF_WEAK_MONTH_FORMAT)}</h5>
                                                <div className="releaseEmployee" style={{backgroundColor: '#e8c392'}}>
                                                    <span style={{
                                                        display: 'inline-block',
                                                        width: '100%',
                                                        textAlign: 'center'
                                                    }}> 0</span>
                                                </div>
                                            </div>
                                        }) : null
                                    }
                                </div>
                            </div>
                        </div>
                    }) :
                    <div className="releaseEmployeeMsgText">
                        <label>Employee is not selected</label>
                    </div>
            }
        </div>
    }
}

 export default ReleaseDevelopersSchedules

 **/

/***/ }),

/***/ "zbU0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactRedux = __webpack_require__("RH2O");

var _TabSection = __webpack_require__("iiRE");

var _TabSection2 = _interopRequireDefault(_TabSection);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var mapStateToProps = function mapStateToProps(state) {
    return {
        visibleComponents: state.app.visibleComponents,
        loggedInUser: state.user.loggedIn
    };
};
var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
    return {};
};

var TabSectionContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_TabSection2.default);

exports.default = TabSectionContainer;

/***/ }),

/***/ "ztUp":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__("F8kA");

var _reactNotifications = __webpack_require__("B0Hd");

var _containers = __webpack_require__("GF1l");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AppRouter = function (_Component) {
    _inherits(AppRouter, _Component);

    function AppRouter() {
        _classCallCheck(this, AppRouter);

        return _possibleConstructorReturn(this, (AppRouter.__proto__ || Object.getPrototypeOf(AppRouter)).apply(this, arguments));
    }

    _createClass(AppRouter, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            return [_react2.default.createElement(_reactNotifications.NotificationContainer, { key: 'notification' }), _react2.default.createElement(_reactRouterDom.Route, { key: 'home_route', exact: true, path: '/', render: function render(props) {

                    if (_this2.props.isAuthenticated && _this2.props.loggedInUser) {
                        if (_this2.props.loggedInUser.isSuperAdmin) return _react2.default.createElement(_reactRouterDom.Redirect, { to: '/super-admin' });else if (_this2.props.loggedInUser.isAdmin) return _react2.default.createElement(_reactRouterDom.Redirect, { to: '/admin' });else return _react2.default.createElement(_reactRouterDom.Redirect, { to: '/app-home' });
                    }

                    return _react2.default.createElement(_containers.HomeContainer, null);
                } }), _react2.default.createElement(_reactRouterDom.Route, { key: 'super_admin_route', path: '/super-admin', render: function render(props) {
                    return _react2.default.createElement(_containers.SuperAdminHomeContainer, null);
                } }), _react2.default.createElement(_reactRouterDom.Route, { key: 'admin_route', path: '/admin', render: function render(props) {
                    return _react2.default.createElement(_containers.AdminHomeContainer, null);
                } }), _react2.default.createElement(_reactRouterDom.Route, { key: 'app_home_route', path: '/app-home', render: function render(props) {
                    return _react2.default.createElement(_containers.AppHomeContainer, null);
                } })];
        }
    }]);

    return AppRouter;
}(_react.Component);

exports.default = AppRouter;

/***/ }),

/***/ "zyxl":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _SidebarSideSection = __webpack_require__("a2Q/");

Object.defineProperty(exports, 'SidebarSideSection', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_SidebarSideSection).default;
  }
});

var _SidebarSection = __webpack_require__("T6KT");

Object.defineProperty(exports, 'SidebarSection', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_SidebarSection).default;
  }
});

var _Sidebar = __webpack_require__("7sPg");

Object.defineProperty(exports, 'Sidebar', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_Sidebar).default;
  }
});

var _ContentMain = __webpack_require__("VzaM");

Object.defineProperty(exports, 'ContentMain', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ContentMain).default;
  }
});

var _DashboardSection = __webpack_require__("S8q0");

Object.defineProperty(exports, 'DashboardSection', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_DashboardSection).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),

/***/ "zznL":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reduxForm = __webpack_require__("ao4a");

var _fields = __webpack_require__("NACj");

var _validation = __webpack_require__("4KT+");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AttendanceSettingForm = function AttendanceSettingForm(props) {
    var handleSubmit = props.handleSubmit,
        pristine = props.pristine,
        reset = props.reset,
        submitting = props.submitting;


    return _react2.default.createElement(
        'div',
        { className: 'col-md-8' },
        _react2.default.createElement(
            'div',
            { className: 'col-md-12 pad' },
            _react2.default.createElement(
                'div',
                { className: 'col-md-12' },
                _react2.default.createElement(
                    'form',
                    { onSubmit: handleSubmit },
                    _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-6' },
                            _react2.default.createElement(_reduxForm.Field, { name: 'minFullDayHours', placeholder: "minimum full day hours",
                                component: _fields.renderText, validate: [_validation.required, _validation.number],
                                label: "Minimum Full Day Hours :" }),
                            _react2.default.createElement(_reduxForm.Field, { name: 'minHalfDayHours', placeholder: "minimum half day hours",
                                component: _fields.renderText, validate: [_validation.required, _validation.number],
                                label: "Minimum Half Day Hours :" }),
                            _react2.default.createElement(_reduxForm.Field, { name: 'dayStartTime', placeholder: "day start Time", component: _fields.renderText,
                                label: "Day Start Time :", validate: [_validation.required, _validation.number] }),
                            _react2.default.createElement(_reduxForm.Field, { name: 'dayEndTime', placeholder: "day end Time", component: _fields.renderText,
                                validate: [_validation.required, _validation.number],
                                label: "Day End Time :" }),
                            _react2.default.createElement(
                                'button',
                                { type: 'submit', disabled: pristine || submitting,
                                    className: 'btn customBtn moveInBtnSpace' },
                                'Submit'
                            ),
                            _react2.default.createElement(
                                'button',
                                { type: 'button', disabled: pristine || submitting, className: 'btn customBtn',
                                    onClick: reset },
                                'Reset'
                            )
                        )
                    )
                )
            )
        )
    );
};

AttendanceSettingForm = (0, _reduxForm.reduxForm)({
    form: 'attendance-setting'
})(AttendanceSettingForm);

exports.default = AttendanceSettingForm;

/***/ })

},["mDHt"]);
//# sourceMappingURL=js.e8e35effd0f610476a96.js.map